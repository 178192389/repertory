function DomainFirefox() {
	window = {};
	self = window;
	document = {};
	window.document = document;
	window.setTimeout = setTimeout;
	window.clearTimeout = clearTimeout;
	window.clearInterval = clearInterval;
	window.setInterval = setInterval;
	window.console = console;
	window.Object = Object;
	window.Array = Array;
	window.Function = Function;
	window.String = String;
	window.Number = Number;
	navigator = {};
	navigator.userAgent = {};
	navigator.userAgent.toLowerCase = function() {
		return 'webkit';
	};
	$stats = function() {};
	$sessionId = '';
}
DomainFirefox();
(function() {
	var $gwt_version = "2.6.1";
	var $wnd = window;
	var $doc = $wnd.document;
	var $moduleName, $moduleBase;
	var $strongName = '2C31F6D6B55CA28E25A8A5D74C6F2540';
	var _, N8000000000000000_longLit = {
		l: 0,
		m: 0,
		h: 524288
	},
		N81_longLit = {
			l: 4194175,
			m: 4194303,
			h: 1048575
		},
		N1_longLit = {
			l: 4194303,
			m: 4194303,
			h: 1048575
		},
		P0_longLit = {
			l: 0,
			m: 0,
			h: 0
		},
		P1_longLit = {
			l: 1,
			m: 0,
			h: 0
		},
		P2_longLit = {
			l: 2,
			m: 0,
			h: 0
		},
		P3_longLit = {
			l: 3,
			m: 0,
			h: 0
		},
		P4_longLit = {
			l: 4,
			m: 0,
			h: 0
		},
		P5_longLit = {
			l: 5,
			m: 0,
			h: 0
		},
		P6_longLit = {
			l: 6,
			m: 0,
			h: 0
		},
		P7_longLit = {
			l: 7,
			m: 0,
			h: 0
		},
		P8_longLit = {
			l: 8,
			m: 0,
			h: 0
		},
		P9_longLit = {
			l: 9,
			m: 0,
			h: 0
		},
		Pa_longLit = {
			l: 10,
			m: 0,
			h: 0
		},
		Pb_longLit = {
			l: 11,
			m: 0,
			h: 0
		},
		Pc_longLit = {
			l: 12,
			m: 0,
			h: 0
		},
		Pd_longLit = {
			l: 13,
			m: 0,
			h: 0
		},
		Pe_longLit = {
			l: 14,
			m: 0,
			h: 0
		},
		Pf_longLit = {
			l: 15,
			m: 0,
			h: 0
		},
		P10_longLit = {
			l: 16,
			m: 0,
			h: 0
		},
		P11_longLit = {
			l: 17,
			m: 0,
			h: 0
		},
		P12_longLit = {
			l: 18,
			m: 0,
			h: 0
		},
		P13_longLit = {
			l: 19,
			m: 0,
			h: 0
		},
		P14_longLit = {
			l: 20,
			m: 0,
			h: 0
		},
		P15_longLit = {
			l: 21,
			m: 0,
			h: 0
		},
		P16_longLit = {
			l: 22,
			m: 0,
			h: 0
		},
		P17_longLit = {
			l: 23,
			m: 0,
			h: 0
		},
		P18_longLit = {
			l: 24,
			m: 0,
			h: 0
		},
		P19_longLit = {
			l: 25,
			m: 0,
			h: 0
		},
		P1a_longLit = {
			l: 26,
			m: 0,
			h: 0
		},
		P1b_longLit = {
			l: 27,
			m: 0,
			h: 0
		},
		P1c_longLit = {
			l: 28,
			m: 0,
			h: 0
		},
		P1d_longLit = {
			l: 29,
			m: 0,
			h: 0
		},
		P1e_longLit = {
			l: 30,
			m: 0,
			h: 0
		},
		P1f_longLit = {
			l: 31,
			m: 0,
			h: 0
		},
		P20_longLit = {
			l: 32,
			m: 0,
			h: 0
		},
		P21_longLit = {
			l: 33,
			m: 0,
			h: 0
		},
		P22_longLit = {
			l: 34,
			m: 0,
			h: 0
		},
		P23_longLit = {
			l: 35,
			m: 0,
			h: 0
		},
		P24_longLit = {
			l: 36,
			m: 0,
			h: 0
		},
		P25_longLit = {
			l: 37,
			m: 0,
			h: 0
		},
		P26_longLit = {
			l: 38,
			m: 0,
			h: 0
		},
		P27_longLit = {
			l: 39,
			m: 0,
			h: 0
		},
		P28_longLit = {
			l: 40,
			m: 0,
			h: 0
		},
		P29_longLit = {
			l: 41,
			m: 0,
			h: 0
		},
		P2a_longLit = {
			l: 42,
			m: 0,
			h: 0
		},
		P2b_longLit = {
			l: 43,
			m: 0,
			h: 0
		},
		P2c_longLit = {
			l: 44,
			m: 0,
			h: 0
		},
		P2d_longLit = {
			l: 45,
			m: 0,
			h: 0
		},
		P2e_longLit = {
			l: 46,
			m: 0,
			h: 0
		},
		P2f_longLit = {
			l: 47,
			m: 0,
			h: 0
		},
		P30_longLit = {
			l: 48,
			m: 0,
			h: 0
		},
		P31_longLit = {
			l: 49,
			m: 0,
			h: 0
		},
		P32_longLit = {
			l: 50,
			m: 0,
			h: 0
		},
		P33_longLit = {
			l: 51,
			m: 0,
			h: 0
		},
		P34_longLit = {
			l: 52,
			m: 0,
			h: 0
		},
		P35_longLit = {
			l: 53,
			m: 0,
			h: 0
		},
		P36_longLit = {
			l: 54,
			m: 0,
			h: 0
		},
		P37_longLit = {
			l: 55,
			m: 0,
			h: 0
		},
		P38_longLit = {
			l: 56,
			m: 0,
			h: 0
		},
		P39_longLit = {
			l: 57,
			m: 0,
			h: 0
		},
		P3a_longLit = {
			l: 58,
			m: 0,
			h: 0
		},
		P3b_longLit = {
			l: 59,
			m: 0,
			h: 0
		},
		P3c_longLit = {
			l: 60,
			m: 0,
			h: 0
		},
		P3d_longLit = {
			l: 61,
			m: 0,
			h: 0
		},
		P3e_longLit = {
			l: 62,
			m: 0,
			h: 0
		},
		P3f_longLit = {
			l: 63,
			m: 0,
			h: 0
		},
		P40_longLit = {
			l: 64,
			m: 0,
			h: 0
		},
		P41_longLit = {
			l: 65,
			m: 0,
			h: 0
		},
		P42_longLit = {
			l: 66,
			m: 0,
			h: 0
		},
		P43_longLit = {
			l: 67,
			m: 0,
			h: 0
		},
		P44_longLit = {
			l: 68,
			m: 0,
			h: 0
		},
		P45_longLit = {
			l: 69,
			m: 0,
			h: 0
		},
		P46_longLit = {
			l: 70,
			m: 0,
			h: 0
		},
		P47_longLit = {
			l: 71,
			m: 0,
			h: 0
		},
		P48_longLit = {
			l: 72,
			m: 0,
			h: 0
		},
		P49_longLit = {
			l: 73,
			m: 0,
			h: 0
		},
		P4a_longLit = {
			l: 74,
			m: 0,
			h: 0
		},
		P4b_longLit = {
			l: 75,
			m: 0,
			h: 0
		},
		P4c_longLit = {
			l: 76,
			m: 0,
			h: 0
		},
		P4d_longLit = {
			l: 77,
			m: 0,
			h: 0
		},
		P4e_longLit = {
			l: 78,
			m: 0,
			h: 0
		},
		P4f_longLit = {
			l: 79,
			m: 0,
			h: 0
		},
		P50_longLit = {
			l: 80,
			m: 0,
			h: 0
		},
		P51_longLit = {
			l: 81,
			m: 0,
			h: 0
		},
		P52_longLit = {
			l: 82,
			m: 0,
			h: 0
		},
		P53_longLit = {
			l: 83,
			m: 0,
			h: 0
		},
		P54_longLit = {
			l: 84,
			m: 0,
			h: 0
		},
		P55_longLit = {
			l: 85,
			m: 0,
			h: 0
		},
		P62_longLit = {
			l: 98,
			m: 0,
			h: 0
		},
		P63_longLit = {
			l: 99,
			m: 0,
			h: 0
		},
		P64_longLit = {
			l: 100,
			m: 0,
			h: 0
		},
		P65_longLit = {
			l: 101,
			m: 0,
			h: 0
		},
		P66_longLit = {
			l: 102,
			m: 0,
			h: 0
		},
		P67_longLit = {
			l: 103,
			m: 0,
			h: 0
		},
		P68_longLit = {
			l: 104,
			m: 0,
			h: 0
		},
		P69_longLit = {
			l: 105,
			m: 0,
			h: 0
		},
		P6a_longLit = {
			l: 106,
			m: 0,
			h: 0
		},
		P6d_longLit = {
			l: 109,
			m: 0,
			h: 0
		},
		P71_longLit = {
			l: 113,
			m: 0,
			h: 0
		},
		P72_longLit = {
			l: 114,
			m: 0,
			h: 0
		},
		P79_longLit = {
			l: 121,
			m: 0,
			h: 0
		},
		P7b_longLit = {
			l: 123,
			m: 0,
			h: 0
		},
		P7c_longLit = {
			l: 124,
			m: 0,
			h: 0
		},
		P7f_longLit = {
			l: 127,
			m: 0,
			h: 0
		},
		P80_longLit = {
			l: 128,
			m: 0,
			h: 0
		},
		P88_longLit = {
			l: 136,
			m: 0,
			h: 0
		},
		P8b_longLit = {
			l: 139,
			m: 0,
			h: 0
		},
		P8d_longLit = {
			l: 141,
			m: 0,
			h: 0
		},
		P92_longLit = {
			l: 146,
			m: 0,
			h: 0
		},
		P96_longLit = {
			l: 150,
			m: 0,
			h: 0
		},
		P9c_longLit = {
			l: 156,
			m: 0,
			h: 0
		},
		Pa7_longLit = {
			l: 167,
			m: 0,
			h: 0
		},
		Pc9_longLit = {
			l: 201,
			m: 0,
			h: 0
		},
		Pcb_longLit = {
			l: 203,
			m: 0,
			h: 0
		},
		Pdd_longLit = {
			l: 221,
			m: 0,
			h: 0
		},
		Pe8_longLit = {
			l: 232,
			m: 0,
			h: 0
		},
		Pe9_longLit = {
			l: 233,
			m: 0,
			h: 0
		},
		Peb_longLit = {
			l: 235,
			m: 0,
			h: 0
		},
		P102_longLit = {
			l: 258,
			m: 0,
			h: 0
		},
		P107_longLit = {
			l: 263,
			m: 0,
			h: 0
		},
		P123_longLit = {
			l: 291,
			m: 0,
			h: 0
		},
		P12c_longLit = {
			l: 300,
			m: 0,
			h: 0
		},
		P12d_longLit = {
			l: 301,
			m: 0,
			h: 0
		},
		P12f_longLit = {
			l: 303,
			m: 0,
			h: 0
		},
		P145_longLit = {
			l: 325,
			m: 0,
			h: 0
		},
		P150_longLit = {
			l: 336,
			m: 0,
			h: 0
		},
		P179_longLit = {
			l: 377,
			m: 0,
			h: 0
		},
		P17a_longLit = {
			l: 378,
			m: 0,
			h: 0
		},
		P17e_longLit = {
			l: 382,
			m: 0,
			h: 0
		},
		P180_longLit = {
			l: 384,
			m: 0,
			h: 0
		},
		P181_longLit = {
			l: 385,
			m: 0,
			h: 0
		},
		P182_longLit = {
			l: 386,
			m: 0,
			h: 0
		},
		P184_longLit = {
			l: 388,
			m: 0,
			h: 0
		},
		P1a7_longLit = {
			l: 423,
			m: 0,
			h: 0
		},
		P1ab_longLit = {
			l: 427,
			m: 0,
			h: 0
		},
		P1b2_longLit = {
			l: 434,
			m: 0,
			h: 0
		},
		P1ba_longLit = {
			l: 442,
			m: 0,
			h: 0
		},
		P1bf_longLit = {
			l: 447,
			m: 0,
			h: 0
		},
		P1c4_longLit = {
			l: 452,
			m: 0,
			h: 0
		},
		P1c5_longLit = {
			l: 453,
			m: 0,
			h: 0
		},
		P1c6_longLit = {
			l: 454,
			m: 0,
			h: 0
		},
		P1c9_longLit = {
			l: 457,
			m: 0,
			h: 0
		},
		P1cc_longLit = {
			l: 460,
			m: 0,
			h: 0
		},
		P1d0_longLit = {
			l: 464,
			m: 0,
			h: 0
		},
		P1d4_longLit = {
			l: 468,
			m: 0,
			h: 0
		},
		P1e0_longLit = {
			l: 480,
			m: 0,
			h: 0
		},
		P1e1_longLit = {
			l: 481,
			m: 0,
			h: 0
		},
		P1e4_longLit = {
			l: 484,
			m: 0,
			h: 0
		},
		P1f1_longLit = {
			l: 497,
			m: 0,
			h: 0
		},
		P206_longLit = {
			l: 518,
			m: 0,
			h: 0
		},
		P207_longLit = {
			l: 519,
			m: 0,
			h: 0
		},
		P210_longLit = {
			l: 528,
			m: 0,
			h: 0
		},
		P211_longLit = {
			l: 529,
			m: 0,
			h: 0
		},
		P219_longLit = {
			l: 537,
			m: 0,
			h: 0
		},
		P21b_longLit = {
			l: 539,
			m: 0,
			h: 0
		},
		P220_longLit = {
			l: 544,
			m: 0,
			h: 0
		},
		P225_longLit = {
			l: 549,
			m: 0,
			h: 0
		},
		P22b_longLit = {
			l: 555,
			m: 0,
			h: 0
		},
		P22f_longLit = {
			l: 559,
			m: 0,
			h: 0
		},
		P230_longLit = {
			l: 560,
			m: 0,
			h: 0
		},
		P239_longLit = {
			l: 569,
			m: 0,
			h: 0
		},
		P23d_longLit = {
			l: 573,
			m: 0,
			h: 0
		},
		P23e_longLit = {
			l: 574,
			m: 0,
			h: 0
		},
		P245_longLit = {
			l: 581,
			m: 0,
			h: 0
		},
		P246_longLit = {
			l: 582,
			m: 0,
			h: 0
		},
		P24d_longLit = {
			l: 589,
			m: 0,
			h: 0
		},
		P24e_longLit = {
			l: 590,
			m: 0,
			h: 0
		},
		P24f_longLit = {
			l: 591,
			m: 0,
			h: 0
		},
		P25c_longLit = {
			l: 604,
			m: 0,
			h: 0
		},
		P271_longLit = {
			l: 625,
			m: 0,
			h: 0
		},
		P27b_longLit = {
			l: 635,
			m: 0,
			h: 0
		},
		P27c_longLit = {
			l: 636,
			m: 0,
			h: 0
		},
		P27e_longLit = {
			l: 638,
			m: 0,
			h: 0
		},
		P294_longLit = {
			l: 660,
			m: 0,
			h: 0
		},
		P29c_longLit = {
			l: 668,
			m: 0,
			h: 0
		},
		P29e_longLit = {
			l: 670,
			m: 0,
			h: 0
		},
		P2ab_longLit = {
			l: 683,
			m: 0,
			h: 0
		},
		P2b2_longLit = {
			l: 690,
			m: 0,
			h: 0
		},
		P2b4_longLit = {
			l: 692,
			m: 0,
			h: 0
		},
		P2be_longLit = {
			l: 702,
			m: 0,
			h: 0
		},
		P2bf_longLit = {
			l: 703,
			m: 0,
			h: 0
		},
		P2c2_longLit = {
			l: 706,
			m: 0,
			h: 0
		},
		P2c3_longLit = {
			l: 707,
			m: 0,
			h: 0
		},
		P2c5_longLit = {
			l: 709,
			m: 0,
			h: 0
		},
		P2c7_longLit = {
			l: 711,
			m: 0,
			h: 0
		},
		P2c8_longLit = {
			l: 712,
			m: 0,
			h: 0
		},
		P2cc_longLit = {
			l: 716,
			m: 0,
			h: 0
		},
		P2ce_longLit = {
			l: 718,
			m: 0,
			h: 0
		},
		P2d2_longLit = {
			l: 722,
			m: 0,
			h: 0
		},
		P2d3_longLit = {
			l: 723,
			m: 0,
			h: 0
		},
		P2d4_longLit = {
			l: 724,
			m: 0,
			h: 0
		},
		P2d5_longLit = {
			l: 725,
			m: 0,
			h: 0
		},
		P2d8_longLit = {
			l: 728,
			m: 0,
			h: 0
		},
		P2d9_longLit = {
			l: 729,
			m: 0,
			h: 0
		},
		P2df_longLit = {
			l: 735,
			m: 0,
			h: 0
		},
		P2ed_longLit = {
			l: 749,
			m: 0,
			h: 0
		},
		P2ee_longLit = {
			l: 750,
			m: 0,
			h: 0
		},
		P2f1_longLit = {
			l: 753,
			m: 0,
			h: 0
		},
		P2f4_longLit = {
			l: 756,
			m: 0,
			h: 0
		},
		P300_longLit = {
			l: 768,
			m: 0,
			h: 0
		},
		P302_longLit = {
			l: 770,
			m: 0,
			h: 0
		},
		P307_longLit = {
			l: 775,
			m: 0,
			h: 0
		},
		P314_longLit = {
			l: 788,
			m: 0,
			h: 0
		},
		P322_longLit = {
			l: 802,
			m: 0,
			h: 0
		},
		P323_longLit = {
			l: 803,
			m: 0,
			h: 0
		},
		P324_longLit = {
			l: 804,
			m: 0,
			h: 0
		},
		P326_longLit = {
			l: 806,
			m: 0,
			h: 0
		},
		P33b_longLit = {
			l: 827,
			m: 0,
			h: 0
		},
		P343_longLit = {
			l: 835,
			m: 0,
			h: 0
		},
		P344_longLit = {
			l: 836,
			m: 0,
			h: 0
		},
		P345_longLit = {
			l: 837,
			m: 0,
			h: 0
		},
		P346_longLit = {
			l: 838,
			m: 0,
			h: 0
		},
		P348_longLit = {
			l: 840,
			m: 0,
			h: 0
		},
		P349_longLit = {
			l: 841,
			m: 0,
			h: 0
		},
		P34a_longLit = {
			l: 842,
			m: 0,
			h: 0
		},
		P34b_longLit = {
			l: 843,
			m: 0,
			h: 0
		},
		P34c_longLit = {
			l: 844,
			m: 0,
			h: 0
		},
		P34e_longLit = {
			l: 846,
			m: 0,
			h: 0
		},
		P34f_longLit = {
			l: 847,
			m: 0,
			h: 0
		},
		P353_longLit = {
			l: 851,
			m: 0,
			h: 0
		},
		P356_longLit = {
			l: 854,
			m: 0,
			h: 0
		},
		P360_longLit = {
			l: 864,
			m: 0,
			h: 0
		},
		P361_longLit = {
			l: 865,
			m: 0,
			h: 0
		},
		P366_longLit = {
			l: 870,
			m: 0,
			h: 0
		},
		P367_longLit = {
			l: 871,
			m: 0,
			h: 0
		},
		P36b_longLit = {
			l: 875,
			m: 0,
			h: 0
		},
		P377_longLit = {
			l: 887,
			m: 0,
			h: 0
		},
		P37b_longLit = {
			l: 891,
			m: 0,
			h: 0
		},
		P37d_longLit = {
			l: 893,
			m: 0,
			h: 0
		},
		P37f_longLit = {
			l: 895,
			m: 0,
			h: 0
		},
		P381_longLit = {
			l: 897,
			m: 0,
			h: 0
		},
		P387_longLit = {
			l: 903,
			m: 0,
			h: 0
		},
		P389_longLit = {
			l: 905,
			m: 0,
			h: 0
		},
		P38a_longLit = {
			l: 906,
			m: 0,
			h: 0
		},
		P390_longLit = {
			l: 912,
			m: 0,
			h: 0
		},
		P397_longLit = {
			l: 919,
			m: 0,
			h: 0
		},
		P39e_longLit = {
			l: 926,
			m: 0,
			h: 0
		},
		P3b0_longLit = {
			l: 944,
			m: 0,
			h: 0
		},
		P3b4_longLit = {
			l: 948,
			m: 0,
			h: 0
		},
		P3b8_longLit = {
			l: 952,
			m: 0,
			h: 0
		},
		P3bd_longLit = {
			l: 957,
			m: 0,
			h: 0
		},
		P3bf_longLit = {
			l: 959,
			m: 0,
			h: 0
		},
		P3c5_longLit = {
			l: 965,
			m: 0,
			h: 0
		},
		P3ce_longLit = {
			l: 974,
			m: 0,
			h: 0
		},
		P3cf_longLit = {
			l: 975,
			m: 0,
			h: 0
		},
		P3e4_longLit = {
			l: 996,
			m: 0,
			h: 0
		},
		P3e5_longLit = {
			l: 997,
			m: 0,
			h: 0
		},
		P3e8_longLit = {
			l: 1000,
			m: 0,
			h: 0
		},
		P3fa_longLit = {
			l: 1018,
			m: 0,
			h: 0
		},
		P3fd_longLit = {
			l: 1021,
			m: 0,
			h: 0
		},
		P407_longLit = {
			l: 1031,
			m: 0,
			h: 0
		},
		P408_longLit = {
			l: 1032,
			m: 0,
			h: 0
		},
		P409_longLit = {
			l: 1033,
			m: 0,
			h: 0
		},
		P40a_longLit = {
			l: 1034,
			m: 0,
			h: 0
		},
		P40b_longLit = {
			l: 1035,
			m: 0,
			h: 0
		},
		P40c_longLit = {
			l: 1036,
			m: 0,
			h: 0
		},
		P413_longLit = {
			l: 1043,
			m: 0,
			h: 0
		},
		P416_longLit = {
			l: 1046,
			m: 0,
			h: 0
		},
		P41c_longLit = {
			l: 1052,
			m: 0,
			h: 0
		},
		P421_longLit = {
			l: 1057,
			m: 0,
			h: 0
		},
		P422_longLit = {
			l: 1058,
			m: 0,
			h: 0
		},
		P426_longLit = {
			l: 1062,
			m: 0,
			h: 0
		},
		P42f_longLit = {
			l: 1071,
			m: 0,
			h: 0
		},
		P430_longLit = {
			l: 1072,
			m: 0,
			h: 0
		},
		P439_longLit = {
			l: 1081,
			m: 0,
			h: 0
		},
		P43a_longLit = {
			l: 1082,
			m: 0,
			h: 0
		},
		P43b_longLit = {
			l: 1083,
			m: 0,
			h: 0
		},
		P43c_longLit = {
			l: 1084,
			m: 0,
			h: 0
		},
		P444_longLit = {
			l: 1092,
			m: 0,
			h: 0
		},
		P445_longLit = {
			l: 1093,
			m: 0,
			h: 0
		},
		P446_longLit = {
			l: 1094,
			m: 0,
			h: 0
		},
		P44c_longLit = {
			l: 1100,
			m: 0,
			h: 0
		},
		P44d_longLit = {
			l: 1101,
			m: 0,
			h: 0
		},
		P44e_longLit = {
			l: 1102,
			m: 0,
			h: 0
		},
		P453_longLit = {
			l: 1107,
			m: 0,
			h: 0
		},
		P454_longLit = {
			l: 1108,
			m: 0,
			h: 0
		},
		P455_longLit = {
			l: 1109,
			m: 0,
			h: 0
		},
		P457_longLit = {
			l: 1111,
			m: 0,
			h: 0
		},
		P45b_longLit = {
			l: 1115,
			m: 0,
			h: 0
		},
		P45c_longLit = {
			l: 1116,
			m: 0,
			h: 0
		},
		P460_longLit = {
			l: 1120,
			m: 0,
			h: 0
		},
		P468_longLit = {
			l: 1128,
			m: 0,
			h: 0
		},
		P46d_longLit = {
			l: 1133,
			m: 0,
			h: 0
		},
		P475_longLit = {
			l: 1141,
			m: 0,
			h: 0
		},
		P478_longLit = {
			l: 1144,
			m: 0,
			h: 0
		},
		P494_longLit = {
			l: 1172,
			m: 0,
			h: 0
		},
		P4a9_longLit = {
			l: 1193,
			m: 0,
			h: 0
		},
		P4aa_longLit = {
			l: 1194,
			m: 0,
			h: 0
		},
		P4ac_longLit = {
			l: 1196,
			m: 0,
			h: 0
		},
		P4ad_longLit = {
			l: 1197,
			m: 0,
			h: 0
		},
		P4ae_longLit = {
			l: 1198,
			m: 0,
			h: 0
		},
		P4b1_longLit = {
			l: 1201,
			m: 0,
			h: 0
		},
		P4b5_longLit = {
			l: 1205,
			m: 0,
			h: 0
		},
		P4b9_longLit = {
			l: 1209,
			m: 0,
			h: 0
		},
		P4d0_longLit = {
			l: 1232,
			m: 0,
			h: 0
		},
		P4d2_longLit = {
			l: 1234,
			m: 0,
			h: 0
		},
		P4d3_longLit = {
			l: 1235,
			m: 0,
			h: 0
		},
		P4d4_longLit = {
			l: 1236,
			m: 0,
			h: 0
		},
		P4d5_longLit = {
			l: 1237,
			m: 0,
			h: 0
		},
		P4d7_longLit = {
			l: 1239,
			m: 0,
			h: 0
		},
		P516_longLit = {
			l: 1302,
			m: 0,
			h: 0
		},
		P517_longLit = {
			l: 1303,
			m: 0,
			h: 0
		},
		P51a_longLit = {
			l: 1306,
			m: 0,
			h: 0
		},
		P51d_longLit = {
			l: 1309,
			m: 0,
			h: 0
		},
		P520_longLit = {
			l: 1312,
			m: 0,
			h: 0
		},
		P552_longLit = {
			l: 1362,
			m: 0,
			h: 0
		},
		P561_longLit = {
			l: 1377,
			m: 0,
			h: 0
		},
		P562_longLit = {
			l: 1378,
			m: 0,
			h: 0
		},
		P581_longLit = {
			l: 1409,
			m: 0,
			h: 0
		},
		P585_longLit = {
			l: 1413,
			m: 0,
			h: 0
		},
		P586_longLit = {
			l: 1414,
			m: 0,
			h: 0
		},
		P59b_longLit = {
			l: 1435,
			m: 0,
			h: 0
		},
		P59f_longLit = {
			l: 1439,
			m: 0,
			h: 0
		},
		P5a5_longLit = {
			l: 1445,
			m: 0,
			h: 0
		},
		P5a6_longLit = {
			l: 1446,
			m: 0,
			h: 0
		},
		P5a7_longLit = {
			l: 1447,
			m: 0,
			h: 0
		},
		P5a9_longLit = {
			l: 1449,
			m: 0,
			h: 0
		},
		P5aa_longLit = {
			l: 1450,
			m: 0,
			h: 0
		},
		P5be_longLit = {
			l: 1470,
			m: 0,
			h: 0
		},
		P5bf_longLit = {
			l: 1471,
			m: 0,
			h: 0
		},
		P5c6_longLit = {
			l: 1478,
			m: 0,
			h: 0
		},
		P5c7_longLit = {
			l: 1479,
			m: 0,
			h: 0
		},
		P5c9_longLit = {
			l: 1481,
			m: 0,
			h: 0
		},
		P5ca_longLit = {
			l: 1482,
			m: 0,
			h: 0
		},
		P5cb_longLit = {
			l: 1483,
			m: 0,
			h: 0
		},
		P5cc_longLit = {
			l: 1484,
			m: 0,
			h: 0
		},
		P5cf_longLit = {
			l: 1487,
			m: 0,
			h: 0
		},
		P5d1_longLit = {
			l: 1489,
			m: 0,
			h: 0
		},
		P5d2_longLit = {
			l: 1490,
			m: 0,
			h: 0
		},
		P5d3_longLit = {
			l: 1491,
			m: 0,
			h: 0
		},
		P5d6_longLit = {
			l: 1494,
			m: 0,
			h: 0
		},
		P2000_longLit = {
			l: 8192,
			m: 0,
			h: 0
		},
		P2710_longLit = {
			l: 10000,
			m: 0,
			h: 0
		},
		P186a0_longLit = {
			l: 100000,
			m: 0,
			h: 0
		},
		Pf4240_longLit = {
			l: 1000000,
			m: 0,
			h: 0
		},
		P989680_longLit = {
			l: 1611392,
			m: 2,
			h: 0
		},
		P5265c00_longLit = {
			l: 2513920,
			m: 20,
			h: 0
		},
		P5f5e100_longLit = {
			l: 3531008,
			m: 23,
			h: 0
		},
		P3b9aca00_longLit = {
			l: 1755648,
			m: 238,
			h: 0
		},
		P7fffffff_longLit = {
			l: 4194303,
			m: 511,
			h: 0
		},
		P2540be400_longLit = {
			l: 779264,
			m: 2384,
			h: 0
		},
		P174876e800_longLit = {
			l: 3598336,
			m: 23841,
			h: 0
		},
		Pe8d4a51000_longLit = {
			l: 2428928,
			m: 238418,
			h: 0
		},
		P9184e72a000_longLit = {
			l: 3317760,
			m: 2384185,
			h: 0
		},
		P5af3107a4000_longLit = {
			l: 3817472,
			m: 2870337,
			h: 5
		},
		P38d7ea4c68000_longLit = {
			l: 425984,
			m: 3537555,
			h: 56
		},
		P2386f26fc10000_longLit = {
			l: 65536,
			m: 1821119,
			h: 568
		},
		P16345785d8a0000_longLit = {
			l: 655360,
			m: 1433974,
			h: 5684
		},
		Pde0b6b3a7640000_longLit = {
			l: 2359296,
			m: 1756829,
			h: 56843
		},
		P7fffffffffffffff_longLit = {
			l: 4194303,
			m: 4194303,
			h: 524287
		},
		seedTable = {},
		Q$Object = 0,
		Q$String = 1,
		Q$byte_$1 = 2,
		Q$Network = 3,
		Q$NetworkHandler = 4,
		Q$NetworkManager = 5,
		Q$NetworkStatus = 6,
		Q$NetworkStatusHandler = 7,
		Q$TimeService = 8,
		Q$Timer = 9,
		Q$BaseManager = 10,
		Q$BlobStringBuilder = 11,
		Q$DomainHandler = 12,
		Q$DomainModel = 13,
		Q$DomainObject = 14,
		Q$DomainObjectContainer = 15,
		Q$ErrorEvent = 16,
		Q$Event = 17,
		Q$EventHandler = 18,
		Q$EventHandler_ExporterImpl = 19,
		Q$EventObject = 20,
		Q$IDGenerator = 21,
		Q$Logger = 22,
		Q$Manager = 23,
		Q$Parser = 24,
		Q$Repository = 25,
		Q$DomainDateTimeFormatter = 26,
		Q$DomainIDGenerator = 27,
		Q$DomainJavascriptDateTimeFormatter = 28,
		Q$DomainJavascriptDateTimeFormatter_ExporterImpl = 29,
		Q$DomainJavascriptIDGenerator = 30,
		Q$DomainJavascriptIDGenerator_ExporterImpl = 31,
		Q$DomainJavascriptLogger = 32,
		Q$DomainJavascriptLogger_ExporterImpl = 33,
		Q$DomainJavascriptNetwork = 34,
		Q$DomainJavascriptNetwork_ExporterImpl = 35,
		Q$DomainJavascriptParser = 36,
		Q$DomainJavascriptParser_ExporterImpl = 37,
		Q$DomainJavascriptRepository = 38,
		Q$DomainJavascriptRepository_ExporterImpl = 39,
		Q$DomainJavascriptStorageProvider = 40,
		Q$DomainJavascriptStorageProvider_ExporterImpl = 41,
		Q$DomainJavascriptTimeService = 42,
		Q$DomainJavascriptTimeService_ExporterImpl = 43,
		Q$DomainJavascriptTimer = 44,
		Q$DomainJavascriptTimer_ExporterImpl = 45,
		Q$DomainLogger = 46,
		Q$DomainNetwork = 47,
		Q$DomainParser = 48,
		Q$DomainRepository = 49,
		Q$DomainRunnable = 50,
		Q$DomainStorageProvider = 51,
		Q$DomainStorageRequest = 52,
		Q$DomainTimeService = 53,
		Q$DomainTimer = 54,
		Q$GWTBlobStringBuilder = 55,
		Q$JSBlobStringBuilder = 56,
		Q$JSBlobStringBuilder_ExporterImpl = 57,
		Q$BaseQuoteManager = 58,
		Q$BidAskQuoteItem = 59,
		Q$BoardRankQuoteList = 60,
		Q$BoardRankQuoteManager = 61,
		Q$BoardTypes = 62,
		Q$CandleQuoteManager = 63,
		Q$CandleQuoteSortByTime = 64,
		Q$CandleQuoteStream = 65,
		Q$CandleQuoteStreamItem = 66,
		Q$CapFlowQuoteManager = 67,
		Q$CapFlowQuoteSortByTime = 68,
		Q$CapFlowQuoteStream = 69,
		Q$CapFlowQuoteStreamItem = 70,
		Q$PeriodType = 71,
		Q$Quote = 72,
		Q$QuoteItem = 73,
		Q$QuoteItemList = 74,
		Q$QuoteList = 75,
		Q$QuoteMarketTestItem = 76,
		Q$QuoteStream = 77,
		Q$QuoteTestItem = 78,
		Q$QuoteTestManager = 79,
		Q$QuoteTestTypes = 80,
		Q$RankQuoteItem = 81,
		Q$RankSortType = 82,
		Q$RealtimeQuoteItem = 83,
		Q$RealtimeQuoteManager = 84,
		Q$RiseFallStat = 85,
		Q$SimpleRealtimeBatchQuoteManager = 86,
		Q$SimpleRealtimeQuoteItem = 87,
		Q$SimpleRealtimeQuoteItemList = 88,
		Q$TickQuoteManager = 89,
		Q$TickQuoteSortByTime = 90,
		Q$TickQuoteStream = 91,
		Q$TickQuoteStreamItem = 92,
		Q$TimeSeriesQuoteManager = 93,
		Q$TimeSeriesQuoteSortByTime = 94,
		Q$TimeSeriesQuoteStream = 95,
		Q$TimeSeriesQuoteStreamItem = 96,
		Q$BaseRepository = 97,
		Q$DomainScheduler = 98,
		Q$FixRepository = 99,
		Q$HippoQuoteRepository = 100,
		Q$QuoteRepository = 101,
		Q$RepositoryDispatcher = 102,
		Q$ScheduleRepository = 103,
		Q$SubscribeRepository = 104,
		Q$CodeList = 105,
		Q$CodeListRepository = 106,
		Q$Securities = 107,
		Q$SecurityTypes = 108,
		Q$Stock = 109,
		Q$StockList = 110,
		Q$StockManager = 111,
		Q$StorageRepository = 112,
		Q$UserStockManager = 113,
		Q$UserStockRepository = 114,
		Q$StorageProvider = 115,
		Q$StorageRequest = 116,
		Q$Account = 117,
		Q$BankAccount = 118,
		Q$BankInfo = 119,
		Q$BaseAccount = 120,
		Q$BranchInfo = 121,
		Q$Client = 122,
		Q$ClientManager = 123,
		Q$Fund = 124,
		Q$FundAccount = 125,
		Q$FundAccounts = 126,
		Q$Inventory = 127,
		Q$InvestPreference = 128,
		Q$Money = 129,
		Q$SecuritiesFund = 130,
		Q$StockAccount = 131,
		Q$StockPosition = 132,
		Q$BaseTradeManager = 133,
		Q$Exchange = 134,
		Q$TradeObject = 135,
		Q$TradeRequest = 136,
		Q$TradeRequestItem = 137,
		Q$TradeResData = 138,
		Q$TradeResDataItem = 139,
		Q$CreditOrder = 140,
		Q$CreditOrderItem = 141,
		Q$CreditOrderManager = 142,
		Q$CreditOrderResult = 143,
		Q$FundOrder = 144,
		Q$FundOrderItem = 145,
		Q$FundOrderManager = 146,
		Q$FundOrderResult = 147,
		Q$Order = 148,
		Q$OrderItem = 149,
		Q$OrderResult = 150,
		Q$OrderResultItem = 151,
		Q$StockOrder = 152,
		Q$StockOrderItem = 153,
		Q$StockOrderManager = 154,
		Q$StockOrderResult = 155,
		Q$ThirdOrder = 156,
		Q$ThirdOrderItem = 157,
		Q$ThirdOrderManager = 158,
		Q$ThirdOrderResult = 159,
		Q$TradeManager = 160,
		Q$CreditQueryManager = 161,
		Q$StockQueryManager = 162,
		Q$FixObject = 163,
		Q$FixSessionException = 164,
		Q$MsgTypes = 165,
		Q$FixCollateralAssignment = 166,
		Q$FixCollateralResponse = 167,
		Q$FixExecutionAcknowledgement = 168,
		Q$FixExecutionReport = 169,
		Q$FixHeartbeat = 170,
		Q$FixLogon = 171,
		Q$FixLogout = 172,
		Q$FixMessage = 173,
		Q$FixNewOrderSingle = 174,
		Q$FixOrderCancelReject = 175,
		Q$FixOrderCancelRequest = 176,
		Q$FixOrderMassStatusRequest = 177,
		Q$FixOrderStatusRequest = 178,
		Q$FixPositionMaintenanceReport = 179,
		Q$FixPositionMaintenanceRequest = 180,
		Q$FixQuote = 181,
		Q$FixQuoteRequest = 182,
		Q$FixRequestForPositions = 183,
		Q$FixRequestForPositionsAck = 184,
		Q$FixResendRequest = 185,
		Q$FixSecurityList = 186,
		Q$FixSecurityListRequest = 187,
		Q$FixSequenceReset = 188,
		Q$FixTestRequest = 189,
		Q$FixTradeCaptureReportRequest = 190,
		Q$FixTradeCaptureReportRequestAck = 191,
		Q$FixUserRequest = 192,
		Q$FixUserResponse = 193,
		Q$FixApplicationSequenceControl = 194,
		Q$FixAttrbGrp = 195,
		Q$FixAttrbGrp$AttrbGrp = 196,
		Q$FixBaseTradingRules = 197,
		Q$FixCommissionData = 198,
		Q$FixComplexEventDates = 199,
		Q$FixComplexEventDates$ComplexEventDates = 200,
		Q$FixComplexEventTimes = 201,
		Q$FixComplexEventTimes$ComplexEventTimes = 202,
		Q$FixComplexEvents = 203,
		Q$FixComplexEvents$ComplexEvents = 204,
		Q$FixComponent = 205,
		Q$FixContAmtGrp = 206,
		Q$FixContAmtGrp$ContAmtGrp = 207,
		Q$FixContraGrp = 208,
		Q$FixContraGrp$ContraGrp = 209,
		Q$FixDiscretionInstructions = 210,
		Q$FixDisplayInstruction = 211,
		Q$FixDlvyInstGrp = 212,
		Q$FixEvntGrp = 213,
		Q$FixEvntGrp$EvntGrp = 214,
		Q$FixExecCollGrp = 215,
		Q$FixExecCollGrp$ExecCollGrp = 216,
		Q$FixExecInstRules = 217,
		Q$FixExecInstRules$ExecInstRules = 218,
		Q$FixFillsGrp = 219,
		Q$FixFillsGrp$FillsGrp = 220,
		Q$FixFinancingDetails = 221,
		Q$FixHopGrp = 222,
		Q$FixInstrmtLegExecGrp = 223,
		Q$FixInstrmtLegExecGrp$InstrmtLegExecGrp = 224,
		Q$FixInstrmtLegGrp = 225,
		Q$FixInstrmtLegGrp$InstrmtLegGrp = 226,
		Q$FixInstrmtLegSecListGrp = 227,
		Q$FixInstrmtLegSecListGrp$InstrmtLegSecListGrp = 228,
		Q$FixInstrument = 229,
		Q$FixInstrumentExtension = 230,
		Q$FixInstrumentLeg = 231,
		Q$FixInstrumentParties = 232,
		Q$FixInstrumentParties$InstrumentParties = 233,
		Q$FixInstrumentPtysSubGrp = 234,
		Q$FixInstrumentPtysSubGrp$InstrumentPtysSubGrp = 235,
		Q$FixLegBenchmarkCurveData = 236,
		Q$FixLegPreAllocGrp = 237,
		Q$FixLegPreAllocGrp$LegPreAllocGrp = 238,
		Q$FixLegQuotGrp = 239,
		Q$FixLegQuotGrp$LegQuotGrp = 240,
		Q$FixLegSecAltIDGrp = 241,
		Q$FixLegSecAltIDGrp$LegSecAltIDGrp = 242,
		Q$FixLegStipulations = 243,
		Q$FixLegStipulations$LegStipulations = 244,
		Q$FixLotTypeRules = 245,
		Q$FixLotTypeRules$LotTypeRules = 246,
		Q$FixMarketDataFeedTypes = 247,
		Q$FixMarketDataFeedTypes$MarketDataFeedTypes = 248,
		Q$FixMatchRules = 249,
		Q$FixMatchRules$MatchRules = 250,
		Q$FixMaturityRules = 251,
		Q$FixMaturityRules$MaturityRules = 252,
		Q$FixMiscFeesGrp = 253,
		Q$FixMiscFeesGrp$MiscFeesGrp = 254,
		Q$FixMsgTypeGrp = 255,
		Q$FixMsgTypeGrp$MsgTypeGrp = 256,
		Q$FixNestedInstrumentAttribute = 257,
		Q$FixNestedInstrumentAttribute$NestedInstrumentAttribute = 258,
		Q$FixNestedParties = 259,
		Q$FixNestedParties$NestedParties = 260,
		Q$FixNestedParties2 = 261,
		Q$FixNestedParties2$NestedParties2 = 262,
		Q$FixNestedParties3 = 263,
		Q$FixNestedParties3$NestedParties3 = 264,
		Q$FixNestedParties4 = 265,
		Q$FixNestedParties4$NestedParties4 = 266,
		Q$FixNstdPtys2SubGrp = 267,
		Q$FixNstdPtys2SubGrp$NstdPtys2SubGrp = 268,
		Q$FixNstdPtys3SubGrp = 269,
		Q$FixNstdPtys3SubGrp$NstdPtys3SubGrp = 270,
		Q$FixNstdPtys4SubGrp = 271,
		Q$FixNstdPtys4SubGrp$NstdPtys4SubGrp = 272,
		Q$FixNstdPtysSubGrp = 273,
		Q$FixNstdPtysSubGrp$NstdPtysSubGrp = 274,
		Q$FixOrdTypeRules = 275,
		Q$FixOrdTypeRules$OrdTypeRules = 276,
		Q$FixOrderQtyData = 277,
		Q$FixParties = 278,
		Q$FixParties$Parties = 279,
		Q$FixPegInstructions = 280,
		Q$FixPositionAmountData = 281,
		Q$FixPositionAmountData$PositionAmountData = 282,
		Q$FixPositionQty = 283,
		Q$FixPositionQty$PositionQty = 284,
		Q$FixPreAllocGrp = 285,
		Q$FixPreAllocGrp$PreAllocGrp = 286,
		Q$FixPriceLimits = 287,
		Q$FixPtysSubGrp = 288,
		Q$FixPtysSubGrp$PtysSubGrp = 289,
		Q$FixQuotQualGrp = 290,
		Q$FixQuotQualGrp$QuotQualGrp = 291,
		Q$FixQuotReqGrp = 292,
		Q$FixQuotReqGrp$QuotReqGrp = 293,
		Q$FixQuotReqLegsGrp = 294,
		Q$FixQuotReqLegsGrp$QuotReqLegsGrp = 295,
		Q$FixRateSource = 296,
		Q$FixRateSource$RateSource = 297,
		Q$FixRootParties = 298,
		Q$FixRootParties$RootParties = 299,
		Q$FixRootSubParties = 300,
		Q$FixRootSubParties$RootSubParties = 301,
		Q$FixSecAltIDGrp = 302,
		Q$FixSecAltIDGrp$SecAltIDGrp = 303,
		Q$FixSecListGrp = 304,
		Q$FixSecListGrp$SecListGrp = 305,
		Q$FixSecurityTradingRules = 306,
		Q$FixSecurityXML = 307,
		Q$FixSettlInstructionsData = 308,
		Q$FixSpreadOrBenchmarkCurveData = 309,
		Q$FixStipulations = 310,
		Q$FixStipulations$Stipulations = 311,
		Q$FixStrategyParametersGrp = 312,
		Q$FixStrategyParametersGrp$StrategyParametersGrp = 313,
		Q$FixStrikeRules = 314,
		Q$FixStrikeRules$StrikeRules = 315,
		Q$FixTargetParties = 316,
		Q$FixTickRules = 317,
		Q$FixTickRules$TickRules = 318,
		Q$FixTimeInForceRules = 319,
		Q$FixTimeInForceRules$TimeInForceRules = 320,
		Q$FixTradingSessionRules = 321,
		Q$FixTradingSessionRulesGrp = 322,
		Q$FixTradingSessionRulesGrp$TradingSessionRulesGrp = 323,
		Q$FixTrdCapDtGrp = 324,
		Q$FixTrdCollGrp = 325,
		Q$FixTrdCollGrp$TrdCollGrp = 326,
		Q$FixTrdRegTimestamps = 327,
		Q$FixTrdRegTimestamps$TrdRegTimestamps = 328,
		Q$FixTrdgSesGrp = 329,
		Q$FixTrdgSesGrp$TrdgSesGrp = 330,
		Q$FixTriggeringInstruction = 331,
		Q$FixUndInstrmtCollGrp = 332,
		Q$FixUndInstrmtCollGrp$UndInstrmtCollGrp = 333,
		Q$FixUndInstrmtGrp = 334,
		Q$FixUndInstrmtGrp$UndInstrmtGrp = 335,
		Q$FixUndSecAltIDGrp = 336,
		Q$FixUndSecAltIDGrp$UndSecAltIDGrp = 337,
		Q$FixUnderlyingInstrument = 338,
		Q$FixUnderlyingStipulations = 339,
		Q$FixUnderlyingStipulations$UnderlyingStipulations = 340,
		Q$FixUndlyInstrumentParties = 341,
		Q$FixUndlyInstrumentParties$UndlyInstrumentParties = 342,
		Q$FixUndlyInstrumentPtysSubGrp = 343,
		Q$FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp = 344,
		Q$FixYieldData = 345,
		Q$ByteBuffer = 346,
		Q$JavaScriptException = 347,
		Q$LongLibBase$LongEmul = 348,
		Q$Serializable = 349,
		Q$Boolean = 350,
		Q$Byte = 351,
		Q$CharSequence = 352,
		Q$Comparable = 353,
		Q$Double = 354,
		Q$Enum = 355,
		Q$Exception = 356,
		Q$Integer = 357,
		Q$Long = 358,
		Q$Number = 359,
		Q$NumberFormatException = 360,
		Q$StackTraceElement = 361,
		Q$Throwable = 362,
		Q$Date = 363,
		Q$List = 364,
		Q$Map = 365,
		Q$Map$Entry = 366,
		Q$Set = 367,
		Q$TreeMap$Node = 368,
		Q$TreeMap$SubMapType = 369,
		Q$Exportable = 370,
		CM$ = {};

	function newSeed(id_0) {
		return new seedTable[id_0];
	}

	function defineSeed(id_0, superSeed, castableTypeMap) {
		var seed = seedTable[id_0];
		if (seed && !seed.___clazz$) {
			_ = seed.prototype;
		} else {
			!seed && (seed = seedTable[id_0] = function() {});
			_ = seed.prototype = superSeed < 0 ? {} : newSeed(superSeed);
			_.castableTypeMap$ = castableTypeMap;
		}
		for (var i_0 = 3; i_0 < arguments.length; ++i_0) {
			arguments[i_0].prototype = _;
		}
		if (seed.___clazz$) {
			_.___clazz$ = seed.___clazz$;
			seed.___clazz$ = null;
		}
	}

	function makeCastMap(a) {
		var result = {};
		for (var i_0 = 0, c = a.length; i_0 < c; ++i_0) {
			result[a[i_0]] = 1;
		}
		return result;
	}

	function nullMethod() {}

	function Object_1() {}

	defineSeed(1, -1, CM$, Object_1);
	_.equals$ = function equals(other) {
		return this === other;
	};
	_.getClass$ = function getClass_0() {
		return this.___clazz$;
	};
	_.hashCode$ = function hashCode_0() {
		return getHashCode(this);
	};
	_.toString$ = function toString_0() {
		return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());
	};
	_.toString = function() {
		return this.toString$();
	};
	_.typeMarker$ = nullMethod;

	function Network_0() {}

	defineSeed(3, 1, makeCastMap([Q$Network, Q$Exportable]), Network_0);
	_.send_0 = function send(topic, data_0) {};

	function NetworkHandler_0() {}

	defineSeed(4, 1, makeCastMap([Q$NetworkHandler, Q$Exportable]), NetworkHandler_0);

	function $export(this$static) {
		if (!exported) {
			exported = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_NetworkHandler_2_classLit, this$static);
			$export0(this$static);
		}
	}

	function $export0(this$static) {
		var pkg = declarePackage('hippo.adapter.NetworkHandler');
		var __0, __ = this$static;
		$wnd.hippo.adapter.NetworkHandler = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new NetworkHandler_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.NetworkHandler.prototype = new Object;
		__0.onData = $entry(function(a0, a1) {
			__static_wrapper_onData(this.g, a0, a1);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.NetworkHandler[p] === undefined && ($wnd.hippo.adapter.NetworkHandler[p] = pkg[p]);
	}

	function NetworkHandler_ExporterImpl_0() {
		$export(this);
	}

	function __static_wrapper_onData(instance, a0, a1) {
		$clinit_ExporterUtil();
		$toArrByte(a1);
	}

	defineSeed(5, 1, {}, NetworkHandler_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor() {
		return $wnd.hippo.adapter.NetworkHandler;
	};
	_.isAssignable = function isAssignable(o) {
		return o != null && instanceOf(o, Q$NetworkHandler);
	};
	var exported = false;

	function $getHandlerList(this$static, topic) {
		var handlerList;
		handlerList = $get_3(this$static.mMapHandler, topic);
		if (!handlerList) {
			handlerList = new ArrayList_0;
			$put_2(this$static.mMapHandler, topic, handlerList);
		}
		return handlerList;
	}

	function $onData(this$static, topic) {
		var i_0, list;
		list = $getHandlerList(this$static, topic);
		if (list) {
			for (i_0 = 0; i_0 < list.size_0; ++i_0) {
				checkIndex(i_0, list.size_0);
				list.array[i_0];
			}
		}
	}

	function $registerStatusHandler(this$static, handler) {
		$indexOf_1(this$static.mListStatusHandler, handler, 0) != -1 || $add(this$static.mListStatusHandler, handler);
	}

	function NetworkManager_0() {
		this.mMapHandler = new TreeMap_0;
		this.mListStatusHandler = new ArrayList_0;
	}

	defineSeed(6, 1, makeCastMap([Q$NetworkManager, Q$Exportable]), NetworkManager_0);
	_.onStatus_0 = function onStatus(status_0) {
		var netHandler, netHandler$iterator, newList;
		newList = new ArrayList_0;
		$addAll(newList, this.mListStatusHandler);
		for (netHandler$iterator = new AbstractList$IteratorImpl_0(newList); netHandler$iterator.i < netHandler$iterator.this$0.size_1();) {
			netHandler = $next(netHandler$iterator);
			netHandler.onStatus_0(status_0);
		}
	};
	_.registerHandler_0 = function registerHandler(topic, handler) {
		var list;
		list = $getHandlerList(this, topic);
		$indexOf_1(list, handler, 0) != -1 || (list.array[list.size_0++] = handler, true);
	};
	_.registerStatusHandler_0 = function registerStatusHandler(handler) {
		$registerStatusHandler(this, handler);
	};
	_.unregisterHandler_0 = function unregisterHandler(topic, handler) {
		var list;
		list = $getHandlerList(this, topic);
		$remove_2(list, handler);
	};
	_.unregisterStatusHandler_0 = function unregisterStatusHandler(handler) {
		$remove_2(this.mListStatusHandler, handler);
	};

	function $export_0(this$static) {
		if (!exported_0) {
			exported_0 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_NetworkManager_2_classLit, this$static);
			new NetworkStatus_ExporterImpl_0;
			new NetworkHandler_ExporterImpl_0;
			new NetworkStatusHandler_ExporterImpl_0;
			$export0_0(this$static);
		}
	}

	function $export0_0(this$static) {
		var pkg = declarePackage('hippo.adapter.NetworkManager');
		var __0, __ = this$static;
		$wnd.hippo.adapter.NetworkManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new NetworkManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.NetworkManager.prototype = new Object;
		__0.onData = $entry(function(a0, a1) {
			__static_wrapper_onData_0(this.g, a0, a1);
		});
		__0.onStatus = $entry(function(a0) {
			this.g.onStatus_0(a0 == null ? null : a0.g);
		});
		__0.registerHandler = $entry(function(a0, a1) {
			this.g.registerHandler_0(a0, a1 == null ? null : a1.g);
		});
		__0.registerStatusHandler = $entry(function(a0) {
			this.g.registerStatusHandler_0(a0 == null ? null : a0.g);
		});
		__0.unregisterHandler = $entry(function(a0, a1) {
			this.g.unregisterHandler_0(a0, a1 == null ? null : a1.g);
		});
		__0.unregisterStatusHandler = $entry(function(a0) {
			this.g.unregisterStatusHandler_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.NetworkManager[p] === undefined && ($wnd.hippo.adapter.NetworkManager[p] = pkg[p]);
	}

	function NetworkManager_ExporterImpl_0() {
		$export_0(this);
	}

	function __static_wrapper_onData_0(instance, a0, a1) {
		$onData(instance, a0, ($clinit_ExporterUtil(), $toArrByte(a1)));
	}

	defineSeed(7, 1, {}, NetworkManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_0() {
		return $wnd.hippo.adapter.NetworkManager;
	};
	_.isAssignable = function isAssignable_0(o) {
		return o != null && instanceOf(o, Q$NetworkManager);
	};
	var exported_0 = false;

	function NetworkStatus_0() {}

	defineSeed(8, 1, makeCastMap([Q$NetworkStatus, Q$Exportable]), NetworkStatus_0);
	_.getMessage_0 = function getMessage() {
		return this.message_0;
	};
	_.getStatus_0 = function getStatus() {
		return this.status_0;
	};
	_.setMessage_0 = function setMessage(message) {
		this.message_0 = message;
	};
	_.setStatus_0 = function setStatus(status_0) {
		this.status_0 = status_0;
	};
	_.message_0 = '';
	_.status_0 = 0;

	function NetworkStatusHandler_0() {}

	defineSeed(9, 1, makeCastMap([Q$NetworkStatusHandler, Q$Exportable]), NetworkStatusHandler_0);
	_.onStatus_0 = function onStatus_0(status_0) {};

	function $export_1(this$static) {
		if (!exported_1) {
			exported_1 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_NetworkStatusHandler_2_classLit, this$static);
			$export0_1(this$static);
		}
	}

	function $export0_1(this$static) {
		var pkg = declarePackage('hippo.adapter.NetworkStatusHandler');
		var __0, __ = this$static;
		$wnd.hippo.adapter.NetworkStatusHandler = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new NetworkStatusHandler_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.NetworkStatusHandler.prototype = new Object;
		__0.onStatus = $entry(function(a0) {
			this.g.onStatus_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.NetworkStatusHandler[p] === undefined && ($wnd.hippo.adapter.NetworkStatusHandler[p] = pkg[p]);
	}

	function NetworkStatusHandler_ExporterImpl_0() {
		$export_1(this);
	}

	defineSeed(10, 1, {}, NetworkStatusHandler_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_1() {
		return $wnd.hippo.adapter.NetworkStatusHandler;
	};
	_.isAssignable = function isAssignable_1(o) {
		return o != null && instanceOf(o, Q$NetworkStatusHandler);
	};
	var exported_1 = false;

	function $export_2(this$static) {
		if (!exported_2) {
			exported_2 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_NetworkStatus_2_classLit, this$static);
			$export0_2(this$static);
		}
	}

	function $export0_2(this$static) {
		var pkg = declarePackage('hippo.adapter.NetworkStatus');
		var __0, __ = this$static;
		$wnd.hippo.adapter.NetworkStatus = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new NetworkStatus_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.NetworkStatus.prototype = new Object;
		$wnd.hippo.adapter.NetworkStatus.CONNECTED = 0;
		$wnd.hippo.adapter.NetworkStatus.DISCONNECTED = 1;
		$wnd.hippo.adapter.NetworkStatus.UPDATE_SUCCESS = 2;
		$wnd.hippo.adapter.NetworkStatus.UPDATE_FAIL = 3;
		$wnd.hippo.adapter.NetworkStatus.NETWORK_BROKEN = 4;
		$wnd.hippo.adapter.NetworkStatus.NETWORK_OK = 5;
		$wnd.hippo.adapter.NetworkStatus.ERROR = -1;
		__0.getMessage = $entry(function() {
			return this.g.getMessage_0();
		});
		__0.getStatus = $entry(function() {
			return this.g.getStatus_0();
		});
		__0.setMessage = $entry(function(a0) {
			this.g.setMessage_0(a0);
		});
		__0.setStatus = $entry(function(a0) {
			this.g.setStatus_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.NetworkStatus[p] === undefined && ($wnd.hippo.adapter.NetworkStatus[p] = pkg[p]);
	}

	function NetworkStatus_ExporterImpl_0() {
		$export_2(this);
	}

	defineSeed(11, 1, {}, NetworkStatus_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_2() {
		return $wnd.hippo.adapter.NetworkStatus;
	};
	_.isAssignable = function isAssignable_2(o) {
		return o != null && instanceOf(o, Q$NetworkStatus);
	};
	var exported_2 = false;

	function $export_3(this$static) {
		if (!exported_3) {
			exported_3 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_Network_2_classLit, this$static);
			$export0_3(this$static);
		}
	}

	function $export0_3(this$static) {
		var pkg = declarePackage('hippo.adapter.Network');
		var __0, __ = this$static;
		$wnd.hippo.adapter.Network = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Network_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.Network.prototype = new Object;
		__0.send = $entry(function(a0, a1) {
			__static_wrapper_send(this.g, a0, a1);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.Network[p] === undefined && ($wnd.hippo.adapter.Network[p] = pkg[p]);
	}

	function Network_ExporterImpl_0() {
		$export_3(this);
	}

	function __static_wrapper_send(instance, a0, a1) {
		instance.send_0(a0, ($clinit_ExporterUtil(), $toArrByte(a1)));
	}

	defineSeed(12, 1, {}, Network_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_3() {
		return $wnd.hippo.adapter.Network;
	};
	_.isAssignable = function isAssignable_3(o) {
		return o != null && instanceOf(o, Q$Network);
	};
	var exported_3 = false;

	function TimeService_0() {}

	defineSeed(13, 1, makeCastMap([Q$TimeService, Q$Exportable]), TimeService_0);
	_.currentTimeMillis_0 = function currentTimeMillis_0() {
		return '0';
	};
	_.isOpeningPeriod_0 = function isOpeningPeriod() {
		return true;
	};

	function $export_4(this$static) {
		if (!exported_4) {
			exported_4 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_TimeService_2_classLit, this$static);
			$export0_4(this$static);
		}
	}

	function $export0_4(this$static) {
		var pkg = declarePackage('hippo.adapter.TimeService');
		var __0, __ = this$static;
		$wnd.hippo.adapter.TimeService = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TimeService_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.TimeService.prototype = new Object;
		__0.currentTimeMillis = $entry(function() {
			return this.g.currentTimeMillis_0();
		});
		__0.isOpeningPeriod = $entry(function() {
			return this.g.isOpeningPeriod_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.TimeService[p] === undefined && ($wnd.hippo.adapter.TimeService[p] = pkg[p]);
	}

	function TimeService_ExporterImpl_0() {
		$export_4(this);
	}

	defineSeed(14, 1, {}, TimeService_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_4() {
		return $wnd.hippo.adapter.TimeService;
	};
	_.isAssignable = function isAssignable_4(o) {
		return o != null && instanceOf(o, Q$TimeService);
	};
	var exported_4 = false;

	function Timer_0() {}

	defineSeed(15, 1, makeCastMap([Q$Timer, Q$Exportable]), Timer_0);
	_.startTimer_0 = function startTimer(interval, runnable) {
		return valueOf_0(-1);
	};
	_.stopTimer_0 = function stopTimer(object) {};

	function $export_5(this$static) {
		if (!exported_5) {
			exported_5 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_adapter_Timer_2_classLit, this$static);
			$export0_5(this$static);
		}
	}

	function $export0_5(this$static) {
		var pkg = declarePackage('hippo.adapter.Timer');
		var __0, __ = this$static;
		$wnd.hippo.adapter.Timer = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Timer_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.adapter.Timer.prototype = new Object;
		__0.startTimer = $entry(function(a0, a1) {
			return this.g.startTimer_0(a0, a1);
		});
		__0.stopTimer = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_adapter_Timer_2_classLit, 0, arguments, false, false)[0];
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_adapter_Timer_2_classLit, {
			0: {
				1: [
					[function() {
						return this.stopTimer_0.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.adapter.Timer[p] === undefined && ($wnd.hippo.adapter.Timer[p] = pkg[p]);
	}

	function Timer_ExporterImpl_0() {
		$export_5(this);
	}

	defineSeed(16, 1, {}, Timer_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_5() {
		return $wnd.hippo.adapter.Timer;
	};
	_.isAssignable = function isAssignable_5(o) {
		return o != null && instanceOf(o, Q$Timer);
	};
	var exported_5 = false;

	function Manager_0() {}

	defineSeed(18, 1, makeCastMap([Q$Manager, Q$Exportable]), Manager_0);
	_.beginWatchObject_0 = function beginWatchObject(object, eventobject) {};
	_.endWatchObject_0 = function endWatchObject(object, eventobject) {};
	_.init_0 = function init() {};
	_.onDomainData_0 = function onDomainData(data_0, source) {};
	_.onDomainError_0 = function onDomainError(err, source) {};

	function $beginWatchObject(this$static, object, eventObject) {
		var event_0, eventObjects, managedObject;
		log_1('BaseManager beginWatchObject ' + object.___clazz$.typeName + '@' + toPowerOfTwoString(getHashCode(object)));
		managedObject = $getOrCreateManagedObject(this$static, object);
		eventObjects = (!managedObject.mEventObjects && (managedObject.mEventObjects = new HashSet_0), managedObject.mEventObjects);
		if (!$containsKey(eventObjects.map_0, eventObject)) {
			$add_0(eventObjects, eventObject);
			if (managedObject.mRefreshed) {
				event_0 = new Event_1;
				event_0.mObject = object;
				eventObject.mhandler.onEvent_0(event_0);
			}
		}
		log_1('BaseMangaer beginWatchObject,managedObject ' + Lcom_gf_hippo_domain_client_common_ManagedObject_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(managedObject)));
	}

	function $endWatchObject(this$static, object, eventobject) {
		var eventObjects, managedObject;
		log_1('BaseMangaer endWatchObject,mObjectMap size is ' + this$static.mObjectMap.size_0);
		managedObject = $getManagedObject(this$static, object);
		if (managedObject) {
			eventObjects = (!managedObject.mEventObjects && (managedObject.mEventObjects = new HashSet_0), managedObject.mEventObjects);
			$remove(eventObjects.map_0, eventobject) != null;
			eventObjects.map_0.size_0 == 0 && $remove_3(this$static.mObjectMap, object);
		}
		log_1('BaseMangaer endWatchObject,mObjectMap size is ' + this$static.mObjectMap.size_0);
	}

	function $getManagedObject(this$static, object) {
		var managedObject; !! mLogger && mLogger.debug_0('BaseManager get managedObject');
		log_1('mObjectMap.get(object),object hashCode' + getHashCode(object));
		managedObject = $get_3(this$static.mObjectMap, object);
		return managedObject;
	}

	function $getOrCreateManagedObject(this$static, object) {
		var managedObject;
		managedObject = $get_3(this$static.mObjectMap, object);
		if (!managedObject) { !! mLogger && mLogger.debug_0('BaseManager create managedObject');
			managedObject = new ManagedObject_0;
			$put_2(this$static.mObjectMap, object, managedObject);
		}
		return managedObject;
	}

	function $invalidate(this$static, object, source) {
		var event_0, eventobject, eventobjects, iterator, managedObject; !! mLogger && mLogger.debug_0('BaseManager invalidate');
		managedObject = $get_3(this$static.mObjectMap, object);
		if (managedObject) { !! mLogger && mLogger.debug_0('BaseManager invalidate managedObject != null');
			eventobjects = (!managedObject.mEventObjects && (managedObject.mEventObjects = new HashSet_0), managedObject.mEventObjects);
			iterator = $iterator($keySet(eventobjects.map_0));
			event_0 = new Event_1;
			event_0.mObject = object;
			event_0.mType = source;
			while (iterator.val$outerIter.hasNext()) {
				eventobject = $next_0(iterator); !! eventobject && eventobject.mhandler.onEvent_0(event_0);
			}
			managedObject.mRefreshed = true;
		}
	}

	function $isObjectReferenced(this$static, object) {
		var managedObject;
		managedObject = $getManagedObject(this$static, object);
		if (managedObject) {
			return (!managedObject.mEventObjects && (managedObject.mEventObjects = new HashSet_0), managedObject.mEventObjects).map_0.size_0 != 0;
		}
		return false;
	}

	function BaseManager_0() {
		this.mObjectMap = new TreeMap_1(new HashComparator_0);
	}

	defineSeed(17, 18, makeCastMap([Q$BaseManager, Q$Manager, Q$Exportable]), BaseManager_0);
	_.beginWatchObject_0 = function beginWatchObject_0(object, eventObject) {
		$beginWatchObject(this, object, eventObject);
	};
	_.endWatchObject_0 = function endWatchObject_0(object, eventobject) {
		$endWatchObject(this, object, eventobject);
	};
	_.getRepository_0 = function getRepository() {
		return this.mRepository;
	};
	_.init_0 = function init_0() {};
	_.invalidate_0 = function invalidate(object) {
		$invalidate(this, object, 'unknow');
	};
	_.invalidate_1 = function invalidate_0(object, source) {
		$invalidate(this, object, source);
	};
	_.setRepository_0 = function setRepository(repository) {
		this.mRepository = repository;
		this.mRepository.setHandler_1(new BaseManager$1_0(this));
	};

	function DomainHandler_0() {}

	defineSeed(20, 1, makeCastMap([Q$DomainHandler, Q$Exportable]), DomainHandler_0);
	_.onError_0 = function onError(err, source) {};
	_.onSuccess_0 = function onSuccess(object, source) {};

	function BaseManager$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(19, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), BaseManager$1_0);
	_.onError_0 = function onError_0(err, source) {};
	_.onSuccess_0 = function onSuccess_0(object, source) {
		this.this$0.onDomainData_0(object, source);
	};

	function $export_6(this$static) {
		if (!exported_6) {
			exported_6 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_BaseManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			$export0_6(this$static);
		}
	}

	function $export0_6(this$static) {
		var pkg = declarePackage('hippo.common.BaseManager');
		var __0, __ = this$static;
		$wnd.hippo.common.BaseManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BaseManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.BaseManager.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_common_BaseManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_common_BaseManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.BaseManager[p] === undefined && ($wnd.hippo.common.BaseManager[p] = pkg[p]);
	}

	function BaseManager_ExporterImpl_0() {
		$export_6(this);
	}

	defineSeed(21, 1, {}, BaseManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_6() {
		return $wnd.hippo.common.BaseManager;
	};
	_.isAssignable = function isAssignable_6(o) {
		return o != null && instanceOf(o, Q$BaseManager);
	};
	var exported_6 = false;

	function $buildFromBytes(this$static, bytes) {
		return this$static.buildFromBytes_0(bytes, 0, bytes.length);
	}

	function BlobStringBuilder_0() {}

	function setInstance(builder) {
		instance_0 = builder;
	}

	defineSeed(22, 1, makeCastMap([Q$BlobStringBuilder, Q$Exportable]), BlobStringBuilder_0);
	_.buildFromBytes_0 = function buildFromBytes(bytes, offset, length_0) {
		return utf8ToString(bytes, offset, length_0);
	};
	var instance_0 = null;

	function $export_7(this$static) {
		if (!exported_7) {
			exported_7 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_BlobStringBuilder_2_classLit, this$static);
			$export0_7(this$static);
		}
	}

	function $export0_7(this$static) {
		var pkg = declarePackage('hippo.common.BlobStringBuilder');
		var __0, __ = this$static;
		$wnd.hippo.common.BlobStringBuilder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.BlobStringBuilder.prototype = new Object;
		__0.buildFromBytes = $entry(function(a0, a1, a2) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_common_BlobStringBuilder_2_classLit, 0, arguments, false, false)[0];
		});
		$wnd.hippo.common.BlobStringBuilder.getInstance = $entry(function() {
			return wrap_0((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0));
		});
		$wnd.hippo.common.BlobStringBuilder.setInstance = $entry(function(a0) {
			setInstance(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_common_BlobStringBuilder_2_classLit, {
			0: {
				1: [
					[__static_wrapper_buildFromBytes, null, unshift, 'array']
				],
				3: [
					[__static_wrapper_buildFromBytes_0, null, unshift, 'array', 'number', 'number']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.BlobStringBuilder[p] === undefined && ($wnd.hippo.common.BlobStringBuilder[p] = pkg[p]);
	}

	function BlobStringBuilder_ExporterImpl_0() {
		$export_7(this);
	}

	function __static_wrapper_buildFromBytes(instance, a0) {
		return $buildFromBytes(instance, ($clinit_ExporterUtil(), $toArrByte(a0)));
	}

	function __static_wrapper_buildFromBytes_0(instance, a0, a1, a2) {
		return instance.buildFromBytes_0(($clinit_ExporterUtil(), $toArrByte(a0)), a1, a2);
	}

	defineSeed(23, 1, {}, BlobStringBuilder_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_7() {
		return $wnd.hippo.common.BlobStringBuilder;
	};
	_.isAssignable = function isAssignable_7(o) {
		return o != null && instanceOf(o, Q$BlobStringBuilder);
	};
	var exported_7 = false;

	function DomainHandlerProxy_0(aware) {
		this.mHandlerAware = aware;
	}

	defineSeed(24, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), DomainHandlerProxy_0);
	_.onError_0 = function onError_1(err, source) {
		this.mHandlerAware.mHandler.onError_0(err, source);
	};
	_.onSuccess_0 = function onSuccess_1(object, source) {
		this.mHandlerAware.mHandler.onSuccess_0(object, source);
	};

	function $export_8(this$static) {
		if (!exported_8) {
			exported_8 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_DomainHandler_2_classLit, this$static);
			$export0_8(this$static);
		}
	}

	function $export0_8(this$static) {
		var pkg = declarePackage('hippo.common.DomainHandler');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainHandler = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainHandler_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainHandler.prototype = new Object;
		__0.onError = $entry(function(a0, a1) {
			this.g.onError_0(a0 == null ? null : a0.g, a1);
		});
		__0.onSuccess = $entry(function(a0, a1) {
			this.g.onSuccess_0(a0 == null ? null : a0.g, a1);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainHandler[p] === undefined && ($wnd.hippo.common.DomainHandler[p] = pkg[p]);
	}

	function DomainHandler_ExporterImpl_0() {
		$export_8(this);
	}

	defineSeed(25, 1, {}, DomainHandler_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_8() {
		return $wnd.hippo.common.DomainHandler;
	};
	_.isAssignable = function isAssignable_8(o) {
		return o != null && instanceOf(o, Q$DomainHandler);
	};
	var exported_8 = false;

	function DomainModel_0() {}

	function error(str) { !! mLogger && mLogger.error_0(str);
	}

	function log_1(str) { !! mLogger && mLogger.debug_0(str);
	}

	function trigger(event_0) { !! mHandler && mHandler.onEvent_0(event_0);
	}

	defineSeed(26, 1, makeCastMap([Q$DomainModel, Q$Exportable]), DomainModel_0);
	_.setHandler_0 = function setHandler(handler) {
		mHandler = handler;
	};
	_.setIDGenerator_0 = function setIDGenerator(idgen) {
		mIDGen = idgen;
	};
	_.setLogger_0 = function setLogger(logger) {
		mLogger = logger;
	};
	var mHandler, mIDGen, mLogger;

	function $export_9(this$static) {
		if (!exported_9) {
			exported_9 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_DomainModel_2_classLit, this$static);
			new EventHandler_ExporterImpl_0;
			new IDGenerator_ExporterImpl_0;
			new Logger_ExporterImpl_0;
			new Event_ExporterImpl_0;
			$export0_9(this$static);
		}
	}

	function $export0_9(this$static) {
		var pkg = declarePackage('hippo.common.DomainModel');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainModel = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainModel_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainModel.prototype = new Object;
		$wnd.hippo.common.DomainModel.debug = $entry(function(a0) { !! mLogger && mLogger.debug_0(a0);
		});
		$wnd.hippo.common.DomainModel.error = $entry(function(a0) {
			error(a0);
		});
		$wnd.hippo.common.DomainModel.fatal = $entry(function(a0) { !! mLogger && mLogger.fatal_0(a0);
		});
		$wnd.hippo.common.DomainModel.generatorID = $entry(function() {
			return mIDGen.generatorID_0();
		});
		$wnd.hippo.common.DomainModel.info = $entry(function(a0) { !! mLogger && mLogger.info_0(a0);
		});
		$wnd.hippo.common.DomainModel.log = $entry(function(a0) {
			log_1(a0);
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.EventHandler ? a0.g : makeClosure(a0));
		});
		__0.setIDGenerator = $entry(function(a0) {
			this.g.setIDGenerator_0(a0 == null ? null : a0.g);
		});
		__0.setLogger = $entry(function(a0) {
			this.g.setLogger_0(a0 == null ? null : a0.g);
		});
		$wnd.hippo.common.DomainModel.trigger = $entry(function(a0) {
			trigger(a0 == null ? null : a0.g);
		});
		$wnd.hippo.common.DomainModel.warn = $entry(function(a0) { !! mLogger && mLogger.warn_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainModel[p] === undefined && ($wnd.hippo.common.DomainModel[p] = pkg[p]);
	}

	function DomainModel_ExporterImpl_0() {
		$export_9(this);
	}

	defineSeed(27, 1, {}, DomainModel_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_9() {
		return $wnd.hippo.common.DomainModel;
	};
	_.isAssignable = function isAssignable_9(o) {
		return o != null && instanceOf(o, Q$DomainModel);
	};
	var exported_9 = false;

	function DomainObject_0() {}

	defineSeed(28, 1, makeCastMap([Q$DomainObject, Q$Exportable]), DomainObject_0);
	_.getId_0 = function getId() {
		return null;
	};
	_.getType_0 = function getType() {
		return 'object';
	};

	function $getObject(this$static, id_0) {
		return $get_3(this$static.mObjectMap, id_0);
	}

	function $putObject(this$static, object) {
		$put_2(this$static.mObjectMap, object.getId_0(), object);
	}

	function $removeObjectById(this$static, id_0) {
		return $remove_3(this$static.mObjectMap, id_0);
	}

	function DomainObjectContainer_0() {
		this.mObjectMap = new TreeMap_0;
	}

	defineSeed(29, 1, makeCastMap([Q$DomainObjectContainer, Q$Exportable]), DomainObjectContainer_0);
	_.getObject_0 = function getObject(id_0) {
		return $getObject(this, id_0);
	};
	_.putObject_0 = function putObject(object) {
		$putObject(this, object);
	};
	_.removeObject_0 = function removeObject(object) {
		return $removeObjectById(this, object.getId_0());
	};
	_.removeObjectById_0 = function removeObjectById(id_0) {
		return $removeObjectById(this, id_0);
	};

	function $export_10(this$static) {
		if (!exported_10) {
			exported_10 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_DomainObjectContainer_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			$export0_10(this$static);
		}
	}

	function $export0_10(this$static) {
		var pkg = declarePackage('hippo.common.DomainObjectContainer');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainObjectContainer = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainObjectContainer_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainObjectContainer.prototype = new Object;
		__0.getObject = $entry(function(a0) {
			return wrap_0(this.g.getObject_0(a0));
		});
		__0.putObject = $entry(function(a0) {
			this.g.putObject_0(a0 == null ? null : a0.g);
		});
		__0.removeObject = $entry(function(a0) {
			return wrap_0(this.g.removeObject_0(a0 == null ? null : a0.g));
		});
		__0.removeObjectById = $entry(function(a0) {
			return wrap_0(this.g.removeObjectById_0(a0));
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainObjectContainer[p] === undefined && ($wnd.hippo.common.DomainObjectContainer[p] = pkg[p]);
	}

	function DomainObjectContainer_ExporterImpl_0() {
		$export_10(this);
	}

	defineSeed(30, 1, {}, DomainObjectContainer_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_10() {
		return $wnd.hippo.common.DomainObjectContainer;
	};
	_.isAssignable = function isAssignable_10(o) {
		return o != null && instanceOf(o, Q$DomainObjectContainer);
	};
	var exported_10 = false;

	function $export_11(this$static) {
		if (!exported_11) {
			exported_11 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, this$static);
			$export0_11(this$static);
		}
	}

	function $export0_11(this$static) {
		var pkg = declarePackage('hippo.common.DomainObject');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainObject = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainObject_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainObject.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainObject[p] === undefined && ($wnd.hippo.common.DomainObject[p] = pkg[p]);
	}

	function DomainObject_ExporterImpl_0() {
		$export_11(this);
	}

	defineSeed(31, 1, {}, DomainObject_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_11() {
		return $wnd.hippo.common.DomainObject;
	};
	_.isAssignable = function isAssignable_11(o) {
		return o != null && instanceOf(o, Q$DomainObject);
	};
	var exported_11 = false;

	function Event_1() {}

	defineSeed(33, 1, makeCastMap([Q$Event, Q$Exportable]), Event_1);
	_.getObject_1 = function getObject_0() {
		return this.mObject;
	};
	_.getType_0 = function getType_0() {
		return this.mType;
	};
	_.setObject_0 = function setObject(object) {
		this.mObject = object;
	};
	_.setType_0 = function setType(type_0) {
		this.mType = type_0;
	};

	function ErrorEvent_1() {}

	defineSeed(32, 33, makeCastMap([Q$ErrorEvent, Q$Event, Q$Exportable]), ErrorEvent_1);
	_.getErrorMsg_0 = function getErrorMsg() {
		return this.ErrorMsg;
	};
	_.setErrorMsg_0 = function setErrorMsg(errorMsg) {
		this.ErrorMsg = errorMsg;
	};

	function $export_12(this$static) {
		if (!exported_12) {
			exported_12 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_ErrorEvent_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			$export0_12(this$static);
		}
	}

	function $export0_12(this$static) {
		var pkg = declarePackage('hippo.common.ErrorEvent');
		var __0, __ = this$static;
		$wnd.hippo.common.ErrorEvent = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new ErrorEvent_1);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.ErrorEvent.prototype = new Object;
		__0.getErrorMsg = $entry(function() {
			return this.g.getErrorMsg_0();
		});
		__0.getObject = $entry(function() {
			return wrap_0(this.g.getObject_1());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setErrorMsg = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_common_ErrorEvent_2_classLit, 0, arguments, false, false)[0];
		});
		__0.setObject = $entry(function(a0) {
			this.g.setObject_0(a0 == null ? null : a0.g);
		});
		__0.setType = $entry(function(a0) {
			this.g.setType_0(a0);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_common_ErrorEvent_2_classLit, {
			0: {
				1: [
					[function() {
						return this.setErrorMsg_0.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.ErrorEvent[p] === undefined && ($wnd.hippo.common.ErrorEvent[p] = pkg[p]);
	}

	function ErrorEvent_ExporterImpl_0() {
		$export_12(this);
	}

	defineSeed(34, 1, {}, ErrorEvent_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_12() {
		return $wnd.hippo.common.ErrorEvent;
	};
	_.isAssignable = function isAssignable_12(o) {
		return o != null && instanceOf(o, Q$ErrorEvent);
	};
	var exported_12 = false;

	function $export_13(this$static) {
		if (!exported_13) {
			exported_13 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_EventHandler_2_classLit, this$static);
			new Event_ExporterImpl_0;
			$export0_13(this$static);
		}
	}

	function $export0_13(this$static) {
		var pkg = declarePackage('hippo.common.EventHandler');
		var __0, __ = this$static;
		$wnd.hippo.common.EventHandler = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.EventHandler.prototype = new Object;
		__0.onEvent = $entry(function(a0) {
			this.g.onEvent_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.EventHandler[p] === undefined && ($wnd.hippo.common.EventHandler[p] = pkg[p]);
	}

	function $invoke_onEvent(closure, a0) {
		closure.apply(null, [wrap_0(a0)]);
	}

	function EventHandler_ExporterImpl_0() {
		$export_13(this);
	}

	function EventHandler_ExporterImpl_1(jso) {
		$export_13(this);
		this.jso = jso;
	}

	function makeClosure(closure) {
		return new EventHandler_ExporterImpl_1(closure);
	}

	defineSeed(35, 1, makeCastMap([Q$EventHandler, Q$EventHandler_ExporterImpl, Q$Exportable]), EventHandler_ExporterImpl_0, EventHandler_ExporterImpl_1);
	_.equals$ = function equals_0(obj) {
		return obj != null && instanceOf(obj, Q$EventHandler_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_13() {
		return $wnd.hippo.common.EventHandler;
	};
	_.isAssignable = function isAssignable_13(o) {
		return o != null && instanceOf(o, Q$EventHandler);
	};
	_.onEvent_0 = function onEvent(a0) {
		$invoke_onEvent(this.jso, a0);
	};
	var exported_13 = false;

	function $compareTo(this$static, o) {
		return getHashCode(this$static) - getHashCode(o);
	}

	function EventObject_0() {}

	defineSeed(36, 28, makeCastMap([Q$DomainObject, Q$EventObject, Q$Comparable, Q$Exportable]), EventObject_0);
	_.compareTo_0 = function compareTo(o) {
		return $compareTo(this, o);
	};
	_.compareTo$ = function compareTo_0(o) {
		return $compareTo(this, o);
	};
	_.getEventHandler_0 = function getEventHandler() {
		return this.mhandler;
	};
	_.setEventHandler_0 = function setEventHandler(handler) {
		this.mhandler = handler;
	};

	function $export_14(this$static) {
		if (!exported_14) {
			exported_14 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_EventObject_2_classLit, this$static);
			new EventHandler_ExporterImpl_0;
			$export0_14(this$static);
		}
	}

	function $export0_14(this$static) {
		var pkg = declarePackage('hippo.common.EventObject');
		var __0, __ = this$static;
		$wnd.hippo.common.EventObject = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new EventObject_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.EventObject.prototype = new Object;
		__0.compareTo = $entry(function(a0) {
			return this.g.compareTo_0(a0 == null ? null : a0.g);
		});
		__0.getEventHandler = $entry(function() {
			return wrap_0(this.g.getEventHandler_0());
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setEventHandler = $entry(function(a0) {
			this.g.setEventHandler_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.EventHandler ? a0.g : makeClosure(a0));
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.EventObject[p] === undefined && ($wnd.hippo.common.EventObject[p] = pkg[p]);
	}

	function EventObject_ExporterImpl_0() {
		$export_14(this);
	}

	defineSeed(37, 1, {}, EventObject_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_14() {
		return $wnd.hippo.common.EventObject;
	};
	_.isAssignable = function isAssignable_14(o) {
		return o != null && instanceOf(o, Q$EventObject);
	};
	var exported_14 = false;

	function $export_15(this$static) {
		if (!exported_15) {
			exported_15 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_Event_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			$export0_15(this$static);
		}
	}

	function $export0_15(this$static) {
		var pkg = declarePackage('hippo.common.Event');
		var __0, __ = this$static;
		$wnd.hippo.common.Event = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Event_1);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.Event.prototype = new Object;
		$wnd.hippo.common.Event.EVENT_UNKNOW = 'unknow';
		$wnd.hippo.common.Event.EVENT_STORAGE = 'storage';
		$wnd.hippo.common.Event.EVENT_NETWORK = 'network';
		$wnd.hippo.common.Event.EVENT_PUSH = 'push';
		__0.getObject = $entry(function() {
			return wrap_0(this.g.getObject_1());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setObject = $entry(function(a0) {
			this.g.setObject_0(a0 == null ? null : a0.g);
		});
		__0.setType = $entry(function(a0) {
			this.g.setType_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.Event[p] === undefined && ($wnd.hippo.common.Event[p] = pkg[p]);
	}

	function Event_ExporterImpl_0() {
		$export_15(this);
	}

	defineSeed(38, 1, {}, Event_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_15() {
		return $wnd.hippo.common.Event;
	};
	_.isAssignable = function isAssignable_15(o) {
		return o != null && instanceOf(o, Q$Event);
	};
	var exported_15 = false;

	function HashComparator_0() {}

	defineSeed(39, 1, {}, HashComparator_0);
	_.compare_0 = function compare_0(arg0, arg1) {
		return getHashCode(arg0) - getHashCode(arg1);
	};

	function IDGenerator_0() {}

	defineSeed(40, 1, makeCastMap([Q$IDGenerator, Q$Exportable]), IDGenerator_0);
	_.generatorID_0 = function generatorID() {
		return 0;
	};

	function $export_16(this$static) {
		if (!exported_16) {
			exported_16 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_IDGenerator_2_classLit, this$static);
			$export0_16(this$static);
		}
	}

	function $export0_16(this$static) {
		var pkg = declarePackage('hippo.common.IDGenerator');
		var __0, __ = this$static;
		$wnd.hippo.common.IDGenerator = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new IDGenerator_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.IDGenerator.prototype = new Object;
		__0.generatorID = $entry(function() {
			return this.g.generatorID_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.IDGenerator[p] === undefined && ($wnd.hippo.common.IDGenerator[p] = pkg[p]);
	}

	function IDGenerator_ExporterImpl_0() {
		$export_16(this);
	}

	defineSeed(41, 1, {}, IDGenerator_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_16() {
		return $wnd.hippo.common.IDGenerator;
	};
	_.isAssignable = function isAssignable_16(o) {
		return o != null && instanceOf(o, Q$IDGenerator);
	};
	var exported_16 = false;

	function Logger_0() {}

	defineSeed(42, 1, makeCastMap([Q$Logger, Q$Exportable]), Logger_0);
	_.debug_0 = function debug(str) {};
	_.error_0 = function error_0(str) {};
	_.fatal_0 = function fatal(str) {};
	_.info_0 = function info_0(str) {};
	_.warn_0 = function warn(str) {};

	function $export_17(this$static) {
		if (!exported_17) {
			exported_17 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_Logger_2_classLit, this$static);
			$export0_17(this$static);
		}
	}

	function $export0_17(this$static) {
		var pkg = declarePackage('hippo.common.Logger');
		var __0, __ = this$static;
		$wnd.hippo.common.Logger = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Logger_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.Logger.prototype = new Object;
		__0.debug = $entry(function(a0) {
			this.g.debug_0(a0);
		});
		__0.error = $entry(function(a0) {
			this.g.error_0(a0);
		});
		__0.fatal = $entry(function(a0) {
			this.g.fatal_0(a0);
		});
		__0.info = $entry(function(a0) {
			this.g.info_0(a0);
		});
		__0.warn = $entry(function(a0) {
			this.g.warn_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.Logger[p] === undefined && ($wnd.hippo.common.Logger[p] = pkg[p]);
	}

	function Logger_ExporterImpl_0() {
		$export_17(this);
	}

	defineSeed(43, 1, {}, Logger_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_17() {
		return $wnd.hippo.common.Logger;
	};
	_.isAssignable = function isAssignable_17(o) {
		return o != null && instanceOf(o, Q$Logger);
	};
	var exported_17 = false;

	function ManagedObject_0() {}

	defineSeed(44, 1, {}, ManagedObject_0);
	_.mRefreshed = false;

	function $export_18(this$static) {
		if (!exported_18) {
			exported_18 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_Manager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			$export0_18(this$static);
		}
	}

	function $export0_18(this$static) {
		var pkg = declarePackage('hippo.common.Manager');
		var __0, __ = this$static;
		$wnd.hippo.common.Manager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Manager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.Manager.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.Manager[p] === undefined && ($wnd.hippo.common.Manager[p] = pkg[p]);
	}

	function Manager_ExporterImpl_0() {
		$export_18(this);
	}

	defineSeed(45, 1, {}, Manager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_18() {
		return $wnd.hippo.common.Manager;
	};
	_.isAssignable = function isAssignable_18(o) {
		return o != null && instanceOf(o, Q$Manager);
	};
	var exported_18 = false;

	function Parser_0() {}

	defineSeed(46, 1, makeCastMap([Q$Parser, Q$Exportable]), Parser_0);
	_.serialize_0 = function serialize(domainObject) {
		return null;
	};
	_.unserialize_0 = function unserialize(data_0) {
		return null;
	};

	function $export_19(this$static) {
		if (!exported_19) {
			exported_19 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_Parser_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			$export0_19(this$static);
		}
	}

	function $export0_19(this$static) {
		var pkg = declarePackage('hippo.common.Parser');
		var __0, __ = this$static;
		$wnd.hippo.common.Parser = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Parser_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.Parser.prototype = new Object;
		__0.serialize = $entry(function(a0) {
			return this.g.serialize_0(a0 == null ? null : a0.g);
		});
		__0.unserialize = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_common_Parser_2_classLit, 0, arguments, false, false)[0];
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_common_Parser_2_classLit, {
			0: {
				1: [
					[function() {
						return this.unserialize_0.apply(this, arguments);
					},
					wrap_0, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.Parser[p] === undefined && ($wnd.hippo.common.Parser[p] = pkg[p]);
	}

	function Parser_ExporterImpl_0() {
		$export_19(this);
	}

	defineSeed(47, 1, {}, Parser_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_19() {
		return $wnd.hippo.common.Parser;
	};
	_.isAssignable = function isAssignable_19(o) {
		return o != null && instanceOf(o, Q$Parser);
	};
	var exported_19 = false;

	function Repository_0() {}

	defineSeed(48, 1, makeCastMap([Q$Repository, Q$Exportable]), Repository_0);
	_.beginWatchObject_1 = function beginWatchObject_1(object) {};
	_.endWatchObject_1 = function endWatchObject_1(object) {};
	_.getHandler_0 = function getHandler() {
		return null;
	};
	_.setHandler_1 = function setHandler_0(handler) {};

	function $export_20(this$static) {
		if (!exported_20) {
			exported_20 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_common_Repository_2_classLit, this$static);
			new DomainHandler_ExporterImpl_0;
			$export0_20(this$static);
		}
	}

	function $export0_20(this$static) {
		var pkg = declarePackage('hippo.common.Repository');
		var __0, __ = this$static;
		$wnd.hippo.common.Repository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Repository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.Repository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.Repository[p] === undefined && ($wnd.hippo.common.Repository[p] = pkg[p]);
	}

	function Repository_ExporterImpl_0() {
		$export_20(this);
	}

	defineSeed(49, 1, {}, Repository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_20() {
		return $wnd.hippo.common.Repository;
	};
	_.isAssignable = function isAssignable_20(o) {
		return o != null && instanceOf(o, Q$Repository);
	};
	var exported_20 = false;

	function $onModuleLoad() {
		var e, event_0;
		try {
			$clinit_ExporterUtil();
			$export_150();
			event_0 = new Event_1;
			event_0.mType = 'loaded'; !! mHandler && mHandler.onEvent_0(event_0);
			$wnd.onDomainModelInit && $wnd.onDomainModelInit();
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				alert_0('Exception ' + $toString(e));
			} else throw unwrap($e0);
		}
	}

	function DomainDateTimeFormatter_0() {}

	defineSeed(51, 1, makeCastMap([Q$DomainDateTimeFormatter, Q$Exportable]), DomainDateTimeFormatter_0);
	_.format_0 = function format(data_0) {
		return $format(this.dateTimeFormatter, data_0);
	};
	_.setDateTimeFormatter_0 = function setDateTimeFormatter(formatter) {
		this.dateTimeFormatter = formatter;
	};

	function $export_21(this$static) {
		if (!exported_21) {
			exported_21 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainDateTimeFormatter_2_classLit, this$static);
			new DomainJavascriptDateTimeFormatter_ExporterImpl_0;
			$export0_21(this$static);
		}
	}

	function $export0_21(this$static) {
		var pkg = declarePackage('hippo.common.DomainDateTimeFormatter');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainDateTimeFormatter = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainDateTimeFormatter_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainDateTimeFormatter.prototype = new Object;
		__0.format = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainDateTimeFormatter_2_classLit, 0, arguments, false, false)[0];
		});
		__0.setDateTimeFormatter = $entry(function(a0) {
			this.g.setDateTimeFormatter_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptDateTimeFormatter ? a0.g : new DomainJavascriptDateTimeFormatter_ExporterImpl_1(a0));
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_DomainDateTimeFormatter_2_classLit, {
			0: {
				1: [
					[function() {
						return this.format_0.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainDateTimeFormatter[p] === undefined && ($wnd.hippo.common.DomainDateTimeFormatter[p] = pkg[p]);
	}

	function DomainDateTimeFormatter_ExporterImpl_0() {
		$export_21(this);
	}

	defineSeed(52, 1, {}, DomainDateTimeFormatter_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_21() {
		return $wnd.hippo.common.DomainDateTimeFormatter;
	};
	_.isAssignable = function isAssignable_21(o) {
		return o != null && instanceOf(o, Q$DomainDateTimeFormatter);
	};
	var exported_21 = false;

	function DomainIDGenerator_0() {}

	defineSeed(53, 40, makeCastMap([Q$IDGenerator, Q$DomainIDGenerator, Q$Exportable]), DomainIDGenerator_0);
	_.generatorID_0 = function generatorID_0() {
		return $invoke_generatorID(this.idgenerator.jso);
	};
	_.setIDGenerator_1 = function setIDGenerator_0(idgen) {
		this.idgenerator = idgen;
	};

	function $export_22(this$static) {
		if (!exported_22) {
			exported_22 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainIDGenerator_2_classLit, this$static);
			new DomainJavascriptIDGenerator_ExporterImpl_0;
			$export0_22(this$static);
		}
	}

	function $export0_22(this$static) {
		var pkg = declarePackage('hippo.common.DomainIDGenerator');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainIDGenerator = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainIDGenerator_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainIDGenerator.prototype = new Object;
		__0.generatorID = $entry(function() {
			return this.g.generatorID_0();
		});
		__0.setIDGenerator = $entry(function(a0) {
			this.g.setIDGenerator_1(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptIDGenerator ? a0.g : new DomainJavascriptIDGenerator_ExporterImpl_1(a0));
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainIDGenerator[p] === undefined && ($wnd.hippo.common.DomainIDGenerator[p] = pkg[p]);
	}

	function DomainIDGenerator_ExporterImpl_0() {
		$export_22(this);
	}

	defineSeed(54, 1, {}, DomainIDGenerator_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_22() {
		return $wnd.hippo.common.DomainIDGenerator;
	};
	_.isAssignable = function isAssignable_22(o) {
		return o != null && instanceOf(o, Q$DomainIDGenerator);
	};
	var exported_22 = false;

	function $export_23(this$static) {
		if (!exported_23) {
			exported_23 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptDateTimeFormatter_2_classLit, this$static);
			$export0_23(this$static);
		}
	}

	function $export0_23(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptDateTimeFormatter');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptDateTimeFormatter = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptDateTimeFormatter.prototype = new Object;
		__0.format = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptDateTimeFormatter_2_classLit, 0, arguments, false, false)[0];
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptDateTimeFormatter[p] === undefined && ($wnd.hippo.common.DomainJavascriptDateTimeFormatter[p] = pkg[p]);
	}

	function $format(this$static, a0) {
		return $invoke_format(this$static.jso, a0);
	}

	function $invoke_format(closure, a0) {
		var r = closure.apply(null, [a0]);
		return r;
	}

	function DomainJavascriptDateTimeFormatter_ExporterImpl_0() {
		$export_23(this);
	}

	function DomainJavascriptDateTimeFormatter_ExporterImpl_1(jso) {
		$export_23(this);
		this.jso = jso;
	}

	defineSeed(55, 1, makeCastMap([Q$DomainJavascriptDateTimeFormatter, Q$DomainJavascriptDateTimeFormatter_ExporterImpl, Q$Exportable]), DomainJavascriptDateTimeFormatter_ExporterImpl_0, DomainJavascriptDateTimeFormatter_ExporterImpl_1);
	_.equals$ = function equals_1(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptDateTimeFormatter_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_23() {
		return $wnd.hippo.common.DomainJavascriptDateTimeFormatter;
	};
	_.isAssignable = function isAssignable_23(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptDateTimeFormatter);
	};
	var exported_23 = false;

	function $export_24(this$static) {
		if (!exported_24) {
			exported_24 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptIDGenerator_2_classLit, this$static);
			$export0_24(this$static);
		}
	}

	function $export0_24(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptIDGenerator');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptIDGenerator = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptIDGenerator.prototype = new Object;
		__0.generatorID = $entry(function() {
			return this.g.generatorID_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptIDGenerator[p] === undefined && ($wnd.hippo.common.DomainJavascriptIDGenerator[p] = pkg[p]);
	}

	function $invoke_generatorID(closure) {
		var r = closure.apply(null, []);
		return r && typeof r == 'number' ? r : 0;
	}

	function DomainJavascriptIDGenerator_ExporterImpl_0() {
		$export_24(this);
	}

	function DomainJavascriptIDGenerator_ExporterImpl_1(jso) {
		$export_24(this);
		this.jso = jso;
	}

	defineSeed(56, 1, makeCastMap([Q$DomainJavascriptIDGenerator, Q$DomainJavascriptIDGenerator_ExporterImpl, Q$Exportable]), DomainJavascriptIDGenerator_ExporterImpl_0, DomainJavascriptIDGenerator_ExporterImpl_1);
	_.equals$ = function equals_2(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptIDGenerator_ExporterImpl) && this.jso == obj.jso;
	};
	_.generatorID_0 = function generatorID_1() {
		return $invoke_generatorID(this.jso);
	};
	_.getJsConstructor = function getJsConstructor_24() {
		return $wnd.hippo.common.DomainJavascriptIDGenerator;
	};
	_.isAssignable = function isAssignable_24(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptIDGenerator);
	};
	var exported_24 = false;

	function $debug(this$static, a0) {
		$invoke_debug(this$static.jso, a0);
	}

	function $error(this$static, a0) {
		$invoke_error(this$static.jso, a0);
	}

	function $export_25(this$static) {
		if (!exported_25) {
			exported_25 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptLogger_2_classLit, this$static);
			$export0_25(this$static);
		}
	}

	function $export0_25(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptLogger');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptLogger = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptLogger.prototype = new Object;
		__0.debug = $entry(function(a0) {
			this.g.debug_0(a0);
		});
		__0.error = $entry(function(a0) {
			this.g.error_0(a0);
		});
		__0.fatal = $entry(function(a0) {
			this.g.fatal_0(a0);
		});
		__0.info = $entry(function(a0) {
			this.g.info_0(a0);
		});
		__0.warn = $entry(function(a0) {
			this.g.warn_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptLogger[p] === undefined && ($wnd.hippo.common.DomainJavascriptLogger[p] = pkg[p]);
	}

	function $fatal(this$static, a0) {
		$invoke_fatal(this$static.jso, a0);
	}

	function $info(this$static, a0) {
		$invoke_info(this$static.jso, a0);
	}

	function $invoke_debug(closure, a0) {
		closure.apply(null, [a0]);
	}

	function $invoke_error(closure, a0) {
		closure.apply(null, [a0]);
	}

	function $invoke_fatal(closure, a0) {
		closure.apply(null, [a0]);
	}

	function $invoke_info(closure, a0) {
		closure.apply(null, [a0]);
	}

	function $invoke_warn(closure, a0) {
		closure.apply(null, [a0]);
	}

	function $warn(this$static, a0) {
		$invoke_warn(this$static.jso, a0);
	}

	function DomainJavascriptLogger_ExporterImpl_0() {
		$export_25(this);
	}

	function DomainJavascriptLogger_ExporterImpl_1(jso) {
		$export_25(this);
		this.jso = jso;
	}

	function makeClosure_0(closure) {
		return new DomainJavascriptLogger_ExporterImpl_1(closure);
	}

	defineSeed(57, 1, makeCastMap([Q$DomainJavascriptLogger, Q$DomainJavascriptLogger_ExporterImpl, Q$Exportable]), DomainJavascriptLogger_ExporterImpl_0, DomainJavascriptLogger_ExporterImpl_1);
	_.debug_0 = function debug_0(a0) {
		$debug(this, a0);
	};
	_.equals$ = function equals_3(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptLogger_ExporterImpl) && this.jso == obj.jso;
	};
	_.error_0 = function error_1(a0) {
		$error(this, a0);
	};
	_.fatal_0 = function fatal_0(a0) {
		$fatal(this, a0);
	};
	_.getJsConstructor = function getJsConstructor_25() {
		return $wnd.hippo.common.DomainJavascriptLogger;
	};
	_.info_0 = function info_1(a0) {
		$info(this, a0);
	};
	_.isAssignable = function isAssignable_25(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptLogger);
	};
	_.warn_0 = function warn_0(a0) {
		$warn(this, a0);
	};
	var exported_25 = false;

	function $export_26(this$static) {
		if (!exported_26) {
			exported_26 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptNetwork_2_classLit, this$static);
			$export0_26(this$static);
		}
	}

	function $export0_26(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptNetwork');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptNetwork = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptNetwork.prototype = new Object;
		__0.send = $entry(function(a0, a1) {
			__static_wrapper_send_0(this.g, a0, a1);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptNetwork[p] === undefined && ($wnd.hippo.common.DomainJavascriptNetwork[p] = pkg[p]);
	}

	function $invoke_send(closure, a0, a1) {
		closure.apply(null, [a0, wrap_1(a1)]);
	}

	function $send(this$static, a0, a1) {
		$invoke_send(this$static.jso, a0, a1);
	}

	function DomainJavascriptNetwork_ExporterImpl_0() {
		$export_26(this);
	}

	function DomainJavascriptNetwork_ExporterImpl_1(jso) {
		$export_26(this);
		this.jso = jso;
	}

	function __static_wrapper_send_0(instance, a0, a1) {
		$send(instance, a0, ($clinit_ExporterUtil(), $toArrByte(a1)));
	}

	defineSeed(58, 1, makeCastMap([Q$DomainJavascriptNetwork, Q$DomainJavascriptNetwork_ExporterImpl, Q$Exportable]), DomainJavascriptNetwork_ExporterImpl_0, DomainJavascriptNetwork_ExporterImpl_1);
	_.equals$ = function equals_4(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptNetwork_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_26() {
		return $wnd.hippo.common.DomainJavascriptNetwork;
	};
	_.isAssignable = function isAssignable_26(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptNetwork);
	};
	var exported_26 = false;

	function $export_27(this$static) {
		if (!exported_27) {
			exported_27 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptParser_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			$export0_27(this$static);
		}
	}

	function $export0_27(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptParser');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptParser = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptParser.prototype = new Object;
		__0.serialize = $entry(function(a0) {
			return this.g.serialize_0(a0 == null ? null : a0.g);
		});
		__0.unserialize = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptParser_2_classLit, 0, arguments, false, false)[0];
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptParser[p] === undefined && ($wnd.hippo.common.DomainJavascriptParser[p] = pkg[p]);
	}

	function $invoke_serialize(closure, a0) {
		var r = closure.apply(null, [wrap_0(a0)]);
		return r;
	}

	function $invoke_unserialize(closure, a0) {
		var r = closure.apply(null, [a0]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $serialize(this$static, a0) {
		return $invoke_serialize(this$static.jso, a0);
	}

	function $unserialize(this$static, a0) {
		return $invoke_unserialize(this$static.jso, a0);
	}

	function DomainJavascriptParser_ExporterImpl_0() {
		$export_27(this);
	}

	function DomainJavascriptParser_ExporterImpl_1(jso) {
		$export_27(this);
		this.jso = jso;
	}

	function makeClosure_1(closure) {
		return new DomainJavascriptParser_ExporterImpl_1(closure);
	}

	defineSeed(59, 1, makeCastMap([Q$DomainJavascriptParser, Q$DomainJavascriptParser_ExporterImpl, Q$Exportable]), DomainJavascriptParser_ExporterImpl_0, DomainJavascriptParser_ExporterImpl_1);
	_.equals$ = function equals_5(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptParser_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_27() {
		return $wnd.hippo.common.DomainJavascriptParser;
	};
	_.isAssignable = function isAssignable_27(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptParser);
	};
	_.serialize_0 = function serialize_0(a0) {
		return $serialize(this, a0);
	};
	var exported_27 = false;

	function $beginWatchObject_0(this$static, a0) {
		$invoke_beginWatchObject(this$static.jso, a0);
	}

	function $endWatchObject_0(this$static, a0) {
		$invoke_endWatchObject(this$static.jso, a0);
	}

	function $export_28(this$static) {
		if (!exported_28) {
			exported_28 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			$export0_28(this$static);
		}
	}

	function $export0_28(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptRepository');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptRepository[p] === undefined && ($wnd.hippo.common.DomainJavascriptRepository[p] = pkg[p]);
	}

	function $invoke_beginWatchObject(closure, a0) {
		closure.apply(null, [wrap_0(a0)]);
	}

	function $invoke_endWatchObject(closure, a0) {
		closure.apply(null, [wrap_0(a0)]);
	}

	function $invoke_setHandler(closure, a0) {
		closure.apply(null, [wrap_0(a0)]);
	}

	function $setHandler(this$static, a0) {
		$invoke_setHandler(this$static.jso, a0);
	}

	function DomainJavascriptRepository_ExporterImpl_0() {
		$export_28(this);
	}

	function DomainJavascriptRepository_ExporterImpl_1(jso) {
		$export_28(this);
		this.jso = jso;
	}

	function makeClosure_2(closure) {
		return new DomainJavascriptRepository_ExporterImpl_1(closure);
	}

	defineSeed(60, 1, makeCastMap([Q$DomainJavascriptRepository, Q$DomainJavascriptRepository_ExporterImpl, Q$Exportable]), DomainJavascriptRepository_ExporterImpl_0, DomainJavascriptRepository_ExporterImpl_1);
	_.beginWatchObject_1 = function beginWatchObject_2(a0) {
		$beginWatchObject_0(this, a0);
	};
	_.endWatchObject_1 = function endWatchObject_2(a0) {
		$endWatchObject_0(this, a0);
	};
	_.equals$ = function equals_6(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptRepository_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_28() {
		return $wnd.hippo.common.DomainJavascriptRepository;
	};
	_.isAssignable = function isAssignable_28(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptRepository);
	};
	_.setHandler_1 = function setHandler_1(a0) {
		$setHandler(this, a0);
	};
	var exported_28 = false;

	function $addObject(this$static, a0, a1, a2) {
		return $invoke_addObject(this$static.jso, a0, a1, a2);
	}

	function $deleteObject(this$static, a0, a1) {
		return $invoke_deleteObject(this$static.jso, a0, a1);
	}

	function $export_29(this$static) {
		if (!exported_29) {
			exported_29 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_2_classLit, this$static);
			new StorageRequest_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new DomainStorageRequest_ExporterImpl_0;
			$export0_29(this$static);
		}
	}

	function $export0_29(this$static) {
		var pkg = declarePackage('hippo.storage.DomainJavascriptStorageProvider');
		var __0, __ = this$static;
		$wnd.hippo.storage.DomainJavascriptStorageProvider = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.storage.DomainJavascriptStorageProvider.prototype = new Object;
		__0.addObject = $entry(function(a0, a1, a2) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_2_classLit, 2, arguments, false, false)[0];
		});
		__0.deleteObject = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_2_classLit, 1, arguments, false, false)[0];
		});
		__0.getDomainObject = $entry(function(a0, a1) {
			return wrap_0(this.g.getDomainObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g));
		});
		__0.getObject = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_2_classLit, 0, arguments, false, false)[0];
		});
		__0.putDomainObject = $entry(function(a0, a1) {
			return wrap_0(this.g.putDomainObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g));
		});
		__0.putObject = $entry(function(a0, a1, a2) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_2_classLit, 3, arguments, false, false)[0];
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.storage.DomainJavascriptStorageProvider[p] === undefined && ($wnd.hippo.storage.DomainJavascriptStorageProvider[p] = pkg[p]);
	}

	function $getDomainObject(this$static, a0, a1) {
		return $invoke_getDomainObject(this$static.jso, a0, a1);
	}

	function $getObject_0(this$static, a0, a1) {
		return $invoke_getObject(this$static.jso, a0, a1);
	}

	function $invoke_addObject(closure, a0, a1, a2) {
		var r = closure.apply(null, [a0, wrap_0(a1), wrap_0(a2)]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $invoke_deleteObject(closure, a0, a1) {
		var r = closure.apply(null, [a0, wrap_0(a1)]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $invoke_getDomainObject(closure, a0, a1) {
		var r = closure.apply(null, [wrap_0(a0), wrap_0(a1)]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $invoke_getObject(closure, a0, a1) {
		var r = closure.apply(null, [a0, wrap_0(a1)]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $invoke_putDomainObject(closure, a0, a1) {
		var r = closure.apply(null, [wrap_0(a0), wrap_0(a1)]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $invoke_putObject(closure, a0, a1, a2) {
		var r = closure.apply(null, [a0, wrap_0(a1), wrap_0(a2)]);
		return r == undefined ? null : r != null ? r.g : r;
	}

	function $putDomainObject(this$static, a0, a1) {
		return $invoke_putDomainObject(this$static.jso, a0, a1);
	}

	function $putObject_0(this$static, a0, a1, a2) {
		return $invoke_putObject(this$static.jso, a0, a1, a2);
	}

	function DomainJavascriptStorageProvider_ExporterImpl_0() {
		$export_29(this);
	}

	function DomainJavascriptStorageProvider_ExporterImpl_1(jso) {
		$export_29(this);
		this.jso = jso;
	}

	function makeClosure_3(closure) {
		return new DomainJavascriptStorageProvider_ExporterImpl_1(closure);
	}

	defineSeed(61, 1, makeCastMap([Q$DomainJavascriptStorageProvider, Q$DomainJavascriptStorageProvider_ExporterImpl, Q$Exportable]), DomainJavascriptStorageProvider_ExporterImpl_0, DomainJavascriptStorageProvider_ExporterImpl_1);
	_.equals$ = function equals_7(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptStorageProvider_ExporterImpl) && this.jso == obj.jso;
	};
	_.getDomainObject_0 = function getDomainObject(a0, a1) {
		return $getDomainObject(this, a0, a1);
	};
	_.getJsConstructor = function getJsConstructor_29() {
		return $wnd.hippo.storage.DomainJavascriptStorageProvider;
	};
	_.isAssignable = function isAssignable_29(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptStorageProvider);
	};
	_.putDomainObject_0 = function putDomainObject(a0, a1) {
		return $putDomainObject(this, a0, a1);
	};
	var exported_29 = false;

	function $export_30(this$static) {
		if (!exported_30) {
			exported_30 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimeService_2_classLit, this$static);
			$export0_30(this$static);
		}
	}

	function $export0_30(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptTimeService');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptTimeService = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptTimeService.prototype = new Object;
		__0.currentTimeMillis = $entry(function() {
			return this.g.currentTimeMillis_0();
		});
		__0.isOpeningPeriod = $entry(function() {
			return this.g.isOpeningPeriod_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptTimeService[p] === undefined && ($wnd.hippo.common.DomainJavascriptTimeService[p] = pkg[p]);
	}

	function $invoke_currentTimeMillis(closure) {
		var r = closure.apply(null, []);
		return r;
	}

	function $invoke_isOpeningPeriod(closure) {
		var r = closure.apply(null, []);
		return !!r;
	}

	function DomainJavascriptTimeService_ExporterImpl_0() {
		$export_30(this);
	}

	function DomainJavascriptTimeService_ExporterImpl_1(jso) {
		$export_30(this);
		this.jso = jso;
	}

	function makeClosure_4(closure) {
		return new DomainJavascriptTimeService_ExporterImpl_1(closure);
	}

	defineSeed(62, 1, makeCastMap([Q$DomainJavascriptTimeService, Q$DomainJavascriptTimeService_ExporterImpl, Q$Exportable]), DomainJavascriptTimeService_ExporterImpl_0, DomainJavascriptTimeService_ExporterImpl_1);
	_.currentTimeMillis_0 = function currentTimeMillis_1() {
		return $invoke_currentTimeMillis(this.jso);
	};
	_.equals$ = function equals_8(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptTimeService_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_30() {
		return $wnd.hippo.common.DomainJavascriptTimeService;
	};
	_.isAssignable = function isAssignable_30(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptTimeService);
	};
	_.isOpeningPeriod_0 = function isOpeningPeriod_0() {
		return $invoke_isOpeningPeriod(this.jso);
	};
	var exported_30 = false;

	function $export_31(this$static) {
		if (!exported_31) {
			exported_31 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimer_2_classLit, this$static);
			new DomainRunnable_ExporterImpl_0;
			$export0_31(this$static);
		}
	}

	function $export0_31(this$static) {
		var pkg = declarePackage('hippo.common.DomainJavascriptTimer');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainJavascriptTimer = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainJavascriptTimer.prototype = new Object;
		__0.startTimer = $entry(function(a0, a1) {
			return this.g.startTimer_1(a0, a1 == null ? null : a1.g);
		});
		__0.stopTimer = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimer_2_classLit, 0, arguments, false, false)[0];
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainJavascriptTimer[p] === undefined && ($wnd.hippo.common.DomainJavascriptTimer[p] = pkg[p]);
	}

	function $invoke_startTimer(closure, a0, a1) {
		var r = closure.apply(null, [a0, wrap_0(a1)]);
		return r && typeof r == 'number' ? r : 0;
	}

	function $invoke_stopTimer(closure, a0) {
		closure.apply(null, [a0]);
	}

	function $startTimer(this$static, a0, a1) {
		return $invoke_startTimer(this$static.jso, a0, a1);
	}

	function $stopTimer(this$static, a0) {
		$invoke_stopTimer(this$static.jso, a0);
	}

	function DomainJavascriptTimer_ExporterImpl_0() {
		$export_31(this);
	}

	function DomainJavascriptTimer_ExporterImpl_1(jso) {
		$export_31(this);
		this.jso = jso;
	}

	function makeClosure_5(closure) {
		return new DomainJavascriptTimer_ExporterImpl_1(closure);
	}

	defineSeed(63, 1, makeCastMap([Q$DomainJavascriptTimer, Q$DomainJavascriptTimer_ExporterImpl, Q$Exportable]), DomainJavascriptTimer_ExporterImpl_0, DomainJavascriptTimer_ExporterImpl_1);
	_.equals$ = function equals_9(obj) {
		return obj != null && instanceOf(obj, Q$DomainJavascriptTimer_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_31() {
		return $wnd.hippo.common.DomainJavascriptTimer;
	};
	_.isAssignable = function isAssignable_31(o) {
		return o != null && instanceOf(o, Q$DomainJavascriptTimer);
	};
	_.startTimer_1 = function startTimer_0(a0, a1) {
		return $startTimer(this, a0, a1);
	};
	var exported_31 = false;

	function DomainLogger_0() {}

	defineSeed(64, 42, makeCastMap([Q$Logger, Q$DomainLogger, Q$Exportable]), DomainLogger_0);
	_.debug_0 = function debug_1(str) {
		$debug(this.mdebug, str);
	};
	_.error_0 = function error_2(str) {
		$error(this.merror, str);
	};
	_.fatal_0 = function fatal_1(str) {
		$fatal(this.mfatal, str);
	};
	_.info_0 = function info_2(str) {
		$info(this.minfo, str);
	};
	_.setDebug_0 = function setDebug(log_0) {
		this.mdebug = log_0;
	};
	_.setError_0 = function setError(log_0) {
		this.merror = log_0;
	};
	_.setFatal_0 = function setFatal(log_0) {
		this.mfatal = log_0;
	};
	_.setInfo_0 = function setInfo(log_0) {
		this.minfo = log_0;
	};
	_.setWarn_0 = function setWarn(log_0) {
		this.mwarn = log_0;
	};
	_.warn_0 = function warn_1(str) {
		$warn(this.mwarn, str);
	};

	function $export_32(this$static) {
		if (!exported_32) {
			exported_32 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainLogger_2_classLit, this$static);
			new DomainJavascriptLogger_ExporterImpl_0;
			$export0_32(this$static);
		}
	}

	function $export0_32(this$static) {
		var pkg = declarePackage('hippo.common.DomainLogger');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainLogger = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainLogger_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainLogger.prototype = new Object;
		__0.debug = $entry(function(a0) {
			this.g.debug_0(a0);
		});
		__0.error = $entry(function(a0) {
			this.g.error_0(a0);
		});
		__0.fatal = $entry(function(a0) {
			this.g.fatal_0(a0);
		});
		__0.info = $entry(function(a0) {
			this.g.info_0(a0);
		});
		__0.setDebug = $entry(function(a0) {
			this.g.setDebug_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptLogger ? a0.g : makeClosure_0(a0));
		});
		__0.setError = $entry(function(a0) {
			this.g.setError_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptLogger ? a0.g : makeClosure_0(a0));
		});
		__0.setFatal = $entry(function(a0) {
			this.g.setFatal_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptLogger ? a0.g : makeClosure_0(a0));
		});
		__0.setInfo = $entry(function(a0) {
			this.g.setInfo_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptLogger ? a0.g : makeClosure_0(a0));
		});
		__0.setWarn = $entry(function(a0) {
			this.g.setWarn_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptLogger ? a0.g : makeClosure_0(a0));
		});
		__0.warn = $entry(function(a0) {
			this.g.warn_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainLogger[p] === undefined && ($wnd.hippo.common.DomainLogger[p] = pkg[p]);
	}

	function DomainLogger_ExporterImpl_0() {
		$export_32(this);
	}

	defineSeed(65, 1, {}, DomainLogger_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_32() {
		return $wnd.hippo.common.DomainLogger;
	};
	_.isAssignable = function isAssignable_32(o) {
		return o != null && instanceOf(o, Q$DomainLogger);
	};
	var exported_32 = false;

	function $send_0(this$static, topic, data_0) {
		$send(this$static.mSender, topic, data_0);
	}

	function DomainNetwork_0() {}

	defineSeed(66, 3, makeCastMap([Q$Network, Q$DomainNetwork, Q$Exportable]), DomainNetwork_0);
	_.send_0 = function send_0(topic, data_0) {
		$send_0(this, topic, data_0);
	};
	_.setSender_0 = function setSender(network) {
		this.mSender = network;
	};

	function $export_33(this$static) {
		if (!exported_33) {
			exported_33 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainNetwork_2_classLit, this$static);
			new DomainJavascriptNetwork_ExporterImpl_0;
			$export0_33(this$static);
		}
	}

	function $export0_33(this$static) {
		var pkg = declarePackage('hippo.common.DomainNetwork');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainNetwork = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainNetwork_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainNetwork.prototype = new Object;
		__0.send = $entry(function(a0, a1) {
			__static_wrapper_send_1(this.g, a0, a1);
		});
		__0.setSender = $entry(function(a0) {
			this.g.setSender_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptNetwork ? a0.g : new DomainJavascriptNetwork_ExporterImpl_1(a0));
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainNetwork[p] === undefined && ($wnd.hippo.common.DomainNetwork[p] = pkg[p]);
	}

	function DomainNetwork_ExporterImpl_0() {
		$export_33(this);
	}

	function __static_wrapper_send_1(instance, a0, a1) {
		$send_0(instance, a0, ($clinit_ExporterUtil(), $toArrByte(a1)));
	}

	defineSeed(67, 1, {}, DomainNetwork_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_33() {
		return $wnd.hippo.common.DomainNetwork;
	};
	_.isAssignable = function isAssignable_33(o) {
		return o != null && instanceOf(o, Q$DomainNetwork);
	};
	var exported_33 = false;

	function DomainParser_0() {}

	defineSeed(68, 46, makeCastMap([Q$Parser, Q$DomainParser, Q$Exportable]), DomainParser_0);
	_.serialize_0 = function serialize_1(object) {
		return $serialize(this.mSerializer, object);
	};
	_.setSerializer_0 = function setSerializer(parser) {
		this.mSerializer = parser;
	};
	_.setUnserializer_0 = function setUnserializer(parser) {
		this.mUnserializer = parser;
	};
	_.unserialize_0 = function unserialize_0(data_0) {
		return $unserialize(this.mUnserializer, data_0);
	};

	function $export_34(this$static) {
		if (!exported_34) {
			exported_34 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainParser_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainJavascriptParser_ExporterImpl_0;
			$export0_34(this$static);
		}
	}

	function $export0_34(this$static) {
		var pkg = declarePackage('hippo.common.DomainParser');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainParser = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainParser_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainParser.prototype = new Object;
		__0.serialize = $entry(function(a0) {
			return this.g.serialize_0(a0 == null ? null : a0.g);
		});
		__0.setSerializer = $entry(function(a0) {
			this.g.setSerializer_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptParser ? a0.g : makeClosure_1(a0));
		});
		__0.setUnserializer = $entry(function(a0) {
			this.g.setUnserializer_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptParser ? a0.g : makeClosure_1(a0));
		});
		__0.unserialize = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainParser_2_classLit, 0, arguments, false, false)[0];
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_DomainParser_2_classLit, {
			0: {
				1: [
					[function() {
						return this.unserialize_0.apply(this, arguments);
					},
					wrap_0, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainParser[p] === undefined && ($wnd.hippo.common.DomainParser[p] = pkg[p]);
	}

	function DomainParser_ExporterImpl_0() {
		$export_34(this);
	}

	defineSeed(69, 1, {}, DomainParser_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_34() {
		return $wnd.hippo.common.DomainParser;
	};
	_.isAssignable = function isAssignable_34(o) {
		return o != null && instanceOf(o, Q$DomainParser);
	};
	var exported_34 = false;

	function DomainRepository_0() {}

	defineSeed(70, 48, makeCastMap([Q$Repository, Q$DomainRepository, Q$Exportable]), DomainRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_3(object) {
		$beginWatchObject_0(this.mBeginWatcher, object);
	};
	_.endWatchObject_1 = function endWatchObject_3(object) { !! this.mEndWather && $endWatchObject_0(this.mEndWather, object);
	};
	_.getHandler_0 = function getHandler_0() {
		return this.mHandler;
	};
	_.setBeginWatcher_0 = function setBeginWatcher(repository) {
		this.mBeginWatcher = repository;
	};
	_.setEndWatcher_0 = function setEndWatcher(repository) {
		this.mEndWather = repository;
	};
	_.setHandler_1 = function setHandler_2(handler) {
		this.mHandler = handler; !! this.mSetHandler && $setHandler(this.mSetHandler, handler);
	};
	_.setHandler_2 = function setHandler_3(repository) {
		this.mSetHandler = repository;
	};

	function $export_35(this$static) {
		if (!exported_35) {
			exported_35 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new DomainJavascriptRepository_ExporterImpl_0;
			$export0_35(this$static);
		}
	}

	function $export0_35(this$static) {
		var pkg = declarePackage('hippo.common.DomainRepository');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.setBeginWatcher = $entry(function(a0) {
			this.g.setBeginWatcher_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptRepository ? a0.g : makeClosure_2(a0));
		});
		__0.setEndWatcher = $entry(function(a0) {
			this.g.setEndWatcher_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptRepository ? a0.g : makeClosure_2(a0));
		});
		__0.setHandler = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainRepository_2_classLit, 0, arguments, false, false)[0];
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_DomainRepository_2_classLit, {
			0: {
				1: [
					[function() {
						return this.setHandler_2.apply(this, arguments);
					},
					null, function(instance, args) {
						return [args[0] == null ? null : function(a) {
							a = a.constructor == $wnd.hippo.common.DomainJavascriptRepository ? a.g : makeClosure_2(a);
							return a;
						}(args[0])];
					}, 'function'],
					[function() {
						return this.setHandler_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainHandler_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainRepository[p] === undefined && ($wnd.hippo.common.DomainRepository[p] = pkg[p]);
	}

	function DomainRepository_ExporterImpl_0() {
		$export_35(this);
	}

	defineSeed(71, 1, {}, DomainRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_35() {
		return $wnd.hippo.common.DomainRepository;
	};
	_.isAssignable = function isAssignable_35(o) {
		return o != null && instanceOf(o, Q$DomainRepository);
	};
	var exported_35 = false;

	function DomainRunnable_0() {}

	defineSeed(72, 1, makeCastMap([Q$DomainRunnable, Q$Exportable]), DomainRunnable_0);
	_.run_0 = function run() {
		$run(this.mRunnable);
	};
	_.setRunnable_0 = function setRunnable(runnable) {
		this.mRunnable = runnable;
	};

	function $export_36(this$static) {
		if (!exported_36) {
			exported_36 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainRunnable_2_classLit, this$static);
			$export0_36(this$static);
		}
	}

	function $export0_36(this$static) {
		var pkg = declarePackage('hippo.common.DomainRunnable');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainRunnable = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainRunnable_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainRunnable.prototype = new Object;
		__0.run = $entry(function() {
			this.g.run_0();
		});
		__0.setRunnable = $entry(function(a0) {
			this.g.setRunnable_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainRunnable[p] === undefined && ($wnd.hippo.common.DomainRunnable[p] = pkg[p]);
	}

	function DomainRunnable_ExporterImpl_0() {
		$export_36(this);
	}

	defineSeed(73, 1, {}, DomainRunnable_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_36() {
		return $wnd.hippo.common.DomainRunnable;
	};
	_.isAssignable = function isAssignable_36(o) {
		return o != null && instanceOf(o, Q$DomainRunnable);
	};
	var exported_36 = false;

	function $getObject_1(this$static, id_0) {
		return this$static.getObject_3(id_0);
	}

	function StorageProvider_0() {}

	defineSeed(75, 1, makeCastMap([Q$StorageProvider, Q$Exportable]), StorageProvider_0);
	_.addObject_0 = function addObject(id_0, data_0) {
		return null;
	};
	_.deleteObject_0 = function deleteObject(id_0, data_0) {
		return null;
	};
	_.getObject_2 = function getObject_1(id_0) {
		return null;
	};
	_.getObject_3 = function getObject_2(id_0) {
		return null;
	};
	_.getObject_4 = function getObject_3(id_0, data_0) {
		return $getObject_1(this, id_0);
	};
	_.putObject_1 = function putObject_0(data_0) {
		return null;
	};
	_.putObject_2 = function putObject_1(id_0, data_0) {
		return null;
	};

	function DomainStorageProvider_0() {}

	defineSeed(74, 75, makeCastMap([Q$DomainStorageProvider, Q$StorageProvider, Q$Exportable]), DomainStorageProvider_0);
	_.addObject_0 = function addObject_0(id_0, data_0) {
		var request;
		request = new DomainStorageRequest_0;
		request.mId = id_0;
		request.mData = data_0;
		$setFunc(request, this.mAdd);
		request.mMethod = 0;
		return request;
	};
	_.deleteObject_0 = function deleteObject_0(id_0, data_0) {
		var request;
		request = new DomainStorageRequest_0;
		request.mId = id_0;
		request.mData = data_0;
		$setFunc(request, this.mDelete);
		request.mMethod = 3;
		return request;
	};
	_.getObject_2 = function getObject_4(obj) {
		var request;
		request = new DomainStorageRequest_0;
		request.mData = obj;
		$setFunc(request, this.mGetDomainObject);
		request.mMethod = 4;
		return request;
	};
	_.getObject_3 = function getObject_5(id_0) {
		var request;
		request = new DomainStorageRequest_0;
		request.mId = id_0;
		$setFunc(request, this.mGet);
		request.mMethod = 2;
		return request;
	};
	_.putObject_1 = function putObject_2(data_0) {
		var request;
		request = new DomainStorageRequest_0;
		request.mData = data_0;
		$setFunc(request, this.mPutDomainObject);
		request.mMethod = 5;
		return request;
	};
	_.putObject_2 = function putObject_3(id_0, data_0) {
		var request;
		request = new DomainStorageRequest_0;
		request.mId = id_0;
		request.mData = data_0;
		$setFunc(request, this.mPut);
		request.mMethod = 1;
		return request;
	};
	_.setAdd_0 = function setAdd(func) {
		this.mAdd = func;
	};
	_.setDelete_0 = function setDelete(func) {
		this.mDelete = func;
	};
	_.setGet_0 = function setGet(func) {
		this.mGet = func;
	};
	_.setGetDomainObject_0 = function setGetDomainObject(func) {
		this.mGetDomainObject = func;
	};
	_.setPut_0 = function setPut(func) {
		this.mPut = func;
	};
	_.setPutDomainObject_0 = function setPutDomainObject(func) {
		this.mPutDomainObject = func;
	};

	function $export_37(this$static) {
		if (!exported_37) {
			exported_37 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainStorageProvider_2_classLit, this$static);
			new StorageRequest_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new DomainJavascriptStorageProvider_ExporterImpl_0;
			$export0_37(this$static);
		}
	}

	function $export0_37(this$static) {
		var pkg = declarePackage('hippo.storage.DomainStorageProvider');
		var __0, __ = this$static;
		$wnd.hippo.storage.DomainStorageProvider = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainStorageProvider_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.storage.DomainStorageProvider.prototype = new Object;
		__0.addObject = $entry(function(a0, a1) {
			return wrap_0(this.g.addObject_0(a0, a1 == null ? null : a1.g));
		});
		__0.deleteObject = $entry(function(a0, a1) {
			return wrap_0(this.g.deleteObject_0(a0, a1 == null ? null : a1.g));
		});
		__0.getObject = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainStorageProvider_2_classLit, 0, arguments, false, false)[0];
		});
		__0.putObject = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainStorageProvider_2_classLit, 1, arguments, false, false)[0];
		});
		__0.setAdd = $entry(function(a0) {
			this.g.setAdd_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		__0.setDelete = $entry(function(a0) {
			this.g.setDelete_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		__0.setGet = $entry(function(a0) {
			this.g.setGet_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		__0.setGetDomainObject = $entry(function(a0) {
			this.g.setGetDomainObject_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		__0.setPut = $entry(function(a0) {
			this.g.setPut_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		__0.setPutDomainObject = $entry(function(a0) {
			this.g.setPutDomainObject_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_DomainStorageProvider_2_classLit, {
			0: {
				1: [
					[function() {
						return this.getObject_3.apply(this, arguments);
					},
					wrap_0, undefined, 'string'],
					[function() {
						return this.getObject_2.apply(this, arguments);
					},
					wrap_0, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.getObject_4.apply(this, arguments);
					},
					wrap_0, undefined, 'string', Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				]
			},
			1: {
				1: [
					[function() {
						return this.putObject_1.apply(this, arguments);
					},
					wrap_0, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.putObject_2.apply(this, arguments);
					},
					wrap_0, undefined, 'string', Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.storage.DomainStorageProvider[p] === undefined && ($wnd.hippo.storage.DomainStorageProvider[p] = pkg[p]);
	}

	function DomainStorageProvider_ExporterImpl_0() {
		$export_37(this);
	}

	defineSeed(76, 1, {}, DomainStorageProvider_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_37() {
		return $wnd.hippo.storage.DomainStorageProvider;
	};
	_.isAssignable = function isAssignable_37(o) {
		return o != null && instanceOf(o, Q$DomainStorageProvider);
	};
	var exported_37 = false;

	function StorageRequest_0() {}

	defineSeed(78, 1, makeCastMap([Q$StorageRequest, Q$Exportable]), StorageRequest_0);
	_.execute_0 = function execute(handler) {};

	function $execute(this$static, handler) {
		this$static.mHandler = handler;
		switch (this$static.mMethod) {
		case 0:
			$addObject(this$static.mFunc, this$static.mId, this$static.mData, this$static);
			break;
		case 1:
			$putObject_0(this$static.mFunc, this$static.mId, this$static.mData, this$static);
			break;
		case 2:
			$getObject_0(this$static.mFunc, this$static.mId, this$static);
			break;
		case 3:
			$deleteObject(this$static.mFunc, this$static.mId, this$static);
			break;
		case 4:
			$getDomainObject(this$static.mFunc, this$static.mData, this$static);
			break;
		case 5:
			$putDomainObject(this$static.mFunc, this$static.mData, this$static);
		}
	}

	function $setFunc(this$static, func) {
		this$static.mFunc = func;
	}

	function DomainStorageRequest_0() {}

	defineSeed(77, 78, makeCastMap([Q$DomainStorageRequest, Q$StorageRequest, Q$Exportable]), DomainStorageRequest_0);
	_.error_1 = function error_3(err) { !! this.mHandler && this.mHandler.onError_0(err, 'storage');
	};
	_.execute_0 = function execute_0(handler) {
		$execute(this, handler);
	};
	_.setData_0 = function setData(data_0) {
		this.mData = data_0;
	};
	_.setFunc_0 = function setFunc(func) {
		$setFunc(this, func);
	};
	_.setId_0 = function setId(id_0) {
		this.mId = id_0;
	};
	_.setMethod_0 = function setMethod(method) {
		this.mMethod = method;
	};
	_.success_0 = function success(data_0) { !! this.mHandler && this.mHandler.onSuccess_0(data_0, 'storage');
	};
	_.mMethod = 0;

	function $export_38(this$static) {
		if (!exported_38) {
			exported_38 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainStorageRequest_2_classLit, this$static);
			$export0_38(this$static);
		}
	}

	function $export0_38(this$static) {
		var pkg = declarePackage('hippo.storage.DomainStorageRequest');
		var __0, __ = this$static;
		$wnd.hippo.storage.DomainStorageRequest = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainStorageRequest_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.storage.DomainStorageRequest.prototype = new Object;
		$wnd.hippo.storage.DomainStorageRequest.ADD_METHOD = 0;
		$wnd.hippo.storage.DomainStorageRequest.GET_METHOD = 2;
		$wnd.hippo.storage.DomainStorageRequest.PUT_METHOD = 1;
		$wnd.hippo.storage.DomainStorageRequest.DELETE_METHOD = 3;
		$wnd.hippo.storage.DomainStorageRequest.GET_OBJEC_METHOD = 4;
		$wnd.hippo.storage.DomainStorageRequest.PUT_OBJEC_METHOD = 5;
		__0.error = $entry(function(a0) {
			this.g.error_1(a0 == null ? null : a0.g);
		});
		__0.execute = $entry(function(a0) {
			this.g.execute_0(a0 == null ? null : a0.g);
		});
		__0.setData = $entry(function(a0) {
			this.g.setData_0(a0 == null ? null : a0.g);
		});
		__0.setFunc = $entry(function(a0) {
			this.g.setFunc_0(a0 == null ? null : a0.constructor == $wnd.hippo.storage.DomainJavascriptStorageProvider ? a0.g : makeClosure_3(a0));
		});
		__0.setId = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainStorageRequest_2_classLit, 0, arguments, false, false)[0];
		});
		__0.setMethod = $entry(function(a0) {
			this.g.setMethod_0(a0);
		});
		__0.success = $entry(function(a0) {
			this.g.success_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_DomainStorageRequest_2_classLit, {
			0: {
				1: [
					[function() {
						return this.setId_0.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.storage.DomainStorageRequest[p] === undefined && ($wnd.hippo.storage.DomainStorageRequest[p] = pkg[p]);
	}

	function DomainStorageRequest_ExporterImpl_0() {
		$export_38(this);
	}

	defineSeed(79, 1, {}, DomainStorageRequest_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_38() {
		return $wnd.hippo.storage.DomainStorageRequest;
	};
	_.isAssignable = function isAssignable_38(o) {
		return o != null && instanceOf(o, Q$DomainStorageRequest);
	};
	var exported_38 = false;

	function DomainTimeService_0() {}

	defineSeed(80, 13, makeCastMap([Q$TimeService, Q$DomainTimeService, Q$Exportable]), DomainTimeService_0);
	_.currentTimeMillis_0 = function currentTimeMillis_2() {
		return $invoke_currentTimeMillis(this.tsCurrentTimeMillis.jso);
	};
	_.isOpeningPeriod_0 = function isOpeningPeriod_1() {
		return $invoke_isOpeningPeriod(this.tsOpenPeriod.jso);
	};
	_.setTSCurrentTimeMillis_0 = function setTSCurrentTimeMillis(ts) {
		this.tsCurrentTimeMillis = ts;
	};
	_.setTSOpenPeriod_0 = function setTSOpenPeriod(ts) {
		this.tsOpenPeriod = ts;
	};

	function $export_39(this$static) {
		if (!exported_39) {
			exported_39 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainTimeService_2_classLit, this$static);
			new DomainJavascriptTimeService_ExporterImpl_0;
			$export0_39(this$static);
		}
	}

	function $export0_39(this$static) {
		var pkg = declarePackage('hippo.common.DomainTimeService');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainTimeService = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainTimeService_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainTimeService.prototype = new Object;
		__0.currentTimeMillis = $entry(function() {
			return this.g.currentTimeMillis_0();
		});
		__0.isOpeningPeriod = $entry(function() {
			return this.g.isOpeningPeriod_0();
		});
		__0.setTSCurrentTimeMillis = $entry(function(a0) {
			this.g.setTSCurrentTimeMillis_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptTimeService ? a0.g : makeClosure_4(a0));
		});
		__0.setTSOpenPeriod = $entry(function(a0) {
			this.g.setTSOpenPeriod_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptTimeService ? a0.g : makeClosure_4(a0));
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainTimeService[p] === undefined && ($wnd.hippo.common.DomainTimeService[p] = pkg[p]);
	}

	function DomainTimeService_ExporterImpl_0() {
		$export_39(this);
	}

	defineSeed(81, 1, {}, DomainTimeService_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_39() {
		return $wnd.hippo.common.DomainTimeService;
	};
	_.isAssignable = function isAssignable_39(o) {
		return o != null && instanceOf(o, Q$DomainTimeService);
	};
	var exported_39 = false;

	function DomainTimer_0() {}

	defineSeed(82, 15, makeCastMap([Q$Timer, Q$DomainTimer, Q$Exportable]), DomainTimer_0);
	_.setStartTimer_0 = function setStartTimer(timer) {
		this.mJavascriptStartTimer = timer;
	};
	_.setStopTimer_0 = function setStopTimer(timer) {
		this.mJavascriptStopTimer = timer;
	};
	_.startTimer_0 = function startTimer_1(interval, runnable) {
		var domainRunnable;
		domainRunnable = new DomainRunnable_0;
		domainRunnable.mRunnable = runnable;
		return valueOf_0($startTimer(this.mJavascriptStartTimer, interval, domainRunnable));
	};
	_.stopTimer_0 = function stopTimer_0(id_0) {
		$stopTimer(this.mJavascriptStopTimer, id_0);
	};

	function $export_40(this$static) {
		if (!exported_40) {
			exported_40 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_DomainTimer_2_classLit, this$static);
			new DomainJavascriptTimer_ExporterImpl_0;
			$export0_40(this$static);
		}
	}

	function $export0_40(this$static) {
		var pkg = declarePackage('hippo.common.DomainTimer');
		var __0, __ = this$static;
		$wnd.hippo.common.DomainTimer = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainTimer_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.DomainTimer.prototype = new Object;
		__0.setStartTimer = $entry(function(a0) {
			this.g.setStartTimer_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptTimer ? a0.g : makeClosure_5(a0));
		});
		__0.setStopTimer = $entry(function(a0) {
			this.g.setStopTimer_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.DomainJavascriptTimer ? a0.g : makeClosure_5(a0));
		});
		__0.startTimer = $entry(function(a0, a1) {
			return this.g.startTimer_0(a0, a1);
		});
		__0.stopTimer = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_DomainTimer_2_classLit, 0, arguments, false, false)[0];
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_DomainTimer_2_classLit, {
			0: {
				1: [
					[function() {
						return this.stopTimer_0.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.DomainTimer[p] === undefined && ($wnd.hippo.common.DomainTimer[p] = pkg[p]);
	}

	function DomainTimer_ExporterImpl_0() {
		$export_40(this);
	}

	defineSeed(83, 1, {}, DomainTimer_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_40() {
		return $wnd.hippo.common.DomainTimer;
	};
	_.isAssignable = function isAssignable_40(o) {
		return o != null && instanceOf(o, Q$DomainTimer);
	};
	var exported_40 = false;

	function $buildFromBytes_0(this$static, bytes, offset, length_0) {
		return $buildFromBytes_1(this$static.jsBlobStringBuilder_0, bytes, offset, length_0);
	}

	function GWTBlobStringBuilder_0() {}

	defineSeed(84, 22, makeCastMap([Q$BlobStringBuilder, Q$GWTBlobStringBuilder, Q$Exportable]), GWTBlobStringBuilder_0);
	_.buildFromBytes_0 = function buildFromBytes_0(bytes, offset, length_0) {
		return $buildFromBytes_0(this, bytes, offset, length_0);
	};
	_.jsBlobStringBuilder_1 = function jsBlobStringBuilder_0() {
		return this.jsBlobStringBuilder_0;
	};
	_.setJsBlobStringBuilder_0 = function setJsBlobStringBuilder(jsBlobStringBuilder) {
		this.jsBlobStringBuilder_0 = jsBlobStringBuilder;
	};

	function $export_41(this$static) {
		if (!exported_41) {
			exported_41 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_GWTBlobStringBuilder_2_classLit, this$static);
			new JSBlobStringBuilder_ExporterImpl_0;
			$export0_41(this$static);
		}
	}

	function $export0_41(this$static) {
		var pkg = declarePackage('hippo.common.GWTBlobStringBuilder');
		var __0, __ = this$static;
		$wnd.hippo.common.GWTBlobStringBuilder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new GWTBlobStringBuilder_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.GWTBlobStringBuilder.prototype = new Object;
		__0.buildFromBytes = $entry(function(a0, a1, a2) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_gwt_GWTBlobStringBuilder_2_classLit, 0, arguments, false, false)[0];
		});
		__0.jsBlobStringBuilder = $entry(function() {
			return wrap_0(this.g.jsBlobStringBuilder_1());
		});
		__0.setJsBlobStringBuilder = $entry(function(a0) {
			this.g.setJsBlobStringBuilder_0(a0 == null ? null : a0.constructor == $wnd.hippo.common.JSBlobStringBuilder ? a0.g : new JSBlobStringBuilder_ExporterImpl_1(a0));
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_gwt_GWTBlobStringBuilder_2_classLit, {
			0: {
				1: [
					[__static_wrapper_buildFromBytes_1, null, unshift, 'array']
				],
				3: [
					[__static_wrapper_buildFromBytes_2, null, unshift, 'array', 'number', 'number']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.GWTBlobStringBuilder[p] === undefined && ($wnd.hippo.common.GWTBlobStringBuilder[p] = pkg[p]);
	}

	function GWTBlobStringBuilder_ExporterImpl_0() {
		$export_41(this);
	}

	function __static_wrapper_buildFromBytes_1(instance, a0) {
		return $buildFromBytes(instance, ($clinit_ExporterUtil(), $toArrByte(a0)));
	}

	function __static_wrapper_buildFromBytes_2(instance, a0, a1, a2) {
		return $buildFromBytes_0(instance, ($clinit_ExporterUtil(), $toArrByte(a0)), a1, a2);
	}

	defineSeed(85, 1, {}, GWTBlobStringBuilder_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_41() {
		return $wnd.hippo.common.GWTBlobStringBuilder;
	};
	_.isAssignable = function isAssignable_41(o) {
		return o != null && instanceOf(o, Q$GWTBlobStringBuilder);
	};
	var exported_41 = false;

	function $buildFromBytes_1(this$static, a0, a1, a2) {
		return $invoke_buildFromBytes(this$static.jso, a0, a1, a2);
	}

	function $export_42(this$static) {
		if (!exported_42) {
			exported_42 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_gwt_JSBlobStringBuilder_2_classLit, this$static);
			$export0_42(this$static);
		}
	}

	function $export0_42(this$static) {
		var pkg = declarePackage('hippo.common.JSBlobStringBuilder');
		var __0, __ = this$static;
		$wnd.hippo.common.JSBlobStringBuilder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.JSBlobStringBuilder.prototype = new Object;
		__0.buildFromBytes = $entry(function(a0, a1, a2) {
			return __static_wrapper_buildFromBytes_3(this.g, a0, a1, a2);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.JSBlobStringBuilder[p] === undefined && ($wnd.hippo.common.JSBlobStringBuilder[p] = pkg[p]);
	}

	function $invoke_buildFromBytes(closure, a0, a1, a2) {
		var r = closure.apply(null, [wrap_1(a0), a1, a2]);
		return r;
	}

	function JSBlobStringBuilder_ExporterImpl_0() {
		$export_42(this);
	}

	function JSBlobStringBuilder_ExporterImpl_1(jso) {
		$export_42(this);
		this.jso = jso;
	}

	function __static_wrapper_buildFromBytes_3(instance, a0, a1, a2) {
		return $buildFromBytes_1(instance, ($clinit_ExporterUtil(), $toArrByte(a0)), a1, a2);
	}

	defineSeed(86, 1, makeCastMap([Q$JSBlobStringBuilder, Q$JSBlobStringBuilder_ExporterImpl, Q$Exportable]), JSBlobStringBuilder_ExporterImpl_0, JSBlobStringBuilder_ExporterImpl_1);
	_.equals$ = function equals_10(obj) {
		return obj != null && instanceOf(obj, Q$JSBlobStringBuilder_ExporterImpl) && this.jso == obj.jso;
	};
	_.getJsConstructor = function getJsConstructor_42() {
		return $wnd.hippo.common.JSBlobStringBuilder;
	};
	_.isAssignable = function isAssignable_42(o) {
		return o != null && instanceOf(o, Q$JSBlobStringBuilder);
	};
	var exported_42 = false;

	function $beginWatchObject_1(this$static, quote_0, handler) { !! mLogger && mLogger.debug_0('BaseQuoteManager beginWatchObject');
		$isObjectReferenced(this$static, quote_0) || this$static.mRepository.beginWatchObject_1(quote_0);
		$beginWatchObject(this$static, quote_0, handler);
	}

	function $getStock(this$static, original) {
		return original ? $getStock_0(this$static, original.market, original.stock_code) : null;
	}

	function $getStock_0(this$static, market, code_0) {
		var stock, stock0;
		stock0 = new Stock_0;
		stock0.exchange_type = market;
		stock0.stock_code = code_0;
		stock0.market = market;
		stock = $getObject(this$static.mObjectContainer, stock0.market + ':' + stock0.stock_code);
		if (!stock) {
			$putObject(this$static.mObjectContainer, stock0);
			return stock0;
		} else {
			return stock;
		}
	}

	function BaseQuoteManager_0() {
		BaseManager_0.call(this);
	}

	defineSeed(87, 17, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$Exportable]), BaseQuoteManager_0);
	_.beginWatchObject_0 = function beginWatchObject_4(quote_0, handler) {
		$beginWatchObject_1(this, quote_0, handler);
	};
	_.endWatchObject_0 = function endWatchObject_4(quote_0, handler) {
		$endWatchObject(this, quote_0, handler);
		$isObjectReferenced(this, quote_0) || this.mRepository.endWatchObject_1(quote_0);
	};
	_.setObjectContainer_0 = function setObjectContainer(container) {
		this.mObjectContainer = container;
	};

	function $export_43(this$static) {
		if (!exported_43) {
			exported_43 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_BaseQuoteManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_43(this$static);
		}
	}

	function $export0_43(this$static) {
		var pkg = declarePackage('hippo.quote.BaseQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.BaseQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BaseQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.BaseQuoteManager.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_BaseQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_BaseQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.BaseQuoteManager[p] === undefined && ($wnd.hippo.quote.BaseQuoteManager[p] = pkg[p]);
	}

	function BaseQuoteManager_ExporterImpl_0() {
		$export_43(this);
	}

	defineSeed(88, 1, {}, BaseQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_43() {
		return $wnd.hippo.quote.BaseQuoteManager;
	};
	_.isAssignable = function isAssignable_43(o) {
		return o != null && instanceOf(o, Q$BaseQuoteManager);
	};
	var exported_43 = false;

	function Quote_0() {}

	defineSeed(91, 28, makeCastMap([Q$DomainObject, Q$Quote, Q$Exportable]), Quote_0);
	_.getModule_0 = function getModule() {
		return 'quote';
	};
	_.getType_0 = function getType_1() {
		return 'quote';
	};

	function QuoteItem_0() {}

	defineSeed(90, 91, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$Exportable]), QuoteItem_0);
	_.getSecurities_0 = function getSecurities() {
		return this.mSecurities;
	};
	_.getType_0 = function getType_2() {
		return null;
	};
	_.setSecurities_0 = function setSecurities(securities) {
		this.mSecurities = securities;
	};

	function BidAskQuoteItem_0() {}

	defineSeed(89, 90, makeCastMap([Q$DomainObject, Q$BidAskQuoteItem, Q$Quote, Q$QuoteItem, Q$Exportable]), BidAskQuoteItem_0);
	_.getAsk_0 = function getAsk() {
		return this.ask;
	};
	_.getAsksize_0 = function getAsksize() {
		return this.asksize;
	};
	_.getBid_0 = function getBid() {
		return this.bid;
	};
	_.getBidsize_0 = function getBidsize() {
		return this.bidsize;
	};
	_.getType_0 = function getType_3() {
		return 'PositionItem';
	};
	_.setAsk_0 = function setAsk(ask) {
		this.ask = ask;
	};
	_.setAsksize_0 = function setAsksize(asksize) {
		this.asksize = asksize;
	};
	_.setBid_0 = function setBid(bid) {
		this.bid = bid;
	};
	_.setBidsize_0 = function setBidsize(bidsize) {
		this.bidsize = bidsize;
	};
	_.ask = 0;
	_.asksize = 0;
	_.bid = 0;
	_.bidsize = 0;

	function $export_44(this$static) {
		if (!exported_44) {
			exported_44 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_44(this$static);
		}
	}

	function $export0_44(this$static) {
		var pkg = declarePackage('hippo.quote.BidAskQuoteItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.BidAskQuoteItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BidAskQuoteItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.BidAskQuoteItem.prototype = new Object;
		$wnd.hippo.quote.BidAskQuoteItem.TYPE = 'PositionItem';
		__0.getAsk = $entry(function() {
			return this.g.getAsk_0();
		});
		__0.getAsksize = $entry(function() {
			return this.g.getAsksize_0();
		});
		__0.getBid = $entry(function() {
			return this.g.getBid_0();
		});
		__0.getBidsize = $entry(function() {
			return this.g.getBidsize_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAsk = $entry(function(a0) {
			this.g.setAsk_0(a0);
		});
		__0.setAsksize = $entry(function(a0) {
			this.g.setAsksize_0(a0);
		});
		__0.setBid = $entry(function(a0) {
			this.g.setBid_0(a0);
		});
		__0.setBidsize = $entry(function(a0) {
			this.g.setBidsize_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.BidAskQuoteItem[p] === undefined && ($wnd.hippo.quote.BidAskQuoteItem[p] = pkg[p]);
	}

	function BidAskQuoteItem_ExporterImpl_0() {
		$export_44(this);
	}

	defineSeed(92, 1, {}, BidAskQuoteItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_44() {
		return $wnd.hippo.quote.BidAskQuoteItem;
	};
	_.isAssignable = function isAssignable_44(o) {
		return o != null && instanceOf(o, Q$BidAskQuoteItem);
	};
	var exported_44 = false;

	function QuoteStream_0() {}

	defineSeed(94, 91, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteStream, Q$Exportable]), QuoteStream_0);
	_.getSecurities_0 = function getSecurities_0() {
		return this.mSecurities;
	};
	_.getType_0 = function getType_4() {
		return 'quoteStream';
	};
	_.setSecurities_0 = function setSecurities_0(securities) {
		this.mSecurities = securities;
	};

	function $copy(this$static, source) {
		this$static.board = source.board;
		this$static.subBoard = source.subBoard;
		source.count > 0 && (this$static.count = source.count);
		this$static.direct = source.direct;
		source.from > 0 && (this$static.from = source.from);
		this$static.total = source.total;
		this$static.sort_0 = source.sort_0;
		this$static.mItems = source.mItems;
		log_1('BoardRankQuoteList copy total:' + this$static.total);
	}

	function $getAllItems(this$static) {
		var arr;
		arr = initDim(_3Lcom_gf_hippo_domain_client_quote_RankQuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$RankQuoteItem, this$static.mItems.size_1(), 0);
		return this$static.mItems.toArray(arr);
	}

	function $putItems(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			this$static.mItems.add_0(item_0);
		}
	}

	function BoardRankQuoteList_0() {
		this.mItems = new ArrayList_0;
	}

	function createKey(boardType, direct, sort_0) {
		return '' + boardType + '' + direct + '' + sort_0;
	}

	function createKey_0(boardType, subBoardType, direct, sort_0) {
		return '' + boardType + subBoardType + '' + direct + '' + sort_0;
	}

	function newInstance(boardType, direct, sort_0) {
		var boradRankQuoteStream;
		boradRankQuoteStream = new BoardRankQuoteList_0;
		boradRankQuoteStream.board = boardType;
		boradRankQuoteStream.direct = direct;
		boradRankQuoteStream.sort_0 = sort_0;
		return boradRankQuoteStream;
	}

	function newInstance_0(boardType, subBoardType, direct, sort_0) {
		var boradRankQuoteStream;
		boradRankQuoteStream = new BoardRankQuoteList_0;
		boradRankQuoteStream.board = boardType;
		boradRankQuoteStream.subBoard = subBoardType;
		boradRankQuoteStream.direct = direct;
		boradRankQuoteStream.sort_0 = sort_0;
		return boradRankQuoteStream;
	}

	defineSeed(93, 94, makeCastMap([Q$DomainObject, Q$BoardRankQuoteList, Q$Quote, Q$QuoteStream, Q$Exportable]), BoardRankQuoteList_0);
	_.copy_0 = function copy_0(source) {
		$copy(this, source);
	};
	_.getAllItems_0 = function getAllItems() {
		return $getAllItems(this);
	};
	_.getBoard_0 = function getBoard() {
		return this.board;
	};
	_.getCount_0 = function getCount() {
		return this.count;
	};
	_.getDirect_0 = function getDirect() {
		return this.direct;
	};
	_.getFrom_0 = function getFrom() {
		return this.from;
	};
	_.getKey_0 = function getKey() {
		return '' + this.board + this.subBoard + '' + this.direct + '' + this.sort_0;
	};
	_.getSort_0 = function getSort() {
		return this.sort_0;
	};
	_.getSubBoard_0 = function getSubBoard() {
		return this.subBoard;
	};
	_.getTotal_0 = function getTotal() {
		return this.total;
	};
	_.getType_0 = function getType_5() {
		return 'BoardRankQuoteList';
	};
	_.putItem_0 = function putItem(item_0) {
		this.mItems.add_0(item_0);
	};
	_.setCount_0 = function setCount(count) {
		this.count = count;
	};
	_.setFrom_0 = function setFrom(from) {
		this.from = from;
	};
	_.setTotal_0 = function setTotal(total) {
		this.total = total;
	};
	_.board = 0;
	_.count = 0;
	_.direct = 0;
	_.from = 0;
	_.sort_0 = 0;
	_.subBoard = '';
	_.total = 0;

	function $export_45(this$static) {
		if (!exported_45) {
			exported_45 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit, this$static);
			new RankQuoteItem_ExporterImpl_0;
			$export0_45(this$static);
		}
	}

	function $export0_45(this$static) {
		var pkg = declarePackage('hippo.quote.BoardRankQuoteList');
		var __0, __ = this$static;
		$wnd.hippo.quote.BoardRankQuoteList = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.BoardRankQuoteList.prototype = new Object;
		$wnd.hippo.quote.BoardRankQuoteList.TYPE = 'BoardRankQuoteList';
		__0.copy = $entry(function(a0) {
			this.g.copy_0(a0 == null ? null : a0.g);
		});
		$wnd.hippo.quote.BoardRankQuoteList.createKey = $entry(function(a0, a1, a2, a3) {
			return runDispatch(null, Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit, 0, arguments, true, false)[0];
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_0());
		});
		__0.getBoard = $entry(function() {
			return this.g.getBoard_0();
		});
		__0.getCount = $entry(function() {
			return this.g.getCount_0();
		});
		__0.getDirect = $entry(function() {
			return this.g.getDirect_0();
		});
		__0.getFrom = $entry(function() {
			return this.g.getFrom_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getKey = $entry(function() {
			return this.g.getKey_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getSort = $entry(function() {
			return this.g.getSort_0();
		});
		__0.getSubBoard = $entry(function() {
			return this.g.getSubBoard_0();
		});
		__0.getTotal = $entry(function() {
			return this.g.getTotal_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		$wnd.hippo.quote.BoardRankQuoteList.newInstance = $entry(function(a0, a1, a2, a3) {
			return runDispatch(null, Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit, 1, arguments, true, false)[0];
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_0(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems(this.g, a0);
		});
		__0.setCount = $entry(function(a0) {
			this.g.setCount_0(a0);
		});
		__0.setFrom = $entry(function(a0) {
			this.g.setFrom_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTotal = $entry(function(a0) {
			this.g.setTotal_0(a0);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit, {
			0: {
				3: [
					[createKey, null, undefined, 'number', 'number', 'number']
				],
				4: [
					[createKey_0, null, undefined, 'number', 'string', 'number', 'number']
				]
			},
			1: {
				3: [
					[newInstance, wrap_0, undefined, 'number', 'number', 'number']
				],
				4: [
					[newInstance_0, wrap_0, undefined, 'number', 'string', 'number', 'number']
				]
			}
		}, true);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.BoardRankQuoteList[p] === undefined && ($wnd.hippo.quote.BoardRankQuoteList[p] = pkg[p]);
	}

	function BoardRankQuoteList_ExporterImpl_0() {
		$export_45(this);
	}

	function __static_wrapper_putItems(instance, a0) {
		$putItems(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_RankQuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$RankQuoteItem, a0.length, 0))));
	}

	defineSeed(95, 1, {}, BoardRankQuoteList_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_45() {
		return $wnd.hippo.quote.BoardRankQuoteList;
	};
	_.isAssignable = function isAssignable_45(o) {
		return o != null && instanceOf(o, Q$BoardRankQuoteList);
	};
	var exported_45 = false;

	function BoardRankQuoteManager_0() {
		BaseQuoteManager_0.call(this);
		this.mMapBoardRankQuoteList = new TreeMap_0;
	}

	defineSeed(96, 87, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$BoardRankQuoteManager, Q$Exportable]), BoardRankQuoteManager_0);
	_.beginWatch_0 = function beginWatch(quote_0, handler) {
		var list;
		list = $get_3(this.mMapBoardRankQuoteList, '' + quote_0.board + quote_0.subBoard + '' + quote_0.direct + '' + quote_0.sort_0);
		if (list) {
			$copy(list, quote_0);
			quote_0 = list;
		} else {
			$put_2(this.mMapBoardRankQuoteList, '' + quote_0.board + quote_0.subBoard + '' + quote_0.direct + '' + quote_0.sort_0, quote_0);
		}
		log_1('boardRankQuoteList begingwatch, boardRankQuoteList refenrence:' + Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(quote_0)) + ' handler refenrence:' + Lcom_gf_hippo_domain_client_common_EventObject_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(handler)));
		log_1('mMapBoardRankQuoteList size:' + this.mMapBoardRankQuoteList.size_0);
		$beginWatchObject_1(this, quote_0, handler);
	};
	_.endWatch_0 = function endWatch(quote_0, handler) {
		log_1('boardRankQuoteList endwatch, boardRankQuoteList refenrence:' + Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(quote_0)) + ' handler refenrence:' + Lcom_gf_hippo_domain_client_common_EventObject_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(handler)));
		$endWatchObject(this, quote_0, handler);
		$isObjectReferenced(this, quote_0) || this.mRepository.endWatchObject_1(quote_0);
		$isObjectReferenced(this, quote_0) || $remove_3(this.mMapBoardRankQuoteList, '' + quote_0.board + quote_0.subBoard + '' + quote_0.direct + '' + quote_0.sort_0);
	};
	_.getBoardQuoteList_0 = function getBoardQuoteList(boardType, direct, sort_0) {
		var boardRankQuote, keyStr, boradRankQuoteStream;
		keyStr = '' + boardType + '' + direct + '' + sort_0;
		boardRankQuote = $get_3(this.mMapBoardRankQuoteList, keyStr);
		if (!boardRankQuote) {
			boardRankQuote = (boradRankQuoteStream = new BoardRankQuoteList_0, boradRankQuoteStream.board = boardType, boradRankQuoteStream.direct = direct, boradRankQuoteStream.sort_0 = sort_0, boradRankQuoteStream);
			$put_2(this.mMapBoardRankQuoteList, keyStr, boardRankQuote);
		}
		log_1('new BoardRankQuoteList，refenrence:' + Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(boardRankQuote)));
		return boardRankQuote;
	};
	_.getBoardQuoteList_1 = function getBoardQuoteList_0(boardType, subBoardType, direct, sort_0) {
		var boardRankQuote, keyStr, boradRankQuoteStream;
		keyStr = '' + boardType + subBoardType + '' + direct + '' + sort_0;
		boardRankQuote = $get_3(this.mMapBoardRankQuoteList, keyStr);
		if (!boardRankQuote) {
			boardRankQuote = (boradRankQuoteStream = new BoardRankQuoteList_0, boradRankQuoteStream.board = boardType, boradRankQuoteStream.subBoard = subBoardType, boradRankQuoteStream.direct = direct, boradRankQuoteStream.sort_0 = sort_0, boradRankQuoteStream);
			$put_2(this.mMapBoardRankQuoteList, keyStr, boardRankQuote);
		}
		log_1('new 2level Board BoardRankQuoteList，refenrence:' + Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(boardRankQuote)));
		return boardRankQuote;
	};
	_.onDomainData_0 = function onDomainData_0(message, source) {
		var item_0, item$array, item$index, item$max, list, quote_0, quote$iterator, stock; !! message && log_1('receive message type:' + message.getType_0());
		if (instanceOf(message, Q$BoardRankQuoteList)) {
			list = message;
			log_1('message instanceof boardRankQuoteList list.total:' + list.total);
			for (item$array = $getAllItems(list), item$index = 0, item$max = item$array.length; item$index < item$max; ++item$index) {
				item_0 = item$array[item$index];
				stock = $getStock_0(this, item_0.market, item_0.code_0);
				item_0.mSecurities = stock;
			}
			for (quote$iterator = $iterator_0($values(this.mMapBoardRankQuoteList)); quote$iterator.val$outerIter.hasNext();) {
				quote_0 = $next_1(quote$iterator);
				if (quote_0 == list) { !! mLogger && mLogger.debug_0('boardRankQuoteList equal');
					break;
				} else if ($equals_151('' + quote_0.board + quote_0.subBoard + '' + quote_0.direct + '' + quote_0.sort_0, '' + list.board + list.subBoard + '' + list.direct + '' + list.sort_0)) {
					$copy(quote_0, list);
					list = quote_0; !! mLogger && mLogger.debug_0('boardRankQuoteList is exist');
					break;
				}
			}
			log_1('message instanceof boardRankQuoteList-----okkk total:' + list.total);
			$invalidate(this, list, source);
		}
	};

	function $export_46(this$static) {
		if (!exported_46) {
			exported_46 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_BoardRankQuoteManager_2_classLit, this$static);
			new BoardRankQuoteList_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_46(this$static);
		}
	}

	function $export0_46(this$static) {
		var pkg = declarePackage('hippo.quote.BoardRankQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.BoardRankQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BoardRankQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.BoardRankQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getBoardQuoteList = $entry(function(a0, a1, a2, a3) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_BoardRankQuoteManager_2_classLit, 1, arguments, false, false)[0];
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_BoardRankQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_BoardRankQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			},
			1: {
				3: [
					[function() {
						return this.getBoardQuoteList_0.apply(this, arguments);
					},
					wrap_0, undefined, 'number', 'number', 'number']
				],
				4: [
					[function() {
						return this.getBoardQuoteList_1.apply(this, arguments);
					},
					wrap_0, undefined, 'number', 'string', 'number', 'number']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.BoardRankQuoteManager[p] === undefined && ($wnd.hippo.quote.BoardRankQuoteManager[p] = pkg[p]);
	}

	function BoardRankQuoteManager_ExporterImpl_0() {
		$export_46(this);
	}

	defineSeed(97, 1, {}, BoardRankQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_46() {
		return $wnd.hippo.quote.BoardRankQuoteManager;
	};
	_.isAssignable = function isAssignable_46(o) {
		return o != null && instanceOf(o, Q$BoardRankQuoteManager);
	};
	var exported_46 = false;

	function BoardTypes_0() {}

	defineSeed(98, 1, makeCastMap([Q$BoardTypes, Q$Exportable]), BoardTypes_0);

	function $export_47(this$static) {
		if (!exported_47) {
			exported_47 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_BoardTypes_2_classLit, this$static);
			$export0_47(this$static);
		}
	}

	function $export0_47(this$static) {
		var pkg = declarePackage('hippo.quote.BoardTypes');
		var __0, __ = this$static;
		$wnd.hippo.quote.BoardTypes = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BoardTypes_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.BoardTypes.prototype = new Object;
		$wnd.hippo.quote.BoardTypes.BK_UNKNOWN = 0;
		$wnd.hippo.quote.BoardTypes.BK_A = 1;
		$wnd.hippo.quote.BoardTypes.BK_B = 2;
		$wnd.hippo.quote.BoardTypes.BK_SZ_A = 3;
		$wnd.hippo.quote.BoardTypes.BK_SH_A = 4;
		$wnd.hippo.quote.BoardTypes.BK_SZ_B = 5;
		$wnd.hippo.quote.BoardTypes.BK_SH_B = 6;
		$wnd.hippo.quote.BoardTypes.BK_FUND = 7;
		$wnd.hippo.quote.BoardTypes.BK_WARRANT = 8;
		$wnd.hippo.quote.BoardTypes.BK_INDEX = 9;
		$wnd.hippo.quote.BoardTypes.BK_BOND = 10;
		$wnd.hippo.quote.BoardTypes.BK_GROWTH = 11;
		$wnd.hippo.quote.BoardTypes.BK_SMALL = 12;
		$wnd.hippo.quote.BoardTypes.BK_THIRD = 13;
		$wnd.hippo.quote.BoardTypes.BK_GGT = 14;
		$wnd.hippo.quote.BoardTypes.BK_SECTOR = 15;
		$wnd.hippo.quote.BoardTypes.BK_REGION = 16;
		$wnd.hippo.quote.BoardTypes.BK_CONCEPT = 17;
		$wnd.hippo.quote.BoardTypes.BK_SZGT = 18;
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.BoardTypes[p] === undefined && ($wnd.hippo.quote.BoardTypes[p] = pkg[p]);
	}

	function BoardTypes_ExporterImpl_0() {
		$export_47(this);
	}

	defineSeed(99, 1, {}, BoardTypes_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_47() {
		return $wnd.hippo.quote.BoardTypes;
	};
	_.isAssignable = function isAssignable_47(o) {
		return o != null && instanceOf(o, Q$BoardTypes);
	};
	var exported_47 = false;

	function $getCandleQuoteStream(this$static, securities, klinetype, direction, creation) {
		var key, quote_0, quotes;
		if (instanceOf(securities, Q$Stock)) {
			quotes = $get_3(this$static.mMapCandleQuoteStream, securities);
			if (!quotes) {
				if (creation) {
					quotes = new TreeMap_0;
					$put_2(this$static.mMapCandleQuoteStream, securities, quotes);
				} else {
					return null;
				}
			}
			key = '' + klinetype + '.' + direction;
			quote_0 = $get_3(quotes, key);
			if (!quote_0 && creation) {
				quote_0 = new CandleQuoteStream_0(securities, klinetype, direction);
				quote_0.mSecurities = securities;
				$put_2(quotes, key, quote_0);
			}
			return quote_0;
		}
		return null;
	}

	function $putCandleQuoteStream(this$static, quote_0) {
		var key, quotes, stock, stock1;
		stock = quote_0.mSecurities;
		stock1 = stock ? $getStock_0(this$static, stock.market, stock.stock_code) : null;
		quotes = $get_3(this$static.mMapCandleQuoteStream, stock1);
		if (!quotes) {
			quotes = new TreeMap_0;
			$put_2(this$static.mMapCandleQuoteStream, stock1, quotes);
		}
		key = '' + quote_0.periodType + '.' + quote_0.direction;
		$put_2(quotes, key, quote_0);
		return quote_0;
	}

	function CandleQuoteManager_0() {
		BaseQuoteManager_0.call(this);
		this.mMapCandleQuoteStream = new TreeMap_0;
	}

	defineSeed(100, 87, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$CandleQuoteManager, Q$Exportable]), CandleQuoteManager_0);
	_.beginWatch_1 = function beginWatch_0(quote_0, handler) {
		quote_0 = $putCandleQuoteStream(this, quote_0);
		$beginWatchObject_1(this, quote_0, handler);
		log_1('CandleQuoteStream beginwatch,quote reference：' + Lcom_gf_hippo_domain_client_quote_CandleQuoteStream_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(quote_0)) + ' handler reference:' + Lcom_gf_hippo_domain_client_common_EventObject_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(handler)));
	};
	_.endWatch_1 = function endWatch_0(quote_0, handler) {
		$endWatchObject(this, quote_0, handler);
		$isObjectReferenced(this, quote_0) || this.mRepository.endWatchObject_1(quote_0);
		$isObjectReferenced(this, quote_0) || $remove_3(this.mMapCandleQuoteStream, quote_0.mSecurities);
	};
	_.getCandleQuoteStream_0 = function getCandleQuoteStream(securities, klinetype, direciton) {
		return $getCandleQuoteStream(this, securities, klinetype, direciton, true);
	};
	_.onDomainData_0 = function onDomainData_1(message, source) {
		var quote_0, stock, stream; !! message && log_1('receive message type:' + message.getType_0());
		if (instanceOf(message, Q$CandleQuoteStream)) { !! mLogger && mLogger.debug_0('message instanceof CandleQuoteStream');
			stream = message;
			stock = stream.mSecurities;
			quote_0 = $getCandleQuoteStream(this, stock ? $getStock_0(this, stock.market, stock.stock_code) : null, stream.periodType, stream.direction, false);
			if (quote_0) {
				$putItems_0(quote_0, (stream.mItems.size_0 != stream.mArray.length && $updateList(stream), stream.mArray)); !! mLogger && mLogger.debug_0('message instanceof CandleQuoteStream-----okkk');
				$updateList(quote_0);
				$invalidate(this, quote_0, source);
			}
		}
	};

	function $export_48(this$static) {
		if (!exported_48) {
			exported_48 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CandleQuoteManager_2_classLit, this$static);
			new CandleQuoteStream_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new Securities_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_48(this$static);
		}
	}

	function $export0_48(this$static) {
		var pkg = declarePackage('hippo.quote.CandleQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.CandleQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CandleQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CandleQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_1(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_1(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getCandleQuoteStream = $entry(function(a0, a1, a2) {
			return wrap_0(this.g.getCandleQuoteStream_0(a0 == null ? null : a0.g, a1, a2));
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_CandleQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_CandleQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CandleQuoteManager[p] === undefined && ($wnd.hippo.quote.CandleQuoteManager[p] = pkg[p]);
	}

	function CandleQuoteManager_ExporterImpl_0() {
		$export_48(this);
	}

	defineSeed(101, 1, {}, CandleQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_48() {
		return $wnd.hippo.quote.CandleQuoteManager;
	};
	_.isAssignable = function isAssignable_48(o) {
		return o != null && instanceOf(o, Q$CandleQuoteManager);
	};
	var exported_48 = false;

	function $compare(o1, o2) {
		var compare1, compare2;
		compare1 = valueOf_1(o1.time);
		compare2 = valueOf_1(o2.time);
		return compare_12(compare1.value_0, compare2.value_0);
	}

	function CandleQuoteSortByTime_0() {}

	defineSeed(102, 1, makeCastMap([Q$CandleQuoteSortByTime, Q$Exportable]), CandleQuoteSortByTime_0);
	_.compare_1 = function compare_1(o1, o2) {
		return $compare(o1, o2);
	};
	_.compare_0 = function compare_2(o1, o2) {
		return $compare(o1, o2);
	};

	function $export_49(this$static) {
		if (!exported_49) {
			exported_49 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CandleQuoteSortByTime_2_classLit, this$static);
			new CandleQuoteStreamItem_ExporterImpl_0;
			$export0_49(this$static);
		}
	}

	function $export0_49(this$static) {
		var pkg = declarePackage('hippo.quote.CandleQuoteSortByTime');
		var __0, __ = this$static;
		$wnd.hippo.quote.CandleQuoteSortByTime = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CandleQuoteSortByTime_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CandleQuoteSortByTime.prototype = new Object;
		__0.compare = $entry(function(a0, a1) {
			return this.g.compare_1(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CandleQuoteSortByTime[p] === undefined && ($wnd.hippo.quote.CandleQuoteSortByTime[p] = pkg[p]);
	}

	function CandleQuoteSortByTime_ExporterImpl_0() {
		$export_49(this);
	}

	defineSeed(103, 1, {}, CandleQuoteSortByTime_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_49() {
		return $wnd.hippo.quote.CandleQuoteSortByTime;
	};
	_.isAssignable = function isAssignable_49(o) {
		return o != null && instanceOf(o, Q$CandleQuoteSortByTime);
	};
	var exported_49 = false;

	function $getKeyFormatItemTime(this$static, time) {
		var date, day, formatTime, hour, minute, month, year;
		formatTime = P0_longLit;
		date = new Date_2(time);
		year = fromInt(date.jsdate.getFullYear() - 1900 + 1900);
		month = fromInt(date.jsdate.getMonth() + 1);
		day = fromInt(date.jsdate.getDate());
		hour = fromInt(date.jsdate.getHours());
		minute = fromInt(date.jsdate.getMinutes());
		date.jsdate.getSeconds();
		switch (this$static.periodType) {
		case 12:
			formatTime = year;
			break;
		case 11:
			formatTime = add_0(mul(year, Pa_longLit), add_0(div(sub_0(month, P1_longLit), P6_longLit), P1_longLit));
			break;
		case 10:
			formatTime = add_0(mul(year, Pa_longLit), add_0(div(sub_0(month, P1_longLit), P3_longLit), P1_longLit));
			break;
		case 9:
			formatTime = add_0(mul(year, P64_longLit), month);
			break;
		case 8:
			formatTime = add_0(mul(year, P64_longLit), $getWeekOfYear(date));
			break;
		case 7:
			formatTime = add_0(add_0(mul(year, P2710_longLit), mul(month, P64_longLit)), day);
			break;
		case 6:
			formatTime = add_0(add_0(add_0(mul(year, Pf4240_longLit), mul(month, P2710_longLit)), mul(day, P64_longLit)), hour);
			break;
		case 5:
			formatTime = add_0(add_0(add_0(add_0(mul(year, P989680_longLit), mul(month, P186a0_longLit)), mul(day, P3e8_longLit)), mul(hour, Pa_longLit)), add_0(div(minute, P1e_longLit), P1_longLit));
			break;
		case 4:
			formatTime = add_0(add_0(add_0(add_0(mul(year, P989680_longLit), mul(month, P186a0_longLit)), mul(day, P3e8_longLit)), mul(hour, Pa_longLit)), add_0(div(minute, Pf_longLit), P1_longLit));
			break;
		case 3:
			formatTime = add_0(add_0(add_0(add_0(mul(year, P989680_longLit), mul(month, P186a0_longLit)), mul(day, P3e8_longLit)), mul(hour, Pa_longLit)), add_0(div(minute, Pa_longLit), P1_longLit));
			break;
		case 2:
			formatTime = add_0(add_0(add_0(add_0(mul(year, P5f5e100_longLit), mul(month, Pf4240_longLit)), mul(day, P2710_longLit)), mul(hour, P64_longLit)), add_0(div(minute, P5_longLit), P1_longLit));
			break;
		case 1:
			formatTime = add_0(add_0(add_0(add_0(mul(year, P5f5e100_longLit), mul(month, Pf4240_longLit)), mul(day, P2710_longLit)), mul(hour, P64_longLit)), minute);
		}
		return formatTime;
	}

	function $getWeekOfYear(date) {
		var dayOfYear, firstDay, firstWeekDays, year;
		year = date.jsdate.getFullYear() - 1900;
		firstDay = new Date_1(year, 0, 1);
		firstWeekDays = 7 - firstDay.jsdate.getDay() + 1;
		dayOfYear = add_0(div(sub_0(fromDouble(date.jsdate.getTime()), fromDouble(firstDay.jsdate.getTime())), P5265c00_longLit), P1_longLit);
		return add_0(fromDouble(ceil_0(toDouble(sub_0(dayOfYear, fromInt(firstWeekDays))) / 7)), P1_longLit);
	}

	function $putItems_0(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$put_2(this$static.mItems, valueOf_1($getKeyFormatItemTime(this$static, item_0.time)), item_0);
		}
	}

	function $setTime(this$static, time) {
		this$static.time = time;
	}

	function $updateList(this$static) {
		var arr, mList;
		arr = initDim(_3Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$CandleQuoteStreamItem, this$static.mItems.size_0, 0);
		$toArray($values(this$static.mItems), arr);
		mList = new Arrays$ArrayList_0(arr);
		sort_2(mList, new CandleQuoteSortByTime_0);
		$toArray_2(mList, arr);
		this$static.mArray = arr;
	}

	function CandleQuoteStream_0(securities, periodType, direction) {
		this.mItems = new TreeMap_0;
		this.mArray = initDim(_3Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$CandleQuoteStreamItem, 0, 0);
		this.mSecurities = securities;
		this.periodType = periodType;
		this.direction = direction;
	}

	function newInstance_1(securities, periodType, direction) {
		return new CandleQuoteStream_0(securities, periodType, direction);
	}

	defineSeed(104, 94, makeCastMap([Q$DomainObject, Q$CandleQuoteStream, Q$Quote, Q$QuoteStream, Q$Exportable]), CandleQuoteStream_0);
	_.cleanData_0 = function cleanData(maxSize) {
		var arr, count, i_0;
		if (this.mItems.size_0 > maxSize) {
			log_1('cleanData:maxSize:' + maxSize + ' mItems.size:' + this.mItems.size_0);
			arr = (this.mItems.size_0 != this.mArray.length && $updateList(this), this.mArray);
			count = this.mItems.size_0 - maxSize;
			for (i_0 = 0; i_0 < count; i_0++) {
				$remove_3(this.mItems, valueOf_1($getKeyFormatItemTime(this, arr[i_0].time)));
			} !! mLogger && mLogger.debug_0('cleanData:remove count:' + count);
		}
	};
	_.getAllItems_1 = function getAllItems_0() {
		return this.mItems.size_0 != this.mArray.length && $updateList(this), this.mArray;
	};
	_.getCount_0 = function getCount_0() {
		return this.count;
	};
	_.getDirection_0 = function getDirection() {
		return this.direction;
	};
	_.getPeriodType_0 = function getPeriodType() {
		return this.periodType;
	};
	_.getType_0 = function getType_6() {
		return 'CandleQuoteStream';
	};
	_.putItem_1 = function putItem_0(item_0) {
		$put_2(this.mItems, valueOf_1($getKeyFormatItemTime(this, item_0.time)), item_0);
	};
	_.setCount_0 = function setCount_0(count) {
		this.count = count;
	};
	_.size_1 = function size_1() {
		return this.mItems.size_0;
	};
	_.updateList_0 = function updateList() {
		$updateList(this);
	};
	_.count = 0;
	_.direction = 0;
	_.periodType = 7;
	_.time = P0_longLit;

	function $setTime_0(this$static, time) {
		this$static.time = time;
	}

	function CandleQuoteStreamItem_0() {
		this.handover = -1;
	}

	defineSeed(105, 90, makeCastMap([Q$DomainObject, Q$CandleQuoteStreamItem, Q$Quote, Q$QuoteItem, Q$Exportable]), CandleQuoteStreamItem_0);
	_.getAmount_0 = function getAmount() {
		return this.amount;
	};
	_.getAvg_0 = function getAvg() {
		return this.avg;
	};
	_.getClose_0 = function getClose() {
		return this.close_0;
	};
	_.getHandover_0 = function getHandover() {
		return this.handover;
	};
	_.getHigh_0 = function getHigh() {
		return this.high;
	};
	_.getLow_0 = function getLow() {
		return this.low;
	};
	_.getOpen_0 = function getOpen() {
		return this.open_0;
	};
	_.getPclose_0 = function getPclose() {
		return this.pclose;
	};
	_.getType_0 = function getType_7() {
		return 'CandleQuoteStreamItem';
	};
	_.getVolume_0 = function getVolume() {
		return this.volume;
	};
	_.hasHandover_0 = function hasHandover() {
		return this.handover < 0;
	};
	_.setAmount_0 = function setAmount(amount) {
		this.amount = amount;
	};
	_.setAvg_0 = function setAvg(avg) {
		this.avg = avg;
	};
	_.setClose_0 = function setClose(close_0) {
		this.close_0 = close_0;
	};
	_.setHandover_0 = function setHandover(handover) {
		this.handover = handover;
	};
	_.setHigh_0 = function setHigh(high) {
		this.high = high;
	};
	_.setLow_0 = function setLow(low) {
		this.low = low;
	};
	_.setOpen_0 = function setOpen(open_0) {
		this.open_0 = open_0;
	};
	_.setPclose_0 = function setPclose(pclose) {
		this.pclose = pclose;
	};
	_.setVolume_0 = function setVolume(volume) {
		this.volume = volume;
	};
	_.amount = 0;
	_.avg = 0;
	_.close_0 = 0;
	_.handover = 0;
	_.high = 0;
	_.low = 0;
	_.open_0 = 0;
	_.pclose = 0;
	_.time = P0_longLit;
	_.volume = 0;

	function $export_50(this$static) {
		if (!exported_50) {
			exported_50 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_50(this$static);
		}
	}

	function $export0_50(this$static) {
		var pkg = declarePackage('hippo.quote.CandleQuoteStreamItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.CandleQuoteStreamItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CandleQuoteStreamItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CandleQuoteStreamItem.prototype = new Object;
		$wnd.hippo.quote.CandleQuoteStreamItem.TYPE = 'CandleQuoteStreamItem';
		__0.getAmount = $entry(function() {
			return this.g.getAmount_0();
		});
		__0.getAvg = $entry(function() {
			return this.g.getAvg_0();
		});
		__0.getClose = $entry(function() {
			return this.g.getClose_0();
		});
		__0.getFormateTime = $entry(function() {
			return __static_wrapper_getFormateTime(this.g);
		});
		__0.getHandover = $entry(function() {
			return this.g.getHandover_0();
		});
		__0.getHigh = $entry(function() {
			return this.g.getHigh_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getLow = $entry(function() {
			return this.g.getLow_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getOpen = $entry(function() {
			return this.g.getOpen_0();
		});
		__0.getPclose = $entry(function() {
			return this.g.getPclose_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime(this.g);
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getVolume = $entry(function() {
			return this.g.getVolume_0();
		});
		__0.hasHandover = $entry(function() {
			return this.g.hasHandover_0();
		});
		__0.setAmount = $entry(function(a0) {
			this.g.setAmount_0(a0);
		});
		__0.setAvg = $entry(function(a0) {
			this.g.setAvg_0(a0);
		});
		__0.setClose = $entry(function(a0) {
			this.g.setClose_0(a0);
		});
		__0.setHandover = $entry(function(a0) {
			this.g.setHandover_0(a0);
		});
		__0.setHigh = $entry(function(a0) {
			this.g.setHigh_0(a0);
		});
		__0.setLow = $entry(function(a0) {
			this.g.setLow_0(a0);
		});
		__0.setOpen = $entry(function(a0) {
			this.g.setOpen_0(a0);
		});
		__0.setPclose = $entry(function(a0) {
			this.g.setPclose_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime(this.g, a0);
		});
		__0.setVolume = $entry(function(a0) {
			this.g.setVolume_0(a0);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CandleQuoteStreamItem[p] === undefined && ($wnd.hippo.quote.CandleQuoteStreamItem[p] = pkg[p]);
	}

	function CandleQuoteStreamItem_ExporterImpl_0() {
		$export_50(this);
	}

	function __static_wrapper_getFormateTime(instance) {
		var date;
		return toDouble((date = new Date_2(instance.time), add_0(add_0(add_0(add_0(mul(fromInt(date.jsdate.getFullYear() - 1900 + 1900), P5f5e100_longLit), mul(fromInt(date.jsdate.getMonth() + 1), Pf4240_longLit)), mul(fromInt(date.jsdate.getDate()), P2710_longLit)), mul(fromInt(date.jsdate.getHours()), P64_longLit)), fromInt(date.jsdate.getMinutes()))));
	}

	function __static_wrapper_getTime(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_setTime(instance, a0) {
		$setTime_0(instance, fromDouble(a0));
	}

	defineSeed(106, 1, {}, CandleQuoteStreamItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_50() {
		return $wnd.hippo.quote.CandleQuoteStreamItem;
	};
	_.isAssignable = function isAssignable_50(o) {
		return o != null && instanceOf(o, Q$CandleQuoteStreamItem);
	};
	var exported_50 = false;

	function $export_51(this$static) {
		if (!exported_51) {
			exported_51 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CandleQuoteStream_2_classLit, this$static);
			new CandleQuoteStreamItem_ExporterImpl_0;
			$export0_51(this$static);
		}
	}

	function $export0_51(this$static) {
		var pkg = declarePackage('hippo.quote.CandleQuoteStream');
		var __0, __ = this$static;
		$wnd.hippo.quote.CandleQuoteStream = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CandleQuoteStream.prototype = new Object;
		$wnd.hippo.quote.CandleQuoteStream.TYPE = 'CandleQuoteStream';
		__0.cleanData = $entry(function(a0) {
			this.g.cleanData_0(a0);
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_1());
		});
		__0.getCount = $entry(function() {
			return this.g.getCount_0();
		});
		__0.getDirection = $entry(function() {
			return this.g.getDirection_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getKeyFormatItemTime = $entry(function(a0) {
			return __static_wrapper_getKeyFormatItemTime(this.g, a0);
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getPeriodType = $entry(function() {
			return this.g.getPeriodType_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_0(this.g);
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getWeekOfYear = $entry(function(a0) {
			return __static_wrapper_getWeekOfYear(this.g, gwtInstance(a0));
		});
		$wnd.hippo.quote.CandleQuoteStream.newInstance = $entry(function(a0, a1, a2) {
			return wrap_0(newInstance_1(a0 == null ? null : a0.g, a1, a2));
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_1(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_0(this.g, a0);
		});
		__0.setCount = $entry(function(a0) {
			this.g.setCount_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_0(this.g, a0);
		});
		__0.size = $entry(function() {
			return this.g.size_1();
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		__0.updateList = $entry(function() {
			this.g.updateList_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CandleQuoteStream[p] === undefined && ($wnd.hippo.quote.CandleQuoteStream[p] = pkg[p]);
	}

	function CandleQuoteStream_ExporterImpl_0() {
		$export_51(this);
	}

	function __static_wrapper_getKeyFormatItemTime(instance, a0) {
		return toDouble($getKeyFormatItemTime(instance, fromDouble(a0)));
	}

	function __static_wrapper_getTime_0(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_getWeekOfYear(instance, a0) {
		return toDouble($getWeekOfYear(($clinit_ExporterUtil(), new Date_2(fromDouble(a0 && a0.getTime ? a0.getTime() : 0)))));
	}

	function __static_wrapper_putItems_0(instance, a0) {
		$putItems_0(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$CandleQuoteStreamItem, a0.length, 0))));
	}

	function __static_wrapper_setTime_0(instance, a0) {
		$setTime(instance, fromDouble(a0));
	}

	defineSeed(107, 1, {}, CandleQuoteStream_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_51() {
		return $wnd.hippo.quote.CandleQuoteStream;
	};
	_.isAssignable = function isAssignable_51(o) {
		return o != null && instanceOf(o, Q$CandleQuoteStream);
	};
	var exported_51 = false;

	function $getCapFlowQuoteStream(this$static, securities) {
		var quote_0;
		if (instanceOf(securities, Q$Stock)) {
			quote_0 = $get_3(this$static.mMapCapFlowQuoteStream, securities);
			if (!quote_0) { !! mLogger && mLogger.debug_0("CapFlowQuoteStream don't exist in mMapTickQuoteStream,creat new");
				quote_0 = new CapFlowQuoteStream_0;
				quote_0.mSecurities = securities;
				$put_2(this$static.mMapCapFlowQuoteStream, securities, quote_0);
			}
			return quote_0;
		}
		return null;
	}

	function CapFlowQuoteManager_0() {
		BaseQuoteManager_0.call(this);
		this.mMapCapFlowQuoteStream = new TreeMap_0;
	}

	defineSeed(108, 87, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$CapFlowQuoteManager, Q$Exportable]), CapFlowQuoteManager_0);
	_.beginWatch_2 = function beginWatch_1(stream, handler) {
		var stock;
		stock = stream.mSecurities;
		stock = stock ? $getStock_0(this, stock.market, stock.stock_code) : null;
		$beginWatchObject_1(this, $getCapFlowQuoteStream(this, stock), handler);
	};
	_.endWatch_2 = function endWatch_1(stream, handler) {
		var stock;
		stock = stream.mSecurities;
		stock = stock ? $getStock_0(this, stock.market, stock.stock_code) : null;
		stream = $getCapFlowQuoteStream(this, stock);
		$endWatchObject(this, stream, handler);
		$isObjectReferenced(this, stream) || this.mRepository.endWatchObject_1(stream);
		$isObjectReferenced(this, stream) || $remove_3(this.mMapCapFlowQuoteStream, stock);
	};
	_.getCapFlowQuoteStream_0 = function getCapFlowQuoteStream(securities) {
		return $getCapFlowQuoteStream(this, securities);
	};
	_.onDomainData_0 = function onDomainData_2(message, source) {
		var capQuote, quote_0, stock, stock1; !! message && log_1('receive message type:' + message.getType_0());
		if (instanceOf(message, Q$CapFlowQuoteStream)) { !! mLogger && mLogger.debug_0('message instanceof CapFlowQuoteStream');
			capQuote = message;
			stock1 = capQuote.mSecurities;
			stock = stock1 ? $getStock_0(this, stock1.market, stock1.stock_code) : null; !! mLogger && mLogger.debug_0('transform to CapFlowQuoteStream Ok,stream==null?' + !capQuote);
			quote_0 = $getCapFlowQuoteStream(this, stock);
			$putItems_1(quote_0, (capQuote.mItems.size_0 != capQuote.mArray.length && $updateList_0(capQuote), capQuote.mArray));
			$updateList_0(quote_0);
			$invalidate(this, quote_0, source);
			log_1('save CapFlowQuoteStream,size:' + capQuote.mItems.size_0);
		}
	};

	function $export_52(this$static) {
		if (!exported_52) {
			exported_52 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CapFlowQuoteManager_2_classLit, this$static);
			new CapFlowQuoteStream_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_52(this$static);
		}
	}

	function $export0_52(this$static) {
		var pkg = declarePackage('hippo.quote.CapFlowQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.CapFlowQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CapFlowQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CapFlowQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_2(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_2(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getCapFlowQuoteStream = $entry(function(a0) {
			return wrap_0(this.g.getCapFlowQuoteStream_0(a0 == null ? null : a0.g));
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_CapFlowQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_CapFlowQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CapFlowQuoteManager[p] === undefined && ($wnd.hippo.quote.CapFlowQuoteManager[p] = pkg[p]);
	}

	function CapFlowQuoteManager_ExporterImpl_0() {
		$export_52(this);
	}

	defineSeed(109, 1, {}, CapFlowQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_52() {
		return $wnd.hippo.quote.CapFlowQuoteManager;
	};
	_.isAssignable = function isAssignable_52(o) {
		return o != null && instanceOf(o, Q$CapFlowQuoteManager);
	};
	var exported_52 = false;

	function $compare_0(o1, o2) {
		var compare1, compare2;
		compare1 = new Long_0(__parseAndValidateLong(o1.time));
		compare2 = new Long_0(__parseAndValidateLong(o2.time));
		return compare_12(compare1.value_0, compare2.value_0);
	}

	function CapFlowQuoteSortByTime_0() {}

	defineSeed(110, 1, makeCastMap([Q$CapFlowQuoteSortByTime, Q$Exportable]), CapFlowQuoteSortByTime_0);
	_.compare_2 = function compare_3(o1, o2) {
		return $compare_0(o1, o2);
	};
	_.compare_0 = function compare_4(o1, o2) {
		return $compare_0(o1, o2);
	};

	function $export_53(this$static) {
		if (!exported_53) {
			exported_53 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CapFlowQuoteSortByTime_2_classLit, this$static);
			new CapFlowQuoteStreamItem_ExporterImpl_0;
			$export0_53(this$static);
		}
	}

	function $export0_53(this$static) {
		var pkg = declarePackage('hippo.quote.CapFlowQuoteSortByTime');
		var __0, __ = this$static;
		$wnd.hippo.quote.CapFlowQuoteSortByTime = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CapFlowQuoteSortByTime_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CapFlowQuoteSortByTime.prototype = new Object;
		__0.compare = $entry(function(a0, a1) {
			return this.g.compare_2(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CapFlowQuoteSortByTime[p] === undefined && ($wnd.hippo.quote.CapFlowQuoteSortByTime[p] = pkg[p]);
	}

	function CapFlowQuoteSortByTime_ExporterImpl_0() {
		$export_53(this);
	}

	defineSeed(111, 1, {}, CapFlowQuoteSortByTime_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_53() {
		return $wnd.hippo.quote.CapFlowQuoteSortByTime;
	};
	_.isAssignable = function isAssignable_53(o) {
		return o != null && instanceOf(o, Q$CapFlowQuoteSortByTime);
	};
	var exported_53 = false;

	function $getKey(item_0) {
		var key;
		key = item_0.time;
		if (key != null && key.length >= 8) {
			return $substring_0(key, 0, 8);
		}
		return 'unknow';
	}

	function $putItems_1(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$put_2(this$static.mItems, $getKey(item_0), item_0);
		}
	}

	function $updateList_0(this$static) {
		var arr, mList;
		arr = initDim(_3Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$CapFlowQuoteStreamItem, this$static.mItems.size_0, 0);
		$toArray($values(this$static.mItems), arr);
		mList = new Arrays$ArrayList_0(arr);
		sort_2(mList, new CapFlowQuoteSortByTime_0);
		$toArray_2(mList, arr);
		this$static.mArray = arr;
	}

	function CapFlowQuoteStream_0() {
		this.mItems = new TreeMap_0;
		this.mArray = initDim(_3Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$CapFlowQuoteStreamItem, 0, 0);
	}

	defineSeed(112, 94, makeCastMap([Q$DomainObject, Q$CapFlowQuoteStream, Q$Quote, Q$QuoteStream, Q$Exportable]), CapFlowQuoteStream_0);
	_.clear_0 = function clear_0() {
		$clear_155(this.mItems);
	};
	_.getAllItems_2 = function getAllItems_1() {
		return this.mItems.size_0 != this.mArray.length && $updateList_0(this), this.mArray;
	};
	_.getBeginDate_0 = function getBeginDate() {
		return this.beginDate;
	};
	_.getEndDate_0 = function getEndDate() {
		return this.endDate;
	};
	_.getKey_1 = function getKey_0(item_0) {
		return $getKey(item_0);
	};
	_.getType_0 = function getType_8() {
		return 'CapFlowQuoteStreamItem';
	};
	_.putItem_2 = function putItem_1(item_0) {
		$put_2(this.mItems, $getKey(item_0), item_0);
	};
	_.setDate_0 = function setDate(beginDate, endDate) {
		this.beginDate = beginDate;
		this.endDate = endDate;
	};
	_.size_1 = function size_2() {
		return this.mItems.size_0;
	};
	_.updateList_0 = function updateList_0() {
		$updateList_0(this);
	};
	_.beginDate = 0;
	_.endDate = 0;

	function $setBinflow(this$static, binflow) {
		this$static.binflow = binflow;
	}

	function $setBinflowrate(this$static, binflowrate) {
		this$static.binflowrate = binflowrate;
	}

	function $setBoutflow(this$static, boutflow) {
		this$static.boutflow = boutflow;
	}

	function $setBoutflowrate(this$static, boutflowrate) {
		this$static.boutflowrate = boutflowrate;
	}

	function $setInflow(this$static, inflow) {
		this$static.inflow = inflow;
	}

	function $setMinflow(this$static, minflow) {
		this$static.minflow = minflow;
	}

	function $setMinflowrate(this$static, minflowrate) {
		this$static.minflowrate = minflowrate;
	}

	function $setMoutflow(this$static, moutflow) {
		this$static.moutflow = moutflow;
	}

	function $setMoutflowrate(this$static, moutflowrate) {
		this$static.moutflowrate = moutflowrate;
	}

	function $setNetbinflow(this$static, netbinflow) {
		this$static.netbinflow = netbinflow;
	}

	function $setNetinflow(this$static, netinflow) {
		this$static.netinflow = netinflow;
	}

	function $setNetminflow(this$static, netminflow) {
		this$static.netminflow = netminflow;
	}

	function $setNetsinflow(this$static, netsinflow) {
		this$static.netsinflow = netsinflow;
	}

	function $setOutflow(this$static, outflow) {
		this$static.outflow = outflow;
	}

	function $setSinflow(this$static, sinflow) {
		this$static.sinflow = sinflow;
	}

	function $setSinflowrate(this$static, sinflowrate) {
		this$static.sinflowrate = sinflowrate;
	}

	function $setSoutflow(this$static, soutflow) {
		this$static.soutflow = soutflow;
	}

	function $setSoutflowrate(this$static, soutflowrate) {
		this$static.soutflowrate = soutflowrate;
	}

	function $setTime_1(this$static, time) {
		this$static.time = time;
	}

	function $setTotal(this$static, total) {
		this$static.total = total;
	}

	function CapFlowQuoteStreamItem_0() {}

	defineSeed(113, 90, makeCastMap([Q$DomainObject, Q$CapFlowQuoteStreamItem, Q$Quote, Q$QuoteItem, Q$Exportable]), CapFlowQuoteStreamItem_0);
	_.copy_1 = function copy_1(source) {
		$setTime_1(this, source.time);
		$setTotal(this, source.total);
		$setBinflow(this, source.binflow);
		$setMinflow(this, source.minflow);
		$setSinflow(this, source.sinflow);
		$setBoutflow(this, source.boutflow);
		$setMoutflow(this, source.moutflow);
		$setSoutflow(this, source.soutflow);
		$setNetbinflow(this, source.netbinflow);
		$setNetminflow(this, source.netminflow);
		$setNetsinflow(this, source.netsinflow);
		$setInflow(this, source.inflow);
		$setOutflow(this, source.outflow);
		$setNetinflow(this, source.netinflow);
		$setBinflowrate(this, source.binflowrate);
		$setMinflowrate(this, source.minflowrate);
		$setSinflowrate(this, source.sinflowrate);
		$setBoutflowrate(this, source.boutflowrate);
		$setMoutflowrate(this, source.moutflowrate);
		$setSoutflowrate(this, source.soutflowrate);
	};
	_.getBinflow_0 = function getBinflow() {
		return this.binflow;
	};
	_.getBinflowrate_0 = function getBinflowrate() {
		return this.binflowrate;
	};
	_.getBoutflow_0 = function getBoutflow() {
		return this.boutflow;
	};
	_.getBoutflowrate_0 = function getBoutflowrate() {
		return this.boutflowrate;
	};
	_.getInflow_0 = function getInflow() {
		return this.inflow;
	};
	_.getMinflow_0 = function getMinflow() {
		return this.minflow;
	};
	_.getMinflowrate_0 = function getMinflowrate() {
		return this.minflowrate;
	};
	_.getMoutflow_0 = function getMoutflow() {
		return this.moutflow;
	};
	_.getMoutflowrate_0 = function getMoutflowrate() {
		return this.moutflowrate;
	};
	_.getNetbinflow_0 = function getNetbinflow() {
		return this.netbinflow;
	};
	_.getNetinflow_0 = function getNetinflow() {
		return this.netinflow;
	};
	_.getNetminflow_0 = function getNetminflow() {
		return this.netminflow;
	};
	_.getNetsinflow_0 = function getNetsinflow() {
		return this.netsinflow;
	};
	_.getOutflow_0 = function getOutflow() {
		return this.outflow;
	};
	_.getSinflow_0 = function getSinflow() {
		return this.sinflow;
	};
	_.getSinflowrate_0 = function getSinflowrate() {
		return this.sinflowrate;
	};
	_.getSoutflow_0 = function getSoutflow() {
		return this.soutflow;
	};
	_.getSoutflowrate_0 = function getSoutflowrate() {
		return this.soutflowrate;
	};
	_.getTime_0 = function getTime() {
		return this.time;
	};
	_.getTotal_1 = function getTotal_0() {
		return this.total;
	};
	_.getType_0 = function getType_9() {
		return 'CapFlowQuoteStreamItem';
	};
	_.setBinflow_0 = function setBinflow(binflow) {
		$setBinflow(this, binflow);
	};
	_.setBinflowrate_0 = function setBinflowrate(binflowrate) {
		$setBinflowrate(this, binflowrate);
	};
	_.setBoutflow_0 = function setBoutflow(boutflow) {
		$setBoutflow(this, boutflow);
	};
	_.setBoutflowrate_0 = function setBoutflowrate(boutflowrate) {
		$setBoutflowrate(this, boutflowrate);
	};
	_.setInflow_0 = function setInflow(inflow) {
		$setInflow(this, inflow);
	};
	_.setMinflow_0 = function setMinflow(minflow) {
		$setMinflow(this, minflow);
	};
	_.setMinflowrate_0 = function setMinflowrate(minflowrate) {
		$setMinflowrate(this, minflowrate);
	};
	_.setMoutflow_0 = function setMoutflow(moutflow) {
		$setMoutflow(this, moutflow);
	};
	_.setMoutflowrate_0 = function setMoutflowrate(moutflowrate) {
		$setMoutflowrate(this, moutflowrate);
	};
	_.setNetbinflow_0 = function setNetbinflow(netbinflow) {
		$setNetbinflow(this, netbinflow);
	};
	_.setNetinflow_0 = function setNetinflow(netinflow) {
		$setNetinflow(this, netinflow);
	};
	_.setNetminflow_0 = function setNetminflow(netminflow) {
		$setNetminflow(this, netminflow);
	};
	_.setNetsinflow_0 = function setNetsinflow(netsinflow) {
		$setNetsinflow(this, netsinflow);
	};
	_.setOutflow_0 = function setOutflow(outflow) {
		$setOutflow(this, outflow);
	};
	_.setSinflow_0 = function setSinflow(sinflow) {
		$setSinflow(this, sinflow);
	};
	_.setSinflowrate_0 = function setSinflowrate(sinflowrate) {
		$setSinflowrate(this, sinflowrate);
	};
	_.setSoutflow_0 = function setSoutflow(soutflow) {
		$setSoutflow(this, soutflow);
	};
	_.setSoutflowrate_0 = function setSoutflowrate(soutflowrate) {
		$setSoutflowrate(this, soutflowrate);
	};
	_.setTime_0 = function setTime(time) {
		$setTime_1(this, time);
	};
	_.setTotal_1 = function setTotal_0(total) {
		$setTotal(this, total);
	};
	_.binflow = 0;
	_.binflowrate = 0;
	_.boutflow = 0;
	_.boutflowrate = 0;
	_.inflow = 0;
	_.minflow = 0;
	_.minflowrate = 0;
	_.moutflow = 0;
	_.moutflowrate = 0;
	_.netbinflow = 0;
	_.netinflow = 0;
	_.netminflow = 0;
	_.netsinflow = 0;
	_.outflow = 0;
	_.sinflow = 0;
	_.sinflowrate = 0;
	_.soutflow = 0;
	_.soutflowrate = 0;
	_.total = 0;

	function $export_54(this$static) {
		if (!exported_54) {
			exported_54 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_54(this$static);
		}
	}

	function $export0_54(this$static) {
		var pkg = declarePackage('hippo.quote.CapFlowQuoteStreamItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.CapFlowQuoteStreamItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CapFlowQuoteStreamItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CapFlowQuoteStreamItem.prototype = new Object;
		$wnd.hippo.quote.CapFlowQuoteStreamItem.TYPE = 'CapFlowQuoteStreamItem';
		__0.copy = $entry(function(a0) {
			this.g.copy_1(a0 == null ? null : a0.g);
		});
		__0.getBinflow = $entry(function() {
			return this.g.getBinflow_0();
		});
		__0.getBinflowrate = $entry(function() {
			return this.g.getBinflowrate_0();
		});
		__0.getBoutflow = $entry(function() {
			return this.g.getBoutflow_0();
		});
		__0.getBoutflowrate = $entry(function() {
			return this.g.getBoutflowrate_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getInflow = $entry(function() {
			return this.g.getInflow_0();
		});
		__0.getMinflow = $entry(function() {
			return this.g.getMinflow_0();
		});
		__0.getMinflowrate = $entry(function() {
			return this.g.getMinflowrate_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getMoutflow = $entry(function() {
			return this.g.getMoutflow_0();
		});
		__0.getMoutflowrate = $entry(function() {
			return this.g.getMoutflowrate_0();
		});
		__0.getNetbinflow = $entry(function() {
			return this.g.getNetbinflow_0();
		});
		__0.getNetinflow = $entry(function() {
			return this.g.getNetinflow_0();
		});
		__0.getNetminflow = $entry(function() {
			return this.g.getNetminflow_0();
		});
		__0.getNetsinflow = $entry(function() {
			return this.g.getNetsinflow_0();
		});
		__0.getOutflow = $entry(function() {
			return this.g.getOutflow_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getSinflow = $entry(function() {
			return this.g.getSinflow_0();
		});
		__0.getSinflowrate = $entry(function() {
			return this.g.getSinflowrate_0();
		});
		__0.getSoutflow = $entry(function() {
			return this.g.getSoutflow_0();
		});
		__0.getSoutflowrate = $entry(function() {
			return this.g.getSoutflowrate_0();
		});
		__0.getTime = $entry(function() {
			return this.g.getTime_0();
		});
		__0.getTotal = $entry(function() {
			return this.g.getTotal_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setBinflow = $entry(function(a0) {
			this.g.setBinflow_0(a0);
		});
		__0.setBinflowrate = $entry(function(a0) {
			this.g.setBinflowrate_0(a0);
		});
		__0.setBoutflow = $entry(function(a0) {
			this.g.setBoutflow_0(a0);
		});
		__0.setBoutflowrate = $entry(function(a0) {
			this.g.setBoutflowrate_0(a0);
		});
		__0.setInflow = $entry(function(a0) {
			this.g.setInflow_0(a0);
		});
		__0.setMinflow = $entry(function(a0) {
			this.g.setMinflow_0(a0);
		});
		__0.setMinflowrate = $entry(function(a0) {
			this.g.setMinflowrate_0(a0);
		});
		__0.setMoutflow = $entry(function(a0) {
			this.g.setMoutflow_0(a0);
		});
		__0.setMoutflowrate = $entry(function(a0) {
			this.g.setMoutflowrate_0(a0);
		});
		__0.setNetbinflow = $entry(function(a0) {
			this.g.setNetbinflow_0(a0);
		});
		__0.setNetinflow = $entry(function(a0) {
			this.g.setNetinflow_0(a0);
		});
		__0.setNetminflow = $entry(function(a0) {
			this.g.setNetminflow_0(a0);
		});
		__0.setNetsinflow = $entry(function(a0) {
			this.g.setNetsinflow_0(a0);
		});
		__0.setOutflow = $entry(function(a0) {
			this.g.setOutflow_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setSinflow = $entry(function(a0) {
			this.g.setSinflow_0(a0);
		});
		__0.setSinflowrate = $entry(function(a0) {
			this.g.setSinflowrate_0(a0);
		});
		__0.setSoutflow = $entry(function(a0) {
			this.g.setSoutflow_0(a0);
		});
		__0.setSoutflowrate = $entry(function(a0) {
			this.g.setSoutflowrate_0(a0);
		});
		__0.setTime = $entry(function(a0) {
			this.g.setTime_0(a0);
		});
		__0.setTotal = $entry(function(a0) {
			this.g.setTotal_1(a0);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CapFlowQuoteStreamItem[p] === undefined && ($wnd.hippo.quote.CapFlowQuoteStreamItem[p] = pkg[p]);
	}

	function CapFlowQuoteStreamItem_ExporterImpl_0() {
		$export_54(this);
	}

	defineSeed(114, 1, {}, CapFlowQuoteStreamItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_54() {
		return $wnd.hippo.quote.CapFlowQuoteStreamItem;
	};
	_.isAssignable = function isAssignable_54(o) {
		return o != null && instanceOf(o, Q$CapFlowQuoteStreamItem);
	};
	var exported_54 = false;

	function $export_55(this$static) {
		if (!exported_55) {
			exported_55 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStream_2_classLit, this$static);
			new CapFlowQuoteStreamItem_ExporterImpl_0;
			$export0_55(this$static);
		}
	}

	function $export0_55(this$static) {
		var pkg = declarePackage('hippo.quote.CapFlowQuoteStream');
		var __0, __ = this$static;
		$wnd.hippo.quote.CapFlowQuoteStream = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CapFlowQuoteStream_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.CapFlowQuoteStream.prototype = new Object;
		$wnd.hippo.quote.CapFlowQuoteStream.TYPE = 'CapFlowQuoteStreamItem';
		__0.clear = $entry(function() {
			this.g.clear_0();
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_2());
		});
		__0.getBeginDate = $entry(function() {
			return this.g.getBeginDate_0();
		});
		__0.getEndDate = $entry(function() {
			return this.g.getEndDate_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getKey = $entry(function(a0) {
			return this.g.getKey_1(a0 == null ? null : a0.g);
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_2(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_1(this.g, a0);
		});
		__0.setDate = $entry(function(a0, a1) {
			this.g.setDate_0(a0, a1);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.size = $entry(function() {
			return this.g.size_1();
		});
		__0.updateList = $entry(function() {
			this.g.updateList_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.CapFlowQuoteStream[p] === undefined && ($wnd.hippo.quote.CapFlowQuoteStream[p] = pkg[p]);
	}

	function CapFlowQuoteStream_ExporterImpl_0() {
		$export_55(this);
	}

	function __static_wrapper_putItems_1(instance, a0) {
		$putItems_1(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$CapFlowQuoteStreamItem, a0.length, 0))));
	}

	defineSeed(115, 1, {}, CapFlowQuoteStream_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_55() {
		return $wnd.hippo.quote.CapFlowQuoteStream;
	};
	_.isAssignable = function isAssignable_55(o) {
		return o != null && instanceOf(o, Q$CapFlowQuoteStream);
	};
	var exported_55 = false;

	function $clinit_PeriodType() {
		$clinit_PeriodType = nullMethod;
		topicArrary = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['m1', 'm5', 'm10', 'm15', 'm30', 'm60', 'd', 'w', 'mt', 'qr', 'se', 'y']);
	}

	function PeriodType_0() {
		$clinit_PeriodType();
	}

	function getTopicString(periodType) {
		$clinit_PeriodType();
		var retrunV;
		retrunV = topicArrary[periodType - 1];
		return retrunV;
	}

	defineSeed(116, 1, makeCastMap([Q$PeriodType, Q$Exportable]), PeriodType_0);
	var topicArrary;

	function $export_56(this$static) {
		if (!exported_56) {
			exported_56 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_PeriodType_2_classLit, this$static);
			$export0_56(this$static);
		}
	}

	function $export0_56(this$static) {
		var pkg = declarePackage('hippo.quote.PeriodType');
		var __0, __ = this$static;
		$wnd.hippo.quote.PeriodType = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new PeriodType_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.PeriodType.prototype = new Object;
		$wnd.hippo.quote.PeriodType.KX_UNKNOWN = 0;
		$wnd.hippo.quote.PeriodType.KX_1MIN = 1;
		$wnd.hippo.quote.PeriodType.KX_5MIN = 2;
		$wnd.hippo.quote.PeriodType.KX_10MIN = 3;
		$wnd.hippo.quote.PeriodType.KX_15MIN = 4;
		$wnd.hippo.quote.PeriodType.KX_30MIN = 5;
		$wnd.hippo.quote.PeriodType.KX_60MIN = 6;
		$wnd.hippo.quote.PeriodType.KX_DAY = 7;
		$wnd.hippo.quote.PeriodType.KX_WEEK = 8;
		$wnd.hippo.quote.PeriodType.KX_MONTH = 9;
		$wnd.hippo.quote.PeriodType.KX_03MNT = 10;
		$wnd.hippo.quote.PeriodType.KX_06MNT = 11;
		$wnd.hippo.quote.PeriodType.KX_12MNT = 12;
		$wnd.hippo.quote.PeriodType.getTopicString = $entry(function(a0) {
			return getTopicString(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.PeriodType[p] === undefined && ($wnd.hippo.quote.PeriodType[p] = pkg[p]);
	}

	function PeriodType_ExporterImpl_0() {
		$export_56(this);
	}

	defineSeed(117, 1, {}, PeriodType_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_56() {
		return $wnd.hippo.quote.PeriodType;
	};
	_.isAssignable = function isAssignable_56(o) {
		return o != null && instanceOf(o, Q$PeriodType);
	};
	var exported_56 = false;

	function $getAllItems_0(this$static) {
		var quoteItems;
		quoteItems = initDim(_3Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$QuoteItem, this$static.mItems.size_0, 0);
		$toArray_1(this$static.mItems, quoteItems);
		return quoteItems;
	}

	function $putItem(this$static, item_0) {
		if (!item_0) return;
		$add(this$static.mItems, item_0);
	}

	function $putItems_2(this$static, allItems) {
		var i_0;
		for (i_0 = 0; i_0 < allItems.length; ++i_0) {
			$putItem(this$static, allItems[i_0]);
		}
	}

	function QuoteItemList_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(118, 28, makeCastMap([Q$DomainObject, Q$QuoteItemList, Q$Exportable]), QuoteItemList_0);
	_.deleteItem_0 = function deleteItem(item_0) {
		$remove_2(this.mItems, item_0);
	};
	_.getAllItems_3 = function getAllItems_2() {
		return $getAllItems_0(this);
	};
	_.getAllList_0 = function getAllList() {
		return this.mItems;
	};
	_.getItemAt_0 = function getItemAt(index_0) {
		return $get_2(this.mItems, index_0);
	};
	_.getKey_0 = function getKey_1() {
		return this.listKey;
	};
	_.getType_0 = function getType_10() {
		return 'QuoteItemList';
	};
	_.putItem_3 = function putItem_2(item_0) {
		$putItem(this, item_0);
	};
	_.removeAllItems_0 = function removeAllItems() {
		$clear_154(this.mItems);
	};
	_.setKey_0 = function setKey(key) {
		this.listKey = key;
	};
	_.listKey = '';

	function $export_57(this$static) {
		if (!exported_57) {
			exported_57 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteItemList_2_classLit, this$static);
			new QuoteItem_ExporterImpl_0;
			$export0_57(this$static);
		}
	}

	function $export0_57(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteItemList');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteItemList = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteItemList_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteItemList.prototype = new Object;
		$wnd.hippo.quote.QuoteItemList.TYPE = 'QuoteItemList';
		__0.deleteItem = $entry(function(a0) {
			this.g.deleteItem_0(a0 == null ? null : a0.g);
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_3());
		});
		__0.getAllList = $entry(function() {
			return this.g.getAllList_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getItemAt = $entry(function(a0) {
			return wrap_0(this.g.getItemAt_0(a0));
		});
		__0.getKey = $entry(function() {
			return this.g.getKey_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_3(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_2(this.g, a0);
		});
		__0.removeAllItems = $entry(function() {
			this.g.removeAllItems_0();
		});
		__0.setKey = $entry(function(a0) {
			this.g.setKey_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteItemList[p] === undefined && ($wnd.hippo.quote.QuoteItemList[p] = pkg[p]);
	}

	function QuoteItemList_ExporterImpl_0() {
		$export_57(this);
	}

	function __static_wrapper_putItems_2(instance, a0) {
		$putItems_2(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$QuoteItem, a0.length, 0))));
	}

	defineSeed(119, 1, {}, QuoteItemList_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_57() {
		return $wnd.hippo.quote.QuoteItemList;
	};
	_.isAssignable = function isAssignable_57(o) {
		return o != null && instanceOf(o, Q$QuoteItemList);
	};
	var exported_57 = false;

	function $export_58(this$static) {
		if (!exported_58) {
			exported_58 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_58(this$static);
		}
	}

	function $export0_58(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteItem.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteItem[p] === undefined && ($wnd.hippo.quote.QuoteItem[p] = pkg[p]);
	}

	function QuoteItem_ExporterImpl_0() {
		$export_58(this);
	}

	defineSeed(120, 1, {}, QuoteItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_58() {
		return $wnd.hippo.quote.QuoteItem;
	};
	_.isAssignable = function isAssignable_58(o) {
		return o != null && instanceOf(o, Q$QuoteItem);
	};
	var exported_58 = false;

	function QuoteList_0() {}

	defineSeed(121, 91, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteList, Q$Exportable]), QuoteList_0);
	_.getType_0 = function getType_11() {
		return 'quoteList';
	};

	function $export_59(this$static) {
		if (!exported_59) {
			exported_59 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteList_2_classLit, this$static);
			$export0_59(this$static);
		}
	}

	function $export0_59(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteList');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteList = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteList_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteList.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteList[p] === undefined && ($wnd.hippo.quote.QuoteList[p] = pkg[p]);
	}

	function QuoteList_ExporterImpl_0() {
		$export_59(this);
	}

	defineSeed(122, 1, {}, QuoteList_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_59() {
		return $wnd.hippo.quote.QuoteList;
	};
	_.isAssignable = function isAssignable_59(o) {
		return o != null && instanceOf(o, Q$QuoteList);
	};
	var exported_59 = false;

	function QuoteTestItem_0(tType) {
		this.testType = tType;
	}

	defineSeed(124, 91, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteTestItem, Q$Exportable]), QuoteTestItem_0);
	_.copy_2 = function copy_2(source) {};
	_.getTestType_0 = function getTestType() {
		return this.testType;
	};
	_.getType_0 = function getType_12() {
		return 'quote_test';
	};
	_.setTestType_0 = function setTestType(tType) {
		this.testType = tType;
	};
	_.testType = '';

	function $setShTime(this$static, time) {
		this$static.shTime = time;
	}

	function $setSzTime(this$static, time) {
		this$static.szTime = time;
	}

	function QuoteMarketTestItem_0() {
		QuoteTestItem_0.call(this, 'MARKET_TEST');
	}

	defineSeed(123, 124, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteMarketTestItem, Q$QuoteTestItem, Q$Exportable]), QuoteMarketTestItem_0);
	_.copy_2 = function copy_3(source) {
		if (instanceOf(source, Q$QuoteMarketTestItem)) {
			this.szTime = source.szTime;
			this.shTime = source.shTime;
			this.szStatus = source.szStatus;
			this.shStatus = source.shStatus;
		}
	};
	_.getSzStatus_0 = function getSzStatus() {
		return this.szStatus;
	};
	_.setShStatus_0 = function setShStatus(status_0) {
		this.shStatus = status_0;
	};
	_.setSzStatus_0 = function setSzStatus(status_0) {
		this.szStatus = status_0;
	};
	_.shStatus = 0;
	_.shTime = P0_longLit;
	_.szStatus = 0;
	_.szTime = P0_longLit;

	function $export_60(this$static) {
		if (!exported_60) {
			exported_60 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteMarketTestItem_2_classLit, this$static);
			new QuoteTestItem_ExporterImpl_0;
			$export0_60(this$static);
		}
	}

	function $export0_60(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteMarketTestItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteMarketTestItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteMarketTestItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteMarketTestItem.prototype = new Object;
		__0.copy = $entry(function(a0) {
			this.g.copy_2(a0 == null ? null : a0.g);
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getShStatus = $entry(function() {
			return __static_wrapper_getShStatus(this.g);
		});
		__0.getShTime = $entry(function() {
			return __static_wrapper_getShTime(this.g);
		});
		__0.getSzStatus = $entry(function() {
			return this.g.getSzStatus_0();
		});
		__0.getSzTime = $entry(function() {
			return __static_wrapper_getSzTime(this.g);
		});
		__0.getTestType = $entry(function() {
			return this.g.getTestType_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setShStatus = $entry(function(a0) {
			this.g.setShStatus_0(a0);
		});
		__0.setShTime = $entry(function(a0) {
			__static_wrapper_setShTime(this.g, a0);
		});
		__0.setSzStatus = $entry(function(a0) {
			this.g.setSzStatus_0(a0);
		});
		__0.setSzTime = $entry(function(a0) {
			__static_wrapper_setSzTime(this.g, a0);
		});
		__0.setTestType = $entry(function(a0) {
			this.g.setTestType_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteMarketTestItem[p] === undefined && ($wnd.hippo.quote.QuoteMarketTestItem[p] = pkg[p]);
	}

	function QuoteMarketTestItem_ExporterImpl_0() {
		$export_60(this);
	}

	function __static_wrapper_getShStatus(instance) {
		return toDouble(fromInt(instance.shStatus));
	}

	function __static_wrapper_getShTime(instance) {
		return toDouble(instance.shTime);
	}

	function __static_wrapper_getSzTime(instance) {
		return toDouble(instance.szTime);
	}

	function __static_wrapper_setShTime(instance, a0) {
		$setShTime(instance, fromDouble(a0));
	}

	function __static_wrapper_setSzTime(instance, a0) {
		$setSzTime(instance, fromDouble(a0));
	}

	defineSeed(125, 1, {}, QuoteMarketTestItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_60() {
		return $wnd.hippo.quote.QuoteMarketTestItem;
	};
	_.isAssignable = function isAssignable_60(o) {
		return o != null && instanceOf(o, Q$QuoteMarketTestItem);
	};
	var exported_60 = false;

	function $export_61(this$static) {
		if (!exported_61) {
			exported_61 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteStream_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_61(this$static);
		}
	}

	function $export0_61(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteStream');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteStream = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteStream_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteStream.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteStream[p] === undefined && ($wnd.hippo.quote.QuoteStream[p] = pkg[p]);
	}

	function QuoteStream_ExporterImpl_0() {
		$export_61(this);
	}

	defineSeed(126, 1, {}, QuoteStream_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_61() {
		return $wnd.hippo.quote.QuoteStream;
	};
	_.isAssignable = function isAssignable_61(o) {
		return o != null && instanceOf(o, Q$QuoteStream);
	};
	var exported_61 = false;

	function $export_62(this$static) {
		if (!exported_62) {
			exported_62 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteTestItem_2_classLit, this$static);
			$export0_62(this$static);
		}
	}

	function $export0_62(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteTestItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteTestItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 1 && (g = new QuoteTestItem_0(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteTestItem.prototype = new Object;
		__0.copy = $entry(function(a0) {
			this.g.copy_2(a0 == null ? null : a0.g);
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getTestType = $entry(function() {
			return this.g.getTestType_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setTestType = $entry(function(a0) {
			this.g.setTestType_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteTestItem[p] === undefined && ($wnd.hippo.quote.QuoteTestItem[p] = pkg[p]);
	}

	function QuoteTestItem_ExporterImpl_0() {
		$export_62(this);
	}

	defineSeed(127, 1, {}, QuoteTestItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_62() {
		return $wnd.hippo.quote.QuoteTestItem;
	};
	_.isAssignable = function isAssignable_62(o) {
		return o != null && instanceOf(o, Q$QuoteTestItem);
	};
	var exported_62 = false;

	function QuoteTestManager_0() {
		BaseManager_0.call(this);
		this.mMapQuoteTestItem = new TreeMap_0;
	}

	defineSeed(128, 17, makeCastMap([Q$BaseManager, Q$Manager, Q$QuoteTestManager, Q$Exportable]), QuoteTestManager_0);
	_.beginWatch_3 = function beginWatch_2(object, handler) {
		if (instanceOf(object, Q$QuoteTestItem)) {
			$beginWatchObject(this, object, handler);
			this.mRepository.beginWatchObject_1(object);
		}
	};
	_.endWatch_3 = function endWatch_2(object, handler) {
		instanceOf(object, Q$QuoteTestItem) && $endWatchObject(this, object, handler);
	};
	_.getMapQuoteTestItem_0 = function getMapQuoteTestItem() {
		return this.mMapQuoteTestItem;
	};
	_.getQuoteTestItem_0 = function getQuoteTestItem(testType) {
		var qTestItem;
		qTestItem = $get_3(this.mMapQuoteTestItem, testType);
		if (qTestItem) {
			return qTestItem;
		}
		switch (testType) {
		case 'MARKET_TEST':
			qTestItem = new QuoteMarketTestItem_0;
			$put_2(this.mMapQuoteTestItem, 'MARKET_TEST', qTestItem);
			break;
		default:
			qTestItem = null;
		}
		return qTestItem;
	};
	_.onDomainData_0 = function onDomainData_3(object, source) {
		var qTestItem;
		if (instanceOf(object, Q$QuoteMarketTestItem)) {
			qTestItem = $get_3(this.mMapQuoteTestItem, 'MARKET_TEST');
			if (qTestItem) {
				qTestItem.copy_2(object);
				$invalidate(this, qTestItem, source);
			}
		}
	};

	function $export_63(this$static) {
		if (!exported_63) {
			exported_63 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteTestManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new QuoteTestItem_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			$export0_63(this$static);
		}
	}

	function $export0_63(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteTestManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteTestManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteTestManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteTestManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getMapQuoteTestItem = $entry(function() {
			return this.g.getMapQuoteTestItem_0();
		});
		__0.getQuoteTestItem = $entry(function(a0) {
			return wrap_0(this.g.getQuoteTestItem_0(a0));
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_QuoteTestManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_QuoteTestManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteTestManager[p] === undefined && ($wnd.hippo.quote.QuoteTestManager[p] = pkg[p]);
	}

	function QuoteTestManager_ExporterImpl_0() {
		$export_63(this);
	}

	defineSeed(129, 1, {}, QuoteTestManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_63() {
		return $wnd.hippo.quote.QuoteTestManager;
	};
	_.isAssignable = function isAssignable_63(o) {
		return o != null && instanceOf(o, Q$QuoteTestManager);
	};
	var exported_63 = false;

	function QuoteTestTypes_0() {}

	function isValid(type_0) {
		if (type_0 == 'MARKET_TEST') return true;
		return false;
	}

	defineSeed(130, 1, makeCastMap([Q$QuoteTestTypes, Q$Exportable]), QuoteTestTypes_0);

	function $export_64(this$static) {
		if (!exported_64) {
			exported_64 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_QuoteTestTypes_2_classLit, this$static);
			$export0_64(this$static);
		}
	}

	function $export0_64(this$static) {
		var pkg = declarePackage('hippo.quote.QuoteTestTypes');
		var __0, __ = this$static;
		$wnd.hippo.quote.QuoteTestTypes = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteTestTypes_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.QuoteTestTypes.prototype = new Object;
		$wnd.hippo.quote.QuoteTestTypes.QT_UNKNOWN = 'UNKNOWN_TEST';
		$wnd.hippo.quote.QuoteTestTypes.QT_MARKET = 'MARKET_TEST';
		$wnd.hippo.quote.QuoteTestTypes.isValid = $entry(function(a0) {
			return isValid(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.QuoteTestTypes[p] === undefined && ($wnd.hippo.quote.QuoteTestTypes[p] = pkg[p]);
	}

	function QuoteTestTypes_ExporterImpl_0() {
		$export_64(this);
	}

	defineSeed(131, 1, {}, QuoteTestTypes_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_64() {
		return $wnd.hippo.quote.QuoteTestTypes;
	};
	_.isAssignable = function isAssignable_64(o) {
		return o != null && instanceOf(o, Q$QuoteTestTypes);
	};
	var exported_64 = false;

	function $export_65(this$static) {
		if (!exported_65) {
			exported_65 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_Quote_2_classLit, this$static);
			$export0_65(this$static);
		}
	}

	function $export0_65(this$static) {
		var pkg = declarePackage('hippo.quote.Quote');
		var __0, __ = this$static;
		$wnd.hippo.quote.Quote = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Quote_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.Quote.prototype = new Object;
		$wnd.hippo.quote.Quote.TOPIC = 'quote';
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.Quote[p] === undefined && ($wnd.hippo.quote.Quote[p] = pkg[p]);
	}

	function Quote_ExporterImpl_0() {
		$export_65(this);
	}

	defineSeed(132, 1, {}, Quote_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_65() {
		return $wnd.hippo.quote.Quote;
	};
	_.isAssignable = function isAssignable_65(o) {
		return o != null && instanceOf(o, Q$Quote);
	};
	var exported_65 = false;

	function $copy_0(this$static, source) {
		this$static.pclose = source.pclose;
		this$static.open_0 = source.open_0;
		this$static.now_0 = source.now_0;
		this$static.high = source.high;
		this$static.low = source.low;
		this$static.volume = source.volume;
		this$static.amount = source.amount;
		this$static.quarter = source.quarter;
		this$static.pe = source.pe;
		this$static.eps = source.eps;
		this$static.in_$ = source.in_$;
		this$static.out = source.out;
		this$static.nvaps = source.nvaps;
		this$static.total = source.total;
		this$static.share = source.share;
		this$static.cittdiff = source.cittdiff;
		this$static.cittthan = source.cittthan;
		this$static.handover = source.handover;
		this$static.stop_0 = source.stop_0;
		this$static.bidAskQuote = source.bidAskQuote;
		this$static.time = source.time;
		this$static.change = source.change;
		this$static.rise = source.rise;
		this$static.SecurityType = source.SecurityType;
		$copy_1(this$static.rfstat, source.rfstat);
		$setVolatilityControlInfo(this$static, source.volatilityControlInfo);
		$setClosingAuctionInfo(this$static, source.closingAuctionInfo);
	}

	function $setBidAskQuote(this$static, bidAskQuoteItems) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = bidAskQuoteItems.length; item$index < item$max; ++item$index) {
			item_0 = bidAskQuoteItems[item$index];
			this$static.bidAskQuote.add_0(item_0);
		}
	}

	function $setClosingAuctionInfo(this$static, info) {
		this$static.closingAuctionInfo = info;
	}

	function $setTime_2(this$static, time) {
		this$static.time = time;
	}

	function $setVolatilityControlInfo(this$static, info) {
		this$static.volatilityControlInfo = info;
	}

	function RealtimeQuoteItem_0() {
		this.bidAskQuote = new ArrayList_0;
		this.rfstat = new RiseFallStat_0;
	}

	defineSeed(134, 90, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$RealtimeQuoteItem, Q$Exportable]), RealtimeQuoteItem_0);
	_.addBidAskQuoteItem_0 = function addBidAskQuoteItem(bidAskQuoteItem) {
		this.bidAskQuote.add_0(bidAskQuoteItem);
	};
	_.clearBidAskQuote_0 = function clearBidAskQuote() {
		this.bidAskQuote.clear_0();
	};
	_.copy_3 = function copy_4(source) {
		$copy_0(this, source);
	};
	_.getAmount_0 = function getAmount_0() {
		return this.amount;
	};
	_.getBidAskQuote_0 = function getBidAskQuote() {
		var items;
		items = initDim(_3Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$BidAskQuoteItem, this.bidAskQuote.size_1(), 0);
		this.bidAskQuote.toArray(items);
		return items;
	};
	_.getChange_0 = function getChange() {
		return this.change;
	};
	_.getCittdiff_0 = function getCittdiff() {
		return this.cittdiff;
	};
	_.getCittthan_0 = function getCittthan() {
		return this.cittthan;
	};
	_.getClosingAuctionInfo_0 = function getClosingAuctionInfo() {
		return this.closingAuctionInfo;
	};
	_.getEps_0 = function getEps() {
		return this.eps;
	};
	_.getHandover_0 = function getHandover_0() {
		return this.handover;
	};
	_.getHigh_0 = function getHigh_0() {
		return this.high;
	};
	_.getIn_0 = function getIn() {
		return this.in_$;
	};
	_.getLow_0 = function getLow_0() {
		return this.low;
	};
	_.getNow_0 = function getNow() {
		return this.now_0;
	};
	_.getNvaps_0 = function getNvaps() {
		return this.nvaps;
	};
	_.getOpen_0 = function getOpen_0() {
		return this.open_0;
	};
	_.getOut_0 = function getOut() {
		return this.out;
	};
	_.getPclose_0 = function getPclose_0() {
		return this.pclose;
	};
	_.getPe_0 = function getPe() {
		return this.pe;
	};
	_.getQuarter_0 = function getQuarter() {
		return this.quarter;
	};
	_.getRise_0 = function getRise() {
		return this.rise;
	};
	_.getRiseFallStat_0 = function getRiseFallStat() {
		return this.rfstat;
	};
	_.getSecurityType_0 = function getSecurityType() {
		return this.SecurityType;
	};
	_.getShare_0 = function getShare() {
		return this.share;
	};
	_.getStop_0 = function getStop() {
		return this.stop_0;
	};
	_.getTotal_1 = function getTotal_1() {
		return this.total;
	};
	_.getType_0 = function getType_13() {
		return 'RealtimeQuoteItem';
	};
	_.getVolatilityControlInfo_0 = function getVolatilityControlInfo() {
		return this.volatilityControlInfo;
	};
	_.getVolume_0 = function getVolume_0() {
		return this.volume;
	};
	_.hasClosingAuctionInfo_0 = function hasClosingAuctionInfo() {
		return false;
	};
	_.hasVolatilityControlInfo_0 = function hasVolatilityControlInfo() {
		return false;
	};
	_.setAmount_0 = function setAmount_0(amount) {
		this.amount = amount;
	};
	_.setChange_0 = function setChange(change) {
		this.change = change;
	};
	_.setCittdiff_0 = function setCittdiff(cittdiff) {
		this.cittdiff = cittdiff;
	};
	_.setCittthan_0 = function setCittthan(cittthan) {
		this.cittthan = cittthan;
	};
	_.setClosingAuctionInfo_0 = function setClosingAuctionInfo(info) {
		$setClosingAuctionInfo(this, info);
	};
	_.setEps_0 = function setEps(eps) {
		this.eps = eps;
	};
	_.setHandover_0 = function setHandover_0(handover) {
		this.handover = handover;
	};
	_.setHigh_0 = function setHigh_0(high) {
		this.high = high;
	};
	_.setIn_0 = function setIn(in_$) {
		this.in_$ = in_$;
	};
	_.setLow_0 = function setLow_0(low) {
		this.low = low;
	};
	_.setNow_0 = function setNow(now_0) {
		this.now_0 = now_0;
	};
	_.setNvaps_0 = function setNvaps(nvaps) {
		this.nvaps = nvaps;
	};
	_.setOpen_0 = function setOpen_0(open_0) {
		this.open_0 = open_0;
	};
	_.setOut_0 = function setOut(out) {
		this.out = out;
	};
	_.setPclose_0 = function setPclose_0(pclose) {
		this.pclose = pclose;
	};
	_.setPe_0 = function setPe(pe) {
		this.pe = pe;
	};
	_.setQuarter_0 = function setQuarter(quarter) {
		this.quarter = quarter;
	};
	_.setRise_0 = function setRise(rise) {
		this.rise = rise;
	};
	_.setRiseFallStat_0 = function setRiseFallStat(rfstat) {
		this.rfstat = rfstat;
	};
	_.setSecurityType_0 = function setSecurityType(securityType) {
		this.SecurityType = securityType;
	};
	_.setShare_0 = function setShare(share) {
		this.share = share;
	};
	_.setStop_0 = function setStop(stop_0) {
		this.stop_0 = stop_0;
	};
	_.setTotal_1 = function setTotal_1(total) {
		this.total = total;
	};
	_.setVolatilityControlInfo_0 = function setVolatilityControlInfo(info) {
		$setVolatilityControlInfo(this, info);
	};
	_.setVolume_0 = function setVolume_0(volume) {
		this.volume = volume;
	};
	_.SecurityType = 0;
	_.amount = 0;
	_.change = 0;
	_.cittdiff = 0;
	_.cittthan = 0;
	_.eps = 0;
	_.handover = 0;
	_.high = 0;
	_.in_$ = 0;
	_.low = 0;
	_.now_0 = 0;
	_.nvaps = 0;
	_.open_0 = 0;
	_.out = 0;
	_.pclose = 0;
	_.pe = 0;
	_.quarter = 0;
	_.rise = 0;
	_.share = 0;
	_.time = P0_longLit;
	_.total = 0;
	_.volume = 0;

	function RankQuoteItem_0() {
		RealtimeQuoteItem_0.call(this);
		this.name_0 = '';
		this.code_0 = '';
		this.market = '';
	}

	defineSeed(133, 134, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$RankQuoteItem, Q$RealtimeQuoteItem, Q$Exportable]), RankQuoteItem_0);
	_.getCode_0 = function getCode() {
		return this.code_0;
	};
	_.getMarket_0 = function getMarket() {
		return this.market;
	};
	_.getName_0 = function getName() {
		return this.name_0;
	};
	_.setCode_0 = function setCode(code_0) {
		this.code_0 = code_0;
	};
	_.setMarket_0 = function setMarket(market) {
		this.market = market;
	};
	_.setName_0 = function setName(name_0) {
		this.name_0 = name_0;
	};

	function $export_66(this$static) {
		if (!exported_66) {
			exported_66 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_RankQuoteItem_2_classLit, this$static);
			new BidAskQuoteItem_ExporterImpl_0;
			new RealtimeQuoteItem_ExporterImpl_0;
			$export0_66(this$static);
		}
	}

	function $export0_66(this$static) {
		var pkg = declarePackage('hippo.quote.RankQuoteItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.RankQuoteItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new RankQuoteItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.RankQuoteItem.prototype = new Object;
		__0.addBidAskQuoteItem = $entry(function(a0) {
			this.g.addBidAskQuoteItem_0(a0 == null ? null : a0.g);
		});
		__0.clearBidAskQuote = $entry(function() {
			this.g.clearBidAskQuote_0();
		});
		__0.copy = $entry(function(a0) {
			this.g.copy_3(a0 == null ? null : a0.g);
		});
		__0.getAmount = $entry(function() {
			return this.g.getAmount_0();
		});
		__0.getBidAskQuote = $entry(function() {
			return wrap_2(this.g.getBidAskQuote_0());
		});
		__0.getChange = $entry(function() {
			return this.g.getChange_0();
		});
		__0.getCittdiff = $entry(function() {
			return this.g.getCittdiff_0();
		});
		__0.getCittthan = $entry(function() {
			return this.g.getCittthan_0();
		});
		__0.getClosingAuctionInfo = $entry(function() {
			return this.g.getClosingAuctionInfo_0();
		});
		__0.getCode = $entry(function() {
			return this.g.getCode_0();
		});
		__0.getEps = $entry(function() {
			return this.g.getEps_0();
		});
		__0.getHandover = $entry(function() {
			return this.g.getHandover_0();
		});
		__0.getHigh = $entry(function() {
			return this.g.getHigh_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIn = $entry(function() {
			return this.g.getIn_0();
		});
		__0.getLow = $entry(function() {
			return this.g.getLow_0();
		});
		__0.getMarket = $entry(function() {
			return this.g.getMarket_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getName = $entry(function() {
			return this.g.getName_0();
		});
		__0.getNow = $entry(function() {
			return this.g.getNow_0();
		});
		__0.getNvaps = $entry(function() {
			return this.g.getNvaps_0();
		});
		__0.getOpen = $entry(function() {
			return this.g.getOpen_0();
		});
		__0.getOut = $entry(function() {
			return this.g.getOut_0();
		});
		__0.getPclose = $entry(function() {
			return this.g.getPclose_0();
		});
		__0.getPe = $entry(function() {
			return this.g.getPe_0();
		});
		__0.getQuarter = $entry(function() {
			return this.g.getQuarter_0();
		});
		__0.getRise = $entry(function() {
			return this.g.getRise_0();
		});
		__0.getRiseFallStat = $entry(function() {
			return wrap_0(this.g.getRiseFallStat_0());
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getSecurityType = $entry(function() {
			return this.g.getSecurityType_0();
		});
		__0.getShare = $entry(function() {
			return this.g.getShare_0();
		});
		__0.getStop = $entry(function() {
			return this.g.getStop_0();
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_1(this.g);
		});
		__0.getTotal = $entry(function() {
			return this.g.getTotal_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getVolatilityControlInfo = $entry(function() {
			return this.g.getVolatilityControlInfo_0();
		});
		__0.getVolume = $entry(function() {
			return this.g.getVolume_0();
		});
		__0.hasClosingAuctionInfo = $entry(function() {
			return this.g.hasClosingAuctionInfo_0();
		});
		__0.hasVolatilityControlInfo = $entry(function() {
			return this.g.hasVolatilityControlInfo_0();
		});
		__0.setAmount = $entry(function(a0) {
			this.g.setAmount_0(a0);
		});
		__0.setBidAskQuote = $entry(function(a0) {
			__static_wrapper_setBidAskQuote(this.g, a0);
		});
		__0.setChange = $entry(function(a0) {
			this.g.setChange_0(a0);
		});
		__0.setCittdiff = $entry(function(a0) {
			this.g.setCittdiff_0(a0);
		});
		__0.setCittthan = $entry(function(a0) {
			this.g.setCittthan_0(a0);
		});
		__0.setClosingAuctionInfo = $entry(function(a0) {
			this.g.setClosingAuctionInfo_0(gwtInstance(a0));
		});
		__0.setCode = $entry(function(a0) {
			this.g.setCode_0(a0);
		});
		__0.setEps = $entry(function(a0) {
			this.g.setEps_0(a0);
		});
		__0.setHandover = $entry(function(a0) {
			this.g.setHandover_0(a0);
		});
		__0.setHigh = $entry(function(a0) {
			this.g.setHigh_0(a0);
		});
		__0.setIn = $entry(function(a0) {
			this.g.setIn_0(a0);
		});
		__0.setLow = $entry(function(a0) {
			this.g.setLow_0(a0);
		});
		__0.setMarket = $entry(function(a0) {
			this.g.setMarket_0(a0);
		});
		__0.setName = $entry(function(a0) {
			this.g.setName_0(a0);
		});
		__0.setNow = $entry(function(a0) {
			this.g.setNow_0(a0);
		});
		__0.setNvaps = $entry(function(a0) {
			this.g.setNvaps_0(a0);
		});
		__0.setOpen = $entry(function(a0) {
			this.g.setOpen_0(a0);
		});
		__0.setOut = $entry(function(a0) {
			this.g.setOut_0(a0);
		});
		__0.setPclose = $entry(function(a0) {
			this.g.setPclose_0(a0);
		});
		__0.setPe = $entry(function(a0) {
			this.g.setPe_0(a0);
		});
		__0.setQuarter = $entry(function(a0) {
			this.g.setQuarter_0(a0);
		});
		__0.setRise = $entry(function(a0) {
			this.g.setRise_0(a0);
		});
		__0.setRiseFallStat = $entry(function(a0) {
			this.g.setRiseFallStat_0(a0 == null ? null : a0.g);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setSecurityType = $entry(function(a0) {
			this.g.setSecurityType_0(a0);
		});
		__0.setShare = $entry(function(a0) {
			this.g.setShare_0(a0);
		});
		__0.setStop = $entry(function(a0) {
			this.g.setStop_0(gwtInstance(a0));
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_1(this.g, a0);
		});
		__0.setTotal = $entry(function(a0) {
			this.g.setTotal_1(a0);
		});
		__0.setVolatilityControlInfo = $entry(function(a0) {
			this.g.setVolatilityControlInfo_0(gwtInstance(a0));
		});
		__0.setVolume = $entry(function(a0) {
			this.g.setVolume_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.RankQuoteItem[p] === undefined && ($wnd.hippo.quote.RankQuoteItem[p] = pkg[p]);
	}

	function RankQuoteItem_ExporterImpl_0() {
		$export_66(this);
	}

	function __static_wrapper_getTime_1(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_setBidAskQuote(instance, a0) {
		$setBidAskQuote(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$BidAskQuoteItem, a0.length, 0))));
	}

	function __static_wrapper_setTime_1(instance, a0) {
		$setTime_2(instance, fromDouble(a0));
	}

	defineSeed(135, 1, {}, RankQuoteItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_66() {
		return $wnd.hippo.quote.RankQuoteItem;
	};
	_.isAssignable = function isAssignable_66(o) {
		return o != null && instanceOf(o, Q$RankQuoteItem);
	};
	var exported_66 = false;

	function RankSortType_0() {}

	defineSeed(136, 1, makeCastMap([Q$RankSortType, Q$Exportable]), RankSortType_0);

	function $export_67(this$static) {
		if (!exported_67) {
			exported_67 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_RankSortType_2_classLit, this$static);
			$export0_67(this$static);
		}
	}

	function $export0_67(this$static) {
		var pkg = declarePackage('hippo.quote.RankSortType');
		var __0, __ = this$static;
		$wnd.hippo.quote.RankSortType = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new RankSortType_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.RankSortType.prototype = new Object;
		$wnd.hippo.quote.RankSortType.PX_NONE = 0;
		$wnd.hippo.quote.RankSortType.PX_CHANGE_PCT = 1;
		$wnd.hippo.quote.RankSortType.PX_NOW = 2;
		$wnd.hippo.quote.RankSortType.PX_PCLOSE = 3;
		$wnd.hippo.quote.RankSortType.PX_VOLUME = 4;
		$wnd.hippo.quote.RankSortType.PX_AMOUNT = 5;
		$wnd.hippo.quote.RankSortType.PX_OPEN = 6;
		$wnd.hippo.quote.RankSortType.PX_HIGH = 7;
		$wnd.hippo.quote.RankSortType.PX_LOW = 8;
		$wnd.hippo.quote.RankSortType.PX_CODE = 9;
		$wnd.hippo.quote.RankSortType.PX_TURNOVER = 10;
		$wnd.hippo.quote.RankSortType.PX_PE = 11;
		$wnd.hippo.quote.RankSortType.PX_CHANGE = 12;
		$wnd.hippo.quote.RankSortType.PX_FAV = 13;
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.RankSortType[p] === undefined && ($wnd.hippo.quote.RankSortType[p] = pkg[p]);
	}

	function RankSortType_ExporterImpl_0() {
		$export_67(this);
	}

	defineSeed(137, 1, {}, RankSortType_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_67() {
		return $wnd.hippo.quote.RankSortType;
	};
	_.isAssignable = function isAssignable_67(o) {
		return o != null && instanceOf(o, Q$RankSortType);
	};
	var exported_67 = false;

	function $export_68(this$static) {
		if (!exported_68) {
			exported_68 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_RealtimeQuoteItem_2_classLit, this$static);
			new RiseFallStat_ExporterImpl_0;
			$export0_68(this$static);
		}
	}

	function $export0_68(this$static) {
		var pkg = declarePackage('hippo.quote.RealtimeQuoteItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.RealtimeQuoteItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new RealtimeQuoteItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.RealtimeQuoteItem.prototype = new Object;
		__0.addBidAskQuoteItem = $entry(function(a0) {
			this.g.addBidAskQuoteItem_0(a0 == null ? null : a0.g);
		});
		__0.clearBidAskQuote = $entry(function() {
			this.g.clearBidAskQuote_0();
		});
		__0.copy = $entry(function(a0) {
			this.g.copy_3(a0 == null ? null : a0.g);
		});
		__0.getAmount = $entry(function() {
			return this.g.getAmount_0();
		});
		__0.getBidAskQuote = $entry(function() {
			return wrap_2(this.g.getBidAskQuote_0());
		});
		__0.getChange = $entry(function() {
			return this.g.getChange_0();
		});
		__0.getCittdiff = $entry(function() {
			return this.g.getCittdiff_0();
		});
		__0.getCittthan = $entry(function() {
			return this.g.getCittthan_0();
		});
		__0.getClosingAuctionInfo = $entry(function() {
			return this.g.getClosingAuctionInfo_0();
		});
		__0.getEps = $entry(function() {
			return this.g.getEps_0();
		});
		__0.getHandover = $entry(function() {
			return this.g.getHandover_0();
		});
		__0.getHigh = $entry(function() {
			return this.g.getHigh_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIn = $entry(function() {
			return this.g.getIn_0();
		});
		__0.getLow = $entry(function() {
			return this.g.getLow_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getNow = $entry(function() {
			return this.g.getNow_0();
		});
		__0.getNvaps = $entry(function() {
			return this.g.getNvaps_0();
		});
		__0.getOpen = $entry(function() {
			return this.g.getOpen_0();
		});
		__0.getOut = $entry(function() {
			return this.g.getOut_0();
		});
		__0.getPclose = $entry(function() {
			return this.g.getPclose_0();
		});
		__0.getPe = $entry(function() {
			return this.g.getPe_0();
		});
		__0.getQuarter = $entry(function() {
			return this.g.getQuarter_0();
		});
		__0.getRise = $entry(function() {
			return this.g.getRise_0();
		});
		__0.getRiseFallStat = $entry(function() {
			return wrap_0(this.g.getRiseFallStat_0());
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getSecurityType = $entry(function() {
			return this.g.getSecurityType_0();
		});
		__0.getShare = $entry(function() {
			return this.g.getShare_0();
		});
		__0.getStop = $entry(function() {
			return this.g.getStop_0();
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_2(this.g);
		});
		__0.getTotal = $entry(function() {
			return this.g.getTotal_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getVolatilityControlInfo = $entry(function() {
			return this.g.getVolatilityControlInfo_0();
		});
		__0.getVolume = $entry(function() {
			return this.g.getVolume_0();
		});
		__0.hasClosingAuctionInfo = $entry(function() {
			return this.g.hasClosingAuctionInfo_0();
		});
		__0.hasVolatilityControlInfo = $entry(function() {
			return this.g.hasVolatilityControlInfo_0();
		});
		__0.setAmount = $entry(function(a0) {
			this.g.setAmount_0(a0);
		});
		__0.setBidAskQuote = $entry(function(a0) {
			__static_wrapper_setBidAskQuote_0(this.g, a0);
		});
		__0.setChange = $entry(function(a0) {
			this.g.setChange_0(a0);
		});
		__0.setCittdiff = $entry(function(a0) {
			this.g.setCittdiff_0(a0);
		});
		__0.setCittthan = $entry(function(a0) {
			this.g.setCittthan_0(a0);
		});
		__0.setClosingAuctionInfo = $entry(function(a0) {
			this.g.setClosingAuctionInfo_0(gwtInstance(a0));
		});
		__0.setEps = $entry(function(a0) {
			this.g.setEps_0(a0);
		});
		__0.setHandover = $entry(function(a0) {
			this.g.setHandover_0(a0);
		});
		__0.setHigh = $entry(function(a0) {
			this.g.setHigh_0(a0);
		});
		__0.setIn = $entry(function(a0) {
			this.g.setIn_0(a0);
		});
		__0.setLow = $entry(function(a0) {
			this.g.setLow_0(a0);
		});
		__0.setNow = $entry(function(a0) {
			this.g.setNow_0(a0);
		});
		__0.setNvaps = $entry(function(a0) {
			this.g.setNvaps_0(a0);
		});
		__0.setOpen = $entry(function(a0) {
			this.g.setOpen_0(a0);
		});
		__0.setOut = $entry(function(a0) {
			this.g.setOut_0(a0);
		});
		__0.setPclose = $entry(function(a0) {
			this.g.setPclose_0(a0);
		});
		__0.setPe = $entry(function(a0) {
			this.g.setPe_0(a0);
		});
		__0.setQuarter = $entry(function(a0) {
			this.g.setQuarter_0(a0);
		});
		__0.setRise = $entry(function(a0) {
			this.g.setRise_0(a0);
		});
		__0.setRiseFallStat = $entry(function(a0) {
			this.g.setRiseFallStat_0(a0 == null ? null : a0.g);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setSecurityType = $entry(function(a0) {
			this.g.setSecurityType_0(a0);
		});
		__0.setShare = $entry(function(a0) {
			this.g.setShare_0(a0);
		});
		__0.setStop = $entry(function(a0) {
			this.g.setStop_0(gwtInstance(a0));
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_2(this.g, a0);
		});
		__0.setTotal = $entry(function(a0) {
			this.g.setTotal_1(a0);
		});
		__0.setVolatilityControlInfo = $entry(function(a0) {
			this.g.setVolatilityControlInfo_0(gwtInstance(a0));
		});
		__0.setVolume = $entry(function(a0) {
			this.g.setVolume_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.RealtimeQuoteItem[p] === undefined && ($wnd.hippo.quote.RealtimeQuoteItem[p] = pkg[p]);
	}

	function RealtimeQuoteItem_ExporterImpl_0() {
		$export_68(this);
	}

	function __static_wrapper_getTime_2(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_setBidAskQuote_0(instance, a0) {
		$setBidAskQuote(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$BidAskQuoteItem, a0.length, 0))));
	}

	function __static_wrapper_setTime_2(instance, a0) {
		$setTime_2(instance, fromDouble(a0));
	}

	defineSeed(138, 1, {}, RealtimeQuoteItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_68() {
		return $wnd.hippo.quote.RealtimeQuoteItem;
	};
	_.isAssignable = function isAssignable_68(o) {
		return o != null && instanceOf(o, Q$RealtimeQuoteItem);
	};
	var exported_68 = false;

	function $getRealtimeQuoteItem(this$static, securities) {
		var quote_0;
		if (instanceOf(securities, Q$Stock)) {
			quote_0 = $get_3(this$static.mMapRealtimeQuoteList, securities);
			if (!quote_0) { !! mLogger && mLogger.debug_0("RealtimeQuoteList don't exist in mMapRealtimeQuoteList,creat new");
				quote_0 = new RealtimeQuoteItem_0;
				quote_0.mSecurities = securities;
				$put_2(this$static.mMapRealtimeQuoteList, securities, quote_0);
			}
			return quote_0;
		}
		return null;
	}

	function RealtimeQuoteManager_0() {
		BaseQuoteManager_0.call(this);
		this.mMapRealtimeQuoteList = new TreeMap_0;
	}

	defineSeed(139, 87, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$RealtimeQuoteManager, Q$Exportable]), RealtimeQuoteManager_0);
	_.beginWatch_4 = function beginWatch_3(item_0, handler) {
		var stock;
		stock = item_0.mSecurities;
		$beginWatchObject_1(this, $getRealtimeQuoteItem(this, stock), handler);
		log_1('RealtimeQuoteManager beginWatch and add,reference:' + item_0.___clazz$.typeName + '@' + toPowerOfTwoString(getHashCode(item_0)) + ' quotes size.' + this.mMapRealtimeQuoteList.size_0);
	};
	_.endWatch_4 = function endWatch_3(item_0, handler) {
		var stock;
		stock = item_0.mSecurities;
		item_0 = $getRealtimeQuoteItem(this, stock);
		$endWatchObject(this, item_0, handler);
		$isObjectReferenced(this, item_0) || this.mRepository.endWatchObject_1(item_0);
		$isObjectReferenced(this, item_0) || $remove_3(this.mMapRealtimeQuoteList, item_0.mSecurities);
	};
	_.getRealtimeQuoteItem_0 = function getRealtimeQuoteItem(securities) {
		return $getRealtimeQuoteItem(this, securities);
	};
	_.onDomainData_0 = function onDomainData_4(message, source) {
		var quote_0, realtimeItem, stock, stock1; !! message && log_1('RealtimeQuoteManager onDomainData receive message type:' + message.getType_0());
		if (instanceOf(message, Q$RealtimeQuoteItem)) { !! mLogger && mLogger.debug_0('RealtimeQuoteManager onDomainData message instanceof RealtimeQuoteItem');
			realtimeItem = message;
			stock1 = realtimeItem.mSecurities;
			log_1('RealtimeQuoteManager onDomainData stock1.getstock_name:' + stock1.stock_name);
			stock = stock1 ? $getStock_0(this, stock1.market, stock1.stock_code) : null;
			$copy_2(stock, stock1);
			log_1('RealtimeQuoteManager onDomainData transform to RealtimeQuoteItem Ok,list==null?' + !realtimeItem + ' stock_name:' + stock.stock_name);
			quote_0 = $getRealtimeQuoteItem(this, stock);
			$copy_0(quote_0, realtimeItem);
			$invalidate(this, quote_0, source);
		}
	};

	function $export_69(this$static) {
		if (!exported_69) {
			exported_69 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_RealtimeQuoteManager_2_classLit, this$static);
			new RealtimeQuoteItem_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new Securities_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_69(this$static);
		}
	}

	function $export0_69(this$static) {
		var pkg = declarePackage('hippo.quote.RealtimeQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.RealtimeQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new RealtimeQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.RealtimeQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_4(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_4(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getRealtimeQuoteItem = $entry(function(a0) {
			return wrap_0(this.g.getRealtimeQuoteItem_0(a0 == null ? null : a0.g));
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_RealtimeQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_RealtimeQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.RealtimeQuoteManager[p] === undefined && ($wnd.hippo.quote.RealtimeQuoteManager[p] = pkg[p]);
	}

	function RealtimeQuoteManager_ExporterImpl_0() {
		$export_69(this);
	}

	defineSeed(140, 1, {}, RealtimeQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_69() {
		return $wnd.hippo.quote.RealtimeQuoteManager;
	};
	_.isAssignable = function isAssignable_69(o) {
		return o != null && instanceOf(o, Q$RealtimeQuoteManager);
	};
	var exported_69 = false;

	function $copy_1(this$static, source) {
		this$static.risenum = source.risenum;
		this$static.drawnum = source.drawnum;
		this$static.fallnum = source.fallnum;
		this$static.name_0 = source.name_0;
		this$static.code_0 = source.code_0;
		this$static.market = source.market;
		this$static.rise = source.rise;
		this$static.change = source.change;
	}

	function RiseFallStat_0() {}

	defineSeed(141, 90, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$RiseFallStat, Q$Exportable]), RiseFallStat_0);
	_.copy_4 = function copy_5(source) {
		$copy_1(this, source);
	};
	_.getChange_0 = function getChange_0() {
		return this.change;
	};
	_.getCode_0 = function getCode_0() {
		return this.code_0;
	};
	_.getDrawnum_0 = function getDrawnum() {
		return this.drawnum;
	};
	_.getFallnum_0 = function getFallnum() {
		return this.fallnum;
	};
	_.getMarket_0 = function getMarket_0() {
		return this.market;
	};
	_.getName_0 = function getName_0() {
		return this.name_0;
	};
	_.getRise_0 = function getRise_0() {
		return this.rise;
	};
	_.getRisenum_0 = function getRisenum() {
		return this.risenum;
	};
	_.setChange_0 = function setChange_0(change) {
		this.change = change;
	};
	_.setCode_0 = function setCode_0(code_0) {
		this.code_0 = code_0;
	};
	_.setDrawnum_0 = function setDrawnum(drawnum) {
		this.drawnum = drawnum;
	};
	_.setFallnum_0 = function setFallnum(fallnum) {
		this.fallnum = fallnum;
	};
	_.setMarket_0 = function setMarket_0(market) {
		this.market = market;
	};
	_.setName_0 = function setName_0(name_0) {
		this.name_0 = name_0;
	};
	_.setRise_0 = function setRise_0(rise) {
		this.rise = rise;
	};
	_.setRisenum_0 = function setRisenum(risenum) {
		this.risenum = risenum;
	};
	_.change = 0;
	_.code_0 = '';
	_.drawnum = 0;
	_.fallnum = 0;
	_.market = '';
	_.name_0 = '';
	_.rise = 0;
	_.risenum = 0;

	function $export_70(this$static) {
		if (!exported_70) {
			exported_70 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_RiseFallStat_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_70(this$static);
		}
	}

	function $export0_70(this$static) {
		var pkg = declarePackage('hippo.quote.RiseFallStat');
		var __0, __ = this$static;
		$wnd.hippo.quote.RiseFallStat = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new RiseFallStat_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.RiseFallStat.prototype = new Object;
		__0.copy = $entry(function(a0) {
			this.g.copy_4(a0 == null ? null : a0.g);
		});
		__0.getChange = $entry(function() {
			return this.g.getChange_0();
		});
		__0.getCode = $entry(function() {
			return this.g.getCode_0();
		});
		__0.getDrawnum = $entry(function() {
			return this.g.getDrawnum_0();
		});
		__0.getFallnum = $entry(function() {
			return this.g.getFallnum_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getMarket = $entry(function() {
			return this.g.getMarket_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getName = $entry(function() {
			return this.g.getName_0();
		});
		__0.getRise = $entry(function() {
			return this.g.getRise_0();
		});
		__0.getRisenum = $entry(function() {
			return this.g.getRisenum_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setChange = $entry(function(a0) {
			this.g.setChange_0(a0);
		});
		__0.setCode = $entry(function(a0) {
			this.g.setCode_0(a0);
		});
		__0.setDrawnum = $entry(function(a0) {
			this.g.setDrawnum_0(a0);
		});
		__0.setFallnum = $entry(function(a0) {
			this.g.setFallnum_0(a0);
		});
		__0.setMarket = $entry(function(a0) {
			this.g.setMarket_0(a0);
		});
		__0.setName = $entry(function(a0) {
			this.g.setName_0(a0);
		});
		__0.setRise = $entry(function(a0) {
			this.g.setRise_0(a0);
		});
		__0.setRisenum = $entry(function(a0) {
			this.g.setRisenum_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.RiseFallStat[p] === undefined && ($wnd.hippo.quote.RiseFallStat[p] = pkg[p]);
	}

	function RiseFallStat_ExporterImpl_0() {
		$export_70(this);
	}

	defineSeed(142, 1, {}, RiseFallStat_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_70() {
		return $wnd.hippo.quote.RiseFallStat;
	};
	_.isAssignable = function isAssignable_70(o) {
		return o != null && instanceOf(o, Q$RiseFallStat);
	};
	var exported_70 = false;

	function SimpleRealtimeBatchQuoteManager_0() {
		BaseManager_0.call(this);
		this.mQuoteItemList = new SimpleRealtimeQuoteItemList_0;
		this.mMapEventObjects = new TreeMap_0;
	}

	defineSeed(143, 17, makeCastMap([Q$BaseManager, Q$Manager, Q$SimpleRealtimeBatchQuoteManager, Q$Exportable]), SimpleRealtimeBatchQuoteManager_0);
	_.beginWatch_3 = function beginWatch_4(object, handler) {
		var count;
		if (instanceOf(object, Q$SimpleRealtimeQuoteItemList)) {
			this.mRepository.beginWatchObject_1(object);
			count = $get_3(this.mMapEventObjects, handler);
			!count && (count = valueOf_0(0));
			$beginWatchObject(this, this.mQuoteItemList, handler);
			$put_2(this.mMapEventObjects, handler, valueOf_0(count.value_0 + 1));
		}
	};
	_.endWatch_3 = function endWatch_4(object, handler) {
		var count;
		if (instanceOf(object, Q$SimpleRealtimeQuoteItemList)) {
			this.mRepository.endWatchObject_1(object);
			count = $get_3(this.mMapEventObjects, handler);
			if (!count) {
				$endWatchObject(this, this.mQuoteItemList, handler);
				return;
			}
			if ((count = valueOf_0(count.value_0 - 1)).value_0 <= 0) {
				$remove_3(this.mMapEventObjects, handler);
				$endWatchObject(this, this.mQuoteItemList, handler);
			} else {
				$put_2(this.mMapEventObjects, handler, count);
			}
		}
	};
	_.getEventObjectsMap_0 = function getEventObjectsMap() {
		return this.mMapEventObjects;
	};
	_.getQuoteItemList_0 = function getQuoteItemList() {
		return this.mQuoteItemList;
	};
	_.getSimpleRealtimeQuoteItemList_0 = function getSimpleRealtimeQuoteItemList(stocklist) {
		var qitem, quoteitemlist, stock, stock$array, stock$index, stock$max;
		quoteitemlist = new SimpleRealtimeQuoteItemList_0;
		for (stock$array = $getAllItems_2(stocklist), stock$index = 0, stock$max = stock$array.length; stock$index < stock$max; ++stock$index) {
			stock = stock$array[stock$index];
			qitem = new SimpleRealtimeQuoteItem_0;
			qitem.mSecurities = stock;
			$putItem(quoteitemlist, qitem);
		}
		return quoteitemlist;
	};
	_.onDomainData_0 = function onDomainData_5(object, source) {
		if (instanceOf(object, Q$SimpleRealtimeQuoteItemList)) {
			$clear_154(this.mQuoteItemList.mItems);
			$putItems_2(this.mQuoteItemList, $getAllItems_0(object));
			$invalidate(this, this.mQuoteItemList, source);
		}
	};

	function $export_71(this$static) {
		if (!exported_71) {
			exported_71 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_SimpleRealtimeBatchQuoteManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new SimpleRealtimeQuoteItemList_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new StockList_ExporterImpl_0;
			$export0_71(this$static);
		}
	}

	function $export0_71(this$static) {
		var pkg = declarePackage('hippo.quote.SimpleRealtimeBatchQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.SimpleRealtimeBatchQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new SimpleRealtimeBatchQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.SimpleRealtimeBatchQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getEventObjectsMap = $entry(function() {
			return this.g.getEventObjectsMap_0();
		});
		__0.getQuoteItemList = $entry(function() {
			return wrap_0(this.g.getQuoteItemList_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.getSimpleRealtimeQuoteItemList = $entry(function(a0) {
			return wrap_0(this.g.getSimpleRealtimeQuoteItemList_0(a0 == null ? null : a0.g));
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_SimpleRealtimeBatchQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_SimpleRealtimeBatchQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.SimpleRealtimeBatchQuoteManager[p] === undefined && ($wnd.hippo.quote.SimpleRealtimeBatchQuoteManager[p] = pkg[p]);
	}

	function SimpleRealtimeBatchQuoteManager_ExporterImpl_0() {
		$export_71(this);
	}

	defineSeed(144, 1, {}, SimpleRealtimeBatchQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_71() {
		return $wnd.hippo.quote.SimpleRealtimeBatchQuoteManager;
	};
	_.isAssignable = function isAssignable_71(o) {
		return o != null && instanceOf(o, Q$SimpleRealtimeBatchQuoteManager);
	};
	var exported_71 = false;

	function $setTime_3(this$static, time) {
		this$static.time = time;
	}

	function SimpleRealtimeQuoteItem_0() {}

	defineSeed(145, 90, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$SimpleRealtimeQuoteItem, Q$Exportable]), SimpleRealtimeQuoteItem_0);
	_.copy_5 = function copy_6(source) {
		this.now_0 = source.now_0;
		this.time = source.time;
		this.change = source.change;
		this.rise = source.rise;
		this.stop_0 = source.stop_0;
	};
	_.getChange_0 = function getChange_1() {
		return this.change;
	};
	_.getNow_0 = function getNow_0() {
		return this.now_0;
	};
	_.getRise_0 = function getRise_1() {
		return this.rise;
	};
	_.getStop_1 = function getStop_0() {
		return this.stop_0;
	};
	_.getType_0 = function getType_14() {
		return 'SimpleRealtimeQuoteItem';
	};
	_.setChange_0 = function setChange_1(change) {
		this.change = change;
	};
	_.setNow_0 = function setNow_0(now_0) {
		this.now_0 = now_0;
	};
	_.setRise_0 = function setRise_1(rise) {
		this.rise = rise;
	};
	_.setStop_1 = function setStop_0(stop_0) {
		this.stop_0 = stop_0;
	};
	_.change = 0;
	_.now_0 = 0;
	_.rise = 0;
	_.stop_0 = false;
	_.time = P0_longLit;

	function SimpleRealtimeQuoteItemList_0() {
		QuoteItemList_0.call(this);
	}

	defineSeed(146, 118, makeCastMap([Q$DomainObject, Q$QuoteItemList, Q$SimpleRealtimeQuoteItemList, Q$Exportable]), SimpleRealtimeQuoteItemList_0);
	_.getType_0 = function getType_15() {
		return 'SimpleRealtimeQuoteItemList';
	};

	function $export_72(this$static) {
		if (!exported_72) {
			exported_72 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_SimpleRealtimeQuoteItemList_2_classLit, this$static);
			new QuoteItem_ExporterImpl_0;
			$export0_72(this$static);
		}
	}

	function $export0_72(this$static) {
		var pkg = declarePackage('hippo.quote.SimpleRealtimeQuoteItemList');
		var __0, __ = this$static;
		$wnd.hippo.quote.SimpleRealtimeQuoteItemList = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new SimpleRealtimeQuoteItemList_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.SimpleRealtimeQuoteItemList.prototype = new Object;
		$wnd.hippo.quote.SimpleRealtimeQuoteItemList.TYPE = 'SimpleRealtimeQuoteItemList';
		__0.deleteItem = $entry(function(a0) {
			this.g.deleteItem_0(a0 == null ? null : a0.g);
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_3());
		});
		__0.getAllList = $entry(function() {
			return this.g.getAllList_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getItemAt = $entry(function(a0) {
			return wrap_0(this.g.getItemAt_0(a0));
		});
		__0.getKey = $entry(function() {
			return this.g.getKey_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_3(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_3(this.g, a0);
		});
		__0.removeAllItems = $entry(function() {
			this.g.removeAllItems_0();
		});
		__0.setKey = $entry(function(a0) {
			this.g.setKey_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.SimpleRealtimeQuoteItemList[p] === undefined && ($wnd.hippo.quote.SimpleRealtimeQuoteItemList[p] = pkg[p]);
	}

	function SimpleRealtimeQuoteItemList_ExporterImpl_0() {
		$export_72(this);
	}

	function __static_wrapper_putItems_3(instance, a0) {
		$putItems_2(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit, makeCastMap([Q$Serializable]), Q$QuoteItem, a0.length, 0))));
	}

	defineSeed(147, 1, {}, SimpleRealtimeQuoteItemList_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_72() {
		return $wnd.hippo.quote.SimpleRealtimeQuoteItemList;
	};
	_.isAssignable = function isAssignable_72(o) {
		return o != null && instanceOf(o, Q$SimpleRealtimeQuoteItemList);
	};
	var exported_72 = false;

	function $export_73(this$static) {
		if (!exported_73) {
			exported_73 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_SimpleRealtimeQuoteItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_73(this$static);
		}
	}

	function $export0_73(this$static) {
		var pkg = declarePackage('hippo.quote.SimpleRealtimeQuoteItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.SimpleRealtimeQuoteItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new SimpleRealtimeQuoteItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.SimpleRealtimeQuoteItem.prototype = new Object;
		__0.copy = $entry(function(a0) {
			this.g.copy_5(a0 == null ? null : a0.g);
		});
		__0.getChange = $entry(function() {
			return this.g.getChange_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getNow = $entry(function() {
			return this.g.getNow_0();
		});
		__0.getRise = $entry(function() {
			return this.g.getRise_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getStop = $entry(function() {
			return this.g.getStop_1();
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_3(this.g);
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setChange = $entry(function(a0) {
			this.g.setChange_0(a0);
		});
		__0.setNow = $entry(function(a0) {
			this.g.setNow_0(a0);
		});
		__0.setRise = $entry(function(a0) {
			this.g.setRise_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setStop = $entry(function(a0) {
			this.g.setStop_1(a0);
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_3(this.g, a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.SimpleRealtimeQuoteItem[p] === undefined && ($wnd.hippo.quote.SimpleRealtimeQuoteItem[p] = pkg[p]);
	}

	function SimpleRealtimeQuoteItem_ExporterImpl_0() {
		$export_73(this);
	}

	function __static_wrapper_getTime_3(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_setTime_3(instance, a0) {
		$setTime_3(instance, fromDouble(a0));
	}

	defineSeed(148, 1, {}, SimpleRealtimeQuoteItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_73() {
		return $wnd.hippo.quote.SimpleRealtimeQuoteItem;
	};
	_.isAssignable = function isAssignable_73(o) {
		return o != null && instanceOf(o, Q$SimpleRealtimeQuoteItem);
	};
	var exported_73 = false;

	function $getTickQuoteStream(this$static, securities) {
		var quote_0;
		if (instanceOf(securities, Q$Stock)) {
			quote_0 = $get_3(this$static.mMapTickQuoteStream, securities);
			if (!quote_0) { !! mLogger && mLogger.debug_0("TickQuoteStream don't exist in mMapTickQuoteStream,creat new");
				quote_0 = new TickQuoteStream_0;
				quote_0.mSecurities = securities;
				$put_2(this$static.mMapTickQuoteStream, securities, quote_0);
			}
			return quote_0;
		}
		return null;
	}

	function TickQuoteManager_0() {
		BaseQuoteManager_0.call(this);
		this.mMapTickQuoteStream = new TreeMap_0;
	}

	defineSeed(149, 87, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$TickQuoteManager, Q$Exportable]), TickQuoteManager_0);
	_.beginWatch_5 = function beginWatch_5(stream, handler) {
		var stock;
		stock = stream.mSecurities;
		stock = stock ? $getStock_0(this, stock.market, stock.stock_code) : null;
		$beginWatchObject_1(this, $getTickQuoteStream(this, stock), handler);
	};
	_.endWatch_5 = function endWatch_5(stream, handler) {
		var stock;
		stock = stream.mSecurities;
		stock = stock ? $getStock_0(this, stock.market, stock.stock_code) : null;
		stream = $getTickQuoteStream(this, stock);
		$endWatchObject(this, stream, handler);
		$isObjectReferenced(this, stream) || this.mRepository.endWatchObject_1(stream);
		$isObjectReferenced(this, stream) || $remove_3(this.mMapTickQuoteStream, stock);
	};
	_.getTickQuoteStream_0 = function getTickQuoteStream(securities) {
		return $getTickQuoteStream(this, securities);
	};
	_.onDomainData_0 = function onDomainData_6(message, source) {
		var quote_0, stock, stock1, tickQuote; !! message && log_1('receive message type:' + message.getType_0());
		if (instanceOf(message, Q$TickQuoteStream)) { !! mLogger && mLogger.debug_0('message instanceof TickQuoteStream');
			tickQuote = message;
			stock1 = tickQuote.mSecurities;
			stock = stock1 ? $getStock_0(this, stock1.market, stock1.stock_code) : null; !! mLogger && mLogger.debug_0('transform to TickQuoteStream Ok,stream==null?' + !tickQuote);
			quote_0 = $getTickQuoteStream(this, stock);
			quote_0.date != tickQuote.date && $clear_155(quote_0.mItems);
			$putItems_3(quote_0, (tickQuote.mItems.size_0 != tickQuote.mArray.length && $updateList_1(tickQuote), tickQuote.mArray));
			$updateList_1(quote_0);
			$invalidate(this, quote_0, source);
			log_1('save TickQuoteStream,size:' + tickQuote.mItems.size_0);
		}
	};

	function $export_74(this$static) {
		if (!exported_74) {
			exported_74 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TickQuoteManager_2_classLit, this$static);
			new TickQuoteStream_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_74(this$static);
		}
	}

	function $export0_74(this$static) {
		var pkg = declarePackage('hippo.quote.TickQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.TickQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TickQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TickQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_5(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_5(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.getTickQuoteStream = $entry(function(a0) {
			return wrap_0(this.g.getTickQuoteStream_0(a0 == null ? null : a0.g));
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_TickQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_TickQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TickQuoteManager[p] === undefined && ($wnd.hippo.quote.TickQuoteManager[p] = pkg[p]);
	}

	function TickQuoteManager_ExporterImpl_0() {
		$export_74(this);
	}

	defineSeed(150, 1, {}, TickQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_74() {
		return $wnd.hippo.quote.TickQuoteManager;
	};
	_.isAssignable = function isAssignable_74(o) {
		return o != null && instanceOf(o, Q$TickQuoteManager);
	};
	var exported_74 = false;

	function $compare_1(o1, o2) {
		return o1.time - o2.time;
	}

	function TickQuoteSortByTime_0() {}

	defineSeed(151, 1, makeCastMap([Q$TickQuoteSortByTime, Q$Exportable]), TickQuoteSortByTime_0);
	_.compare_3 = function compare_5(o1, o2) {
		return $compare_1(o1, o2);
	};
	_.compare_0 = function compare_6(o1, o2) {
		return $compare_1(o1, o2);
	};

	function $export_75(this$static) {
		if (!exported_75) {
			exported_75 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TickQuoteSortByTime_2_classLit, this$static);
			new TickQuoteStreamItem_ExporterImpl_0;
			$export0_75(this$static);
		}
	}

	function $export0_75(this$static) {
		var pkg = declarePackage('hippo.quote.TickQuoteSortByTime');
		var __0, __ = this$static;
		$wnd.hippo.quote.TickQuoteSortByTime = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TickQuoteSortByTime_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TickQuoteSortByTime.prototype = new Object;
		__0.compare = $entry(function(a0, a1) {
			return this.g.compare_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TickQuoteSortByTime[p] === undefined && ($wnd.hippo.quote.TickQuoteSortByTime[p] = pkg[p]);
	}

	function TickQuoteSortByTime_ExporterImpl_0() {
		$export_75(this);
	}

	defineSeed(152, 1, {}, TickQuoteSortByTime_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_75() {
		return $wnd.hippo.quote.TickQuoteSortByTime;
	};
	_.isAssignable = function isAssignable_75(o) {
		return o != null && instanceOf(o, Q$TickQuoteSortByTime);
	};
	var exported_75 = false;

	function $putItems_3(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$put_2(this$static.mItems, valueOf_0(item_0.time), item_0);
		}
	}

	function $setTime_4(this$static, time) {
		this$static.time = time;
	}

	function $updateList_1(this$static) {
		var arr, mList;
		arr = initDim(_3Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TickQuoteStreamItem, this$static.mItems.size_0, 0);
		$toArray($values(this$static.mItems), arr);
		mList = new Arrays$ArrayList_0(arr);
		sort_2(mList, new TickQuoteSortByTime_0);
		$toArray_2(mList, arr);
		this$static.mArray = arr;
	}

	function TickQuoteStream_0() {
		this.mItems = new TreeMap_0;
		this.mArray = initDim(_3Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TickQuoteStreamItem, 0, 0);
	}

	defineSeed(153, 94, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteStream, Q$TickQuoteStream, Q$Exportable]), TickQuoteStream_0);
	_.clear_0 = function clear_1() {
		$clear_155(this.mItems);
	};
	_.getAllItems_4 = function getAllItems_3() {
		return this.mItems.size_0 != this.mArray.length && $updateList_1(this), this.mArray;
	};
	_.getCount_0 = function getCount_1() {
		return this.count;
	};
	_.getDate_0 = function getDate() {
		return this.date;
	};
	_.getType_0 = function getType_16() {
		return 'TickQuoteStream';
	};
	_.putItem_4 = function putItem_3(item_0) {
		$put_2(this.mItems, valueOf_0(item_0.time), item_0);
	};
	_.setCount_0 = function setCount_1(count) {
		this.count = count;
	};
	_.setDate_1 = function setDate_0(date) {
		this.date = date;
	};
	_.size_1 = function size_3() {
		return this.mItems.size_0;
	};
	_.updateList_0 = function updateList_1() {
		$updateList_1(this);
	};
	_.count = 0;
	_.date = 0;
	_.time = P0_longLit;

	function $setPrice(this$static, price) {
		this$static.price = price;
	}

	function $setTick(this$static, tick) {
		this$static.tick = tick;
	}

	function $setTime_5(this$static, time) {
		this$static.time = time;
	}

	function $setVolume(this$static, volume) {
		this$static.volume = volume;
	}

	function TickQuoteStreamItem_0() {}

	defineSeed(154, 90, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$TickQuoteStreamItem, Q$Exportable]), TickQuoteStreamItem_0);
	_.copy_6 = function copy_7(source) {
		$setPrice(this, source.price);
		$setTick(this, source.tick);
		$setTime_5(this, source.time);
		$setVolume(this, source.volume);
	};
	_.getPrice_0 = function getPrice() {
		return this.price;
	};
	_.getTick_0 = function getTick() {
		return this.tick;
	};
	_.getTime_1 = function getTime_0() {
		return this.time;
	};
	_.getType_0 = function getType_17() {
		return 'TickQuoteStreamItem';
	};
	_.getVolume_0 = function getVolume_1() {
		return this.volume;
	};
	_.setPrice_0 = function setPrice(price) {
		$setPrice(this, price);
	};
	_.setTick_0 = function setTick(tick) {
		$setTick(this, tick);
	};
	_.setTime_1 = function setTime_0(time) {
		$setTime_5(this, time);
	};
	_.setVolume_0 = function setVolume_1(volume) {
		$setVolume(this, volume);
	};
	_.price = 0;
	_.tick = 0;
	_.time = 0;
	_.volume = 0;

	function $export_76(this$static) {
		if (!exported_76) {
			exported_76 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_76(this$static);
		}
	}

	function $export0_76(this$static) {
		var pkg = declarePackage('hippo.quote.TickQuoteStreamItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.TickQuoteStreamItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TickQuoteStreamItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TickQuoteStreamItem.prototype = new Object;
		$wnd.hippo.quote.TickQuoteStreamItem.TYPE = 'TickQuoteStreamItem';
		__0.copy = $entry(function(a0) {
			this.g.copy_6(a0 == null ? null : a0.g);
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getPrice = $entry(function() {
			return this.g.getPrice_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getTick = $entry(function() {
			return this.g.getTick_0();
		});
		__0.getTime = $entry(function() {
			return this.g.getTime_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getVolume = $entry(function() {
			return this.g.getVolume_0();
		});
		__0.setPrice = $entry(function(a0) {
			this.g.setPrice_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTick = $entry(function(a0) {
			this.g.setTick_0(a0);
		});
		__0.setTime = $entry(function(a0) {
			this.g.setTime_1(a0);
		});
		__0.setVolume = $entry(function(a0) {
			this.g.setVolume_0(a0);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TickQuoteStreamItem[p] === undefined && ($wnd.hippo.quote.TickQuoteStreamItem[p] = pkg[p]);
	}

	function TickQuoteStreamItem_ExporterImpl_0() {
		$export_76(this);
	}

	defineSeed(155, 1, {}, TickQuoteStreamItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_76() {
		return $wnd.hippo.quote.TickQuoteStreamItem;
	};
	_.isAssignable = function isAssignable_76(o) {
		return o != null && instanceOf(o, Q$TickQuoteStreamItem);
	};
	var exported_76 = false;

	function $export_77(this$static) {
		if (!exported_77) {
			exported_77 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TickQuoteStream_2_classLit, this$static);
			new TickQuoteStreamItem_ExporterImpl_0;
			$export0_77(this$static);
		}
	}

	function $export0_77(this$static) {
		var pkg = declarePackage('hippo.quote.TickQuoteStream');
		var __0, __ = this$static;
		$wnd.hippo.quote.TickQuoteStream = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TickQuoteStream_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TickQuoteStream.prototype = new Object;
		$wnd.hippo.quote.TickQuoteStream.TYPE = 'TickQuoteStream';
		__0.clear = $entry(function() {
			this.g.clear_0();
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_4());
		});
		__0.getCount = $entry(function() {
			return this.g.getCount_0();
		});
		__0.getDate = $entry(function() {
			return this.g.getDate_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_4(this.g);
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_4(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_4(this.g, a0);
		});
		__0.setCount = $entry(function(a0) {
			this.g.setCount_0(a0);
		});
		__0.setDate = $entry(function(a0) {
			this.g.setDate_1(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_4(this.g, a0);
		});
		__0.size = $entry(function() {
			return this.g.size_1();
		});
		__0.updateList = $entry(function() {
			this.g.updateList_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TickQuoteStream[p] === undefined && ($wnd.hippo.quote.TickQuoteStream[p] = pkg[p]);
	}

	function TickQuoteStream_ExporterImpl_0() {
		$export_77(this);
	}

	function __static_wrapper_getTime_4(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_putItems_4(instance, a0) {
		$putItems_3(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TickQuoteStreamItem, a0.length, 0))));
	}

	function __static_wrapper_setTime_4(instance, a0) {
		$setTime_4(instance, fromDouble(a0));
	}

	defineSeed(156, 1, {}, TickQuoteStream_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_77() {
		return $wnd.hippo.quote.TickQuoteStream;
	};
	_.isAssignable = function isAssignable_77(o) {
		return o != null && instanceOf(o, Q$TickQuoteStream);
	};
	var exported_77 = false;

	function $getTimeSeriesQuoteStream(this$static, securities) {
		var quote_0;
		if (instanceOf(securities, Q$Stock)) {
			quote_0 = $get_3(this$static.mMapTimeSeriesQuoteStream, securities);
			if (!quote_0) {
				quote_0 = new TimeSeriesQuoteStream_0;
				quote_0.mSecurities = securities;
				$put_2(this$static.mMapTimeSeriesQuoteStream, securities, quote_0);
				log_1('create TimeSeriesQuoteStream ' + Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStream_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(quote_0)));
			}
			return quote_0;
		}
		return null;
	}

	function TimeSeriesQuoteManager_0() {
		BaseQuoteManager_0.call(this);
		this.mMapTimeSeriesQuoteStream = new TreeMap_0;
	}

	defineSeed(157, 87, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseQuoteManager, Q$TimeSeriesQuoteManager, Q$Exportable]), TimeSeriesQuoteManager_0);
	_.beginWatch_6 = function beginWatch_6(quote_0, handler) {
		var stock;
		log_1('TimeSeriesQuoteStream beginWatch,quote reference：' + Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStream_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(quote_0)) + ' handler reference:' + Lcom_gf_hippo_domain_client_common_EventObject_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(handler)));
		stock = $getStock(this, quote_0.mSecurities);
		quote_0 = $getTimeSeriesQuoteStream(this, stock);
		$beginWatchObject_1(this, quote_0, handler);
	};
	_.endWatch_6 = function endWatch_6(quote_0, handler) {
		var stock;
		log_1('TimeSeriesQuoteStream endwatch,quote reference：' + Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStream_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(quote_0)) + ' handler reference:' + Lcom_gf_hippo_domain_client_common_EventObject_2_classLit.typeName + '@' + toPowerOfTwoString(getHashCode(handler)));
		log_1('TimeSeriesQuoteManager quote hashCode ' + getHashCode(quote_0));
		stock = $getStock(this, quote_0.mSecurities);
		quote_0 = $getTimeSeriesQuoteStream(this, stock);
		$endWatchObject(this, quote_0, handler);
		$isObjectReferenced(this, quote_0) || this.mRepository.endWatchObject_1(quote_0);
		if (!$isObjectReferenced(this, quote_0)) {
			$remove_3(this.mMapTimeSeriesQuoteStream, quote_0.mSecurities);
			log_1(' quotes size.' + this.mMapTimeSeriesQuoteStream.size_0);
		}
	};
	_.getTimeSeriesQuoteStream_0 = function getTimeSeriesQuoteStream(securities) {
		return $getTimeSeriesQuoteStream(this, securities);
	};
	_.onDomainData_0 = function onDomainData_7(message, source) {
		var quote_0, stock, stream; !! message && log_1('TimeSeriesQuoteManager onDomainData receive message type:' + message.getType_0());
		if (instanceOf(message, Q$TimeSeriesQuoteStream)) { !! mLogger && mLogger.debug_0('TimeSeriesQuoteManager onDomainData message instanceof TimeSeriesQuoteStream');
			stream = message;
			stock = stream.mSecurities;
			quote_0 = $getTimeSeriesQuoteStream(this, stock ? $getStock_0(this, stock.market, stock.stock_code) : null);
			$putItems_4(quote_0, $getAllItems_1(stream)); !! mLogger && mLogger.debug_0('message instanceof TimeSeriesQuoteStream-----okkk');
			$updateList_2(quote_0);
			$invalidate(this, quote_0, source);
		}
	};

	function $export_78(this$static) {
		if (!exported_78) {
			exported_78 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteManager_2_classLit, this$static);
			new TimeSeriesQuoteStream_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_78(this$static);
		}
	}

	function $export0_78(this$static) {
		var pkg = declarePackage('hippo.quote.TimeSeriesQuoteManager');
		var __0, __ = this$static;
		$wnd.hippo.quote.TimeSeriesQuoteManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TimeSeriesQuoteManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TimeSeriesQuoteManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_6(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_6(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.getTimeSeriesQuoteStream = $entry(function(a0) {
			return wrap_0(this.g.getTimeSeriesQuoteStream_0(a0 == null ? null : a0.g));
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TimeSeriesQuoteManager[p] === undefined && ($wnd.hippo.quote.TimeSeriesQuoteManager[p] = pkg[p]);
	}

	function TimeSeriesQuoteManager_ExporterImpl_0() {
		$export_78(this);
	}

	defineSeed(158, 1, {}, TimeSeriesQuoteManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_78() {
		return $wnd.hippo.quote.TimeSeriesQuoteManager;
	};
	_.isAssignable = function isAssignable_78(o) {
		return o != null && instanceOf(o, Q$TimeSeriesQuoteManager);
	};
	var exported_78 = false;

	function $compare_2(o1, o2) {
		return toInt(sub_0(o1.time, o2.time));
	}

	function TimeSeriesQuoteSortByTime_0() {}

	defineSeed(159, 1, makeCastMap([Q$TimeSeriesQuoteSortByTime, Q$Exportable]), TimeSeriesQuoteSortByTime_0);
	_.compare_4 = function compare_7(o1, o2) {
		return $compare_2(o1, o2);
	};
	_.compare_0 = function compare_8(o1, o2) {
		return $compare_2(o1, o2);
	};

	function $export_79(this$static) {
		if (!exported_79) {
			exported_79 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteSortByTime_2_classLit, this$static);
			new TimeSeriesQuoteStreamItem_ExporterImpl_0;
			$export0_79(this$static);
		}
	}

	function $export0_79(this$static) {
		var pkg = declarePackage('hippo.quote.TimeSeriesQuoteSortByTime');
		var __0, __ = this$static;
		$wnd.hippo.quote.TimeSeriesQuoteSortByTime = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TimeSeriesQuoteSortByTime_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TimeSeriesQuoteSortByTime.prototype = new Object;
		__0.compare = $entry(function(a0, a1) {
			return this.g.compare_4(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TimeSeriesQuoteSortByTime[p] === undefined && ($wnd.hippo.quote.TimeSeriesQuoteSortByTime[p] = pkg[p]);
	}

	function TimeSeriesQuoteSortByTime_ExporterImpl_0() {
		$export_79(this);
	}

	defineSeed(160, 1, {}, TimeSeriesQuoteSortByTime_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_79() {
		return $wnd.hippo.quote.TimeSeriesQuoteSortByTime;
	};
	_.isAssignable = function isAssignable_79(o) {
		return o != null && instanceOf(o, Q$TimeSeriesQuoteSortByTime);
	};
	var exported_79 = false;

	function $getAllItems_1(this$static) {
		log_1('size:=' + this$static.mItems.size_0);
		this$static.mItems.size_0 != this$static.mArray.length && $updateList_2(this$static); !! mLogger && mLogger.debug_0('getAllItems return ');
		return this$static.mArray;
	}

	function $getItemsByDate(this$static, date) {
		var data_0, item_0, item$array, item$index, item$max, returnValue_0;
		if (date == 0) return $getItemsOfLastDate(this$static);
		data_0 = new ArrayList_0;
		for (item$array = this$static.mArray, item$index = 0, item$max = item$array.length; item$index < item$max; ++item$index) {
			item_0 = item$array[item$index];
			eq(fromInt(date), div(item_0.time, P2710_longLit)) && (data_0.array[data_0.size_0++] = item_0, true);
		}
		returnValue_0 = initDim(_3Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TimeSeriesQuoteStreamItem, data_0.size_0, 0);
		return $toArray_1(data_0, returnValue_0);
	}

	function $getItemsOfLastDate(this$static) {
		var lasttime;
		if (this$static.mItems.size_0 > 0) {
			lasttime = toInt(div($getLastTime(this$static), P2710_longLit));
			return $getItemsByDate(this$static, lasttime);
		} else {
			return initDim(_3Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TimeSeriesQuoteStreamItem, 0, 0);
		}
	}

	function $getLastTime(this$static) {
		var lastTime;
		lastTime = P0_longLit;
		this$static.mArray.length != this$static.mItems.size_0 && $updateList_2(this$static);
		this$static.mArray.length > 0 && (lastTime = this$static.mArray[this$static.mArray.length - 1].time);
		return lastTime;
	}

	function $putItems_4(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$put_2(this$static.mItems, valueOf_1(item_0.time), item_0);
		}
	}

	function $setTime_6(this$static, time) {
		this$static.time = time;
	}

	function $updateList_2(this$static) {
		var arr, mList;
		arr = initDim(_3Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TimeSeriesQuoteStreamItem, this$static.mItems.size_0, 0);
		$toArray($values(this$static.mItems), arr);
		mList = new Arrays$ArrayList_0(arr);
		sort_2(mList, new TimeSeriesQuoteSortByTime_0);
		$toArray_2(mList, arr);
		this$static.mArray = arr;
	}

	function TimeSeriesQuoteStream_0() {
		this.mItems = new TreeMap_0;
		this.mArray = initDim(_3Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TimeSeriesQuoteStreamItem, 0, 0);
	}

	defineSeed(161, 94, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteStream, Q$TimeSeriesQuoteStream, Q$Exportable]), TimeSeriesQuoteStream_0);
	_.cleanData_0 = function cleanData_0(maxSize) {
		var arr, count, i_0;
		if (this.mItems.size_0 > maxSize) {
			log_1('TimeSeriesQuoteStream.cleanData:maxSize:' + maxSize + ' mItems.size' + this.mItems.size_0);
			arr = $getAllItems_1(this);
			count = this.mItems.size_0 - maxSize;
			for (i_0 = 0; i_0 < count; i_0++) {
				$remove_3(this.mItems, valueOf_1(arr[i_0].time));
			} !! mLogger && mLogger.debug_0('TimeSeriesQuoteStream.cleanData:remove count:' + count);
		}
	};
	_.clear_0 = function clear_2() {
		$clear_155(this.mItems);
	};
	_.getAllItems_5 = function getAllItems_4() {
		return $getAllItems_1(this);
	};
	_.getCount_0 = function getCount_2() {
		return this.count;
	};
	_.getItemsByDate_0 = function getItemsByDate(date) {
		return $getItemsByDate(this, date);
	};
	_.getItemsOfLastDate_0 = function getItemsOfLastDate() {
		return $getItemsOfLastDate(this);
	};
	_.getType_0 = function getType_18() {
		return 'TimeSeriesQuoteStream';
	};
	_.putItem_5 = function putItem_4(item_0) {
		$put_2(this.mItems, valueOf_1(item_0.time), item_0);
	};
	_.setCount_0 = function setCount_2(count) {
		this.count < count && (this.count = count);
	};
	_.size_1 = function size_4() {
		return this.mItems.size_0;
	};
	_.updateList_0 = function updateList_2() {
		$updateList_2(this);
	};
	_.count = 0;
	_.time = P0_longLit;

	function $setTime_7(this$static, time) {
		this$static.time = time;
	}

	function TimeSeriesQuoteStreamItem_0() {}

	defineSeed(162, 90, makeCastMap([Q$DomainObject, Q$Quote, Q$QuoteItem, Q$TimeSeriesQuoteStreamItem, Q$Exportable]), TimeSeriesQuoteStreamItem_0);
	_.getAmount_0 = function getAmount_1() {
		return this.amount;
	};
	_.getAvg_0 = function getAvg_0() {
		return this.avg;
	};
	_.getChange_0 = function getChange_2() {
		return this.change;
	};
	_.getPclose_0 = function getPclose_1() {
		return this.pclose;
	};
	_.getPrice_0 = function getPrice_0() {
		return this.price;
	};
	_.getRise_0 = function getRise_2() {
		return this.rise;
	};
	_.getType_0 = function getType_19() {
		return 'TimeSeriesQuoteStreamItem';
	};
	_.getVolume_0 = function getVolume_2() {
		return this.volume;
	};
	_.setAmount_0 = function setAmount_1(amount) {
		this.amount = amount;
	};
	_.setAvg_0 = function setAvg_0(avg) {
		this.avg = avg;
	};
	_.setChange_0 = function setChange_2(change) {
		this.change = change;
	};
	_.setPclose_0 = function setPclose_1(pclose) {
		this.pclose = pclose;
	};
	_.setPrice_0 = function setPrice_0(price) {
		this.price = price;
	};
	_.setRise_0 = function setRise_2(rise) {
		this.rise = rise;
	};
	_.setVolume_0 = function setVolume_2(volume) {
		this.volume = volume;
	};
	_.amount = 0;
	_.avg = 0;
	_.change = 0;
	_.pclose = 0;
	_.price = 0;
	_.rise = 0;
	_.time = P0_longLit;
	_.volume = 0;

	function $export_80(this$static) {
		if (!exported_80) {
			exported_80 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_80(this$static);
		}
	}

	function $export0_80(this$static) {
		var pkg = declarePackage('hippo.quote.TimeSeriesQuoteStreamItem');
		var __0, __ = this$static;
		$wnd.hippo.quote.TimeSeriesQuoteStreamItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TimeSeriesQuoteStreamItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TimeSeriesQuoteStreamItem.prototype = new Object;
		__0.getAmount = $entry(function() {
			return this.g.getAmount_0();
		});
		__0.getAvg = $entry(function() {
			return this.g.getAvg_0();
		});
		__0.getChange = $entry(function() {
			return this.g.getChange_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getPclose = $entry(function() {
			return this.g.getPclose_0();
		});
		__0.getPrice = $entry(function() {
			return this.g.getPrice_0();
		});
		__0.getRise = $entry(function() {
			return this.g.getRise_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_5(this.g);
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getVolume = $entry(function() {
			return this.g.getVolume_0();
		});
		__0.setAmount = $entry(function(a0) {
			this.g.setAmount_0(a0);
		});
		__0.setAvg = $entry(function(a0) {
			this.g.setAvg_0(a0);
		});
		__0.setChange = $entry(function(a0) {
			this.g.setChange_0(a0);
		});
		__0.setPclose = $entry(function(a0) {
			this.g.setPclose_0(a0);
		});
		__0.setPrice = $entry(function(a0) {
			this.g.setPrice_0(a0);
		});
		__0.setRise = $entry(function(a0) {
			this.g.setRise_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_5(this.g, a0);
		});
		__0.setVolume = $entry(function(a0) {
			this.g.setVolume_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TimeSeriesQuoteStreamItem[p] === undefined && ($wnd.hippo.quote.TimeSeriesQuoteStreamItem[p] = pkg[p]);
	}

	function TimeSeriesQuoteStreamItem_ExporterImpl_0() {
		$export_80(this);
	}

	function __static_wrapper_getTime_5(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_setTime_5(instance, a0) {
		$setTime_7(instance, fromDouble(a0));
	}

	defineSeed(163, 1, {}, TimeSeriesQuoteStreamItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_80() {
		return $wnd.hippo.quote.TimeSeriesQuoteStreamItem;
	};
	_.isAssignable = function isAssignable_80(o) {
		return o != null && instanceOf(o, Q$TimeSeriesQuoteStreamItem);
	};
	var exported_80 = false;

	function $export_81(this$static) {
		if (!exported_81) {
			exported_81 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStream_2_classLit, this$static);
			new TimeSeriesQuoteStreamItem_ExporterImpl_0;
			$export0_81(this$static);
		}
	}

	function $export0_81(this$static) {
		var pkg = declarePackage('hippo.quote.TimeSeriesQuoteStream');
		var __0, __ = this$static;
		$wnd.hippo.quote.TimeSeriesQuoteStream = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TimeSeriesQuoteStream_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.quote.TimeSeriesQuoteStream.prototype = new Object;
		$wnd.hippo.quote.TimeSeriesQuoteStream.TYPE = 'TimeSeriesQuoteStream';
		__0.cleanData = $entry(function(a0) {
			this.g.cleanData_0(a0);
		});
		__0.clear = $entry(function() {
			this.g.clear_0();
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_5());
		});
		__0.getCount = $entry(function() {
			return this.g.getCount_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getItemsByDate = $entry(function(a0) {
			return wrap_2(this.g.getItemsByDate_0(a0));
		});
		__0.getItemsOfLastDate = $entry(function() {
			return wrap_2(this.g.getItemsOfLastDate_0());
		});
		__0.getLastTime = $entry(function() {
			return __static_wrapper_getLastTime(this.g);
		});
		__0.getMinTime = $entry(function() {
			return __static_wrapper_getMinTime(this.g);
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getTime = $entry(function() {
			return __static_wrapper_getTime_6(this.g);
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_5(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_5(this.g, a0);
		});
		__0.setCount = $entry(function(a0) {
			this.g.setCount_0(a0);
		});
		__0.setSecurities = $entry(function(a0) {
			this.g.setSecurities_0(a0 == null ? null : a0.g);
		});
		__0.setTime = $entry(function(a0) {
			__static_wrapper_setTime_6(this.g, a0);
		});
		__0.size = $entry(function() {
			return this.g.size_1();
		});
		__0.updateList = $entry(function() {
			this.g.updateList_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.quote.TimeSeriesQuoteStream[p] === undefined && ($wnd.hippo.quote.TimeSeriesQuoteStream[p] = pkg[p]);
	}

	function TimeSeriesQuoteStream_ExporterImpl_0() {
		$export_81(this);
	}

	function __static_wrapper_getLastTime(instance) {
		return toDouble($getLastTime(instance));
	}

	function __static_wrapper_getMinTime(instance) {
		return toDouble(instance.mItems.size_0 > 0 ? $get_3(instance.mItems, valueOf_0(0)).time : P0_longLit);
	}

	function __static_wrapper_getTime_6(instance) {
		return toDouble(instance.time);
	}

	function __static_wrapper_putItems_5(instance, a0) {
		$putItems_4(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit, makeCastMap([Q$Serializable]), Q$TimeSeriesQuoteStreamItem, a0.length, 0))));
	}

	function __static_wrapper_setTime_6(instance, a0) {
		$setTime_6(instance, fromDouble(a0));
	}

	defineSeed(164, 1, {}, TimeSeriesQuoteStream_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_81() {
		return $wnd.hippo.quote.TimeSeriesQuoteStream;
	};
	_.isAssignable = function isAssignable_81(o) {
		return o != null && instanceOf(o, Q$TimeSeriesQuoteStream);
	};
	var exported_81 = false;

	function $setHandler_0(this$static, handler) {
		this$static.mHandler = handler;
	}

	function BaseRepository_0() {}

	defineSeed(165, 48, makeCastMap([Q$Repository, Q$BaseRepository, Q$Exportable]), BaseRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_5(object) {};
	_.endWatchObject_1 = function endWatchObject_5(object) {};
	_.getHandler_0 = function getHandler_1() {
		return this.mHandler;
	};
	_.init_0 = function init_1() {};
	_.setHandler_1 = function setHandler_4(handler) {
		$setHandler_0(this, handler);
	};

	function $export_82(this$static) {
		if (!exported_82) {
			exported_82 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_BaseRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			$export0_82(this$static);
		}
	}

	function $export0_82(this$static) {
		var pkg = declarePackage('hippo.repository.BaseRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.BaseRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BaseRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.BaseRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.BaseRepository[p] === undefined && ($wnd.hippo.repository.BaseRepository[p] = pkg[p]);
	}

	function BaseRepository_ExporterImpl_0() {
		$export_82(this);
	}

	defineSeed(166, 1, {}, BaseRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_82() {
		return $wnd.hippo.repository.BaseRepository;
	};
	_.isAssignable = function isAssignable_82(o) {
		return o != null && instanceOf(o, Q$BaseRepository);
	};
	var exported_82 = false;

	function DomainScheduleInfo_0() {}

	defineSeed(167, 1, {}, DomainScheduleInfo_0);
	_.mInterval = 0;
	_.mScheduleId = null;

	function $beginWatchObject_2(this$static, object) {
		var interval;
		interval = this$static.mInterval;
		$scheduleObject(this$static, object, interval);
	}

	function $getScheduleInfo(this$static, object) {
		var scheduleInfo;
		scheduleInfo = $get_3(this$static.mObjectMap, object);
		if (!scheduleInfo) {
			scheduleInfo = new DomainScheduleInfo_0;
			$put_2(this$static.mObjectMap, object, scheduleInfo);
		}
		return scheduleInfo;
	}

	function $internalSchedule(this$static, object, interval) {
		var id_0, scheduleInfo;
		id_0 = this$static.mTimer.startTimer_0(interval, new DomainScheduler$1_0(this$static, object));
		scheduleInfo = $getScheduleInfo(this$static, object);
		scheduleInfo.mScheduleId = id_0;
		scheduleInfo.mInterval = interval;
	}

	function $scheduleObject(this$static, object, interval) {
		var oldInterval, scheduleInfo;
		if (interval <= 0) throw new IllegalArgumentException_0;
		scheduleInfo = $getScheduleInfo(this$static, object);
		if (!scheduleInfo.mScheduleId) {
			$internalSchedule(this$static, object, interval);
		} else {
			oldInterval = scheduleInfo.mInterval;
			if (oldInterval > interval) {
				$unscheduleObject(this$static, object);
				$internalSchedule(this$static, object, interval);
			}
		}
	}

	function $unscheduleObject(this$static, object) {
		var scheduleInfo;
		scheduleInfo = $get_3(this$static.mObjectMap, object);
		if (scheduleInfo) {
			this$static.mTimer.stopTimer_0(scheduleInfo.mScheduleId);
			scheduleInfo.mScheduleId = null;
		}
	}

	function DomainScheduler_0() {
		this.mObjectMap = new TreeMap_1(new HashComparator_0);
	}

	defineSeed(168, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$DomainScheduler, Q$Exportable]), DomainScheduler_0);
	_.beginWatchObject_1 = function beginWatchObject_6(object) {
		$beginWatchObject_2(this, object);
	};
	_.endWatchObject_1 = function endWatchObject_6(object) {
		$unscheduleObject(this, object);
	};
	_.scheduleObject_0 = function scheduleObject(object, interval) {
		$scheduleObject(this, object, interval);
	};
	_.setInterval_0 = function setInterval_0(interval) {
		this.mInterval = interval;
	};
	_.setTimer_0 = function setTimer(timer) {
		this.mTimer = timer;
	};
	_.unscheduleObject_0 = function unscheduleObject(object) {
		$unscheduleObject(this, object);
	};
	_.mInterval = 0;

	function $run(this$static) {
		this$static.this$0.mHandler.onSuccess_0(this$static.val$finalObject, 'unknow');
	}

	function DomainScheduler$1_0(this$0, val$finalObject) {
		this.this$0 = this$0;
		this.val$finalObject = val$finalObject;
	}

	defineSeed(169, 1, {}, DomainScheduler$1_0);

	function $export_83(this$static) {
		if (!exported_83) {
			exported_83 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_DomainScheduler_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new Timer_ExporterImpl_0;
			$export0_83(this$static);
		}
	}

	function $export0_83(this$static) {
		var pkg = declarePackage('hippo.repository.DomainScheduler');
		var __0, __ = this$static;
		$wnd.hippo.repository.DomainScheduler = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new DomainScheduler_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.DomainScheduler.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.scheduleObject = $entry(function(a0, a1) {
			this.g.scheduleObject_0(a0 == null ? null : a0.g, a1);
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setInterval = $entry(function(a0) {
			this.g.setInterval_0(a0);
		});
		__0.setTimer = $entry(function(a0) {
			this.g.setTimer_0(a0 == null ? null : a0.g);
		});
		__0.unscheduleObject = $entry(function(a0) {
			this.g.unscheduleObject_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.DomainScheduler[p] === undefined && ($wnd.hippo.repository.DomainScheduler[p] = pkg[p]);
	}

	function DomainScheduler_ExporterImpl_0() {
		$export_83(this);
	}

	defineSeed(170, 1, {}, DomainScheduler_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_83() {
		return $wnd.hippo.repository.DomainScheduler;
	};
	_.isAssignable = function isAssignable_83(o) {
		return o != null && instanceOf(o, Q$DomainScheduler);
	};
	var exported_83 = false;

	function FixRepository_0() {}

	defineSeed(171, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$FixRepository, Q$Exportable]), FixRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_7(object) {
		var fix;
		if (instanceOf(object, Q$FixObject)) {
			fix = object;
			this.mNetworkRepository.beginWatchObject_1(fix);
		}
	};
	_.endWatchObject_1 = function endWatchObject_7(object) {
		this.mNetworkRepository.endWatchObject_1(object);
	};
	_.init_0 = function init_2() {};
	_.setNetworkRepository_0 = function setNetworkRepository(repository) {
		this.mNetworkRepository = repository;
		this.mNetworkRepository.setHandler_1(new DomainHandlerProxy_0(this));
	};

	function $export_84(this$static) {
		if (!exported_84) {
			exported_84 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_FixRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			$export0_84(this$static);
		}
	}

	function $export0_84(this$static) {
		var pkg = declarePackage('hippo.repository.FixRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.FixRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FixRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.FixRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setNetworkRepository = $entry(function(a0) {
			this.g.setNetworkRepository_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.FixRepository[p] === undefined && ($wnd.hippo.repository.FixRepository[p] = pkg[p]);
	}

	function FixRepository_ExporterImpl_0() {
		$export_84(this);
	}

	defineSeed(172, 1, {}, FixRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_84() {
		return $wnd.hippo.repository.FixRepository;
	};
	_.isAssignable = function isAssignable_84(o) {
		return o != null && instanceOf(o, Q$FixRepository);
	};
	var exported_84 = false;

	function HippoQuoteRepository_0() {}

	defineSeed(173, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$HippoQuoteRepository, Q$Exportable]), HippoQuoteRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_8(object) { !! this.mStorageRepos && $load(this.mStorageRepos, object); !! this.mReqRepos && this.mReqRepos.beginWatchObject_1(object); !! this.mSubRepos && this.mSubRepos.beginWatchObject_1(object);
	};
	_.endWatchObject_1 = function endWatchObject_8(object) { !! this.mStorageRepos && $save(this.mStorageRepos, object); !! this.mSubRepos && this.mSubRepos.endWatchObject_1(object); !! this.mReqRepos && this.mReqRepos.endWatchObject_1(object);
	};
	_.setReqRepository_0 = function setReqRepository(repos) {
		this.mReqRepos = repos;
		this.mReqRepos.setHandler_1(new HippoQuoteRepository$2_0(this));
	};
	_.setStorageRepository_0 = function setStorageRepository(storageRepository) {
		this.mStorageRepos = storageRepository;
		$setHandler_0(this.mStorageRepos, new HippoQuoteRepository$1_0(this));
	};
	_.setSubRepository_0 = function setSubRepository(repos) {
		this.mSubRepos = repos;
		this.mSubRepos.setHandler_1(new HippoQuoteRepository$3_0(this));
	};

	function HippoQuoteRepository$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(174, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), HippoQuoteRepository$1_0);
	_.onError_0 = function onError_2(err, source) {
		this.this$0.mHandler.onError_0(err, source);
	};
	_.onSuccess_0 = function onSuccess_2(object, source) {
		this.this$0.mHandler.onSuccess_0(object, source);
	};

	function HippoQuoteRepository$2_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(175, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), HippoQuoteRepository$2_0);
	_.onError_0 = function onError_3(err, source) {
		this.this$0.mHandler.onError_0(err, source);
	};
	_.onSuccess_0 = function onSuccess_3(object, source) {
		this.this$0.mHandler.onSuccess_0(object, source);
	};

	function HippoQuoteRepository$3_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(176, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), HippoQuoteRepository$3_0);
	_.onError_0 = function onError_4(err, source) {
		this.this$0.mHandler.onError_0(err, 'push');
	};
	_.onSuccess_0 = function onSuccess_4(object, source) {
		this.this$0.mHandler.onSuccess_0(object, 'push');
	};

	function $export_85(this$static) {
		if (!exported_85) {
			exported_85 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_HippoQuoteRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new StorageRepository_ExporterImpl_0;
			$export0_85(this$static);
		}
	}

	function $export0_85(this$static) {
		var pkg = declarePackage('hippo.repository.HippoQuoteRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.HippoQuoteRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new HippoQuoteRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.HippoQuoteRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setReqRepository = $entry(function(a0) {
			this.g.setReqRepository_0(a0 == null ? null : a0.g);
		});
		__0.setStorageRepository = $entry(function(a0) {
			this.g.setStorageRepository_0(a0 == null ? null : a0.g);
		});
		__0.setSubRepository = $entry(function(a0) {
			this.g.setSubRepository_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.HippoQuoteRepository[p] === undefined && ($wnd.hippo.repository.HippoQuoteRepository[p] = pkg[p]);
	}

	function HippoQuoteRepository_ExporterImpl_0() {
		$export_85(this);
	}

	defineSeed(177, 1, {}, HippoQuoteRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_85() {
		return $wnd.hippo.repository.HippoQuoteRepository;
	};
	_.isAssignable = function isAssignable_85(o) {
		return o != null && instanceOf(o, Q$HippoQuoteRepository);
	};
	var exported_85 = false;

	function QuoteRepository_0() {}

	defineSeed(178, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$QuoteRepository, Q$Exportable]), QuoteRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_9(object) { !! this.mStorageRepository && $load(this.mStorageRepository, object); !! this.mNetworkRepository && this.mNetworkRepository.beginWatchObject_1(object);
	};
	_.endWatchObject_1 = function endWatchObject_9(object) { !! this.mStorageRepository && $save(this.mStorageRepository, object); !! this.mNetworkRepository && this.mNetworkRepository.endWatchObject_1(object);
	};
	_.setNetworkRepository_0 = function setNetworkRepository_0(repository) {
		this.mNetworkRepository = repository;
		this.mNetworkRepository.setHandler_1(new QuoteRepository$1_0(this));
	};
	_.setStorageRepository_0 = function setStorageRepository_0(storageRepository) {
		this.mStorageRepository = storageRepository;
		$setHandler_0(this.mStorageRepository, new DomainHandlerProxy_0(this));
	};

	function QuoteRepository$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(179, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), QuoteRepository$1_0);
	_.onError_0 = function onError_5(err, source) {
		this.this$0.mHandler.onError_0(err, source);
	};
	_.onSuccess_0 = function onSuccess_5(object, source) {
		this.this$0.mHandler.onSuccess_0(object, source);
	};

	function $export_86(this$static) {
		if (!exported_86) {
			exported_86 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_QuoteRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new StorageRepository_ExporterImpl_0;
			$export0_86(this$static);
		}
	}

	function $export0_86(this$static) {
		var pkg = declarePackage('hippo.repository.QuoteRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.QuoteRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new QuoteRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.QuoteRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setNetworkRepository = $entry(function(a0) {
			this.g.setNetworkRepository_0(a0 == null ? null : a0.g);
		});
		__0.setStorageRepository = $entry(function(a0) {
			this.g.setStorageRepository_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.QuoteRepository[p] === undefined && ($wnd.hippo.repository.QuoteRepository[p] = pkg[p]);
	}

	function QuoteRepository_ExporterImpl_0() {
		$export_86(this);
	}

	defineSeed(180, 1, {}, QuoteRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_86() {
		return $wnd.hippo.repository.QuoteRepository;
	};
	_.isAssignable = function isAssignable_86(o) {
		return o != null && instanceOf(o, Q$QuoteRepository);
	};
	var exported_86 = false;

	function $getRepositoryList(this$static, topic) {
		var list;
		list = $get_3(this$static.mMapRepository, topic);
		if (!list) {
			list = new ArrayList_0;
			$put_2(this$static.mMapRepository, topic, list);
		}
		return list;
	}

	function RepositoryDispatcher_0() {
		this.mMapRepository = new TreeMap_0;
	}

	defineSeed(181, 1, makeCastMap([Q$RepositoryDispatcher, Q$Exportable]), RepositoryDispatcher_0);
	_.onError_1 = function onError_6(topic, data_0, source) {
		var i_0, list, newList, repository;
		list = $getRepositoryList(this, topic);
		if (list) {
			newList = new ArrayList_0;
			$addAll(newList, list);
			for (i_0 = 0; i_0 < newList.size_0; ++i_0) {
				repository = (checkIndex(i_0, newList.size_0), newList.array[i_0]);
				repository.getHandler_0().onError_0(data_0, source);
			}
		}
	};
	_.onSuccess_1 = function onSuccess_6(topic, data_0, source) {
		var i_0, list, newList, repository;
		list = $getRepositoryList(this, topic);
		if (list) {
			newList = new ArrayList_0;
			$addAll(newList, list);
			for (i_0 = 0; i_0 < newList.size_0; ++i_0) {
				repository = (checkIndex(i_0, newList.size_0), newList.array[i_0]);
				repository.getHandler_0().onSuccess_0(data_0, source);
			}
		}
	};
	_.registerRepository_0 = function registerRepository(topic, repository) {
		var list;
		list = $getRepositoryList(this, topic);
		$indexOf_1(list, repository, 0) != -1 || (list.array[list.size_0++] = repository, true);
	};
	_.unregisterRepository_0 = function unregisterRepository(topic, repository) {
		var list;
		list = $getRepositoryList(this, topic);
		$remove_2(list, repository);
	};

	function $export_87(this$static) {
		if (!exported_87) {
			exported_87 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_RepositoryDispatcher_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			$export0_87(this$static);
		}
	}

	function $export0_87(this$static) {
		var pkg = declarePackage('hippo.repository.RepositoryDispatcher');
		var __0, __ = this$static;
		$wnd.hippo.repository.RepositoryDispatcher = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new RepositoryDispatcher_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.RepositoryDispatcher.prototype = new Object;
		__0.onError = $entry(function(a0, a1, a2) {
			this.g.onError_1(a0, a1 == null ? null : a1.g, a2);
		});
		__0.onSuccess = $entry(function(a0, a1, a2) {
			this.g.onSuccess_1(a0, a1 == null ? null : a1.g, a2);
		});
		__0.registerRepository = $entry(function(a0, a1) {
			this.g.registerRepository_0(a0, a1 == null ? null : a1.g);
		});
		__0.unregisterRepository = $entry(function(a0, a1) {
			this.g.unregisterRepository_0(a0, a1 == null ? null : a1.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.RepositoryDispatcher[p] === undefined && ($wnd.hippo.repository.RepositoryDispatcher[p] = pkg[p]);
	}

	function RepositoryDispatcher_ExporterImpl_0() {
		$export_87(this);
	}

	defineSeed(182, 1, {}, RepositoryDispatcher_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_87() {
		return $wnd.hippo.repository.RepositoryDispatcher;
	};
	_.isAssignable = function isAssignable_87(o) {
		return o != null && instanceOf(o, Q$RepositoryDispatcher);
	};
	var exported_87 = false;

	function $needUpdateCodeList(this$static, codeList) {
		var compare, curDate, currentTimeMillis, day, lastDate, month, storageDate, year;
		if (!codeList || codeList.mUpdateDate == null) return true;
		log_1('length ' + codeList.mUpdateDate.length);
		if (codeList.mUpdateDate.length < 8) return true;
		currentTimeMillis = this$static.mTimeService.currentTimeMillis_0();
		curDate = new Date_2(__parseAndValidateLong(currentTimeMillis));
		lastDate = new Date_2(sub_0(fromDouble(curDate.jsdate.getTime()), P5265c00_longLit));
		compare = true;
		try {
			year = valueOf_0(__parseAndValidateInt($substring_0(codeList.mUpdateDate, 0, 4))).value_0;
			month = valueOf_0(__parseAndValidateInt($substring_0(codeList.mUpdateDate, 4, 6))).value_0;
			day = valueOf_0(__parseAndValidateInt($substring_0(codeList.mUpdateDate, 6, 8))).value_0;
			storageDate = new Date_1(year - 1900, month - 1, day);
			log_1('year:' + year + ' month:' + month + ' day:' + day + ' now:' + curDate.jsdate.toLocaleString());
			lt(fromDouble(storageDate.jsdate.getTime()), fromDouble(lastDate.jsdate.getTime())) || !! lastDate && eq(fromDouble(storageDate.jsdate.getTime()), fromDouble(lastDate.jsdate.getTime())) && curDate.jsdate.getHours() >= 9 ? (compare = true) : (compare = false);
		} finally {
			return compare;
		}
	}

	function ScheduleRepository_0() {}

	defineSeed(183, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$ScheduleRepository, Q$Exportable]), ScheduleRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_10(object) {
		$beginWatchObject_2(this.mScheduler, object);
	};
	_.endWatchObject_1 = function endWatchObject_10(object) {
		$unscheduleObject(this.mScheduler, object);
		this.mRepository.endWatchObject_1(object);
	};
	_.setNetworkRepository_0 = function setNetworkRepository_1(repository) {
		this.mRepository = repository;
		this.mRepository.setHandler_1(new DomainHandlerProxy_0(this));
	};
	_.setScheduler_0 = function setScheduler(scheduler) {
		this.mScheduler = scheduler;
		$setHandler_0(this.mScheduler, new ScheduleRepository$1_0(this));
	};
	_.setTimeService_0 = function setTimeService(service) {
		this.mTimeService = service;
	};

	function ScheduleRepository$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(184, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), ScheduleRepository$1_0);
	_.onSuccess_0 = function onSuccess_7(object, source) {
		var codeList;
		if (instanceOf(object, Q$CodeList)) {
			codeList = object;
			if ($needUpdateCodeList(this.this$0, codeList)) {
				log_1('update codeList ' + codeList.mCurrentHash);
				this.this$0.mRepository.beginWatchObject_1(codeList);
			}
		} else {
			(!this.this$0.mTimeService || this.this$0.mTimeService.isOpeningPeriod_0()) && this.this$0.mRepository.beginWatchObject_1(object);
		}
	};

	function $export_88(this$static) {
		if (!exported_88) {
			exported_88 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_ScheduleRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainScheduler_ExporterImpl_0;
			new TimeService_ExporterImpl_0;
			$export0_88(this$static);
		}
	}

	function $export0_88(this$static) {
		var pkg = declarePackage('hippo.repository.ScheduleRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.ScheduleRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new ScheduleRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.ScheduleRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setNetworkRepository = $entry(function(a0) {
			this.g.setNetworkRepository_0(a0 == null ? null : a0.g);
		});
		__0.setScheduler = $entry(function(a0) {
			this.g.setScheduler_0(a0 == null ? null : a0.g);
		});
		__0.setTimeService = $entry(function(a0) {
			this.g.setTimeService_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.ScheduleRepository[p] === undefined && ($wnd.hippo.repository.ScheduleRepository[p] = pkg[p]);
	}

	function ScheduleRepository_ExporterImpl_0() {
		$export_88(this);
	}

	defineSeed(185, 1, {}, ScheduleRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_88() {
		return $wnd.hippo.repository.ScheduleRepository;
	};
	_.isAssignable = function isAssignable_88(o) {
		return o != null && instanceOf(o, Q$ScheduleRepository);
	};
	var exported_88 = false;

	function $getTopic(object) {
		var item_0, quote_0, stock, stream, topic;
		topic = null;
		if (instanceOf(object, Q$RealtimeQuoteItem)) {
			item_0 = object;
			stock = item_0.mSecurities;
			topic = 'quote.realtime.' + stock.market + '.' + stock.stock_code;
		} else if (instanceOf(object, Q$CandleQuoteStream)) {
			quote_0 = object;
			stock = quote_0.mSecurities;
			quote_0.direction == 0 ? (topic = 'quote.kline.' + getTopicString(quote_0.periodType) + '.' + stock.market + '.' + stock.stock_code) : (topic = 'quote.kline.' + getTopicString(quote_0.periodType) + '.' + quote_0.direction + '.' + stock.market + '.' + stock.stock_code);
		} else if (instanceOf(object, Q$TickQuoteStream)) {
			quote_0 = object;
			stock = quote_0.mSecurities;
			topic = 'quote.tick.' + stock.market + '.' + stock.stock_code;
		} else if (instanceOf(object, Q$TimeSeriesQuoteStream)) {
			stream = object;
			stock = stream.mSecurities;
			topic = 'quote.timeseries.' + stock.market + '.' + stock.stock_code;
		} else if (instanceOf(object, Q$CapFlowQuoteStream)) {
			stream = object;
			stock = stream.mSecurities;
			topic = 'quote.capflow.' + stock.market + '.' + stock.stock_code;
		}
		return topic;
	}

	function $onStatus(this$static, status_0) {
		var info, info$iterator, item_0, market, newMap, stock, stockMarket;
		market = status_0.message_0;
		if (status_0.status_0 == 0) {
			newMap = new TreeMap_1(new HashComparator_0);
			$putAll(newMap, this$static.mObjectMap);
			for (info$iterator = $iterator_0($values(newMap)); info$iterator.val$outerIter.hasNext();) {
				info = $next_1(info$iterator);
				if (instanceOf(info.object, Q$QuoteItem)) {
					item_0 = info.object;
					stock = item_0.mSecurities;
					stockMarket = stock.market;
					(market == null || market == '' || market.indexOf(stockMarket) != -1) && $subscribe(this$static, info.object);
				} else {
					$subscribe(this$static, info.object);
				}
			}
		}
	}

	function $subscribe(this$static, object) {
		var data_0, str, topic;
		topic = $getTopic(object);
		if (topic != null) {
			str = '{"topic":"' + topic + '","method":"sub"}';
			data_0 = getBytesUtf8(str);
			this$static.mNetwork.send_0('sys.topicManager', data_0);
		}
	}

	function $unsubscribe(this$static, object) {
		var data_0, str, topic;
		topic = $getTopic(object);
		if (topic != null) {
			str = '{"topic":"' + topic + '","method":"unsub"}';
			data_0 = getBytesUtf8(str);
			this$static.mNetwork.send_0('sys.topicManager', data_0);
		}
	}

	function SubscribeRepository_0() {
		this.mObjectMap = new TreeMap_1(new HashComparator_0);
	}

	defineSeed(186, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$SubscribeRepository, Q$Exportable]), SubscribeRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_11(object) {
		var info;
		info = $get_3(this.mObjectMap, object);
		if (!info) {
			info = new SubscribeRepository$Info_0;
			info.object = object;
			$put_2(this.mObjectMap, object, info);
			$subscribe(this, object);
		} else {
			info = $get_3(this.mObjectMap, object);
		}++info.count;
	};
	_.endWatchObject_1 = function endWatchObject_11(object) {
		var info;
		info = $get_3(this.mObjectMap, object);
		if (info) {
			--info.count;
			if (info.count == 0) {
				$remove_3(this.mObjectMap, object);
				$unsubscribe(this, object);
			}
		}
	};
	_.onStatus_0 = function onStatus_1(status_0) {
		$onStatus(this, status_0);
	};
	_.setNetwork_0 = function setNetwork(network) {
		this.mNetwork = network;
	};
	_.setNetworkManager_0 = function setNetworkManager(networkManager) {
		$registerStatusHandler(networkManager, new SubscribeRepository$1_0(this));
	};

	function SubscribeRepository$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(187, 9, makeCastMap([Q$NetworkStatusHandler, Q$Exportable]), SubscribeRepository$1_0);
	_.onStatus_0 = function onStatus_2(status_0) {
		$onStatus(this.this$0, status_0);
	};

	function SubscribeRepository$Info_0() {}

	defineSeed(188, 1, {}, SubscribeRepository$Info_0);
	_.count = 0;

	function $export_89(this$static) {
		if (!exported_89) {
			exported_89 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_repository_SubscribeRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new NetworkStatus_ExporterImpl_0;
			new Network_ExporterImpl_0;
			new NetworkManager_ExporterImpl_0;
			$export0_89(this$static);
		}
	}

	function $export0_89(this$static) {
		var pkg = declarePackage('hippo.repository.SubscribeRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.SubscribeRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new SubscribeRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.SubscribeRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.onStatus = $entry(function(a0) {
			this.g.onStatus_0(a0 == null ? null : a0.g);
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setNetwork = $entry(function(a0) {
			this.g.setNetwork_0(a0 == null ? null : a0.g);
		});
		__0.setNetworkManager = $entry(function(a0) {
			this.g.setNetworkManager_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.SubscribeRepository[p] === undefined && ($wnd.hippo.repository.SubscribeRepository[p] = pkg[p]);
	}

	function SubscribeRepository_ExporterImpl_0() {
		$export_89(this);
	}

	defineSeed(189, 1, {}, SubscribeRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_89() {
		return $wnd.hippo.repository.SubscribeRepository;
	};
	_.isAssignable = function isAssignable_89(o) {
		return o != null && instanceOf(o, Q$SubscribeRepository);
	};
	var exported_89 = false;

	function $setCurrentHash(this$static, mCurrentHash) {
		this$static.mCurrentHash = mCurrentHash;
	}

	function $setUpdateDate(this$static, mUpdateDate) {
		this$static.mUpdateDate = mUpdateDate;
	}

	function CodeList_0() {
		this.mItems = new StockList_0;
	}

	defineSeed(190, 28, makeCastMap([Q$DomainObject, Q$CodeList, Q$Exportable]), CodeList_0);
	_.getCurrentHash_0 = function getCurrentHash() {
		return this.mCurrentHash;
	};
	_.getInQuery_0 = function getInQuery() {
		return this.mInQuery;
	};
	_.getInput_0 = function getInput() {
		return this.mInput;
	};
	_.getItems_0 = function getItems() {
		return this.mItems;
	};
	_.getModule_0 = function getModule_0() {
		return 'quote';
	};
	_.getType_0 = function getType_20() {
		return 'CodeList';
	};
	_.getUpdateDate_0 = function getUpdateDate() {
		return this.mUpdateDate;
	};
	_.needRebuild_0 = function needRebuild() {
		return this.mRebuildFlag == 1;
	};
	_.needUpdate_0 = function needUpdate() {
		return this.mUpdatedFlag == 1;
	};
	_.setCurrentHash_0 = function setCurrentHash(mCurrentHash) {
		$setCurrentHash(this, mCurrentHash);
	};
	_.setInQuery_0 = function setInQuery(inQuery) {
		this.mInQuery = inQuery;
	};
	_.setInput_0 = function setInput(input_0) {
		this.mInput = input_0;
	};
	_.setItems_0 = function setItems(items) {
		this.mItems = items;
	};
	_.setRebuildFlag_0 = function setRebuildFlag(mRebuildFlag) {
		this.mRebuildFlag = mRebuildFlag;
	};
	_.setUpdateDate_0 = function setUpdateDate(mUpdateDate) {
		$setUpdateDate(this, mUpdateDate);
	};
	_.setUpdatedFlag_0 = function setUpdatedFlag(mUpdatedFlag) {
		this.mUpdatedFlag = mUpdatedFlag;
	};
	_.mCurrentHash = '';
	_.mInQuery = false;
	_.mRebuildFlag = 0;
	_.mUpdateDate = '';
	_.mUpdatedFlag = 0;

	function CodeListRepository_0() {
		this.mCodeList = new CodeList_0;
	}

	defineSeed(191, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$CodeListRepository, Q$Exportable]), CodeListRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_12(object) {
		$load(this.mStorageRepository, object);
	};
	_.endWatchObject_1 = function endWatchObject_12(object) {
		var codeList;
		if (instanceOf(object, Q$CodeList)) {
			codeList = object;
			if (codeList.mInput == null) {
				$save(this.mStorageRepository, object);
				this.mNetworkRepository.endWatchObject_1(object);
			}
		}
	};
	_.setNetworkRepository_0 = function setNetworkRepository_2(repository) {
		this.mNetworkRepository = repository;
		this.mNetworkRepository.setHandler_1(new CodeListRepository$2_0(this));
	};
	_.setStorageRepository_0 = function setStorageRepository_1(repository) {
		this.mStorageRepository = repository;
		$setHandler_0(this.mStorageRepository, new CodeListRepository$1_0(this));
	};

	function CodeListRepository$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(192, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), CodeListRepository$1_0);
	_.onSuccess_0 = function onSuccess_8(data_0, source) {
		var resultList;
		if (instanceOf(data_0, Q$CodeList)) {
			resultList = data_0;
			$setCurrentHash(this.this$0.mCodeList, resultList.mCurrentHash);
			$setUpdateDate(this.this$0.mCodeList, resultList.mUpdateDate);
			resultList.mInput == null && this.this$0.mNetworkRepository.beginWatchObject_1(this.this$0.mCodeList);
		}
		this.this$0.mHandler.onSuccess_0(data_0, source);
	};

	function CodeListRepository$2_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(193, 20, makeCastMap([Q$DomainHandler, Q$Exportable]), CodeListRepository$2_0);
	_.onSuccess_0 = function onSuccess_9(data_0, source) {
		var resultList;
		if (instanceOf(data_0, Q$CodeList)) {
			resultList = data_0;
			$save(this.this$0.mStorageRepository, data_0);
			$setCurrentHash(this.this$0.mCodeList, resultList.mCurrentHash);
			$setUpdateDate(this.this$0.mCodeList, resultList.mUpdateDate);
		}
		this.this$0.mHandler.onSuccess_0(data_0, source);
	};

	function $export_90(this$static) {
		if (!exported_90) {
			exported_90 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_CodeListRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new StorageRepository_ExporterImpl_0;
			$export0_90(this$static);
		}
	}

	function $export0_90(this$static) {
		var pkg = declarePackage('hippo.repository.CodeListRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.CodeListRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CodeListRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.CodeListRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setNetworkRepository = $entry(function(a0) {
			this.g.setNetworkRepository_0(a0 == null ? null : a0.g);
		});
		__0.setStorageRepository = $entry(function(a0) {
			this.g.setStorageRepository_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.CodeListRepository[p] === undefined && ($wnd.hippo.repository.CodeListRepository[p] = pkg[p]);
	}

	function CodeListRepository_ExporterImpl_0() {
		$export_90(this);
	}

	defineSeed(194, 1, {}, CodeListRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_90() {
		return $wnd.hippo.repository.CodeListRepository;
	};
	_.isAssignable = function isAssignable_90(o) {
		return o != null && instanceOf(o, Q$CodeListRepository);
	};
	var exported_90 = false;

	function $export_91(this$static) {
		if (!exported_91) {
			exported_91 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_CodeList_2_classLit, this$static);
			new StockList_ExporterImpl_0;
			$export0_91(this$static);
		}
	}

	function $export0_91(this$static) {
		var pkg = declarePackage('hippo.securities.CodeList');
		var __0, __ = this$static;
		$wnd.hippo.securities.CodeList = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CodeList_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.CodeList.prototype = new Object;
		__0.getCurrentHash = $entry(function() {
			return this.g.getCurrentHash_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getInQuery = $entry(function() {
			return this.g.getInQuery_0();
		});
		__0.getInput = $entry(function() {
			return this.g.getInput_0();
		});
		__0.getItems = $entry(function() {
			return wrap_0(this.g.getItems_0());
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUpdateDate = $entry(function() {
			return this.g.getUpdateDate_0();
		});
		__0.needRebuild = $entry(function() {
			return this.g.needRebuild_0();
		});
		__0.needUpdate = $entry(function() {
			return this.g.needUpdate_0();
		});
		__0.setCurrentHash = $entry(function(a0) {
			this.g.setCurrentHash_0(a0);
		});
		__0.setInQuery = $entry(function(a0) {
			this.g.setInQuery_0(a0);
		});
		__0.setInput = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_CodeList_2_classLit, 0, arguments, false, false)[0];
		});
		__0.setItems = $entry(function(a0) {
			this.g.setItems_0(a0 == null ? null : a0.g);
		});
		__0.setRebuildFlag = $entry(function(a0) {
			this.g.setRebuildFlag_0(a0);
		});
		__0.setUpdateDate = $entry(function(a0) {
			this.g.setUpdateDate_0(a0);
		});
		__0.setUpdatedFlag = $entry(function(a0) {
			this.g.setUpdatedFlag_0(a0);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_securities_CodeList_2_classLit, {
			0: {
				1: [
					[function() {
						return this.setInput_0.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.CodeList[p] === undefined && ($wnd.hippo.securities.CodeList[p] = pkg[p]);
	}

	function CodeList_ExporterImpl_0() {
		$export_91(this);
	}

	defineSeed(195, 1, {}, CodeList_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_91() {
		return $wnd.hippo.securities.CodeList;
	};
	_.isAssignable = function isAssignable_91(o) {
		return o != null && instanceOf(o, Q$CodeList);
	};
	var exported_91 = false;

	function Securities_0() {}

	defineSeed(196, 28, makeCastMap([Q$DomainObject, Q$Securities, Q$Exportable]), Securities_0);
	_.getModule_0 = function getModule_1() {
		return 'quote';
	};
	_.getType_0 = function getType_21() {
		return 'securities';
	};

	function $export_92(this$static) {
		if (!exported_92) {
			exported_92 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_Securities_2_classLit, this$static);
			$export0_92(this$static);
		}
	}

	function $export0_92(this$static) {
		var pkg = declarePackage('hippo.securities.Securities');
		var __0, __ = this$static;
		$wnd.hippo.securities.Securities = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Securities_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.Securities.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.Securities[p] === undefined && ($wnd.hippo.securities.Securities[p] = pkg[p]);
	}

	function Securities_ExporterImpl_0() {
		$export_92(this);
	}

	defineSeed(197, 1, {}, Securities_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_92() {
		return $wnd.hippo.securities.Securities;
	};
	_.isAssignable = function isAssignable_92(o) {
		return o != null && instanceOf(o, Q$Securities);
	};
	var exported_92 = false;

	function SecurityTypes_0() {}

	defineSeed(198, 1, makeCastMap([Q$SecurityTypes, Q$Exportable]), SecurityTypes_0);

	function $export_93(this$static) {
		if (!exported_93) {
			exported_93 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_SecurityTypes_2_classLit, this$static);
			$export0_93(this$static);
		}
	}

	function $export0_93(this$static) {
		var pkg = declarePackage('hippo.securities.SecurityTypes');
		var __0, __ = this$static;
		$wnd.hippo.securities.SecurityTypes = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new SecurityTypes_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.SecurityTypes.prototype = new Object;
		$wnd.hippo.securities.SecurityTypes.UNKNOWN = 0;
		$wnd.hippo.securities.SecurityTypes.STOCK_A = 1;
		$wnd.hippo.securities.SecurityTypes.STOCK_B = 2;
		$wnd.hippo.securities.SecurityTypes.BOND = 3;
		$wnd.hippo.securities.SecurityTypes.FUND = 4;
		$wnd.hippo.securities.SecurityTypes.WARRANT = 5;
		$wnd.hippo.securities.SecurityTypes.INDEX = 6;
		$wnd.hippo.securities.SecurityTypes.STOCK_SMALL = 7;
		$wnd.hippo.securities.SecurityTypes.STOCK_GEM = 8;
		$wnd.hippo.securities.SecurityTypes.STOCK_STB = 9;
		$wnd.hippo.securities.SecurityTypes.STOCK_TRST = 10;
		$wnd.hippo.securities.SecurityTypes.STOCK_BWRT = 11;
		$wnd.hippo.securities.SecurityTypes.STOCK_EQTY = 12;
		$wnd.hippo.securities.SecurityTypes.STOCK_BKIDX = 13;
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.SecurityTypes[p] === undefined && ($wnd.hippo.securities.SecurityTypes[p] = pkg[p]);
	}

	function SecurityTypes_ExporterImpl_0() {
		$export_93(this);
	}

	defineSeed(199, 1, {}, SecurityTypes_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_93() {
		return $wnd.hippo.securities.SecurityTypes;
	};
	_.isAssignable = function isAssignable_93(o) {
		return o != null && instanceOf(o, Q$SecurityTypes);
	};
	var exported_93 = false;

	function $compareTo_0(this$static, stock) {
		return getHashCode(this$static) - getHashCode(stock);
	}

	function $copy_2(this$static, source) {
		if (!source) return;
		this$static.board = source.board;
		this$static.buy_unit = source.buy_unit;
		this$static.down_price = source.down_price;
		this$static.exchange_type = source.exchange_type;
		this$static.exchangecode = source.exchangecode;
		this$static.market = source.market;
		this$static.pinyin = source.pinyin;
		this$static.price_step = source.price_step;
		this$static.stock_code = source.stock_code;
		this$static.stock_name = source.stock_name;
		this$static.store_unit = source.store_unit;
		this$static.stockType = source.stockType;
		this$static.up_price = source.up_price;
		this$static.updateId = source.updateId;
		this$static.updateFlage = source.updateFlage;
		this$static.credit = source.credit;
	}

	function Stock_0() {}

	defineSeed(200, 196, makeCastMap([Q$DomainObject, Q$Securities, Q$Stock, Q$Comparable, Q$Exportable]), Stock_0);
	_.compareTo_1 = function compareTo_1(stock) {
		return $compareTo_0(this, stock);
	};
	_.compareTo$ = function compareTo_2(stock) {
		return $compareTo_0(this, stock);
	};
	_.copy_7 = function copy_8(source) {
		$copy_2(this, source);
	};
	_.equals$ = function equals_11(obj) {
		var stock;
		if (instanceOf(obj, Q$Stock)) {
			stock = obj;
			if ($equals_151(this.market, stock.market) && $equals_151(this.stock_code, stock.stock_code)) return true;
		}
		return false;
	};
	_.getBoard_1 = function getBoard_0() {
		return this.board;
	};
	_.getBuy_unit_0 = function getBuy_unit() {
		return this.buy_unit;
	};
	_.getCredit_0 = function getCredit() {
		return this.credit;
	};
	_.getDecimalDigits_0 = function getDecimalDigits() {
		var digit;
		digit = 2;
		this.securityType == 4 && (digit = 3);
		(this.securityType == 2 && this.market == 'sh' || this.securityType == 3) && (digit = 3);
		this.securityType == 5 && (digit = 4);
		return digit;
	};
	_.getDown_price_0 = function getDown_price() {
		return this.down_price;
	};
	_.getExchange_type_0 = function getExchange_type() {
		return this.exchange_type;
	};
	_.getExchangecode_0 = function getExchangecode() {
		return this.exchangecode;
	};
	_.getId_0 = function getId_0() {
		return this.market + ':' + this.stock_code;
	};
	_.getMarket_0 = function getMarket_1() {
		return this.market;
	};
	_.getPinyin_0 = function getPinyin() {
		return this.pinyin;
	};
	_.getPrice_step_0 = function getPrice_step() {
		return this.price_step;
	};
	_.getSecurityType_0 = function getSecurityType_0() {
		return this.securityType;
	};
	_.getStockType_0 = function getStockType() {
		return this.stockType;
	};
	_.getStock_code_0 = function getStock_code() {
		return this.stock_code;
	};
	_.getStock_name_0 = function getStock_name() {
		return this.stock_name;
	};
	_.getStore_unit_0 = function getStore_unit() {
		return this.store_unit;
	};
	_.getType_0 = function getType_22() {
		return 'stock';
	};
	_.getUp_price_0 = function getUp_price() {
		return this.up_price;
	};
	_.getUpdateFlage_0 = function getUpdateFlage() {
		return this.updateFlage;
	};
	_.getUpdateId_0 = function getUpdateId() {
		return this.updateId;
	};
	_.isCompleted_0 = function isCompleted() {
		return this.completeFlage;
	};
	_.setBoard_0 = function setBoard(board) {
		this.board = board;
	};
	_.setBuy_unit_0 = function setBuy_unit(buy_unit) {
		this.buy_unit = buy_unit;
	};
	_.setCompleteFlage_0 = function setCompleteFlage(completeFlage) {
		this.completeFlage = completeFlage;
	};
	_.setCredit_0 = function setCredit(credit) {
		this.credit = credit;
	};
	_.setDown_price_0 = function setDown_price(down_price) {
		this.down_price = down_price;
	};
	_.setExchange_type_0 = function setExchange_type(exchange_type) {
		this.exchange_type = exchange_type;
	};
	_.setExchangecode_0 = function setExchangecode(exchangecode) {
		this.exchangecode = exchangecode;
	};
	_.setMarket_0 = function setMarket_1(market) {
		this.market = market;
	};
	_.setPinyin_0 = function setPinyin(pinyin) {
		this.pinyin = pinyin;
	};
	_.setPrice_step_0 = function setPrice_step(price_step) {
		this.price_step = price_step;
	};
	_.setSecurityType_0 = function setSecurityType_0(type_0) {
		this.securityType = type_0;
	};
	_.setStockType_0 = function setStockType(type_0) {
		this.stockType = type_0;
	};
	_.setStock_code_0 = function setStock_code(stock_code) {
		this.stock_code = stock_code;
	};
	_.setStock_name_0 = function setStock_name(stock_name) {
		this.stock_name = stock_name;
	};
	_.setStore_unit_0 = function setStore_unit(store_unit) {
		this.store_unit = store_unit;
	};
	_.setUp_price_0 = function setUp_price(up_price) {
		this.up_price = up_price;
	};
	_.setUpdateFlage_0 = function setUpdateFlage(updateFlage) {
		this.updateFlage = updateFlage;
	};
	_.setUpdateId_0 = function setUpdateId(updateId) {
		this.updateId = updateId;
	};
	_.board = '';
	_.buy_unit = '';
	_.completeFlage = false;
	_.credit = -1;
	_.down_price = '';
	_.exchange_type = '';
	_.exchangecode = 0;
	_.market = '';
	_.pinyin = '';
	_.price_step = '';
	_.securityType = 0;
	_.stockType = '';
	_.stock_code = '';
	_.stock_name = '';
	_.store_unit = '';
	_.up_price = '';
	_.updateFlage = 0;
	_.updateId = '';

	function $deleteItem(this$static, stock) {
		$remove_2(this$static.mItems, stock);
	}

	function $getAllItems_2(this$static) {
		var stocks;
		stocks = initDim(_3Lcom_gf_hippo_domain_client_securities_Stock_2_classLit, makeCastMap([Q$Serializable]), Q$Stock, this$static.mItems.size_0, 0);
		$toArray_1(this$static.mItems, stocks);
		return stocks;
	}

	function $putItem_0(this$static, stock) {
		if (!stock) return;
		$add(this$static.mItems, stock);
	}

	function $putItems_5(this$static, allItems) {
		var i_0;
		for (i_0 = 0; i_0 < allItems.length; ++i_0) {
			$putItem_0(this$static, allItems[i_0]);
		}
	}

	function StockList_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(201, 28, makeCastMap([Q$DomainObject, Q$StockList, Q$Exportable]), StockList_0);
	_.deleteItem_1 = function deleteItem_0(stock) {
		$deleteItem(this, stock);
	};
	_.getAllItems_6 = function getAllItems_5() {
		return $getAllItems_2(this);
	};
	_.getAllList_0 = function getAllList_0() {
		return this.mItems;
	};
	_.getItemAt_1 = function getItemAt_0(index_0) {
		return $get_2(this.mItems, index_0);
	};
	_.getModule_0 = function getModule_2() {
		return 'quote';
	};
	_.getType_0 = function getType_23() {
		return 'StockList';
	};
	_.putItem_6 = function putItem_5(stock) {
		$putItem_0(this, stock);
	};
	_.removeAllItems_0 = function removeAllItems_0() {
		$clear_154(this.mItems);
	};

	function $export_94(this$static) {
		if (!exported_94) {
			exported_94 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_StockList_2_classLit, this$static);
			new Stock_ExporterImpl_0;
			$export0_94(this$static);
		}
	}

	function $export0_94(this$static) {
		var pkg = declarePackage('hippo.securities.StockList');
		var __0, __ = this$static;
		$wnd.hippo.securities.StockList = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockList_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.StockList.prototype = new Object;
		$wnd.hippo.securities.StockList.TYPE = 'StockList';
		__0.deleteItem = $entry(function(a0) {
			this.g.deleteItem_1(a0 == null ? null : a0.g);
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_6());
		});
		__0.getAllList = $entry(function() {
			return this.g.getAllList_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getItemAt = $entry(function(a0) {
			return wrap_0(this.g.getItemAt_1(a0));
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_6(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_6(this.g, a0);
		});
		__0.removeAllItems = $entry(function() {
			this.g.removeAllItems_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.StockList[p] === undefined && ($wnd.hippo.securities.StockList[p] = pkg[p]);
	}

	function StockList_ExporterImpl_0() {
		$export_94(this);
	}

	function __static_wrapper_putItems_6(instance, a0) {
		$putItems_5(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_securities_Stock_2_classLit, makeCastMap([Q$Serializable]), Q$Stock, a0.length, 0))));
	}

	defineSeed(202, 1, {}, StockList_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_94() {
		return $wnd.hippo.securities.StockList;
	};
	_.isAssignable = function isAssignable_94(o) {
		return o != null && instanceOf(o, Q$StockList);
	};
	var exported_94 = false;

	function $getStock_1(this$static, market, code_0) {
		var stock, stock0;
		stock0 = new Stock_0;
		stock0.exchange_type = market;
		stock0.stock_code = code_0;
		stock0.market = market;
		stock = $getObject(this$static.mObjectContainer, stock0.market + ':' + stock0.stock_code);
		if (!stock) {
			$putObject(this$static.mObjectContainer, stock0);
			return stock0;
		} else {
			return stock;
		}
	}

	function $updateStocks(this$static, codeList) {
		var mapStock, stock, stock$index, stock$max, stocks;
		stocks = $getAllItems_2(codeList.mItems);
		for (stock$index = 0, stock$max = stocks.length; stock$index < stock$max; ++stock$index) {
			stock = stocks[stock$index];
			mapStock = stock ? $getStock_1(this$static, stock.market, stock.stock_code) : null; !! mapStock && stock != mapStock && $copy_2(mapStock, stock);
		}
	}

	function StockManager_0() {
		BaseManager_0.call(this);
		this.mCodeList = new CodeList_0;
	}

	defineSeed(203, 17, makeCastMap([Q$BaseManager, Q$Manager, Q$StockManager, Q$Exportable]), StockManager_0);
	_.beginWatch_3 = function beginWatch_7(object, handler) {
		var refreshed;
		refreshed = $isObjectReferenced(this, object);
		$beginWatchObject(this, object, handler);
		refreshed || this.mRepository.beginWatchObject_1(object);
	};
	_.endWatch_3 = function endWatch_7(object, handler) {
		$endWatchObject(this, object, handler);
		$isObjectReferenced(this, object) || this.mRepository.endWatchObject_1(object);
	};
	_.getCodeList_0 = function getCodeList(input_0) {
		var codeList;
		codeList = new CodeList_0;
		codeList.mInput = input_0;
		return codeList;
	};
	_.getStaticCodeList_0 = function getStaticCodeList() {
		return this.mCodeList;
	};
	_.getStock_0 = function getStock(original) {
		return original ? $getStock_1(this, original.market, original.stock_code) : null;
	};
	_.getStock_1 = function getStock_0(market, code_0) {
		return $getStock_1(this, market, code_0);
	};
	_.onDomainData_0 = function onDomainData_8(object, source) {
		var resultList, s, stock, stock$array, stock$index, stock$max, stockList;
		if (instanceOf(object, Q$CodeList)) {
			resultList = object;
			$updateStocks(this, resultList);
			stockList = this.mCodeList.mItems;
			$clear_154(stockList.mItems);
			for (stock$array = $getAllItems_2(resultList.mItems), stock$index = 0, stock$max = stock$array.length; stock$index < stock$max; ++stock$index) {
				stock = stock$array[stock$index];
				s = stock ? $getStock_1(this, stock.market, stock.stock_code) : null;
				$putItem_0(stockList, s);
			}
			$setCurrentHash(this.mCodeList, resultList.mCurrentHash);
			log_1('hash ' + this.mCodeList.mCurrentHash);
			$setUpdateDate(this.mCodeList, resultList.mUpdateDate);
			$invalidate(this, object, source);
		} else instanceOf(object, Q$Stock) && $invalidate(this, object, source);
	};
	_.setObjectContainer_0 = function setObjectContainer_0(container) {
		this.mObjectContainer = container;
	};
	_.updateCodeList_0 = function updateCodeList() {
		this.mRepository.beginWatchObject_1(this.mCodeList);
	};

	function $export_95(this$static) {
		if (!exported_95) {
			exported_95 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_StockManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new CodeList_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new Stock_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_95(this$static);
		}
	}

	function $export0_95(this$static) {
		var pkg = declarePackage('hippo.securities.StockManager');
		var __0, __ = this$static;
		$wnd.hippo.securities.StockManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.StockManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getCodeList = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_StockManager_2_classLit, 2, arguments, false, false)[0];
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.getStaticCodeList = $entry(function() {
			return wrap_0(this.g.getStaticCodeList_0());
		});
		__0.getStock = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_StockManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_StockManager_2_classLit, 1, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		__0.updateCodeList = $entry(function() {
			this.g.updateCodeList_0();
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_securities_StockManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.getStock_0.apply(this, arguments);
					},
					wrap_0, undefined, Lcom_gf_hippo_domain_client_securities_Stock_2_classLit]
				],
				2: [
					[function() {
						return this.getStock_1.apply(this, arguments);
					},
					wrap_0, undefined, 'string', 'string']
				]
			},
			1: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			},
			2: {
				1: [
					[function() {
						return this.getCodeList_0.apply(this, arguments);
					},
					wrap_0, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.StockManager[p] === undefined && ($wnd.hippo.securities.StockManager[p] = pkg[p]);
	}

	function StockManager_ExporterImpl_0() {
		$export_95(this);
	}

	defineSeed(204, 1, {}, StockManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_95() {
		return $wnd.hippo.securities.StockManager;
	};
	_.isAssignable = function isAssignable_95(o) {
		return o != null && instanceOf(o, Q$StockManager);
	};
	var exported_95 = false;

	function $export_96(this$static) {
		if (!exported_96) {
			exported_96 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_Stock_2_classLit, this$static);
			$export0_96(this$static);
		}
	}

	function $export0_96(this$static) {
		var pkg = declarePackage('hippo.securities.Stock');
		var __0, __ = this$static;
		$wnd.hippo.securities.Stock = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Stock_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.Stock.prototype = new Object;
		$wnd.hippo.securities.Stock.UPDATE_FLAG_DELETE = 2;
		__0.compareTo = $entry(function(a0) {
			return this.g.compareTo_1(a0 == null ? null : a0.g);
		});
		__0.copy = $entry(function(a0) {
			this.g.copy_7(a0 == null ? null : a0.g);
		});
		__0.equals = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_Stock_2_classLit, 0, arguments, false, false)[0];
		});
		__0.getBoard = $entry(function() {
			return this.g.getBoard_1();
		});
		__0.getBuy_unit = $entry(function() {
			return this.g.getBuy_unit_0();
		});
		__0.getCredit = $entry(function() {
			return this.g.getCredit_0();
		});
		__0.getDecimalDigits = $entry(function() {
			return this.g.getDecimalDigits_0();
		});
		__0.getDown_price = $entry(function() {
			return this.g.getDown_price_0();
		});
		__0.getExchange_type = $entry(function() {
			return this.g.getExchange_type_0();
		});
		__0.getExchangecode = $entry(function() {
			return this.g.getExchangecode_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getMarket = $entry(function() {
			return this.g.getMarket_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getPinyin = $entry(function() {
			return this.g.getPinyin_0();
		});
		__0.getPrice_step = $entry(function() {
			return this.g.getPrice_step_0();
		});
		__0.getSecurityType = $entry(function() {
			return this.g.getSecurityType_0();
		});
		__0.getStockType = $entry(function() {
			return this.g.getStockType_0();
		});
		__0.getStock_code = $entry(function() {
			return this.g.getStock_code_0();
		});
		__0.getStock_name = $entry(function() {
			return this.g.getStock_name_0();
		});
		__0.getStore_unit = $entry(function() {
			return this.g.getStore_unit_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUp_price = $entry(function() {
			return this.g.getUp_price_0();
		});
		__0.getUpdateFlage = $entry(function() {
			return this.g.getUpdateFlage_0();
		});
		__0.getUpdateId = $entry(function() {
			return this.g.getUpdateId_0();
		});
		__0.isCompleted = $entry(function() {
			return this.g.isCompleted_0();
		});
		__0.setBoard = $entry(function(a0) {
			this.g.setBoard_0(a0);
		});
		__0.setBuy_unit = $entry(function(a0) {
			this.g.setBuy_unit_0(a0);
		});
		__0.setCompleteFlage = $entry(function(a0) {
			this.g.setCompleteFlage_0(a0);
		});
		__0.setCredit = $entry(function(a0) {
			this.g.setCredit_0(a0);
		});
		__0.setDown_price = $entry(function(a0) {
			this.g.setDown_price_0(a0);
		});
		__0.setExchange_type = $entry(function(a0) {
			this.g.setExchange_type_0(a0);
		});
		__0.setExchangecode = $entry(function(a0) {
			this.g.setExchangecode_0(a0);
		});
		__0.setMarket = $entry(function(a0) {
			this.g.setMarket_0(a0);
		});
		__0.setPinyin = $entry(function(a0) {
			this.g.setPinyin_0(a0);
		});
		__0.setPrice_step = $entry(function(a0) {
			this.g.setPrice_step_0(a0);
		});
		__0.setSecurityType = $entry(function(a0) {
			this.g.setSecurityType_0(a0);
		});
		__0.setStockType = $entry(function(a0) {
			this.g.setStockType_0(a0);
		});
		__0.setStock_code = $entry(function(a0) {
			this.g.setStock_code_0(a0);
		});
		__0.setStock_name = $entry(function(a0) {
			this.g.setStock_name_0(a0);
		});
		__0.setStore_unit = $entry(function(a0) {
			this.g.setStore_unit_0(a0);
		});
		__0.setUp_price = $entry(function(a0) {
			this.g.setUp_price_0(a0);
		});
		__0.setUpdateFlage = $entry(function(a0) {
			this.g.setUpdateFlage_0(a0);
		});
		__0.setUpdateId = $entry(function(a0) {
			this.g.setUpdateId_0(a0);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_securities_Stock_2_classLit, {
			0: {
				1: [
					[function() {
						return this.equals$.apply(this, arguments);
					},
					null, undefined, Ljava_lang_Object_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.Stock[p] === undefined && ($wnd.hippo.securities.Stock[p] = pkg[p]);
	}

	function Stock_ExporterImpl_0() {
		$export_96(this);
	}

	defineSeed(205, 1, {}, Stock_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_96() {
		return $wnd.hippo.securities.Stock;
	};
	_.isAssignable = function isAssignable_96(o) {
		return o != null && instanceOf(o, Q$Stock);
	};
	var exported_96 = false;

	function $load(this$static, object) {
		var codeList, id_0, request, stock;
		if (instanceOf(object, Q$CodeList)) {
			codeList = object;
			codeList.mInput != null ? (id_0 = 'storage_id_codelist_item/' + codeList.mInput) : (id_0 = 'storage_id_codelist');
			request = $getObject_1(this$static.mStorageProvider, id_0);
		} else if (instanceOf(object, Q$Stock)) {
			stock = object;
			id_0 = 'storage_id_codelist_item_property/' + stock.market + '/' + stock.stock_code;
			request = $getObject_1(this$static.mStorageProvider, id_0);
		} else instanceOf(object, Q$StockList) ? (request = this$static.mStorageProvider.getObject_3('storage_myStock')) : (request = this$static.mStorageProvider.getObject_2(object)); !! mLogger && mLogger.debug_0('request==null:' + !request); !! request && $execute(request, this$static.mHandler);
	}

	function $save(this$static, object) {
		var codeList, request;
		if (instanceOf(object, Q$CodeList)) {
			codeList = object;
			codeList.mUpdatedFlag == 1 ? (request = this$static.mStorageProvider.putObject_2('storage_id_codelist_item', object)) : (request = this$static.mStorageProvider.putObject_2('storage_id_codelist', object));
		} else instanceOf(object, Q$StockList) ? (request = this$static.mStorageProvider.putObject_2('storage_myStock', object)) : (request = this$static.mStorageProvider.putObject_1(object)); !! request && $execute(request, new DomainHandler_0);
	}

	function StorageRepository_0() {}

	defineSeed(206, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$StorageRepository, Q$Exportable]), StorageRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_13(object) {
		$load(this, object);
	};
	_.endWatchObject_1 = function endWatchObject_13(object) {
		$save(this, object);
	};
	_.load_0 = function load(object) {
		$load(this, object);
	};
	_.save_0 = function save_0(object) {
		$save(this, object);
	};
	_.setStorageProvider_0 = function setStorageProvider(storageProvider) {
		this.mStorageProvider = storageProvider;
	};

	function $export_97(this$static) {
		if (!exported_97) {
			exported_97 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_StorageRepository_2_classLit, this$static);
			new StorageProvider_ExporterImpl_0;
			$export0_97(this$static);
		}
	}

	function $export0_97(this$static) {
		var pkg = declarePackage('hippo.repository.StorageRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.StorageRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StorageRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.StorageRepository.prototype = new Object;
		$wnd.hippo.repository.StorageRepository.STORAGE_ID_CODELIST = 'storage_id_codelist';
		$wnd.hippo.repository.StorageRepository.STORAGE_ID_CODELIST_ITEM = 'storage_id_codelist_item';
		$wnd.hippo.repository.StorageRepository.STORAGE_ID_CODELIST_ITEM_PROPERTY = 'storage_id_codelist_item_property';
		$wnd.hippo.repository.StorageRepository.STORAGE_MYSTOCK = 'storage_myStock';
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.load = $entry(function(a0) {
			this.g.load_0(a0 == null ? null : a0.g);
		});
		__0.save = $entry(function(a0) {
			this.g.save_0(a0 == null ? null : a0.g);
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setStorageProvider = $entry(function(a0) {
			this.g.setStorageProvider_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.StorageRepository[p] === undefined && ($wnd.hippo.repository.StorageRepository[p] = pkg[p]);
	}

	function StorageRepository_ExporterImpl_0() {
		$export_97(this);
	}

	defineSeed(207, 1, {}, StorageRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_97() {
		return $wnd.hippo.repository.StorageRepository;
	};
	_.isAssignable = function isAssignable_97(o) {
		return o != null && instanceOf(o, Q$StorageRepository);
	};
	var exported_97 = false;

	function $beginWatch(this$static, object, handler) {
		$beginWatchObject(this$static, object, handler);
		this$static.mRepository.beginWatchObject_1(object);
	}

	function $getStock_2(this$static, market, code_0) {
		var stock, stock0;
		stock0 = new Stock_0;
		stock0.exchange_type = market;
		stock0.stock_code = code_0;
		stock0.market = market;
		stock = $getObject(this$static.mObjectContainer, stock0.market + ':' + stock0.stock_code);
		if (!stock) {
			$putObject(this$static.mObjectContainer, stock0);
			return stock0;
		} else {
			return stock;
		}
	}

	function $setUserStocks(this$static, stocks) {
		var stock, stock$index, stock$max;
		$clear_154(this$static.mUserStocks.mItems);
		for (stock$index = 0, stock$max = stocks.length; stock$index < stock$max; ++stock$index) {
			stock = stocks[stock$index];
			$putItem_0(this$static.mUserStocks, stock);
		}
		$invalidate(this$static, this$static.mUserStocks, 'unknow');
	}

	function UserStockManager_0() {
		BaseManager_0.call(this);
		this.mUserStocks = new StockList_0;
	}

	defineSeed(208, 17, makeCastMap([Q$BaseManager, Q$Manager, Q$UserStockManager, Q$Exportable]), UserStockManager_0);
	_.addUserStock_0 = function addUserStock(stock) {
		$putItem_0(this.mUserStocks, stock);
		$invalidate(this, this.mUserStocks, 'unknow');
	};
	_.addUserStock_1 = function addUserStock_0(stocks) {
		var stock, stock$array, stock$index, stock$max;
		for (stock$array = $getAllItems_2(stocks), stock$index = 0, stock$max = stock$array.length; stock$index < stock$max; ++stock$index) {
			stock = stock$array[stock$index];
			$putItem_0(this.mUserStocks, stock);
		}
		$invalidate(this, this.mUserStocks, 'unknow');
	};
	_.beginWatch_3 = function beginWatch_8(object, handler) {
		$beginWatch(this, object, handler);
	};
	_.endWatch_3 = function endWatch_8(object, handler) {
		$endWatchObject(this, object, handler);
	};
	_.getUserStocks_0 = function getUserStocks() {
		return this.mUserStocks;
	};
	_.init_0 = function init_3() {
		this.mRepository.beginWatchObject_1(this.mUserStocks);
	};
	_.onDomainData_0 = function onDomainData_9(object, source) {
		var stock, stock$array, stock$index, stock$max, stock1, stockList;
		if (instanceOf(object, Q$StockList)) {
			$clear_154(this.mUserStocks.mItems);
			stockList = object;
			for (stock$array = $getAllItems_2(stockList), stock$index = 0, stock$max = stock$array.length; stock$index < stock$max; ++stock$index) {
				stock = stock$array[stock$index];
				stock1 = stock ? $getStock_2(this, stock.market, stock.stock_code) : null;
				$copy_2(stock1, stock);
				$putItem_0(this.mUserStocks, stock1);
			}
			$invalidate(this, this.mUserStocks, source);
		}
	};
	_.removeUserStock_0 = function removeUserStock(stock) {
		$deleteItem(this.mUserStocks, stock);
		$invalidate(this, this.mUserStocks, 'unknow');
	};
	_.removeUserStock_1 = function removeUserStock_0(stocks) {
		var stock, stock$array, stock$index, stock$max;
		for (stock$array = $getAllItems_2(stocks), stock$index = 0, stock$max = stock$array.length; stock$index < stock$max; ++stock$index) {
			stock = stock$array[stock$index];
			$deleteItem(this.mUserStocks, stock);
		}
		$invalidate(this, this.mUserStocks, 'unknow');
	};
	_.setObjectContainer_0 = function setObjectContainer_1(container) {
		this.mObjectContainer = container;
	};

	function $export_98(this$static) {
		if (!exported_98) {
			exported_98 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_UserStockManager_2_classLit, this$static);
			new StockList_ExporterImpl_0;
			new Stock_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new DomainObjectContainer_ExporterImpl_0;
			$export0_98(this$static);
		}
	}

	function $export0_98(this$static) {
		var pkg = declarePackage('hippo.securities.UserStockManager');
		var __0, __ = this$static;
		$wnd.hippo.securities.UserStockManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new UserStockManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.UserStockManager.prototype = new Object;
		__0.addUserStock = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_UserStockManager_2_classLit, 1, arguments, false, false)[0];
		});
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.getUserStocks = $entry(function() {
			return wrap_0(this.g.getUserStocks_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_UserStockManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.removeUserStock = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_securities_UserStockManager_2_classLit, 2, arguments, false, false)[0];
		});
		__0.setObjectContainer = $entry(function(a0) {
			this.g.setObjectContainer_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		__0.setUserStocks = $entry(function(a0) {
			__static_wrapper_setUserStocks(this.g, a0);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_securities_UserStockManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			},
			1: {
				1: [
					[function() {
						return this.addUserStock_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_securities_Stock_2_classLit],
					[function() {
						return this.addUserStock_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_securities_StockList_2_classLit]
				]
			},
			2: {
				1: [
					[function() {
						return this.removeUserStock_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_securities_Stock_2_classLit],
					[function() {
						return this.removeUserStock_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_securities_StockList_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.UserStockManager[p] === undefined && ($wnd.hippo.securities.UserStockManager[p] = pkg[p]);
	}

	function UserStockManager_ExporterImpl_0() {
		$export_98(this);
	}

	function __static_wrapper_setUserStocks(instance, a0) {
		$setUserStocks(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_securities_Stock_2_classLit, makeCastMap([Q$Serializable]), Q$Stock, a0.length, 0))));
	}

	defineSeed(209, 1, {}, UserStockManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_98() {
		return $wnd.hippo.securities.UserStockManager;
	};
	_.isAssignable = function isAssignable_98(o) {
		return o != null && instanceOf(o, Q$UserStockManager);
	};
	var exported_98 = false;

	function UserStockRepository_0() {}

	defineSeed(210, 165, makeCastMap([Q$Repository, Q$BaseRepository, Q$UserStockRepository, Q$Exportable]), UserStockRepository_0);
	_.beginWatchObject_1 = function beginWatchObject_14(object) {
		$load(this.mStorageRepository, object);
	};
	_.endWatchObject_1 = function endWatchObject_14(object) {
		$save(this.mStorageRepository, object);
	};
	_.init_0 = function init_4() {
		var eventHandler, eventObject, stockList;
		stockList = this.mManager.mUserStocks;
		eventHandler = new UserStockRepository$1_0(this);
		eventObject = new EventObject_0;
		eventObject.mhandler = eventHandler;
		$beginWatch(this.mManager, stockList, eventObject);
	};
	_.setStorageRepository_0 = function setStorageRepository_2(repository) {
		this.mStorageRepository = repository;
		$setHandler_0(this.mStorageRepository, new DomainHandlerProxy_0(this));
	};
	_.setUserStockManager_0 = function setUserStockManager(manager) {
		this.mManager = manager;
	};

	function UserStockRepository$1_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(211, 1, makeCastMap([Q$EventHandler, Q$Exportable]), UserStockRepository$1_0);
	_.onEvent_0 = function onEvent_0(event_0) {
		var stockList;
		stockList = event_0.mObject;
		$save(this.this$0.mStorageRepository, stockList);
	};

	function $export_99(this$static) {
		if (!exported_99) {
			exported_99 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_securities_UserStockRepository_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new DomainHandler_ExporterImpl_0;
			new StorageRepository_ExporterImpl_0;
			new UserStockManager_ExporterImpl_0;
			$export0_99(this$static);
		}
	}

	function $export0_99(this$static) {
		var pkg = declarePackage('hippo.repository.UserStockRepository');
		var __0, __ = this$static;
		$wnd.hippo.repository.UserStockRepository = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new UserStockRepository_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.repository.UserStockRepository.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0) {
			this.g.beginWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.endWatchObject = $entry(function(a0) {
			this.g.endWatchObject_1(a0 == null ? null : a0.g);
		});
		__0.getHandler = $entry(function() {
			return wrap_0(this.g.getHandler_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.setHandler = $entry(function(a0) {
			this.g.setHandler_1(a0 == null ? null : a0.g);
		});
		__0.setStorageRepository = $entry(function(a0) {
			this.g.setStorageRepository_0(a0 == null ? null : a0.g);
		});
		__0.setUserStockManager = $entry(function(a0) {
			this.g.setUserStockManager_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.repository.UserStockRepository[p] === undefined && ($wnd.hippo.repository.UserStockRepository[p] = pkg[p]);
	}

	function UserStockRepository_ExporterImpl_0() {
		$export_99(this);
	}

	defineSeed(212, 1, {}, UserStockRepository_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_99() {
		return $wnd.hippo.repository.UserStockRepository;
	};
	_.isAssignable = function isAssignable_99(o) {
		return o != null && instanceOf(o, Q$UserStockRepository);
	};
	var exported_99 = false;

	function $export_100(this$static) {
		if (!exported_100) {
			exported_100 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_storage_StorageProvider_2_classLit, this$static);
			new StorageRequest_ExporterImpl_0;
			$export0_100(this$static);
		}
	}

	function $export0_100(this$static) {
		var pkg = declarePackage('hippo.storage.StorageProvider');
		var __0, __ = this$static;
		$wnd.hippo.storage.StorageProvider = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StorageProvider_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.storage.StorageProvider.prototype = new Object;
		__0.addObject = $entry(function(a0, a1) {
			return wrap_0(this.g.addObject_0(a0, a1 == null ? null : a1.g));
		});
		__0.deleteObject = $entry(function(a0, a1) {
			return wrap_0(this.g.deleteObject_0(a0, a1 == null ? null : a1.g));
		});
		__0.getObject = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_storage_StorageProvider_2_classLit, 0, arguments, false, false)[0];
		});
		__0.putObject = $entry(function(a0, a1) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_storage_StorageProvider_2_classLit, 1, arguments, false, false)[0];
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_storage_StorageProvider_2_classLit, {
			0: {
				1: [
					[function() {
						return this.getObject_3.apply(this, arguments);
					},
					wrap_0, undefined, 'string'],
					[function() {
						return this.getObject_2.apply(this, arguments);
					},
					wrap_0, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.getObject_4.apply(this, arguments);
					},
					wrap_0, undefined, 'string', Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				]
			},
			1: {
				1: [
					[function() {
						return this.putObject_1.apply(this, arguments);
					},
					wrap_0, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.putObject_2.apply(this, arguments);
					},
					wrap_0, undefined, 'string', Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.storage.StorageProvider[p] === undefined && ($wnd.hippo.storage.StorageProvider[p] = pkg[p]);
	}

	function StorageProvider_ExporterImpl_0() {
		$export_100(this);
	}

	defineSeed(213, 1, {}, StorageProvider_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_100() {
		return $wnd.hippo.storage.StorageProvider;
	};
	_.isAssignable = function isAssignable_100(o) {
		return o != null && instanceOf(o, Q$StorageProvider);
	};
	var exported_100 = false;

	function $export_101(this$static) {
		if (!exported_101) {
			exported_101 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_storage_StorageRequest_2_classLit, this$static);
			new DomainHandler_ExporterImpl_0;
			$export0_101(this$static);
		}
	}

	function $export0_101(this$static) {
		var pkg = declarePackage('hippo.storage.StorageRequest');
		var __0, __ = this$static;
		$wnd.hippo.storage.StorageRequest = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StorageRequest_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.storage.StorageRequest.prototype = new Object;
		__0.execute = $entry(function(a0) {
			this.g.execute_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.storage.StorageRequest[p] === undefined && ($wnd.hippo.storage.StorageRequest[p] = pkg[p]);
	}

	function StorageRequest_ExporterImpl_0() {
		$export_101(this);
	}

	defineSeed(214, 1, {}, StorageRequest_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_101() {
		return $wnd.hippo.storage.StorageRequest;
	};
	_.isAssignable = function isAssignable_101(o) {
		return o != null && instanceOf(o, Q$StorageRequest);
	};
	var exported_101 = false;

	function $setAccount_id(this$static, account_id) {
		this$static.account_id = account_id;
	}

	function $setAccount_name(this$static, account_name) {
		this$static.account_name = account_name;
	}

	function $setStatus(this$static, status_0) {
		this$static.status_0 = status_0;
	}

	function Account_0() {}

	defineSeed(215, 28, makeCastMap([Q$DomainObject, Q$Account, Q$Exportable]), Account_0);
	_.getAccount_id_0 = function getAccount_id() {
		return this.account_id;
	};
	_.getAccount_name_0 = function getAccount_name() {
		return this.account_name;
	};
	_.getStatus_1 = function getStatus_0() {
		return this.status_0;
	};
	_.setAccount_id_0 = function setAccount_id(account_id) {
		$setAccount_id(this, account_id);
	};
	_.setAccount_name_0 = function setAccount_name(account_name) {
		$setAccount_name(this, account_name);
	};
	_.setStatus_1 = function setStatus_0(status_0) {
		$setStatus(this, status_0);
	};

	function $export_102(this$static) {
		if (!exported_102) {
			exported_102 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_Account_2_classLit, this$static);
			$export0_102(this$static);
		}
	}

	function $export0_102(this$static) {
		var pkg = declarePackage('hippo.trade.Account');
		var __0, __ = this$static;
		$wnd.hippo.trade.Account = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Account_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.Account.prototype = new Object;
		__0.getAccount_id = $entry(function() {
			return this.g.getAccount_id_0();
		});
		__0.getAccount_name = $entry(function() {
			return this.g.getAccount_name_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getStatus = $entry(function() {
			return this.g.getStatus_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount_id = $entry(function(a0) {
			this.g.setAccount_id_0(a0);
		});
		__0.setAccount_name = $entry(function(a0) {
			this.g.setAccount_name_0(a0);
		});
		__0.setStatus = $entry(function(a0) {
			this.g.setStatus_1(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.Account[p] === undefined && ($wnd.hippo.trade.Account[p] = pkg[p]);
	}

	function Account_ExporterImpl_0() {
		$export_102(this);
	}

	defineSeed(216, 1, {}, Account_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_102() {
		return $wnd.hippo.trade.Account;
	};
	_.isAssignable = function isAssignable_102(o) {
		return o != null && instanceOf(o, Q$Account);
	};
	var exported_102 = false;

	function $setBank_no(this$static, bank_no) {
		this$static.bank_no = bank_no;
	}

	function $setFund_account(this$static, fund_account) {
		this$static.fund_account = fund_account;
	}

	function $setMoney_type(this$static, money_type) {
		this$static.money_type = money_type;
	}

	function $setReg_flag(this$static, reg_flag) {
		this$static.reg_flag = reg_flag;
	}

	function BankAccount_0() {}

	defineSeed(217, 215, makeCastMap([Q$DomainObject, Q$Account, Q$BankAccount, Q$Exportable]), BankAccount_0);
	_.getBank_name_0 = function getBank_name() {
		return this.bank_name;
	};
	_.getBank_no_0 = function getBank_no() {
		return this.bank_no;
	};
	_.getFund_account_0 = function getFund_account() {
		return this.fund_account;
	};
	_.getMoney_type_0 = function getMoney_type() {
		return this.money_type;
	};
	_.getReg_flag_0 = function getReg_flag() {
		return this.reg_flag;
	};
	_.setBank_name_0 = function setBank_name(bank_name) {
		this.bank_name = bank_name;
	};
	_.setBank_no_0 = function setBank_no(bank_no) {
		$setBank_no(this, bank_no);
	};
	_.setFund_account_0 = function setFund_account(fund_account) {
		$setFund_account(this, fund_account);
	};
	_.setMoney_type_0 = function setMoney_type(money_type) {
		$setMoney_type(this, money_type);
	};
	_.setReg_flag_0 = function setReg_flag(reg_flag) {
		$setReg_flag(this, reg_flag);
	};

	function $export_103(this$static) {
		if (!exported_103) {
			exported_103 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_BankAccount_2_classLit, this$static);
			$export0_103(this$static);
		}
	}

	function $export0_103(this$static) {
		var pkg = declarePackage('hippo.trade.BankAccount');
		var __0, __ = this$static;
		$wnd.hippo.trade.BankAccount = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BankAccount_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.BankAccount.prototype = new Object;
		__0.getAccount_id = $entry(function() {
			return this.g.getAccount_id_0();
		});
		__0.getAccount_name = $entry(function() {
			return this.g.getAccount_name_0();
		});
		__0.getBank_name = $entry(function() {
			return this.g.getBank_name_0();
		});
		__0.getBank_no = $entry(function() {
			return this.g.getBank_no_0();
		});
		__0.getFund_account = $entry(function() {
			return this.g.getFund_account_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getMoney_type = $entry(function() {
			return this.g.getMoney_type_0();
		});
		__0.getReg_flag = $entry(function() {
			return this.g.getReg_flag_0();
		});
		__0.getStatus = $entry(function() {
			return this.g.getStatus_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount_id = $entry(function(a0) {
			this.g.setAccount_id_0(a0);
		});
		__0.setAccount_name = $entry(function(a0) {
			this.g.setAccount_name_0(a0);
		});
		__0.setBank_name = $entry(function(a0) {
			this.g.setBank_name_0(a0);
		});
		__0.setBank_no = $entry(function(a0) {
			this.g.setBank_no_0(a0);
		});
		__0.setFund_account = $entry(function(a0) {
			this.g.setFund_account_0(a0);
		});
		__0.setMoney_type = $entry(function(a0) {
			this.g.setMoney_type_0(a0);
		});
		__0.setReg_flag = $entry(function(a0) {
			this.g.setReg_flag_0(a0);
		});
		__0.setStatus = $entry(function(a0) {
			this.g.setStatus_1(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.BankAccount[p] === undefined && ($wnd.hippo.trade.BankAccount[p] = pkg[p]);
	}

	function BankAccount_ExporterImpl_0() {
		$export_103(this);
	}

	defineSeed(218, 1, {}, BankAccount_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_103() {
		return $wnd.hippo.trade.BankAccount;
	};
	_.isAssignable = function isAssignable_103(o) {
		return o != null && instanceOf(o, Q$BankAccount);
	};
	var exported_103 = false;

	function BankInfo_0() {}

	defineSeed(219, 28, makeCastMap([Q$DomainObject, Q$BankInfo, Q$Exportable]), BankInfo_0);
	_.getBankName_0 = function getBankName() {
		return this.bankName;
	};
	_.getBankNo_0 = function getBankNo() {
		return this.bankNo;
	};
	_.setBankName_0 = function setBankName(bankName) {
		this.bankName = bankName;
	};
	_.setBankNo_0 = function setBankNo(bankNo) {
		this.bankNo = bankNo;
	};

	function $export_104(this$static) {
		if (!exported_104) {
			exported_104 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_BankInfo_2_classLit, this$static);
			$export0_104(this$static);
		}
	}

	function $export0_104(this$static) {
		var pkg = declarePackage('hippo.trade.BankInfo');
		var __0, __ = this$static;
		$wnd.hippo.trade.BankInfo = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BankInfo_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.BankInfo.prototype = new Object;
		__0.getBankName = $entry(function() {
			return this.g.getBankName_0();
		});
		__0.getBankNo = $entry(function() {
			return this.g.getBankNo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setBankName = $entry(function(a0) {
			this.g.setBankName_0(a0);
		});
		__0.setBankNo = $entry(function(a0) {
			this.g.setBankNo_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.BankInfo[p] === undefined && ($wnd.hippo.trade.BankInfo[p] = pkg[p]);
	}

	function BankInfo_ExporterImpl_0() {
		$export_104(this);
	}

	defineSeed(220, 1, {}, BankInfo_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_104() {
		return $wnd.hippo.trade.BankInfo;
	};
	_.isAssignable = function isAssignable_104(o) {
		return o != null && instanceOf(o, Q$BankInfo);
	};
	var exported_104 = false;

	function $setAsset_balance(this$static, asset_balance) {
		this$static.asset_balance = asset_balance;
	}

	function $setBank_name(this$static, bank_name) {
		this$static.bank_name = bank_name;
	}

	function $setBank_no_0(this$static, bank_no) {
		this$static.bank_no = bank_no;
	}

	function $setClient_age(this$static, client_age) {
		this$static.client_age = client_age;
	}

	function $setClient_rights(this$static, client_rights) {
		this$static.client_rights = client_rights;
	}

	function $setCorp_between_days(this$static, corp_between_days) {
		this$static.corp_between_days = corp_between_days;
	}

	function $setCorp_risk_info(this$static, corp_risk_info) {
		this$static.corp_risk_info = corp_risk_info;
	}

	function $setCorp_risk_valid(this$static, corp_risk_valid) {
		this$static.corp_risk_valid = corp_risk_valid;
	}

	function $setCur_income_balance(this$static, cur_income_balance) {
		this$static.cur_income_balance = cur_income_balance;
	}

	function $setCurrent_balance(this$static, current_balance) {
		this$static.current_balance = current_balance;
	}

	function $setEnable_balance(this$static, enable_balance) {
		this$static.enable_balance = enable_balance;
	}

	function $setFetch_balance(this$static, fetch_balance) {
		this$static.fetch_balance = fetch_balance;
	}

	function $setFrozen_balance(this$static, frozen_balance) {
		this$static.frozen_balance = frozen_balance;
	}

	function $setFund_account_0(this$static, fund_account) {
		this$static.fund_account = fund_account;
	}

	function $setFund_balance(this$static, fund_balance) {
		this$static.fund_balance = fund_balance;
	}

	function $setId_expired_flag(this$static, id_expired_flag) {
		this$static.id_expired_flag = id_expired_flag;
	}

	function $setId_expired_mess(this$static, id_expired_mess) {
		this$static.id_expired_mess = id_expired_mess;
	}

	function $setId_kind(this$static, id_kind) {
		this$static.id_kind = id_kind;
	}

	function $setId_no(this$static, id_no) {
		this$static.id_no = id_no;
	}

	function $setMain_flag(this$static, main_flag) {
		this$static.main_flag = main_flag;
	}

	function $setMarket_value(this$static, market_value) {
		this$static.market_value = market_value;
	}

	function $setMoney_type_0(this$static, money_type) {
		this$static.money_type = money_type;
	}

	function $setOpfund_market_value(this$static, opfund_market_value) {
		this$static.opfund_market_value = opfund_market_value;
	}

	function $setOrgan_prop(this$static, organ_prop) {
		this$static.organ_prop = organ_prop;
	}

	function FundAccount_0() {}

	defineSeed(222, 215, makeCastMap([Q$DomainObject, Q$Account, Q$FundAccount, Q$Exportable]), FundAccount_0);
	_.allString_0 = function allString() {
		var result;
		result = 'fund_account:' + this.fund_account + ' , main_flag:' + this.main_flag + ' , money_type:' + this.money_type + ' , bank_no:' + this.bank_no;
		result = result + ' , bank_name:' + this.bank_name + ' , current_balance:' + this.current_balance + ' , enable_balance:' + this.enable_balance + ' , frozen_balance:' + this.frozen_balance;
		result = result + ' , fetch_balance:' + this.fetch_balance + ' , fund_balance:' + this.fund_balance + ' , market_value:' + this.market_value + ' , opfund_market_value:' + this.opfund_market_value;
		result = result + ' , asset_balance:' + this.asset_balance + ' , client_rights:' + this.client_rights + ', client_age:' + this.client_age + ', cur_income_balance:' + this.cur_income_balance;
		return result;
	};
	_.getAsset_balance_0 = function getAsset_balance() {
		return this.asset_balance;
	};
	_.getBank_name_0 = function getBank_name_0() {
		return this.bank_name;
	};
	_.getBank_no_0 = function getBank_no_0() {
		return this.bank_no;
	};
	_.getClient_age_0 = function getClient_age() {
		return this.client_age;
	};
	_.getClient_rights_0 = function getClient_rights() {
		return this.client_rights;
	};
	_.getCorp_between_days_0 = function getCorp_between_days() {
		return this.corp_between_days;
	};
	_.getCorp_risk_info_0 = function getCorp_risk_info() {
		return this.corp_risk_info;
	};
	_.getCorp_risk_valid_0 = function getCorp_risk_valid() {
		return this.corp_risk_valid;
	};
	_.getCur_income_balance_0 = function getCur_income_balance() {
		return this.cur_income_balance;
	};
	_.getCurrent_balance_0 = function getCurrent_balance() {
		return this.current_balance;
	};
	_.getEnable_balance_0 = function getEnable_balance() {
		return this.enable_balance;
	};
	_.getFetch_balance_0 = function getFetch_balance() {
		return this.fetch_balance;
	};
	_.getFrozen_balance_0 = function getFrozen_balance() {
		return this.frozen_balance;
	};
	_.getFund_account_0 = function getFund_account_0() {
		return this.fund_account;
	};
	_.getFund_balance_0 = function getFund_balance() {
		return this.fund_balance;
	};
	_.getId_expired_flag_0 = function getId_expired_flag() {
		return this.id_expired_flag;
	};
	_.getId_expired_mess_0 = function getId_expired_mess() {
		return this.id_expired_mess;
	};
	_.getId_kind_0 = function getId_kind() {
		return this.id_kind;
	};
	_.getId_no_0 = function getId_no() {
		return this.id_no;
	};
	_.getMain_flag_0 = function getMain_flag() {
		return this.main_flag;
	};
	_.getMarket_value_0 = function getMarket_value() {
		return this.market_value;
	};
	_.getMoney_type_0 = function getMoney_type_0() {
		return this.money_type;
	};
	_.getOpfund_market_value_0 = function getOpfund_market_value() {
		return this.opfund_market_value;
	};
	_.getOrgan_prop_0 = function getOrgan_prop() {
		return this.organ_prop;
	};
	_.setAsset_balance_0 = function setAsset_balance(asset_balance) {
		$setAsset_balance(this, asset_balance);
	};
	_.setBank_name_0 = function setBank_name_0(bank_name) {
		$setBank_name(this, bank_name);
	};
	_.setBank_no_0 = function setBank_no_0(bank_no) {
		$setBank_no_0(this, bank_no);
	};
	_.setClient_age_0 = function setClient_age(client_age) {
		$setClient_age(this, client_age);
	};
	_.setClient_rights_0 = function setClient_rights(client_rights) {
		$setClient_rights(this, client_rights);
	};
	_.setCorp_between_days_0 = function setCorp_between_days(corp_between_days) {
		$setCorp_between_days(this, corp_between_days);
	};
	_.setCorp_risk_info_0 = function setCorp_risk_info(corp_risk_info) {
		$setCorp_risk_info(this, corp_risk_info);
	};
	_.setCorp_risk_valid_0 = function setCorp_risk_valid(corp_risk_valid) {
		$setCorp_risk_valid(this, corp_risk_valid);
	};
	_.setCur_income_balance_0 = function setCur_income_balance(cur_income_balance) {
		$setCur_income_balance(this, cur_income_balance);
	};
	_.setCurrent_balance_0 = function setCurrent_balance(current_balance) {
		$setCurrent_balance(this, current_balance);
	};
	_.setEnable_balance_0 = function setEnable_balance(enable_balance) {
		$setEnable_balance(this, enable_balance);
	};
	_.setFetch_balance_0 = function setFetch_balance(fetch_balance) {
		$setFetch_balance(this, fetch_balance);
	};
	_.setFrozen_balance_0 = function setFrozen_balance(frozen_balance) {
		$setFrozen_balance(this, frozen_balance);
	};
	_.setFund_account_0 = function setFund_account_0(fund_account) {
		$setFund_account_0(this, fund_account);
	};
	_.setFund_balance_0 = function setFund_balance(fund_balance) {
		$setFund_balance(this, fund_balance);
	};
	_.setId_expired_flag_0 = function setId_expired_flag(id_expired_flag) {
		$setId_expired_flag(this, id_expired_flag);
	};
	_.setId_expired_mess_0 = function setId_expired_mess(id_expired_mess) {
		$setId_expired_mess(this, id_expired_mess);
	};
	_.setId_kind_0 = function setId_kind(id_kind) {
		$setId_kind(this, id_kind);
	};
	_.setId_no_0 = function setId_no(id_no) {
		$setId_no(this, id_no);
	};
	_.setMain_flag_0 = function setMain_flag(main_flag) {
		$setMain_flag(this, main_flag);
	};
	_.setMarket_value_0 = function setMarket_value(market_value) {
		$setMarket_value(this, market_value);
	};
	_.setMoney_type_0 = function setMoney_type_0(money_type) {
		$setMoney_type_0(this, money_type);
	};
	_.setOpfund_market_value_0 = function setOpfund_market_value(opfund_market_value) {
		$setOpfund_market_value(this, opfund_market_value);
	};
	_.setOrgan_prop_0 = function setOrgan_prop(organ_prop) {
		$setOrgan_prop(this, organ_prop);
	};

	function BaseAccount_0() {}

	defineSeed(221, 222, makeCastMap([Q$DomainObject, Q$Account, Q$BaseAccount, Q$FundAccount, Q$Exportable]), BaseAccount_0);
	_.getInventory_0 = function getInventory() {
		return this.inventory;
	};
	_.setInventory_0 = function setInventory(inventory) {
		this.inventory = inventory;
	};

	function $export_105(this$static) {
		if (!exported_105) {
			exported_105 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_BaseAccount_2_classLit, this$static);
			new Inventory_ExporterImpl_0;
			$export0_105(this$static);
		}
	}

	function $export0_105(this$static) {
		var pkg = declarePackage('hippo.trade.BaseAccount');
		var __0, __ = this$static;
		$wnd.hippo.trade.BaseAccount = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BaseAccount_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.BaseAccount.prototype = new Object;
		__0.allString = $entry(function() {
			return this.g.allString_0();
		});
		__0.getAccount_id = $entry(function() {
			return this.g.getAccount_id_0();
		});
		__0.getAccount_name = $entry(function() {
			return this.g.getAccount_name_0();
		});
		__0.getAsset_balance = $entry(function() {
			return this.g.getAsset_balance_0();
		});
		__0.getBank_name = $entry(function() {
			return this.g.getBank_name_0();
		});
		__0.getBank_no = $entry(function() {
			return this.g.getBank_no_0();
		});
		__0.getClient_age = $entry(function() {
			return this.g.getClient_age_0();
		});
		__0.getClient_rights = $entry(function() {
			return this.g.getClient_rights_0();
		});
		__0.getCorp_between_days = $entry(function() {
			return this.g.getCorp_between_days_0();
		});
		__0.getCorp_risk_info = $entry(function() {
			return this.g.getCorp_risk_info_0();
		});
		__0.getCorp_risk_valid = $entry(function() {
			return this.g.getCorp_risk_valid_0();
		});
		__0.getCur_income_balance = $entry(function() {
			return this.g.getCur_income_balance_0();
		});
		__0.getCurrent_balance = $entry(function() {
			return this.g.getCurrent_balance_0();
		});
		__0.getEnable_balance = $entry(function() {
			return this.g.getEnable_balance_0();
		});
		__0.getFetch_balance = $entry(function() {
			return this.g.getFetch_balance_0();
		});
		__0.getFrozen_balance = $entry(function() {
			return this.g.getFrozen_balance_0();
		});
		__0.getFund_account = $entry(function() {
			return this.g.getFund_account_0();
		});
		__0.getFund_balance = $entry(function() {
			return this.g.getFund_balance_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getId_expired_flag = $entry(function() {
			return this.g.getId_expired_flag_0();
		});
		__0.getId_expired_mess = $entry(function() {
			return this.g.getId_expired_mess_0();
		});
		__0.getId_kind = $entry(function() {
			return this.g.getId_kind_0();
		});
		__0.getId_no = $entry(function() {
			return this.g.getId_no_0();
		});
		__0.getInventory = $entry(function() {
			return wrap_0(this.g.getInventory_0());
		});
		__0.getMain_flag = $entry(function() {
			return this.g.getMain_flag_0();
		});
		__0.getMarket_value = $entry(function() {
			return this.g.getMarket_value_0();
		});
		__0.getMoney_type = $entry(function() {
			return this.g.getMoney_type_0();
		});
		__0.getOpfund_market_value = $entry(function() {
			return this.g.getOpfund_market_value_0();
		});
		__0.getOrgan_prop = $entry(function() {
			return this.g.getOrgan_prop_0();
		});
		__0.getStatus = $entry(function() {
			return this.g.getStatus_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount_id = $entry(function(a0) {
			this.g.setAccount_id_0(a0);
		});
		__0.setAccount_name = $entry(function(a0) {
			this.g.setAccount_name_0(a0);
		});
		__0.setAsset_balance = $entry(function(a0) {
			this.g.setAsset_balance_0(a0);
		});
		__0.setBank_name = $entry(function(a0) {
			this.g.setBank_name_0(a0);
		});
		__0.setBank_no = $entry(function(a0) {
			this.g.setBank_no_0(a0);
		});
		__0.setClient_age = $entry(function(a0) {
			this.g.setClient_age_0(a0);
		});
		__0.setClient_rights = $entry(function(a0) {
			this.g.setClient_rights_0(a0);
		});
		__0.setCorp_between_days = $entry(function(a0) {
			this.g.setCorp_between_days_0(a0);
		});
		__0.setCorp_risk_info = $entry(function(a0) {
			this.g.setCorp_risk_info_0(a0);
		});
		__0.setCorp_risk_valid = $entry(function(a0) {
			this.g.setCorp_risk_valid_0(a0);
		});
		__0.setCur_income_balance = $entry(function(a0) {
			this.g.setCur_income_balance_0(a0);
		});
		__0.setCurrent_balance = $entry(function(a0) {
			this.g.setCurrent_balance_0(a0);
		});
		__0.setEnable_balance = $entry(function(a0) {
			this.g.setEnable_balance_0(a0);
		});
		__0.setFetch_balance = $entry(function(a0) {
			this.g.setFetch_balance_0(a0);
		});
		__0.setFrozen_balance = $entry(function(a0) {
			this.g.setFrozen_balance_0(a0);
		});
		__0.setFund_account = $entry(function(a0) {
			this.g.setFund_account_0(a0);
		});
		__0.setFund_balance = $entry(function(a0) {
			this.g.setFund_balance_0(a0);
		});
		__0.setId_expired_flag = $entry(function(a0) {
			this.g.setId_expired_flag_0(a0);
		});
		__0.setId_expired_mess = $entry(function(a0) {
			this.g.setId_expired_mess_0(a0);
		});
		__0.setId_kind = $entry(function(a0) {
			this.g.setId_kind_0(a0);
		});
		__0.setId_no = $entry(function(a0) {
			this.g.setId_no_0(a0);
		});
		__0.setInventory = $entry(function(a0) {
			this.g.setInventory_0(a0 == null ? null : a0.g);
		});
		__0.setMain_flag = $entry(function(a0) {
			this.g.setMain_flag_0(a0);
		});
		__0.setMarket_value = $entry(function(a0) {
			this.g.setMarket_value_0(a0);
		});
		__0.setMoney_type = $entry(function(a0) {
			this.g.setMoney_type_0(a0);
		});
		__0.setOpfund_market_value = $entry(function(a0) {
			this.g.setOpfund_market_value_0(a0);
		});
		__0.setOrgan_prop = $entry(function(a0) {
			this.g.setOrgan_prop_0(a0);
		});
		__0.setStatus = $entry(function(a0) {
			this.g.setStatus_1(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.BaseAccount[p] === undefined && ($wnd.hippo.trade.BaseAccount[p] = pkg[p]);
	}

	function BaseAccount_ExporterImpl_0() {
		$export_105(this);
	}

	defineSeed(223, 1, {}, BaseAccount_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_105() {
		return $wnd.hippo.trade.BaseAccount;
	};
	_.isAssignable = function isAssignable_105(o) {
		return o != null && instanceOf(o, Q$BaseAccount);
	};
	var exported_105 = false;

	function BranchInfo_0() {}

	defineSeed(224, 28, makeCastMap([Q$DomainObject, Q$BranchInfo, Q$Exportable]), BranchInfo_0);
	_.getBranchName_0 = function getBranchName() {
		return this.branchName;
	};
	_.getBranchNo_0 = function getBranchNo() {
		return this.branchNo;
	};
	_.getUpBranchNo_0 = function getUpBranchNo() {
		return this.upBranchNo;
	};
	_.setBranchName_0 = function setBranchName(branchName) {
		this.branchName = branchName;
	};
	_.setBranchNo_0 = function setBranchNo(branchNo) {
		this.branchNo = branchNo;
	};
	_.setUpBranchNo_0 = function setUpBranchNo(upBranchNo) {
		this.upBranchNo = upBranchNo;
	};

	function $export_106(this$static) {
		if (!exported_106) {
			exported_106 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_BranchInfo_2_classLit, this$static);
			$export0_106(this$static);
		}
	}

	function $export0_106(this$static) {
		var pkg = declarePackage('hippo.trade.BranchInfo');
		var __0, __ = this$static;
		$wnd.hippo.trade.BranchInfo = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BranchInfo_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.BranchInfo.prototype = new Object;
		__0.getBranchName = $entry(function() {
			return this.g.getBranchName_0();
		});
		__0.getBranchNo = $entry(function() {
			return this.g.getBranchNo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUpBranchNo = $entry(function() {
			return this.g.getUpBranchNo_0();
		});
		__0.setBranchName = $entry(function(a0) {
			this.g.setBranchName_0(a0);
		});
		__0.setBranchNo = $entry(function(a0) {
			this.g.setBranchNo_0(a0);
		});
		__0.setUpBranchNo = $entry(function(a0) {
			this.g.setUpBranchNo_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.BranchInfo[p] === undefined && ($wnd.hippo.trade.BranchInfo[p] = pkg[p]);
	}

	function BranchInfo_ExporterImpl_0() {
		$export_106(this);
	}

	defineSeed(225, 1, {}, BranchInfo_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_106() {
		return $wnd.hippo.trade.BranchInfo;
	};
	_.isAssignable = function isAssignable_106(o) {
		return o != null && instanceOf(o, Q$BranchInfo);
	};
	var exported_106 = false;

	function $setError_info(this$static, error_info) {
		this$static.error_info = error_info;
	}

	function $setError_no(this$static, error_no) {
		this$static.error_no = error_no;
	}

	function $setError_pathinfo(this$static, error_pathinfo) {
		this$static.error_pathinfo = error_pathinfo;
	}

	function $setIdentity(this$static, identity) {
		this$static.identity_0 = identity;
	}

	function $setReturn_code(this$static, return_code) {
		this$static.return_code = return_code;
	}

	function TradeObject_0() {}

	defineSeed(227, 28, makeCastMap([Q$DomainObject, Q$TradeObject, Q$Exportable]), TradeObject_0);
	_.getError_info_0 = function getError_info() {
		return this.error_info;
	};
	_.getError_no_0 = function getError_no() {
		return this.error_no;
	};
	_.getError_pathinfo_0 = function getError_pathinfo() {
		return this.error_pathinfo;
	};
	_.getIdentity_0 = function getIdentity() {
		return this.identity_0;
	};
	_.getReturn_code_0 = function getReturn_code() {
		return this.return_code;
	};
	_.setError_info_0 = function setError_info(error_info) {
		$setError_info(this, error_info);
	};
	_.setError_no_0 = function setError_no(error_no) {
		$setError_no(this, error_no);
	};
	_.setError_pathinfo_0 = function setError_pathinfo(error_pathinfo) {
		$setError_pathinfo(this, error_pathinfo);
	};
	_.setIdentity_0 = function setIdentity(identity) {
		$setIdentity(this, identity);
	};
	_.setReturn_code_0 = function setReturn_code(return_code) {
		$setReturn_code(this, return_code);
	};
	_.error_no = 0;
	_.return_code = 0;

	function $setClient_id(this$static, client_id) {
		this$static.client_id = client_id;
	}

	function $setClient_name(this$static, client_name) {
		this$static.client_name = client_name;
	}

	function Client_0() {
		this.accounts = new ArrayList_0;
	}

	defineSeed(226, 227, makeCastMap([Q$DomainObject, Q$Client, Q$TradeObject, Q$Exportable]), Client_0);
	_.getAccountByAsset_prop_0 = function getAccountByAsset_prop(asset_prop) {
		var ac, ac$iterator;
		if (asset_prop != null) {
			for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
				ac = ac$iterator.next();
				if (instanceOf(ac, Q$StockAccount) && $equals_151(asset_prop, ac.asset_prop)) return ac;
			}
		}
		return null;
	};
	_.getAccountByMarket_0 = function getAccountByMarket(market) {
		var ac, ac$iterator;
		if (market != null) {
			for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
				ac = ac$iterator.next();
				if (instanceOf(ac, Q$StockAccount) && $equals_151(market, ac.market)) return ac;
			}
		}
		return null;
	};
	_.getAccountByMarketAndAsset_prop_0 = function getAccountByMarketAndAsset_prop(market, asset_prop) {
		var ac, ac$iterator;
		if (market != null && asset_prop != null) {
			for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
				ac = ac$iterator.next();
				if (instanceOf(ac, Q$StockAccount) && $equals_151(market, ac.market) && $equals_151(asset_prop, ac.asset_prop)) return ac;
			}
		}
		return null;
	};
	_.getAccounts_0 = function getAccounts() {
		return this.accounts;
	};
	_.getAccountsByAsset_prop_0 = function getAccountsByAsset_prop(asset_prop) {
		var ac, ac$iterator, list;
		list = new ArrayList_0;
		if (asset_prop != null) {
			for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
				ac = ac$iterator.next();
				instanceOf(ac, Q$StockAccount) && $equals_151(asset_prop, ac.asset_prop) && (list.array[list.size_0++] = ac, true);
			}
			if (list.size_0 != 0) {
				return cloneSubrange(list.array, 0, list.size_0);
			}
		}
		return null;
	};
	_.getAccountsByMarket_0 = function getAccountsByMarket(market) {
		var ac, ac$iterator, list;
		list = new ArrayList_0;
		if (market != null) {
			for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
				ac = ac$iterator.next();
				instanceOf(ac, Q$StockAccount) && $equals_151(market, ac.market) && (list.array[list.size_0++] = ac, true);
			}
			if (list.size_0 != 0) {
				return cloneSubrange(list.array, 0, list.size_0);
			}
		}
		return null;
	};
	_.getBankAccount_0 = function getBankAccount() {
		var ac, ac$iterator, list;
		list = new ArrayList_0;
		for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
			ac = ac$iterator.next();
			instanceOf(ac, Q$BankAccount) && $add(list, ac);
		}
		return cloneSubrange(list.array, 0, list.size_0);
	};
	_.getBaseAccount_0 = function getBaseAccount() {
		var ac, ac$iterator;
		for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
			ac = ac$iterator.next();
			if (instanceOf(ac, Q$BaseAccount)) return ac;
		}
		return null;
	};
	_.getBranch_0 = function getBranch() {
		return this.branch;
	};
	_.getClient_id_0 = function getClient_id() {
		return this.client_id;
	};
	_.getClient_name_0 = function getClient_name() {
		return this.client_name;
	};
	_.getCorp_risk_level_0 = function getCorp_risk_level() {
		return this.corp_risk_level;
	};
	_.getFundAccount_0 = function getFundAccount() {
		var ac, ac$iterator;
		for (ac$iterator = this.accounts.iterator(); ac$iterator.hasNext();) {
			ac = ac$iterator.next();
			if (instanceOf(ac, Q$FundAccount)) return ac;
		}
		return null;
	};
	_.getInvestPreference_0 = function getInvestPreference() {
		return this.investPreference;
	};
	_.getValid_flag_0 = function getValid_flag() {
		return this.valid_flag;
	};
	_.putAccount_0 = function putAccount(account) {
		this.accounts.add_0(account);
	};
	_.setAccounts_0 = function setAccounts(accounts) {
		this.accounts = accounts;
	};
	_.setBranch_0 = function setBranch(branch) {
		this.branch = branch;
	};
	_.setClient_id_0 = function setClient_id(client_id) {
		$setClient_id(this, client_id);
	};
	_.setClient_name_0 = function setClient_name(client_name) {
		$setClient_name(this, client_name);
	};
	_.setCorp_risk_level_0 = function setCorp_risk_level(corp_risk_level) {
		this.corp_risk_level = corp_risk_level;
	};
	_.setInvestPreference_0 = function setInvestPreference(investPreference) {
		this.investPreference = investPreference;
	};
	_.setValid_flag_0 = function setValid_flag(valid_flag) {
		this.valid_flag = valid_flag;
	};

	function BaseTradeManager_0() {
		BaseManager_0.call(this);
	}

	defineSeed(229, 17, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$Exportable]), BaseTradeManager_0);
	_.getParser_0 = function getParser() {
		return this.mParser;
	};
	_.setParser_0 = function setParser(parser) {
		this.mParser = parser;
	};

	function $$init(this$static) {
		this$static.mMapClientInfo = new TreeMap_0;
		this$static.SENDERCOMPID = getBytesUtf8('APPNAME.APPVERSION.DOMAINVERSION');
		this$static.TARGETCOMPID = getBytesUtf8('FIX.5.0SP2');
	}

	function $changePassword(this$static, accountType, requestType, fundAccount, oldPassword, newPassword, confirmPassword) {
		var buf, fo, identity, info, userRequest;
		identity = mIDGen.generatorID_0();
		info = $get_3(this$static.mMapClientInfo, '' + identity);
		if (info) {
			$invalidate(this$static, info, 'unknow');
			return info;
		}
		info = $createClient(this$static, '' + identity);
		userRequest = new FixUserRequest_0;
		userRequest.senderCompID = this$static.SENDERCOMPID;
		userRequest.targetCompID = this$static.TARGETCOMPID;
		!accountType.length || (userRequest.cstmApplVerID = getBytesUtf8(accountType));
		userRequest.userRequestID = getBytesUtf8('' + identity);
		userRequest.userRequestType = requestType;
		userRequest.username = getBytesUtf8(fundAccount);
		!oldPassword.length || (userRequest.password = getBytesUtf8(oldPassword));
		!newPassword.length || (userRequest.newPassword = getBytesUtf8(newPassword));
		if (confirmPassword.length) {
			userRequest.encryptedNewPassword = getBytesUtf8(confirmPassword);
			userRequest.encryptedNewPasswordLen = fromInt(userRequest.encryptedNewPassword.length);
		}
		buf = allocateDirect(10240);
		$encode_10(userRequest, buf);
		fo = new FixObject_0;
		fo.topic = 'HSUF.STOCK';
		$setMessages(fo, buf);
		$clear_153(buf); !! mLogger && mLogger.debug_0('beginWatchObject');
		this$static.mRepository.beginWatchObject_1(fo);
		return info;
	}

	function $createClient(this$static, identity) {
		var info;
		info = new Client_0;
		$put_2(this$static.mMapClientInfo, identity, info);
		return info;
	}

	function $dealLogon(this$static, fixObj) {
		var bankAccount, buf, d, data_0, fundAccount, identity, ip, messages, msg, msg1, originalInfo, parser, stockAccount, str, tradeResDataItem, tradeResDataItem$index, tradeResDataItem$max, tradeResDataItems; !! mLogger && mLogger.debug_0('ClientManager deal FixLogon!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixLogon)) {
			msg = msg1;
			identity = '' + toString_183(msg.applExtID);
			d = _String(msg.rawData);
			d = $substring_0(d, 0, toInt(msg.rawDataLength));
			str = $buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d));
			data_0 = this$static.mParser.unserialize_0(str);
			tradeResDataItems = $getAllItems_3(data_0);
			originalInfo = $get_3(this$static.mMapClientInfo, identity);
			if (!identity.length || !originalInfo) {
				return;
			}
			$setReturn_code(originalInfo, data_0.return_code);
			$setError_info(originalInfo, $getValueByField(data_0, 'error_info'));
			$setError_no(originalInfo, data_0.error_no);
			$setError_pathinfo(originalInfo, $getValueByField(data_0, 'error_pathinfo'));
			if (data_0.return_code == 0) {
				for (tradeResDataItem$index = 0, tradeResDataItem$max = tradeResDataItems.length; tradeResDataItem$index < tradeResDataItem$max; ++tradeResDataItem$index) {
					tradeResDataItem = tradeResDataItems[tradeResDataItem$index];
					if ($get_3(tradeResDataItem.mMapItems, 'client_rights') != null && $get_3(tradeResDataItem.mMapItems, 'sysnode_id') != null) {
						$setClient_id(originalInfo, $get_3(tradeResDataItem.mMapItems, 'client_id'));
						$setClient_name(originalInfo, $get_3(tradeResDataItem.mMapItems, 'client_name'));
						fundAccount = new FundAccount_0;
						$setAccount_id(fundAccount, $get_3(tradeResDataItem.mMapItems, 'fund_account'));
						$setAccount_name(fundAccount, $get_3(tradeResDataItem.mMapItems, 'client_name'));
						$setClient_age(fundAccount, $get_3(tradeResDataItem.mMapItems, 'client_age'));
						$setClient_rights(fundAccount, $get_3(tradeResDataItem.mMapItems, 'client_rights'));
						$setId_kind(fundAccount, $get_3(tradeResDataItem.mMapItems, 'id_kind'));
						$setId_no(fundAccount, $get_3(tradeResDataItem.mMapItems, 'id_no'));
						$setOrgan_prop(fundAccount, $get_3(tradeResDataItem.mMapItems, 'organ_prop'));
						$setId_expired_flag(fundAccount, $get_3(tradeResDataItem.mMapItems, 'id_expired_flag'));
						$setId_expired_mess(fundAccount, $get_3(tradeResDataItem.mMapItems, 'id_expired_mess'));
						$setCorp_risk_valid(fundAccount, $get_3(tradeResDataItem.mMapItems, 'corp_risk_valid'));
						$setCorp_risk_info(fundAccount, $get_3(tradeResDataItem.mMapItems, 'corp_risk_info'));
						$setCorp_between_days(fundAccount, $get_3(tradeResDataItem.mMapItems, 'corp_between_days'));
						originalInfo.accounts.add_0(fundAccount);
					}
					if ($get_3(tradeResDataItem.mMapItems, 'seat_no') != null && $get_3(tradeResDataItem.mMapItems, 'holder_rights') != null) {
						stockAccount = new StockAccount_0;
						$setAccount_id(stockAccount, $get_3(tradeResDataItem.mMapItems, 'stock_account'));
						$setAccount_name(stockAccount, $get_3(tradeResDataItem.mMapItems, 'holder_name'));
						$setRights(stockAccount, $get_3(tradeResDataItem.mMapItems, 'holder_rights'));
						$setMian_flag(stockAccount, $get_3(tradeResDataItem.mMapItems, 'main_flag'));
						$setAcode_account(stockAccount, $get_3(tradeResDataItem.mMapItems, 'acode_account'));
						$setAsset_prop(stockAccount, $get_3(tradeResDataItem.mMapItems, 'asset_prop'));
						$setStatus(stockAccount, $get_3(tradeResDataItem.mMapItems, 'holder_status'));
						$setMarket(stockAccount, $get_3(tradeResDataItem.mMapItems, 'exchange_type'));
						$setSeat_no(stockAccount, $get_3(tradeResDataItem.mMapItems, 'seat_no'));
						$setFund_account_1(stockAccount, $get_3(tradeResDataItem.mMapItems, 'fund_account'));
						originalInfo.accounts.add_0(stockAccount);
					}
					if ($get_3(tradeResDataItem.mMapItems, 'bank_account') != null) {
						bankAccount = new BankAccount_0;
						$setStatus(bankAccount, $get_3(tradeResDataItem.mMapItems, 'bkaccount_status'));
						$setAccount_id(bankAccount, $get_3(tradeResDataItem.mMapItems, 'bank_account'));
						$setAccount_name(bankAccount, $get_3(tradeResDataItem.mMapItems, 'bank_name'));
						$setFund_account(bankAccount, $get_3(tradeResDataItem.mMapItems, 'fund_account'));
						$setMoney_type(bankAccount, $get_3(tradeResDataItem.mMapItems, 'money_type'));
						$setBank_no(bankAccount, $get_3(tradeResDataItem.mMapItems, 'bank_no'));
						$setReg_flag(bankAccount, $get_3(tradeResDataItem.mMapItems, 'bkaccount_regflag'));
						originalInfo.accounts.add_0(bankAccount);
					}
					if ($get_3(tradeResDataItem.mMapItems, 'prof_flag') != null) {
						ip = new InvestPreference_0;
						$setEn_invest_kind(ip, $get_3(tradeResDataItem.mMapItems, 'en_invest_kind'));
						$setEn_invest_term(ip, $get_3(tradeResDataItem.mMapItems, 'en_invest_term'));
						$setEn_pf_invest_kind(ip, $get_3(tradeResDataItem.mMapItems, 'en_pf_invest_kind'));
						$setEn_pf_invest_term(ip, $get_3(tradeResDataItem.mMapItems, 'en_pf_invest_term'));
						$setPf_risk_level(ip, $get_3(tradeResDataItem.mMapItems, 'pf_risk_level'));
						$setProf_begin_date(ip, $get_3(tradeResDataItem.mMapItems, 'prof_begin_date'));
						$setProf_end_date(ip, $get_3(tradeResDataItem.mMapItems, 'prof_end_date'));
						$setProf_flag(ip, $get_3(tradeResDataItem.mMapItems, 'prof_flag'));
						$setProf_type(ip, $get_3(tradeResDataItem.mMapItems, 'prof_type'));
						$setRemark(ip, $get_3(tradeResDataItem.mMapItems, 'remark'));
						$setRisk_begin_date(ip, $get_3(tradeResDataItem.mMapItems, 'risk_begin_date'));
						$setRisk_end_date(ip, $get_3(tradeResDataItem.mMapItems, 'risk_end_date'));
						originalInfo.investPreference = ip;
					}
				}
			}
			$invalidate(this$static, originalInfo, 'unknow');
			$remove_3(this$static.mMapClientInfo, identity);
		}
	}

	function $dealUserResponse(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, originalInfo, parser; !! mLogger && mLogger.debug_0('ClientManager deal FixUserResponse!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixUserResponse)) {
			msg = msg1;
			identity = $parseFixParam(msg.userRequestID);
			originalInfo = $get_3(this$static.mMapClientInfo, identity);
			if (!identity.length || !originalInfo) {
				return;
			}
			d = $parseFixParam(msg.userStatusText);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$setReturn_code(originalInfo, data_0.return_code);
			$setError_info(originalInfo, $getValueByField(data_0, 'error_info'));
			$setError_no(originalInfo, data_0.error_no);
			$setError_pathinfo(originalInfo, $getValueByField(data_0, 'error_pathinfo'));
			$invalidate(this$static, originalInfo, 'unknow');
			$remove_3(this$static.mMapClientInfo, identity);
		}
	}

	function $parseFixParam(param) {
		var i_0, iLen;
		iLen = 0;
		for (i_0 = 0; i_0 < param.length; i_0++) {
			if (param[i_0] == 0) break;
			++iLen;
		}
		return (!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0).buildFromBytes_0(param, 0, iLen);
	}

	function $process(this$static, object) {
		var fixObj; !! mLogger && mLogger.debug_0('ClientManager onData object!');
		if (instanceOf(object, Q$FixObject)) {
			fixObj = object;
			switch ($getMsgType(fixObj.messages)) {
			case 65:
				$dealLogon(this$static, fixObj);
				break;
			case 16966:
				$dealUserResponse(this$static, fixObj);
			}
		}
	}

	function ClientManager_0() {
		BaseTradeManager_0.call(this);
		$$init(this);
	}

	function ClientManager_1(clientInfo) {
		BaseTradeManager_0.call(this);
		$$init(this);
		clientInfo != null && clientInfo.length > 0 && (this.SENDERCOMPID = getBytesUtf8(clientInfo));
	}

	defineSeed(228, 229, makeCastMap([Q$BaseManager, Q$Manager, Q$ClientManager, Q$BaseTradeManager, Q$Exportable]), ClientManager_0, ClientManager_1);
	_.beginWatch_3 = function beginWatch_9(info, handler) {
		$beginWatchObject(this, info, handler);
	};
	_.benchTest_0 = function benchTest() {
		var buf, data_0, e, parser;
		try {
			data_0 = getBytesUtf8('8=FIXT.1.19=8235=A49=TOC56=TOMAC34=150=TOC57=S52=20110211-05:40:09.42598=0108=301137=910=102\1');
			buf = allocateDirect(500);
			$put_0(buf, data_0, data_0.length);
			$position(buf, 0);
			parser = new FixMessageParser_0;
			$parse(parser, buf, new ClientManager$1_0(buf));
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				error(e.getMessage_0());
			} else throw unwrap($e0);
		}
	};
	_.endWatch_3 = function endWatch_9(info, handler) {
		$endWatchObject(this, info, handler);
	};
	_.getActiveClient_0 = function getActiveClient() {
		return this.client;
	};
	_.getBackendInfo_0 = function getBackendInfo() {
		return _String(this.TARGETCOMPID);
	};
	_.getClientInfo_0 = function getClientInfo() {
		return _String(this.SENDERCOMPID);
	};
	_.getClientInfo_1 = function getClientInfo_0(identity) {
		return $get_3(this.mMapClientInfo, identity);
	};
	_.login_0 = function login(rawData, secureJson) {
		var buf, fo, identity, info, items, logon;
		identity = mIDGen.generatorID_0();
		info = $get_3(this.mMapClientInfo, '' + identity);
		if (info) {
			$invalidate(this, info, 'unknow');
			return info;
		}
		info = $createClient(this, '' + identity);
		logon = new FixLogon_0;
		logon.senderCompID = this.SENDERCOMPID;
		logon.targetCompID = this.TARGETCOMPID;
		logon.applExtID = fromInt(identity);
		logon.encryptMethod = P0_longLit;
		logon.heartBtInt = P12c_longLit;
		logon.secureData = getBytesUtf8(secureJson);
		logon.secureDataLen = fromInt(logon.secureData.length);
		items = $split(rawData, ':', 0);
		if (items.length >= 1) {
			logon.cstmApplVerID = getBytesUtf8(items[0]);
			items.length >= 2 && (logon.username = getBytesUtf8(items[1]));
			items.length >= 3 && (logon.password = getBytesUtf8(items[2]));
			items.length >= 4 && (logon.heartBtInt = fromInt(__parseAndValidateInt(items[3])));
			items.length >= 5 && $equalsIgnoreCase(items[4], 'true') && (logon.resetSeqNumFlag = true);
		}
		buf = allocateDirect(10240);
		$encode_0(logon, buf);
		fo = new FixObject_0;
		fo.topic = 'HSUF.AUTH';
		$setMessages(fo, buf);
		$clear_153(buf); !! mLogger && mLogger.debug_0('beginWatchObject');
		this.mRepository.beginWatchObject_1(fo);
		return info;
	};
	_.onDomainData_0 = function onDomainData_10(object, source) {
		var e;
		try {
			$process(this, object);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				$printStackTrace(e);
			} else throw unwrap($e0);
		}
	};
	_.removeClientInfo_0 = function removeClientInfo(identity) {
		$remove_3(this.mMapClientInfo, identity);
	};
	_.setActiveClient_0 = function setActiveClient(clientId) {
		var info;
		info = $get_3(this.mMapClientInfo, clientId); !! info && $invalidate(this, this.client, 'unknow');
	};
	_.setBackendInfo_0 = function setBackendInfo(targetCompID) {
		targetCompID != null && targetCompID.length > 0 && (this.TARGETCOMPID = getBytesUtf8(targetCompID));
	};
	_.setClientInfo_0 = function setClientInfo(senderCompID) {
		senderCompID != null && senderCompID.length > 0 && (this.SENDERCOMPID = getBytesUtf8(senderCompID));
	};

	function FixMessageListenerImpl_0() {}

	defineSeed(231, 1, {}, FixMessageListenerImpl_0);
	_.onFixLogon = function onFixLogon(msg) {};

	function ClientManager$1_0(val$buf) {
		this.val$buf = val$buf;
	}

	defineSeed(230, 231, {}, ClientManager$1_0);
	_.onFixLogon = function onFixLogon_0(msg) {
		$clear_153(this.val$buf);
	};

	function $export_107(this$static) {
		if (!exported_107) {
			exported_107 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_ClientManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Client_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			$export0_107(this$static);
		}
	}

	function $export0_107(this$static) {
		var pkg = declarePackage('hippo.trade.ClientManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.ClientManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 ? (g = new ClientManager_0) : a.length == 1 && (g = new ClientManager_1(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.ClientManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.benchTest = $entry(function() {
			this.g.benchTest_0();
		});
		__0.changePassword = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(__static_wrapper_changePassword(this.g, a0, a1, a2, a3, a4, a5));
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getActiveClient = $entry(function() {
			return wrap_0(this.g.getActiveClient_0());
		});
		__0.getBackendInfo = $entry(function() {
			return this.g.getBackendInfo_0();
		});
		__0.getClientInfo = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_account_ClientManager_2_classLit, 1, arguments, false, false)[0];
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_account_ClientManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.login = $entry(function(a0, a1) {
			return wrap_0(this.g.login_0(a0, a1));
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.removeClientInfo = $entry(function(a0) {
			this.g.removeClientInfo_0(a0);
		});
		__0.setActiveClient = $entry(function(a0) {
			this.g.setActiveClient_0(a0);
		});
		__0.setBackendInfo = $entry(function(a0) {
			this.g.setBackendInfo_0(a0);
		});
		__0.setClientInfo = $entry(function(a0) {
			this.g.setClientInfo_0(a0);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_account_ClientManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			},
			1: {
				0: [
					[function() {
						return this.getClientInfo_0.apply(this, arguments);
					},
					null, undefined]
				],
				1: [
					[function() {
						return this.getClientInfo_1.apply(this, arguments);
					},
					wrap_0, undefined, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.ClientManager[p] === undefined && ($wnd.hippo.trade.ClientManager[p] = pkg[p]);
	}

	function ClientManager_ExporterImpl_0() {
		$export_107(this);
	}

	function __static_wrapper_changePassword(instance, a0, a1, a2, a3, a4, a5) {
		return $changePassword(instance, a0, fromDouble(a1), a2, a3, a4, a5);
	}

	defineSeed(232, 1, {}, ClientManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_107() {
		return $wnd.hippo.trade.ClientManager;
	};
	_.isAssignable = function isAssignable_107(o) {
		return o != null && instanceOf(o, Q$ClientManager);
	};
	var exported_107 = false;

	function $export_108(this$static) {
		if (!exported_108) {
			exported_108 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_Client_2_classLit, this$static);
			new Account_ExporterImpl_0;
			new BankAccount_ExporterImpl_0;
			new BaseAccount_ExporterImpl_0;
			new BranchInfo_ExporterImpl_0;
			new FundAccount_ExporterImpl_0;
			new InvestPreference_ExporterImpl_0;
			$export0_108(this$static);
		}
	}

	function $export0_108(this$static) {
		var pkg = declarePackage('hippo.trade.Client');
		var __0, __ = this$static;
		$wnd.hippo.trade.Client = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Client_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.Client.prototype = new Object;
		__0.getAccountByAsset_prop = $entry(function(a0) {
			return wrap_0(this.g.getAccountByAsset_prop_0(a0));
		});
		__0.getAccountByMarket = $entry(function(a0) {
			return wrap_0(this.g.getAccountByMarket_0(a0));
		});
		__0.getAccountByMarketAndAsset_prop = $entry(function(a0, a1) {
			return wrap_0(this.g.getAccountByMarketAndAsset_prop_0(a0, a1));
		});
		__0.getAccounts = $entry(function() {
			return this.g.getAccounts_0();
		});
		__0.getAccountsByAsset_prop = $entry(function(a0) {
			return wrap_2(this.g.getAccountsByAsset_prop_0(a0));
		});
		__0.getAccountsByMarket = $entry(function(a0) {
			return wrap_2(this.g.getAccountsByMarket_0(a0));
		});
		__0.getBankAccount = $entry(function() {
			return wrap_2(this.g.getBankAccount_0());
		});
		__0.getBaseAccount = $entry(function() {
			return wrap_0(this.g.getBaseAccount_0());
		});
		__0.getBranch = $entry(function() {
			return wrap_0(this.g.getBranch_0());
		});
		__0.getClient_id = $entry(function() {
			return this.g.getClient_id_0();
		});
		__0.getClient_name = $entry(function() {
			return this.g.getClient_name_0();
		});
		__0.getCorp_risk_level = $entry(function() {
			return this.g.getCorp_risk_level_0();
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getFundAccount = $entry(function() {
			return wrap_0(this.g.getFundAccount_0());
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getInvestPreference = $entry(function() {
			return wrap_0(this.g.getInvestPreference_0());
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getValid_flag = $entry(function() {
			return this.g.getValid_flag_0();
		});
		__0.putAccount = $entry(function(a0) {
			this.g.putAccount_0(a0 == null ? null : a0.g);
		});
		__0.setAccounts = $entry(function(a0) {
			this.g.setAccounts_0(a0);
		});
		__0.setBranch = $entry(function(a0) {
			this.g.setBranch_0(a0 == null ? null : a0.g);
		});
		__0.setClient_id = $entry(function(a0) {
			this.g.setClient_id_0(a0);
		});
		__0.setClient_name = $entry(function(a0) {
			this.g.setClient_name_0(a0);
		});
		__0.setCorp_risk_level = $entry(function(a0) {
			this.g.setCorp_risk_level_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setInvestPreference = $entry(function(a0) {
			this.g.setInvestPreference_0(a0 == null ? null : a0.g);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		__0.setValid_flag = $entry(function(a0) {
			this.g.setValid_flag_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.Client[p] === undefined && ($wnd.hippo.trade.Client[p] = pkg[p]);
	}

	function Client_ExporterImpl_0() {
		$export_108(this);
	}

	defineSeed(233, 1, {}, Client_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_108() {
		return $wnd.hippo.trade.Client;
	};
	_.isAssignable = function isAssignable_108(o) {
		return o != null && instanceOf(o, Q$Client);
	};
	var exported_108 = false;

	function Fund_0() {
		this.bankAccount = new ArrayList_0;
	}

	defineSeed(234, 227, makeCastMap([Q$DomainObject, Q$Fund, Q$TradeObject, Q$Exportable]), Fund_0);
	_.getBankAccount_1 = function getBankAccount_0() {
		return this.bankAccount;
	};
	_.getBeginBalance_0 = function getBeginBalance() {
		return this.beginBalance;
	};
	_.getCashBalance_0 = function getCashBalance() {
		return this.cashBalance;
	};
	_.getCheckBalance_0 = function getCheckBalance() {
		return this.checkBalance;
	};
	_.getCorrectBalance_0 = function getCorrectBalance() {
		return this.correctBalance;
	};
	_.getCurrentBalance_0 = function getCurrentBalance() {
		return this.currentBalance;
	};
	_.getEnableBalance_0 = function getEnableBalance() {
		return this.enableBalance;
	};
	_.getFineIntegral_0 = function getFineIntegral() {
		return this.fineIntegral;
	};
	_.getForegiftBalance_0 = function getForegiftBalance() {
		return this.foregiftBalance;
	};
	_.getFrozenBalance_0 = function getFrozenBalance() {
		return this.frozenBalance;
	};
	_.getFundId_0 = function getFundId() {
		return this.fundId;
	};
	_.getIntegralBalance_0 = function getIntegralBalance() {
		return this.integralBalance;
	};
	_.getIntegralUpdate_0 = function getIntegralUpdate() {
		return this.integralUpdate;
	};
	_.getInterest_0 = function getInterest() {
		return this.interest;
	};
	_.getMoney_0 = function getMoney() {
		return this.money;
	};
	_.getMortgageBalance_0 = function getMortgageBalance() {
		return this.mortgageBalance;
	};
	_.getUncomeCorrectBalance_0 = function getUncomeCorrectBalance() {
		return this.uncomeCorrectBalance;
	};
	_.getUncomeSellBalance_0 = function getUncomeSellBalance() {
		return this.uncomeSellBalance;
	};
	_.getUncome_buyBalance_0 = function getUncome_buyBalance() {
		return this.uncome_buyBalance;
	};
	_.getUnfrozenBalance_0 = function getUnfrozenBalance() {
		return this.unfrozenBalance;
	};
	_.setBankAccount_0 = function setBankAccount(bankAccount) {
		this.bankAccount = bankAccount;
	};
	_.setBeginBalance_0 = function setBeginBalance(beginBalance) {
		this.beginBalance = beginBalance;
	};
	_.setCashBalance_0 = function setCashBalance(cashBalance) {
		this.cashBalance = cashBalance;
	};
	_.setCheckBalance_0 = function setCheckBalance(checkBalance) {
		this.checkBalance = checkBalance;
	};
	_.setCorrectBalance_0 = function setCorrectBalance(correctBalance) {
		this.correctBalance = correctBalance;
	};
	_.setCurrentBalance_0 = function setCurrentBalance(currentBalance) {
		this.currentBalance = currentBalance;
	};
	_.setEnableBalance_0 = function setEnableBalance(enableBalance) {
		this.enableBalance = enableBalance;
	};
	_.setFineIntegral_0 = function setFineIntegral(fineIntegral) {
		this.fineIntegral = fineIntegral;
	};
	_.setForegiftBalance_0 = function setForegiftBalance(foregiftBalance) {
		this.foregiftBalance = foregiftBalance;
	};
	_.setFrozenBalance_0 = function setFrozenBalance(frozenBalance) {
		this.frozenBalance = frozenBalance;
	};
	_.setFundId_0 = function setFundId(fundId) {
		this.fundId = fundId;
	};
	_.setIntegralBalance_0 = function setIntegralBalance(integralBalance) {
		this.integralBalance = integralBalance;
	};
	_.setIntegralUpdate_0 = function setIntegralUpdate(integralUpdate) {
		this.integralUpdate = integralUpdate;
	};
	_.setInterest_0 = function setInterest(interest) {
		this.interest = interest;
	};
	_.setMoney_0 = function setMoney(money) {
		this.money = money;
	};
	_.setMortgageBalance_0 = function setMortgageBalance(mortgageBalance) {
		this.mortgageBalance = mortgageBalance;
	};
	_.setUncomeCorrectBalance_0 = function setUncomeCorrectBalance(uncomeCorrectBalance) {
		this.uncomeCorrectBalance = uncomeCorrectBalance;
	};
	_.setUncomeSellBalance_0 = function setUncomeSellBalance(uncomeSellBalance) {
		this.uncomeSellBalance = uncomeSellBalance;
	};
	_.setUncome_buyBalance_0 = function setUncome_buyBalance(uncome_buyBalance) {
		this.uncome_buyBalance = uncome_buyBalance;
	};
	_.setUnfrozenBalance_0 = function setUnfrozenBalance(unfrozenBalance) {
		this.unfrozenBalance = unfrozenBalance;
	};
	_.beginBalance = 0;
	_.cashBalance = 0;
	_.checkBalance = 0;
	_.correctBalance = 0;
	_.currentBalance = 0;
	_.enableBalance = 0;
	_.fineIntegral = 0;
	_.foregiftBalance = 0;
	_.frozenBalance = 0;
	_.fundId = 0;
	_.integralBalance = 0;
	_.integralUpdate = 0;
	_.interest = 0;
	_.mortgageBalance = 0;
	_.uncomeCorrectBalance = 0;
	_.uncomeSellBalance = 0;
	_.uncome_buyBalance = 0;
	_.unfrozenBalance = 0;

	function $export_109(this$static) {
		if (!exported_109) {
			exported_109 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_FundAccount_2_classLit, this$static);
			$export0_109(this$static);
		}
	}

	function $export0_109(this$static) {
		var pkg = declarePackage('hippo.trade.FundAccount');
		var __0, __ = this$static;
		$wnd.hippo.trade.FundAccount = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FundAccount_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.FundAccount.prototype = new Object;
		__0.allString = $entry(function() {
			return this.g.allString_0();
		});
		__0.getAccount_id = $entry(function() {
			return this.g.getAccount_id_0();
		});
		__0.getAccount_name = $entry(function() {
			return this.g.getAccount_name_0();
		});
		__0.getAsset_balance = $entry(function() {
			return this.g.getAsset_balance_0();
		});
		__0.getBank_name = $entry(function() {
			return this.g.getBank_name_0();
		});
		__0.getBank_no = $entry(function() {
			return this.g.getBank_no_0();
		});
		__0.getClient_age = $entry(function() {
			return this.g.getClient_age_0();
		});
		__0.getClient_rights = $entry(function() {
			return this.g.getClient_rights_0();
		});
		__0.getCorp_between_days = $entry(function() {
			return this.g.getCorp_between_days_0();
		});
		__0.getCorp_risk_info = $entry(function() {
			return this.g.getCorp_risk_info_0();
		});
		__0.getCorp_risk_valid = $entry(function() {
			return this.g.getCorp_risk_valid_0();
		});
		__0.getCur_income_balance = $entry(function() {
			return this.g.getCur_income_balance_0();
		});
		__0.getCurrent_balance = $entry(function() {
			return this.g.getCurrent_balance_0();
		});
		__0.getEnable_balance = $entry(function() {
			return this.g.getEnable_balance_0();
		});
		__0.getFetch_balance = $entry(function() {
			return this.g.getFetch_balance_0();
		});
		__0.getFrozen_balance = $entry(function() {
			return this.g.getFrozen_balance_0();
		});
		__0.getFund_account = $entry(function() {
			return this.g.getFund_account_0();
		});
		__0.getFund_balance = $entry(function() {
			return this.g.getFund_balance_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getId_expired_flag = $entry(function() {
			return this.g.getId_expired_flag_0();
		});
		__0.getId_expired_mess = $entry(function() {
			return this.g.getId_expired_mess_0();
		});
		__0.getId_kind = $entry(function() {
			return this.g.getId_kind_0();
		});
		__0.getId_no = $entry(function() {
			return this.g.getId_no_0();
		});
		__0.getMain_flag = $entry(function() {
			return this.g.getMain_flag_0();
		});
		__0.getMarket_value = $entry(function() {
			return this.g.getMarket_value_0();
		});
		__0.getMoney_type = $entry(function() {
			return this.g.getMoney_type_0();
		});
		__0.getOpfund_market_value = $entry(function() {
			return this.g.getOpfund_market_value_0();
		});
		__0.getOrgan_prop = $entry(function() {
			return this.g.getOrgan_prop_0();
		});
		__0.getStatus = $entry(function() {
			return this.g.getStatus_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount_id = $entry(function(a0) {
			this.g.setAccount_id_0(a0);
		});
		__0.setAccount_name = $entry(function(a0) {
			this.g.setAccount_name_0(a0);
		});
		__0.setAsset_balance = $entry(function(a0) {
			this.g.setAsset_balance_0(a0);
		});
		__0.setBank_name = $entry(function(a0) {
			this.g.setBank_name_0(a0);
		});
		__0.setBank_no = $entry(function(a0) {
			this.g.setBank_no_0(a0);
		});
		__0.setClient_age = $entry(function(a0) {
			this.g.setClient_age_0(a0);
		});
		__0.setClient_rights = $entry(function(a0) {
			this.g.setClient_rights_0(a0);
		});
		__0.setCorp_between_days = $entry(function(a0) {
			this.g.setCorp_between_days_0(a0);
		});
		__0.setCorp_risk_info = $entry(function(a0) {
			this.g.setCorp_risk_info_0(a0);
		});
		__0.setCorp_risk_valid = $entry(function(a0) {
			this.g.setCorp_risk_valid_0(a0);
		});
		__0.setCur_income_balance = $entry(function(a0) {
			this.g.setCur_income_balance_0(a0);
		});
		__0.setCurrent_balance = $entry(function(a0) {
			this.g.setCurrent_balance_0(a0);
		});
		__0.setEnable_balance = $entry(function(a0) {
			this.g.setEnable_balance_0(a0);
		});
		__0.setFetch_balance = $entry(function(a0) {
			this.g.setFetch_balance_0(a0);
		});
		__0.setFrozen_balance = $entry(function(a0) {
			this.g.setFrozen_balance_0(a0);
		});
		__0.setFund_account = $entry(function(a0) {
			this.g.setFund_account_0(a0);
		});
		__0.setFund_balance = $entry(function(a0) {
			this.g.setFund_balance_0(a0);
		});
		__0.setId_expired_flag = $entry(function(a0) {
			this.g.setId_expired_flag_0(a0);
		});
		__0.setId_expired_mess = $entry(function(a0) {
			this.g.setId_expired_mess_0(a0);
		});
		__0.setId_kind = $entry(function(a0) {
			this.g.setId_kind_0(a0);
		});
		__0.setId_no = $entry(function(a0) {
			this.g.setId_no_0(a0);
		});
		__0.setMain_flag = $entry(function(a0) {
			this.g.setMain_flag_0(a0);
		});
		__0.setMarket_value = $entry(function(a0) {
			this.g.setMarket_value_0(a0);
		});
		__0.setMoney_type = $entry(function(a0) {
			this.g.setMoney_type_0(a0);
		});
		__0.setOpfund_market_value = $entry(function(a0) {
			this.g.setOpfund_market_value_0(a0);
		});
		__0.setOrgan_prop = $entry(function(a0) {
			this.g.setOrgan_prop_0(a0);
		});
		__0.setStatus = $entry(function(a0) {
			this.g.setStatus_1(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.FundAccount[p] === undefined && ($wnd.hippo.trade.FundAccount[p] = pkg[p]);
	}

	function FundAccount_ExporterImpl_0() {
		$export_109(this);
	}

	defineSeed(235, 1, {}, FundAccount_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_109() {
		return $wnd.hippo.trade.FundAccount;
	};
	_.isAssignable = function isAssignable_109(o) {
		return o != null && instanceOf(o, Q$FundAccount);
	};
	var exported_109 = false;

	function FundAccounts_0() {
		this.accounts = new ArrayList_0;
	}

	defineSeed(236, 227, makeCastMap([Q$DomainObject, Q$FundAccounts, Q$TradeObject, Q$Exportable]), FundAccounts_0);
	_.getAccount_0 = function getAccount(idx) {
		return $get_2(this.accounts, idx);
	};
	_.getAllAccount_0 = function getAllAccount() {
		return $toArray_0(this.accounts);
	};
	_.getTotal_0 = function getTotal_2() {
		return this.accounts.size_0;
	};
	_.putAccount_1 = function putAccount_0(fundAccount) {
		$add(this.accounts, fundAccount);
	};

	function $export_110(this$static) {
		if (!exported_110) {
			exported_110 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_FundAccounts_2_classLit, this$static);
			new Account_ExporterImpl_0;
			new FundAccount_ExporterImpl_0;
			$export0_110(this$static);
		}
	}

	function $export0_110(this$static) {
		var pkg = declarePackage('hippo.trade.FundAccounts');
		var __0, __ = this$static;
		$wnd.hippo.trade.FundAccounts = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FundAccounts_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.FundAccounts.prototype = new Object;
		__0.getAccount = $entry(function(a0) {
			return wrap_0(this.g.getAccount_0(a0));
		});
		__0.getAllAccount = $entry(function() {
			return wrap_2(this.g.getAllAccount_0());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getTotal = $entry(function() {
			return this.g.getTotal_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putAccount = $entry(function(a0) {
			this.g.putAccount_1(a0 == null ? null : a0.g);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.FundAccounts[p] === undefined && ($wnd.hippo.trade.FundAccounts[p] = pkg[p]);
	}

	function FundAccounts_ExporterImpl_0() {
		$export_110(this);
	}

	defineSeed(237, 1, {}, FundAccounts_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_110() {
		return $wnd.hippo.trade.FundAccounts;
	};
	_.isAssignable = function isAssignable_110(o) {
		return o != null && instanceOf(o, Q$FundAccounts);
	};
	var exported_110 = false;

	function $export_111(this$static) {
		if (!exported_111) {
			exported_111 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_Fund_2_classLit, this$static);
			new Money_ExporterImpl_0;
			$export0_111(this$static);
		}
	}

	function $export0_111(this$static) {
		var pkg = declarePackage('hippo.trade.Fund');
		var __0, __ = this$static;
		$wnd.hippo.trade.Fund = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Fund_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.Fund.prototype = new Object;
		__0.getBankAccount = $entry(function() {
			return this.g.getBankAccount_1();
		});
		__0.getBeginBalance = $entry(function() {
			return this.g.getBeginBalance_0();
		});
		__0.getCashBalance = $entry(function() {
			return this.g.getCashBalance_0();
		});
		__0.getCheckBalance = $entry(function() {
			return this.g.getCheckBalance_0();
		});
		__0.getCorrectBalance = $entry(function() {
			return this.g.getCorrectBalance_0();
		});
		__0.getCurrentBalance = $entry(function() {
			return this.g.getCurrentBalance_0();
		});
		__0.getEnableBalance = $entry(function() {
			return this.g.getEnableBalance_0();
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getFineIntegral = $entry(function() {
			return this.g.getFineIntegral_0();
		});
		__0.getForegiftBalance = $entry(function() {
			return this.g.getForegiftBalance_0();
		});
		__0.getFrozenBalance = $entry(function() {
			return this.g.getFrozenBalance_0();
		});
		__0.getFundId = $entry(function() {
			return this.g.getFundId_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getIntegralBalance = $entry(function() {
			return this.g.getIntegralBalance_0();
		});
		__0.getIntegralUpdate = $entry(function() {
			return this.g.getIntegralUpdate_0();
		});
		__0.getInterest = $entry(function() {
			return this.g.getInterest_0();
		});
		__0.getMoney = $entry(function() {
			return wrap_0(this.g.getMoney_0());
		});
		__0.getMortgageBalance = $entry(function() {
			return this.g.getMortgageBalance_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUncomeCorrectBalance = $entry(function() {
			return this.g.getUncomeCorrectBalance_0();
		});
		__0.getUncomeSellBalance = $entry(function() {
			return this.g.getUncomeSellBalance_0();
		});
		__0.getUncome_buyBalance = $entry(function() {
			return this.g.getUncome_buyBalance_0();
		});
		__0.getUnfrozenBalance = $entry(function() {
			return this.g.getUnfrozenBalance_0();
		});
		__0.setBankAccount = $entry(function(a0) {
			this.g.setBankAccount_0(a0);
		});
		__0.setBeginBalance = $entry(function(a0) {
			this.g.setBeginBalance_0(a0);
		});
		__0.setCashBalance = $entry(function(a0) {
			this.g.setCashBalance_0(a0);
		});
		__0.setCheckBalance = $entry(function(a0) {
			this.g.setCheckBalance_0(a0);
		});
		__0.setCorrectBalance = $entry(function(a0) {
			this.g.setCorrectBalance_0(a0);
		});
		__0.setCurrentBalance = $entry(function(a0) {
			this.g.setCurrentBalance_0(a0);
		});
		__0.setEnableBalance = $entry(function(a0) {
			this.g.setEnableBalance_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setFineIntegral = $entry(function(a0) {
			this.g.setFineIntegral_0(a0);
		});
		__0.setForegiftBalance = $entry(function(a0) {
			this.g.setForegiftBalance_0(a0);
		});
		__0.setFrozenBalance = $entry(function(a0) {
			this.g.setFrozenBalance_0(a0);
		});
		__0.setFundId = $entry(function(a0) {
			this.g.setFundId_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setIntegralBalance = $entry(function(a0) {
			this.g.setIntegralBalance_0(a0);
		});
		__0.setIntegralUpdate = $entry(function(a0) {
			this.g.setIntegralUpdate_0(a0);
		});
		__0.setInterest = $entry(function(a0) {
			this.g.setInterest_0(a0);
		});
		__0.setMoney = $entry(function(a0) {
			this.g.setMoney_0(a0 == null ? null : a0.g);
		});
		__0.setMortgageBalance = $entry(function(a0) {
			this.g.setMortgageBalance_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		__0.setUncomeCorrectBalance = $entry(function(a0) {
			this.g.setUncomeCorrectBalance_0(a0);
		});
		__0.setUncomeSellBalance = $entry(function(a0) {
			this.g.setUncomeSellBalance_0(a0);
		});
		__0.setUncome_buyBalance = $entry(function(a0) {
			this.g.setUncome_buyBalance_0(a0);
		});
		__0.setUnfrozenBalance = $entry(function(a0) {
			this.g.setUnfrozenBalance_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.Fund[p] === undefined && ($wnd.hippo.trade.Fund[p] = pkg[p]);
	}

	function Fund_ExporterImpl_0() {
		$export_111(this);
	}

	defineSeed(238, 1, {}, Fund_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_111() {
		return $wnd.hippo.trade.Fund;
	};
	_.isAssignable = function isAssignable_111(o) {
		return o != null && instanceOf(o, Q$Fund);
	};
	var exported_111 = false;

	function Inventory_0() {
		this.positions = new ArrayList_0;
	}

	defineSeed(239, 28, makeCastMap([Q$DomainObject, Q$Inventory, Q$Exportable]), Inventory_0);
	_.getPositions_0 = function getPositions() {
		return this.positions;
	};
	_.setPositions_0 = function setPositions(positions) {
		this.positions = positions;
	};

	function $export_112(this$static) {
		if (!exported_112) {
			exported_112 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_Inventory_2_classLit, this$static);
			$export0_112(this$static);
		}
	}

	function $export0_112(this$static) {
		var pkg = declarePackage('hippo.trade.Inventory');
		var __0, __ = this$static;
		$wnd.hippo.trade.Inventory = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Inventory_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.Inventory.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getPositions = $entry(function() {
			return this.g.getPositions_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setPositions = $entry(function(a0) {
			this.g.setPositions_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.Inventory[p] === undefined && ($wnd.hippo.trade.Inventory[p] = pkg[p]);
	}

	function Inventory_ExporterImpl_0() {
		$export_112(this);
	}

	defineSeed(240, 1, {}, Inventory_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_112() {
		return $wnd.hippo.trade.Inventory;
	};
	_.isAssignable = function isAssignable_112(o) {
		return o != null && instanceOf(o, Q$Inventory);
	};
	var exported_112 = false;

	function $setEn_invest_kind(this$static, en_invest_kind) {
		this$static.en_invest_kind = en_invest_kind;
	}

	function $setEn_invest_term(this$static, en_invest_term) {
		this$static.en_invest_term = en_invest_term;
	}

	function $setEn_pf_invest_kind(this$static, en_pf_invest_kind) {
		this$static.en_pf_invest_kind = en_pf_invest_kind;
	}

	function $setEn_pf_invest_term(this$static, en_pf_invest_term) {
		this$static.en_pf_invest_term = en_pf_invest_term;
	}

	function $setPf_risk_level(this$static, pf_risk_level) {
		this$static.pf_risk_level = pf_risk_level;
	}

	function $setProf_begin_date(this$static, prof_begin_date) {
		this$static.prof_begin_date = prof_begin_date;
	}

	function $setProf_end_date(this$static, prof_end_date) {
		this$static.prof_end_date = prof_end_date;
	}

	function $setProf_flag(this$static, prof_flag) {
		this$static.prof_flag = prof_flag;
	}

	function $setProf_type(this$static, prof_type) {
		this$static.prof_type = prof_type;
	}

	function $setRemark(this$static, remark) {
		this$static.remark = remark;
	}

	function $setRisk_begin_date(this$static, risk_begin_date) {
		this$static.risk_begin_date = risk_begin_date;
	}

	function $setRisk_end_date(this$static, risk_end_date) {
		this$static.risk_end_date = risk_end_date;
	}

	function InvestPreference_0() {}

	defineSeed(241, 28, makeCastMap([Q$DomainObject, Q$InvestPreference, Q$Exportable]), InvestPreference_0);
	_.getEn_invest_kind_0 = function getEn_invest_kind() {
		return this.en_invest_kind;
	};
	_.getEn_invest_term_0 = function getEn_invest_term() {
		return this.en_invest_term;
	};
	_.getEn_pf_invest_kind_0 = function getEn_pf_invest_kind() {
		return this.en_pf_invest_kind;
	};
	_.getEn_pf_invest_term_0 = function getEn_pf_invest_term() {
		return this.en_pf_invest_term;
	};
	_.getPf_risk_level_0 = function getPf_risk_level() {
		return this.pf_risk_level;
	};
	_.getProf_begin_date_0 = function getProf_begin_date() {
		return this.prof_begin_date;
	};
	_.getProf_end_date_0 = function getProf_end_date() {
		return this.prof_end_date;
	};
	_.getProf_flag_0 = function getProf_flag() {
		return this.prof_flag;
	};
	_.getProf_type_0 = function getProf_type() {
		return this.prof_type;
	};
	_.getRemark_0 = function getRemark() {
		return this.remark;
	};
	_.getRisk_begin_date_0 = function getRisk_begin_date() {
		return this.risk_begin_date;
	};
	_.getRisk_end_date_0 = function getRisk_end_date() {
		return this.risk_end_date;
	};
	_.setEn_invest_kind_0 = function setEn_invest_kind(en_invest_kind) {
		$setEn_invest_kind(this, en_invest_kind);
	};
	_.setEn_invest_term_0 = function setEn_invest_term(en_invest_term) {
		$setEn_invest_term(this, en_invest_term);
	};
	_.setEn_pf_invest_kind_0 = function setEn_pf_invest_kind(en_pf_invest_kind) {
		$setEn_pf_invest_kind(this, en_pf_invest_kind);
	};
	_.setEn_pf_invest_term_0 = function setEn_pf_invest_term(en_pf_invest_term) {
		$setEn_pf_invest_term(this, en_pf_invest_term);
	};
	_.setPf_risk_level_0 = function setPf_risk_level(pf_risk_level) {
		$setPf_risk_level(this, pf_risk_level);
	};
	_.setProf_begin_date_0 = function setProf_begin_date(prof_begin_date) {
		$setProf_begin_date(this, prof_begin_date);
	};
	_.setProf_end_date_0 = function setProf_end_date(prof_end_date) {
		$setProf_end_date(this, prof_end_date);
	};
	_.setProf_flag_0 = function setProf_flag(prof_flag) {
		$setProf_flag(this, prof_flag);
	};
	_.setProf_type_0 = function setProf_type(prof_type) {
		$setProf_type(this, prof_type);
	};
	_.setRemark_0 = function setRemark(remark) {
		$setRemark(this, remark);
	};
	_.setRisk_begin_date_0 = function setRisk_begin_date(risk_begin_date) {
		$setRisk_begin_date(this, risk_begin_date);
	};
	_.setRisk_end_date_0 = function setRisk_end_date(risk_end_date) {
		$setRisk_end_date(this, risk_end_date);
	};

	function $export_113(this$static) {
		if (!exported_113) {
			exported_113 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_InvestPreference_2_classLit, this$static);
			$export0_113(this$static);
		}
	}

	function $export0_113(this$static) {
		var pkg = declarePackage('hippo.trade.InvestPreference');
		var __0, __ = this$static;
		$wnd.hippo.trade.InvestPreference = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new InvestPreference_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.InvestPreference.prototype = new Object;
		__0.getEn_invest_kind = $entry(function() {
			return this.g.getEn_invest_kind_0();
		});
		__0.getEn_invest_term = $entry(function() {
			return this.g.getEn_invest_term_0();
		});
		__0.getEn_pf_invest_kind = $entry(function() {
			return this.g.getEn_pf_invest_kind_0();
		});
		__0.getEn_pf_invest_term = $entry(function() {
			return this.g.getEn_pf_invest_term_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getPf_risk_level = $entry(function() {
			return this.g.getPf_risk_level_0();
		});
		__0.getProf_begin_date = $entry(function() {
			return this.g.getProf_begin_date_0();
		});
		__0.getProf_end_date = $entry(function() {
			return this.g.getProf_end_date_0();
		});
		__0.getProf_flag = $entry(function() {
			return this.g.getProf_flag_0();
		});
		__0.getProf_type = $entry(function() {
			return this.g.getProf_type_0();
		});
		__0.getRemark = $entry(function() {
			return this.g.getRemark_0();
		});
		__0.getRisk_begin_date = $entry(function() {
			return this.g.getRisk_begin_date_0();
		});
		__0.getRisk_end_date = $entry(function() {
			return this.g.getRisk_end_date_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setEn_invest_kind = $entry(function(a0) {
			this.g.setEn_invest_kind_0(a0);
		});
		__0.setEn_invest_term = $entry(function(a0) {
			this.g.setEn_invest_term_0(a0);
		});
		__0.setEn_pf_invest_kind = $entry(function(a0) {
			this.g.setEn_pf_invest_kind_0(a0);
		});
		__0.setEn_pf_invest_term = $entry(function(a0) {
			this.g.setEn_pf_invest_term_0(a0);
		});
		__0.setPf_risk_level = $entry(function(a0) {
			this.g.setPf_risk_level_0(a0);
		});
		__0.setProf_begin_date = $entry(function(a0) {
			this.g.setProf_begin_date_0(a0);
		});
		__0.setProf_end_date = $entry(function(a0) {
			this.g.setProf_end_date_0(a0);
		});
		__0.setProf_flag = $entry(function(a0) {
			this.g.setProf_flag_0(a0);
		});
		__0.setProf_type = $entry(function(a0) {
			this.g.setProf_type_0(a0);
		});
		__0.setRemark = $entry(function(a0) {
			this.g.setRemark_0(a0);
		});
		__0.setRisk_begin_date = $entry(function(a0) {
			this.g.setRisk_begin_date_0(a0);
		});
		__0.setRisk_end_date = $entry(function(a0) {
			this.g.setRisk_end_date_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.InvestPreference[p] === undefined && ($wnd.hippo.trade.InvestPreference[p] = pkg[p]);
	}

	function InvestPreference_ExporterImpl_0() {
		$export_113(this);
	}

	defineSeed(242, 1, {}, InvestPreference_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_113() {
		return $wnd.hippo.trade.InvestPreference;
	};
	_.isAssignable = function isAssignable_113(o) {
		return o != null && instanceOf(o, Q$InvestPreference);
	};
	var exported_113 = false;

	function Money_0() {}

	defineSeed(243, 28, makeCastMap([Q$DomainObject, Q$Money, Q$Exportable]), Money_0);
	_.getMoneyName_0 = function getMoneyName() {
		return this.moneyName;
	};
	_.getMoneyType_0 = function getMoneyType() {
		return this.moneyType;
	};
	_.setMoneyName_0 = function setMoneyName(moneyName) {
		this.moneyName = moneyName;
	};
	_.setMoneyType_0 = function setMoneyType(moneyType) {
		this.moneyType = moneyType;
	};

	function $export_114(this$static) {
		if (!exported_114) {
			exported_114 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_Money_2_classLit, this$static);
			$export0_114(this$static);
		}
	}

	function $export0_114(this$static) {
		var pkg = declarePackage('hippo.trade.Money');
		var __0, __ = this$static;
		$wnd.hippo.trade.Money = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Money_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.Money.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getMoneyName = $entry(function() {
			return this.g.getMoneyName_0();
		});
		__0.getMoneyType = $entry(function() {
			return this.g.getMoneyType_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setMoneyName = $entry(function(a0) {
			this.g.setMoneyName_0(a0);
		});
		__0.setMoneyType = $entry(function(a0) {
			this.g.setMoneyType_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.Money[p] === undefined && ($wnd.hippo.trade.Money[p] = pkg[p]);
	}

	function Money_ExporterImpl_0() {
		$export_114(this);
	}

	defineSeed(244, 1, {}, Money_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_114() {
		return $wnd.hippo.trade.Money;
	};
	_.isAssignable = function isAssignable_114(o) {
		return o != null && instanceOf(o, Q$Money);
	};
	var exported_114 = false;

	function SecuritiesFund_0() {
		Fund_0.call(this);
		this.childFunds = new ArrayList_0;
	}

	defineSeed(245, 234, makeCastMap([Q$DomainObject, Q$Fund, Q$SecuritiesFund, Q$TradeObject, Q$Exportable]), SecuritiesFund_0);
	_.putChildFund_0 = function putChildFund(fund) {
		$add(this.childFunds, fund);
	};

	function $export_115(this$static) {
		if (!exported_115) {
			exported_115 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_SecuritiesFund_2_classLit, this$static);
			new Money_ExporterImpl_0;
			new Fund_ExporterImpl_0;
			$export0_115(this$static);
		}
	}

	function $export0_115(this$static) {
		var pkg = declarePackage('hippo.trade.SecuritiesFund');
		var __0, __ = this$static;
		$wnd.hippo.trade.SecuritiesFund = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new SecuritiesFund_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.SecuritiesFund.prototype = new Object;
		__0.getBankAccount = $entry(function() {
			return this.g.getBankAccount_1();
		});
		__0.getBeginBalance = $entry(function() {
			return this.g.getBeginBalance_0();
		});
		__0.getCashBalance = $entry(function() {
			return this.g.getCashBalance_0();
		});
		__0.getCheckBalance = $entry(function() {
			return this.g.getCheckBalance_0();
		});
		__0.getCorrectBalance = $entry(function() {
			return this.g.getCorrectBalance_0();
		});
		__0.getCurrentBalance = $entry(function() {
			return this.g.getCurrentBalance_0();
		});
		__0.getEnableBalance = $entry(function() {
			return this.g.getEnableBalance_0();
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getFineIntegral = $entry(function() {
			return this.g.getFineIntegral_0();
		});
		__0.getForegiftBalance = $entry(function() {
			return this.g.getForegiftBalance_0();
		});
		__0.getFrozenBalance = $entry(function() {
			return this.g.getFrozenBalance_0();
		});
		__0.getFundId = $entry(function() {
			return this.g.getFundId_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getIntegralBalance = $entry(function() {
			return this.g.getIntegralBalance_0();
		});
		__0.getIntegralUpdate = $entry(function() {
			return this.g.getIntegralUpdate_0();
		});
		__0.getInterest = $entry(function() {
			return this.g.getInterest_0();
		});
		__0.getMoney = $entry(function() {
			return wrap_0(this.g.getMoney_0());
		});
		__0.getMortgageBalance = $entry(function() {
			return this.g.getMortgageBalance_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUncomeCorrectBalance = $entry(function() {
			return this.g.getUncomeCorrectBalance_0();
		});
		__0.getUncomeSellBalance = $entry(function() {
			return this.g.getUncomeSellBalance_0();
		});
		__0.getUncome_buyBalance = $entry(function() {
			return this.g.getUncome_buyBalance_0();
		});
		__0.getUnfrozenBalance = $entry(function() {
			return this.g.getUnfrozenBalance_0();
		});
		__0.putChildFund = $entry(function(a0) {
			this.g.putChildFund_0(a0 == null ? null : a0.g);
		});
		__0.setBankAccount = $entry(function(a0) {
			this.g.setBankAccount_0(a0);
		});
		__0.setBeginBalance = $entry(function(a0) {
			this.g.setBeginBalance_0(a0);
		});
		__0.setCashBalance = $entry(function(a0) {
			this.g.setCashBalance_0(a0);
		});
		__0.setCheckBalance = $entry(function(a0) {
			this.g.setCheckBalance_0(a0);
		});
		__0.setCorrectBalance = $entry(function(a0) {
			this.g.setCorrectBalance_0(a0);
		});
		__0.setCurrentBalance = $entry(function(a0) {
			this.g.setCurrentBalance_0(a0);
		});
		__0.setEnableBalance = $entry(function(a0) {
			this.g.setEnableBalance_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setFineIntegral = $entry(function(a0) {
			this.g.setFineIntegral_0(a0);
		});
		__0.setForegiftBalance = $entry(function(a0) {
			this.g.setForegiftBalance_0(a0);
		});
		__0.setFrozenBalance = $entry(function(a0) {
			this.g.setFrozenBalance_0(a0);
		});
		__0.setFundId = $entry(function(a0) {
			this.g.setFundId_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setIntegralBalance = $entry(function(a0) {
			this.g.setIntegralBalance_0(a0);
		});
		__0.setIntegralUpdate = $entry(function(a0) {
			this.g.setIntegralUpdate_0(a0);
		});
		__0.setInterest = $entry(function(a0) {
			this.g.setInterest_0(a0);
		});
		__0.setMoney = $entry(function(a0) {
			this.g.setMoney_0(a0 == null ? null : a0.g);
		});
		__0.setMortgageBalance = $entry(function(a0) {
			this.g.setMortgageBalance_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		__0.setUncomeCorrectBalance = $entry(function(a0) {
			this.g.setUncomeCorrectBalance_0(a0);
		});
		__0.setUncomeSellBalance = $entry(function(a0) {
			this.g.setUncomeSellBalance_0(a0);
		});
		__0.setUncome_buyBalance = $entry(function(a0) {
			this.g.setUncome_buyBalance_0(a0);
		});
		__0.setUnfrozenBalance = $entry(function(a0) {
			this.g.setUnfrozenBalance_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.SecuritiesFund[p] === undefined && ($wnd.hippo.trade.SecuritiesFund[p] = pkg[p]);
	}

	function SecuritiesFund_ExporterImpl_0() {
		$export_115(this);
	}

	defineSeed(246, 1, {}, SecuritiesFund_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_115() {
		return $wnd.hippo.trade.SecuritiesFund;
	};
	_.isAssignable = function isAssignable_115(o) {
		return o != null && instanceOf(o, Q$SecuritiesFund);
	};
	var exported_115 = false;

	function $setAcode_account(this$static, acode_account) {
		this$static.acode_account = acode_account;
	}

	function $setAsset_prop(this$static, asset_prop) {
		this$static.asset_prop = asset_prop;
	}

	function $setFund_account_1(this$static, fund_account) {
		this$static.fund_account = fund_account;
	}

	function $setMarket(this$static, market) {
		this$static.market = market;
	}

	function $setMian_flag(this$static, mian_flag) {
		this$static.mian_flag = mian_flag;
	}

	function $setRights(this$static, rights) {
		this$static.rights = rights;
	}

	function $setSeat_no(this$static, seat_no) {
		this$static.seat_no = seat_no;
	}

	function StockAccount_0() {}

	defineSeed(247, 215, makeCastMap([Q$DomainObject, Q$Account, Q$StockAccount, Q$Exportable]), StockAccount_0);
	_.getAcode_account_0 = function getAcode_account() {
		return this.acode_account;
	};
	_.getAsset_prop_0 = function getAsset_prop() {
		return this.asset_prop;
	};
	_.getFund_account_0 = function getFund_account_1() {
		return this.fund_account;
	};
	_.getMarket_0 = function getMarket_2() {
		return this.market;
	};
	_.getMian_flag_0 = function getMian_flag() {
		return this.mian_flag;
	};
	_.getRights_0 = function getRights() {
		return this.rights;
	};
	_.getSeat_no_0 = function getSeat_no() {
		return this.seat_no;
	};
	_.setAcode_account_0 = function setAcode_account(acode_account) {
		$setAcode_account(this, acode_account);
	};
	_.setAsset_prop_0 = function setAsset_prop(asset_prop) {
		$setAsset_prop(this, asset_prop);
	};
	_.setFund_account_0 = function setFund_account_1(fund_account) {
		$setFund_account_1(this, fund_account);
	};
	_.setMarket_0 = function setMarket_2(market) {
		$setMarket(this, market);
	};
	_.setMian_flag_0 = function setMian_flag(mian_flag) {
		$setMian_flag(this, mian_flag);
	};
	_.setRights_0 = function setRights(rights) {
		$setRights(this, rights);
	};
	_.setSeat_no_0 = function setSeat_no(seat_no) {
		$setSeat_no(this, seat_no);
	};

	function $export_116(this$static) {
		if (!exported_116) {
			exported_116 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_StockAccount_2_classLit, this$static);
			$export0_116(this$static);
		}
	}

	function $export0_116(this$static) {
		var pkg = declarePackage('hippo.trade.StockAccount');
		var __0, __ = this$static;
		$wnd.hippo.trade.StockAccount = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockAccount_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.StockAccount.prototype = new Object;
		__0.getAccount_id = $entry(function() {
			return this.g.getAccount_id_0();
		});
		__0.getAccount_name = $entry(function() {
			return this.g.getAccount_name_0();
		});
		__0.getAcode_account = $entry(function() {
			return this.g.getAcode_account_0();
		});
		__0.getAsset_prop = $entry(function() {
			return this.g.getAsset_prop_0();
		});
		__0.getFund_account = $entry(function() {
			return this.g.getFund_account_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getMarket = $entry(function() {
			return this.g.getMarket_0();
		});
		__0.getMian_flag = $entry(function() {
			return this.g.getMian_flag_0();
		});
		__0.getRights = $entry(function() {
			return this.g.getRights_0();
		});
		__0.getSeat_no = $entry(function() {
			return this.g.getSeat_no_0();
		});
		__0.getStatus = $entry(function() {
			return this.g.getStatus_1();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount_id = $entry(function(a0) {
			this.g.setAccount_id_0(a0);
		});
		__0.setAccount_name = $entry(function(a0) {
			this.g.setAccount_name_0(a0);
		});
		__0.setAcode_account = $entry(function(a0) {
			this.g.setAcode_account_0(a0);
		});
		__0.setAsset_prop = $entry(function(a0) {
			this.g.setAsset_prop_0(a0);
		});
		__0.setFund_account = $entry(function(a0) {
			this.g.setFund_account_0(a0);
		});
		__0.setMarket = $entry(function(a0) {
			this.g.setMarket_0(a0);
		});
		__0.setMian_flag = $entry(function(a0) {
			this.g.setMian_flag_0(a0);
		});
		__0.setRights = $entry(function(a0) {
			this.g.setRights_0(a0);
		});
		__0.setSeat_no = $entry(function(a0) {
			this.g.setSeat_no_0(a0);
		});
		__0.setStatus = $entry(function(a0) {
			this.g.setStatus_1(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.StockAccount[p] === undefined && ($wnd.hippo.trade.StockAccount[p] = pkg[p]);
	}

	function StockAccount_ExporterImpl_0() {
		$export_116(this);
	}

	defineSeed(248, 1, {}, StockAccount_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_116() {
		return $wnd.hippo.trade.StockAccount;
	};
	_.isAssignable = function isAssignable_116(o) {
		return o != null && instanceOf(o, Q$StockAccount);
	};
	var exported_116 = false;

	function StockPosition_0() {}

	defineSeed(249, 28, makeCastMap([Q$DomainObject, Q$StockPosition, Q$Exportable]), StockPosition_0);
	_.getAmount_1 = function getAmount_2() {
		return 0;
	};
	_.getCostPrice_0 = function getCostPrice() {
		return 0;
	};
	_.getProfit_0 = function getProfit() {
		return 0;
	};
	_.getSecurities_0 = function getSecurities_1() {
		return null;
	};

	function $export_117(this$static) {
		if (!exported_117) {
			exported_117 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_account_StockPosition_2_classLit, this$static);
			new Securities_ExporterImpl_0;
			$export0_117(this$static);
		}
	}

	function $export0_117(this$static) {
		var pkg = declarePackage('hippo.securities.StockPosition');
		var __0, __ = this$static;
		$wnd.hippo.securities.StockPosition = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockPosition_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.securities.StockPosition.prototype = new Object;
		__0.getAmount = $entry(function() {
			return this.g.getAmount_1();
		});
		__0.getCostPrice = $entry(function() {
			return this.g.getCostPrice_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getProfit = $entry(function() {
			return this.g.getProfit_0();
		});
		__0.getSecurities = $entry(function() {
			return wrap_0(this.g.getSecurities_0());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.securities.StockPosition[p] === undefined && ($wnd.hippo.securities.StockPosition[p] = pkg[p]);
	}

	function StockPosition_ExporterImpl_0() {
		$export_117(this);
	}

	defineSeed(250, 1, {}, StockPosition_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_117() {
		return $wnd.hippo.securities.StockPosition;
	};
	_.isAssignable = function isAssignable_117(o) {
		return o != null && instanceOf(o, Q$StockPosition);
	};
	var exported_117 = false;

	function $export_118(this$static) {
		if (!exported_118) {
			exported_118 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_BaseTradeManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			$export0_118(this$static);
		}
	}

	function $export0_118(this$static) {
		var pkg = declarePackage('hippo.trade.BaseTradeManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.BaseTradeManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new BaseTradeManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.BaseTradeManager.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_common_BaseTradeManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		__0.toString = $entry(function() {
			return this.g.toString$();
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_common_BaseTradeManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.BaseTradeManager[p] === undefined && ($wnd.hippo.trade.BaseTradeManager[p] = pkg[p]);
	}

	function BaseTradeManager_ExporterImpl_0() {
		$export_118(this);
	}

	defineSeed(251, 1, {}, BaseTradeManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_118() {
		return $wnd.hippo.trade.BaseTradeManager;
	};
	_.isAssignable = function isAssignable_118(o) {
		return o != null && instanceOf(o, Q$BaseTradeManager);
	};
	var exported_118 = false;

	function Exchange_0() {}

	defineSeed(252, 28, makeCastMap([Q$DomainObject, Q$Exchange, Q$Exportable]), Exchange_0);
	_.getExchange_name_0 = function getExchange_name() {
		return this.exchange_name;
	};
	_.getExchange_type_0 = function getExchange_type_0() {
		return this.exchange_type;
	};
	_.setExchange_name_0 = function setExchange_name(exchange_name) {
		this.exchange_name = exchange_name;
	};
	_.setExchange_type_0 = function setExchange_type_0(exchange_type) {
		this.exchange_type = exchange_type;
	};

	function $export_119(this$static) {
		if (!exported_119) {
			exported_119 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_Exchange_2_classLit, this$static);
			$export0_119(this$static);
		}
	}

	function $export0_119(this$static) {
		var pkg = declarePackage('hippo.trade.Exchange');
		var __0, __ = this$static;
		$wnd.hippo.trade.Exchange = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new Exchange_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.Exchange.prototype = new Object;
		__0.getExchange_name = $entry(function() {
			return this.g.getExchange_name_0();
		});
		__0.getExchange_type = $entry(function() {
			return this.g.getExchange_type_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setExchange_name = $entry(function(a0) {
			this.g.setExchange_name_0(a0);
		});
		__0.setExchange_type = $entry(function(a0) {
			this.g.setExchange_type_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.Exchange[p] === undefined && ($wnd.hippo.trade.Exchange[p] = pkg[p]);
	}

	function Exchange_ExporterImpl_0() {
		$export_119(this);
	}

	defineSeed(253, 1, {}, Exchange_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_119() {
		return $wnd.hippo.trade.Exchange;
	};
	_.isAssignable = function isAssignable_119(o) {
		return o != null && instanceOf(o, Q$Exchange);
	};
	var exported_119 = false;

	function $export_120(this$static) {
		if (!exported_120) {
			exported_120 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_TradeObject_2_classLit, this$static);
			$export0_120(this$static);
		}
	}

	function $export0_120(this$static) {
		var pkg = declarePackage('hippo.common.TradeObject');
		var __0, __ = this$static;
		$wnd.hippo.common.TradeObject = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TradeObject_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.TradeObject.prototype = new Object;
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.common.TradeObject[p] === undefined && ($wnd.hippo.common.TradeObject[p] = pkg[p]);
	}

	function TradeObject_ExporterImpl_0() {
		$export_120(this);
	}

	defineSeed(254, 1, {}, TradeObject_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_120() {
		return $wnd.hippo.common.TradeObject;
	};
	_.isAssignable = function isAssignable_120(o) {
		return o != null && instanceOf(o, Q$TradeObject);
	};
	var exported_120 = false;

	function $putItems_6(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$add(this$static.mItems, item_0);
		}
	}

	function TradeRequest_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(255, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$TradeRequest, Q$Exportable]), TradeRequest_0);
	_.clear_0 = function clear_3() {
		$clear_154(this.mItems);
	};
	_.getAllItems_7 = function getAllItems_6() {
		var arr;
		arr = initDim(_3Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_2_classLit, makeCastMap([Q$Serializable]), Q$TradeRequestItem, this.mItems.size_0, 0);
		return $toArray_1(this.mItems, arr);
	};
	_.getIdentity_0 = function getIdentity_0() {
		return this.identity;
	};
	_.getMethod_0 = function getMethod() {
		return this.method;
	};
	_.getModule_0 = function getModule_3() {
		return 't2';
	};
	_.getMsgid_0 = function getMsgid() {
		return this.msgid;
	};
	_.getTopic_0 = function getTopic() {
		return this.topic;
	};
	_.getType_0 = function getType_24() {
		return this.type_0;
	};
	_.getUuid_0 = function getUuid() {
		return this.uuid;
	};
	_.put_0 = function put(field, value_0) {
		var item_0;
		item_0 = new TradeRequestItem_0;
		item_0.field = field;
		item_0.value_0 = value_0;
		$add(this.mItems, item_0);
	};
	_.putItem_7 = function putItem_6(item_0) {
		$add(this.mItems, item_0);
	};
	_.setIdentity_0 = function setIdentity_0(identity) {
		this.identity = identity;
	};
	_.setMethod_1 = function setMethod_0(method) {
		this.method = method;
	};
	_.setMsgid_0 = function setMsgid(msgid) {
		this.msgid = msgid;
	};
	_.setTopic_0 = function setTopic(topic) {
		this.topic = topic;
	};
	_.setType_0 = function setType_0(type_0) {
		this.type_0 = type_0;
	};
	_.setUuid_0 = function setUuid(uuid) {
		this.uuid = uuid;
	};

	function TradeRequestItem_0() {}

	defineSeed(256, 28, makeCastMap([Q$DomainObject, Q$TradeRequestItem, Q$Exportable]), TradeRequestItem_0);
	_.getField_0 = function getField() {
		return this.field;
	};
	_.getValue_0 = function getValue() {
		return this.value_0;
	};
	_.setField_0 = function setField(field) {
		this.field = field;
	};
	_.setValue_0 = function setValue(value_0) {
		this.value_0 = value_0;
	};

	function $export_121(this$static) {
		if (!exported_121) {
			exported_121 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_2_classLit, this$static);
			$export0_121(this$static);
		}
	}

	function $export0_121(this$static) {
		var pkg = declarePackage('hippo.trade.TradeRequestItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.TradeRequestItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TradeRequestItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.TradeRequestItem.prototype = new Object;
		__0.getField = $entry(function() {
			return this.g.getField_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getValue = $entry(function() {
			return this.g.getValue_0();
		});
		__0.setField = $entry(function(a0) {
			this.g.setField_0(a0);
		});
		__0.setValue = $entry(function(a0) {
			this.g.setValue_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.TradeRequestItem[p] === undefined && ($wnd.hippo.trade.TradeRequestItem[p] = pkg[p]);
	}

	function TradeRequestItem_ExporterImpl_0() {
		$export_121(this);
	}

	defineSeed(257, 1, {}, TradeRequestItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_121() {
		return $wnd.hippo.trade.TradeRequestItem;
	};
	_.isAssignable = function isAssignable_121(o) {
		return o != null && instanceOf(o, Q$TradeRequestItem);
	};
	var exported_121 = false;

	function $export_122(this$static) {
		if (!exported_122) {
			exported_122 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_TradeRequest_2_classLit, this$static);
			new TradeRequestItem_ExporterImpl_0;
			$export0_122(this$static);
		}
	}

	function $export0_122(this$static) {
		var pkg = declarePackage('hippo.trade.TradeRequest');
		var __0, __ = this$static;
		$wnd.hippo.trade.TradeRequest = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TradeRequest_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.TradeRequest.prototype = new Object;
		__0.clear = $entry(function() {
			this.g.clear_0();
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_7());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getMethod = $entry(function() {
			return this.g.getMethod_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getMsgid = $entry(function() {
			return this.g.getMsgid_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getTopic = $entry(function() {
			return this.g.getTopic_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUuid = $entry(function() {
			return this.g.getUuid_0();
		});
		__0.put = $entry(function(a0, a1) {
			this.g.put_0(a0, a1);
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_7(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_7(this.g, a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setMethod = $entry(function(a0) {
			this.g.setMethod_1(a0);
		});
		__0.setMsgid = $entry(function(a0) {
			this.g.setMsgid_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		__0.setTopic = $entry(function(a0) {
			this.g.setTopic_0(a0);
		});
		__0.setType = $entry(function(a0) {
			this.g.setType_0(a0);
		});
		__0.setUuid = $entry(function(a0) {
			this.g.setUuid_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.TradeRequest[p] === undefined && ($wnd.hippo.trade.TradeRequest[p] = pkg[p]);
	}

	function TradeRequest_ExporterImpl_0() {
		$export_122(this);
	}

	function __static_wrapper_putItems_7(instance, a0) {
		$putItems_6(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_2_classLit, makeCastMap([Q$Serializable]), Q$TradeRequestItem, a0.length, 0))));
	}

	defineSeed(258, 1, {}, TradeRequest_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_122() {
		return $wnd.hippo.trade.TradeRequest;
	};
	_.isAssignable = function isAssignable_122(o) {
		return o != null && instanceOf(o, Q$TradeRequest);
	};
	var exported_122 = false;

	function $getAllItems_3(this$static) {
		var arr;
		arr = initDim(_3Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_2_classLit, makeCastMap([Q$Serializable]), Q$TradeResDataItem, this$static.mItems.size_0, 0);
		return $toArray_1(this$static.mItems, arr);
	}

	function $getValueByField(this$static, field) {
		var eInfo, item_0, item$iterator, sret;
		sret = '';
		for (item$iterator = new AbstractList$IteratorImpl_0(this$static.mItems); item$iterator.i < item$iterator.this$0.size_1();) {
			item_0 = $next(item$iterator);
			sret = $get_3(item_0.mMapItems, field);
			if (sret != null && sret != '') break;
		}
		eInfo = this$static.error_info;
		(sret == null || sret == '') && (sret = eInfo == null ? '' : eInfo);
		return sret;
	}

	function $putItems_7(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$add(this$static.mItems, item_0);
		}
	}

	function $setIdentity_0(this$static, identity) {
		this$static.identity = identity;
	}

	function $setTotal_0(this$static, total) {
		this$static.total = total;
	}

	function TradeResData_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(259, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$TradeResData, Q$Exportable]), TradeResData_0);
	_.clear_0 = function clear_4() {
		$clear_154(this.mItems);
	};
	_.contain_0 = function contain(item_0) {
		return false;
	};
	_.getAllItems_8 = function getAllItems_7() {
		return $getAllItems_3(this);
	};
	_.getExt_0 = function getExt() {
		return this.ext;
	};
	_.getIdentity_0 = function getIdentity_1() {
		return this.identity;
	};
	_.getMsgid_0 = function getMsgid_0() {
		return this.msgid;
	};
	_.getTotal_0 = function getTotal_3() {
		return this.total;
	};
	_.getUuid_0 = function getUuid_0() {
		return this.uuid;
	};
	_.getValueByField_0 = function getValueByField(field) {
		return $getValueByField(this, field);
	};
	_.putItem_8 = function putItem_7(item_0) {
		$add(this.mItems, item_0);
	};
	_.setExt_0 = function setExt(ext) {
		this.ext = ext;
	};
	_.setIdentity_0 = function setIdentity_1(identity) {
		$setIdentity_0(this, identity);
	};
	_.setMsgid_0 = function setMsgid_0(msgid) {
		this.msgid = msgid;
	};
	_.setTotal_0 = function setTotal_2(total) {
		$setTotal_0(this, total);
	};
	_.setUuid_0 = function setUuid_0(uuid) {
		this.uuid = uuid;
	};
	_.size_1 = function size_5() {
		return this.mItems.size_0;
	};
	_.sort_1 = function sort_1() {};
	_.total = 0;

	function TradeResDataItem_0() {
		this.mMapItems = new TreeMap_0;
	}

	defineSeed(260, 28, makeCastMap([Q$DomainObject, Q$TradeResDataItem, Q$Exportable]), TradeResDataItem_0);
	_.addItem_0 = function addItem(field, value_0) {
		$put_2(this.mMapItems, field, value_0);
	};
	_.allString_0 = function allString_0() {
		var key, key$iterator, result;
		result = '';
		for (key$iterator = $iterator($keySet(this.mMapItems)); key$iterator.val$outerIter.hasNext();) {
			key = $next_0(key$iterator);
			result = result + key + ':' + $get_3(this.mMapItems, key) + '   ';
		}
		return result;
	};
	_.clear_0 = function clear_5() {
		$clear_155(this.mMapItems);
	};
	_.getValue_1 = function getValue_0(field) {
		return $get_3(this.mMapItems, field);
	};

	function $export_123(this$static) {
		if (!exported_123) {
			exported_123 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_2_classLit, this$static);
			$export0_123(this$static);
		}
	}

	function $export0_123(this$static) {
		var pkg = declarePackage('hippo.trade.TradeResDataItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.TradeResDataItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TradeResDataItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.TradeResDataItem.prototype = new Object;
		__0.addItem = $entry(function(a0, a1) {
			this.g.addItem_0(a0, a1);
		});
		__0.allString = $entry(function() {
			return this.g.allString_0();
		});
		__0.clear = $entry(function() {
			this.g.clear_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getValue = $entry(function(a0) {
			return this.g.getValue_1(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.TradeResDataItem[p] === undefined && ($wnd.hippo.trade.TradeResDataItem[p] = pkg[p]);
	}

	function TradeResDataItem_ExporterImpl_0() {
		$export_123(this);
	}

	defineSeed(261, 1, {}, TradeResDataItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_123() {
		return $wnd.hippo.trade.TradeResDataItem;
	};
	_.isAssignable = function isAssignable_123(o) {
		return o != null && instanceOf(o, Q$TradeResDataItem);
	};
	var exported_123 = false;

	function $export_124(this$static) {
		if (!exported_124) {
			exported_124 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_common_TradeResData_2_classLit, this$static);
			new TradeResDataItem_ExporterImpl_0;
			$export0_124(this$static);
		}
	}

	function $export0_124(this$static) {
		var pkg = declarePackage('hippo.trade.TradeResData');
		var __0, __ = this$static;
		$wnd.hippo.trade.TradeResData = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TradeResData_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.TradeResData.prototype = new Object;
		__0.clear = $entry(function() {
			this.g.clear_0();
		});
		__0.contain = $entry(function(a0) {
			return this.g.contain_0(a0 == null ? null : a0.g);
		});
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_8());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getExt = $entry(function() {
			return this.g.getExt_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getMsgid = $entry(function() {
			return this.g.getMsgid_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getTotal = $entry(function() {
			return this.g.getTotal_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.getUuid = $entry(function() {
			return this.g.getUuid_0();
		});
		__0.getValueByField = $entry(function(a0) {
			return this.g.getValueByField_0(a0);
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_8(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_8(this.g, a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setExt = $entry(function(a0) {
			this.g.setExt_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setMsgid = $entry(function(a0) {
			this.g.setMsgid_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		__0.setTotal = $entry(function(a0) {
			this.g.setTotal_0(a0);
		});
		__0.setUuid = $entry(function(a0) {
			this.g.setUuid_0(a0);
		});
		__0.size = $entry(function() {
			return this.g.size_1();
		});
		__0.sort = $entry(function() {
			this.g.sort_1();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.TradeResData[p] === undefined && ($wnd.hippo.trade.TradeResData[p] = pkg[p]);
	}

	function TradeResData_ExporterImpl_0() {
		$export_124(this);
	}

	function __static_wrapper_putItems_8(instance, a0) {
		$putItems_7(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_2_classLit, makeCastMap([Q$Serializable]), Q$TradeResDataItem, a0.length, 0))));
	}

	defineSeed(262, 1, {}, TradeResData_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_124() {
		return $wnd.hippo.trade.TradeResData;
	};
	_.isAssignable = function isAssignable_124(o) {
		return o != null && instanceOf(o, Q$TradeResData);
	};
	var exported_124 = false;

	function CreditOrder_0() {}

	defineSeed(263, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$CreditOrder, Q$Order, Q$Exportable]), CreditOrder_0);
	_.getAllOrderItem_0 = function getAllOrderItem() {
		return null;
	};
	_.getAllOrderResult_0 = function getAllOrderResult() {
		return null;
	};
	_.getOrderItem_0 = function getOrderItem(idx) {
		return null;
	};
	_.getOrderResult_0 = function getOrderResult(idx) {
		return this.orderResult;
	};
	_.putOrderItem_0 = function putOrderItem(item_0) {};
	_.putOrderResult_0 = function putOrderResult(item_0) {
		this.orderResult = item_0;
	};

	function OrderItem_0() {}

	defineSeed(265, 28, makeCastMap([Q$DomainObject, Q$OrderItem, Q$Exportable]), OrderItem_0);

	function $setAccount(this$static, account) {
		this$static.account = account;
	}

	function CreditOrderItem_0() {}

	defineSeed(264, 265, makeCastMap([Q$DomainObject, Q$CreditOrderItem, Q$OrderItem, Q$Exportable]), CreditOrderItem_0);
	_.getAccount_1 = function getAccount_0() {
		return this.account;
	};
	_.getStock_2 = function getStock_1() {
		return this.stock;
	};
	_.setAccount_0 = function setAccount(account) {
		$setAccount(this, account);
	};
	_.setStock_0 = function setStock(stock) {
		this.stock = stock;
	};

	function $export_125(this$static) {
		if (!exported_125) {
			exported_125 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_CreditOrderItem_2_classLit, this$static);
			new Account_ExporterImpl_0;
			new Stock_ExporterImpl_0;
			$export0_125(this$static);
		}
	}

	function $export0_125(this$static) {
		var pkg = declarePackage('hippo.trade.CreditOrderItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.CreditOrderItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CreditOrderItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.CreditOrderItem.prototype = new Object;
		__0.getAccount = $entry(function() {
			return wrap_0(this.g.getAccount_1());
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getStock = $entry(function() {
			return wrap_0(this.g.getStock_2());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setStock = $entry(function(a0) {
			this.g.setStock_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.CreditOrderItem[p] === undefined && ($wnd.hippo.trade.CreditOrderItem[p] = pkg[p]);
	}

	function CreditOrderItem_ExporterImpl_0() {
		$export_125(this);
	}

	defineSeed(266, 1, {}, CreditOrderItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_125() {
		return $wnd.hippo.trade.CreditOrderItem;
	};
	_.isAssignable = function isAssignable_125(o) {
		return o != null && instanceOf(o, Q$CreditOrderItem);
	};
	var exported_125 = false;

	function TradeManager_0() {
		BaseTradeManager_0.call(this);
	}

	defineSeed(268, 229, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$TradeManager, Q$Exportable]), TradeManager_0);
	_.setAccount_0 = function setAccount_0(account) {
		this.account = account;
	};

	function $$init_0(this$static) {
		this$static.mMapOrder = new TreeMap_0;
		this$static.SENDERCOMPID = getBytesUtf8('APPNAME.APPVERSION.DOMAINVERSION');
		this$static.TARGETCOMPID = getBytesUtf8('FIX.5.0SP2');
	}

	function $closeOrderSpecialWithContract(this$static, securityID, securityExchange, side, orderQty, ordType, price, underlyingSecurityIDs) {
		var buf, i_0, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.accountType = P2_longLit;
		nos.positionEffect = 67;
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		if (underlyingSecurityIDs != null && underlyingSecurityIDs.length > 0) {
			nos.undInstrmtGrp.noUnderlyings = underlyingSecurityIDs.length;
			$allocateUndInstrmtGrps(nos.undInstrmtGrp, nos.undInstrmtGrp.noUnderlyings);
			for (i_0 = 0; i_0 < nos.undInstrmtGrp.noUnderlyings; i_0++) {
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSecurityID = getBytesUtf8(underlyingSecurityIDs[i_0]);
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSymbol = getBytesUtf8(underlyingSecurityIDs[i_0]);
			}
		}
		buf = allocateDirect(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function $closeOrderWithContract(this$static, securityID, securityExchange, side, orderQty, ordType, price, underlyingSecurityIDs) {
		var buf, i_0, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.positionEffect = 67;
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		if (underlyingSecurityIDs != null && underlyingSecurityIDs.length > 0) {
			nos.undInstrmtGrp.noUnderlyings = underlyingSecurityIDs.length;
			$allocateUndInstrmtGrps(nos.undInstrmtGrp, nos.undInstrmtGrp.noUnderlyings);
			for (i_0 = 0; i_0 < nos.undInstrmtGrp.noUnderlyings; i_0++) {
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSecurityID = getBytesUtf8(underlyingSecurityIDs[i_0]);
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSymbol = getBytesUtf8(underlyingSecurityIDs[i_0]);
			}
		}
		buf = allocateDirect(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function $collateralTransfer(this$static, collAsgnReason, collAsgnTransType, transactTime, partyID, securityID, securityExchange, quantity) {
		var buf, identity, nos, obj, order, quantityBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixCollateralAssignment_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.collAsgnID = getBytesUtf8('' + identity);
		nos.collAsgnReason = collAsgnReason;
		nos.collAsgnTransType = collAsgnTransType;
		nos.transactTime = getBytesUtf8(transactTime);
		nos.parties.noPartyIDs = 1;
		$allocateParties(nos.parties, nos.parties.noPartyIDs);
		nos.parties.group[0].partyID = getBytesUtf8(partyID);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		quantityBytes = getBytesUtf8('' + quantity);
		nos.quantity = fixFloatValueOf(quantityBytes, quantityBytes.length);
		buf = allocateDirect(10240);
		$encode(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function $contractExtension(this$static, underlyingSecurityIDs) {
		var buf, i_0, identity, nos, obj, order;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.positionEffect = 82;
		if (underlyingSecurityIDs != null && underlyingSecurityIDs.length > 0) {
			nos.undInstrmtGrp.noUnderlyings = underlyingSecurityIDs.length;
			$allocateUndInstrmtGrps(nos.undInstrmtGrp, nos.undInstrmtGrp.noUnderlyings);
			for (i_0 = 0; i_0 < nos.undInstrmtGrp.noUnderlyings; i_0++) {
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSecurityID = getBytesUtf8(underlyingSecurityIDs[i_0]);
			}
		}
		buf = allocateDirect(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function $createCreditOrder(this$static, identity) {
		var oi;
		this$static.order_0 = new CreditOrder_0;
		oi = new CreditOrderItem_0;
		$setAccount(oi, this$static.account);
		$setIdentity(this$static.order_0, identity);
		$put_2(this$static.mMapOrder, identity, this$static.order_0);
		return this$static.order_0;
	}

	function $dealCollateralResponse(this$static, fixObj) {
		var buf, collAsgnID, collAsgnRespType, creditOrder, d, data_0, fcrMsg, messages, msg, orderResult, orderResultItem, parser; !! mLogger && mLogger.debug_0('creditOrderManager deal FixCollateralResponse!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg = $parse(parser, buf, null);
		if (instanceOf(msg, Q$FixCollateralResponse)) {
			fcrMsg = msg;
			collAsgnID = $parseFixParam_0(fcrMsg.collAsgnID);
			collAsgnRespType = fcrMsg.collAsgnRespType;
			creditOrder = $get_3(this$static.mMapOrder, collAsgnID);
			if (!creditOrder) return;
			orderResult = new CreditOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			d = $parseFixParam_0(fcrMsg.text_0);
			data_0 = !! this$static.mParser && d != null && d.length > 0 ? this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d))) : null;
			if (neq(collAsgnRespType, P0_longLit) && neq(collAsgnRespType, P1_longLit)) {
				if (data_0) {
					$setError_info(creditOrder, $getValueByField(data_0, 'error_info'));
					$setError_no(creditOrder, data_0.error_no);
					$setReturn_code(creditOrder, data_0.return_code);
				} else {
					creditOrder.error_info = 'reject collateral transfer and no msg.text';
					creditOrder.error_no = -1;
					creditOrder.return_code = -1;
				}
			} else {
				creditOrder.error_no = 0;
				creditOrder.return_code = 0;
				if (data_0) {
					$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
					$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
				} else {
					orderResultItem.batch_no = '--';
					orderResultItem.entrust_no = '--';
				}
				$add(orderResult.mItems, orderResultItem);
			}
			creditOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, collAsgnID);
			$invalidate(this$static, creditOrder, 'unknow');
			return;
		}
	}

	function $dealExecutionReport(this$static, fixObj) {
		var buf, clOrderID, creditOrder, d, data_0, ferMsg, messages, msg, orderResult, orderResultItem, parser; !! mLogger && mLogger.debug_0('creditOrderManager deal FixExecutionReport!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg = $parse(parser, buf, null);
		if (instanceOf(msg, Q$FixExecutionReport)) {
			ferMsg = msg;
			clOrderID = $parseFixParam_0(ferMsg.clOrdID);
			creditOrder = $get_3(this$static.mMapOrder, clOrderID);
			if (!creditOrder) return;
			orderResult = new CreditOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			d = $parseFixParam_0(ferMsg.text_0);
			data_0 = !! this$static.mParser && d != null && d.length > 0 ? this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d))) : null;
			$clinit_FixUtils();
			if (ferMsg.origClOrdID[0] != 0) {
				creditOrder.return_code = 0;
				creditOrder.error_no = 0;
				if (data_0) {
					$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
					$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
					$setOld_entrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no_old'));
				} else {
					orderResultItem.batch_no = '--';
					orderResultItem.entrust_no = '--';
					orderResultItem.old_entrust_no = '--';
				}
				$add(orderResult.mItems, orderResultItem);
			} else {
				if (ferMsg.ordStatus == 56) {
					if (data_0) {
						$setError_info(creditOrder, $getValueByField(data_0, 'error_info'));
						$setError_no(creditOrder, data_0.error_no);
						$setReturn_code(creditOrder, data_0.return_code);
					} else {
						creditOrder.error_info = 'reject open/close/collateral/contractExtension order and no msg.text';
						creditOrder.error_no = -1;
						creditOrder.return_code = -1;
					}
				} else {
					creditOrder.error_no = 0;
					creditOrder.return_code = 0;
					if (data_0) {
						$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
						$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
					} else {
						orderResultItem.batch_no = '--';
						orderResultItem.entrust_no = '--';
					}
					$add(orderResult.mItems, orderResultItem);
				}
			}
			creditOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, clOrderID);
			$invalidate(this$static, creditOrder, 'unknow');
			return;
		}
	}

	function $dealOrderCancelReject(this$static, fixObj) {
		var buf, clOrderID, creditOrder, d, data_0, messages, msg, msg1, orderResult, orderResultItem, parser;
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixOrderCancelReject)) {
			msg = msg1;
			clOrderID = $parseFixParam_0(msg.clOrdID);
			creditOrder = $get_3(this$static.mMapOrder, clOrderID);
			if (!creditOrder) return;
			orderResult = new CreditOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			d = $parseFixParam_0(msg.text_0);
			data_0 = !! this$static.mParser && d != null && d.length > 0 ? this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d))) : null;
			if (data_0) {
				$setError_info(creditOrder, $getValueByField(data_0, 'error_info'));
				$setError_no(creditOrder, data_0.error_no);
				$setError_no(creditOrder, data_0.error_no);
				$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
				$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
				$setOld_entrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no_old'));
			} else {
				creditOrder.error_info = 'reject cancel order and no msg.text';
				creditOrder.error_no = -1;
				creditOrder.error_no = -1;
				orderResultItem.batch_no = '--';
				orderResultItem.entrust_no = '--';
				orderResultItem.old_entrust_no = '--';
			}
			$add(orderResult.mItems, orderResultItem);
			creditOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, clOrderID);
			$invalidate(this$static, creditOrder, 'unknow');
			return;
		}
	}

	function $dealPositionMaintenanceReport(this$static, fixObj) {
		var buf, creditOrder, d, data_0, fpmrMsg, messages, msg, orderResult, orderResultItem, parser, posReqID; !! mLogger && mLogger.debug_0('creditOrderManager deal FixPositionMaintenanceReport!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg = $parse(parser, buf, null);
		if (instanceOf(msg, Q$FixPositionMaintenanceReport)) {
			fpmrMsg = msg;
			posReqID = $parseFixParam_0(fpmrMsg.posReqID);
			creditOrder = $get_3(this$static.mMapOrder, posReqID);
			if (!creditOrder) return;
			orderResult = new CreditOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			$setReturn_code(creditOrder, toInt(fpmrMsg.posMaintStatus));
			d = $parseFixParam_0(fpmrMsg.text_0);
			data_0 = !! this$static.mParser && d != null && d.length > 0 ? this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d))) : null;
			if (toInt(fpmrMsg.posMaintStatus) == 2) {
				if (data_0) {
					$setError_info(creditOrder, $getValueByField(data_0, 'error_info'));
					$setError_no(creditOrder, data_0.error_no);
					$setReturn_code(creditOrder, data_0.return_code);
				} else {
					creditOrder.error_info = 'reject securities transfer and no msg.text';
					creditOrder.error_no = -1;
					creditOrder.return_code = -1;
				}
			} else {
				creditOrder.error_no = 0;
				creditOrder.return_code = 0;
				if (data_0) {
					$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
					$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
				} else {
					orderResultItem.batch_no = '--';
					orderResultItem.entrust_no = '--';
				}
				$add(orderResult.mItems, orderResultItem);
			}
			creditOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, posReqID);
			$invalidate(this$static, creditOrder, 'unknow');
			return;
		}
	}

	function $fundTransferWithContract(this$static, posAmt, positionCurrency, underlyingSecurityIDs) {
		var buf, i_0, identity, nos, obj, order, posAmtBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixPositionMaintenanceRequest_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.posReqID = getBytesUtf8('' + identity);
		nos.posTransType = P5_longLit;
		nos.posMaintAction = P4_longLit;
		nos.positionAmountData.noPosAmt = 1;
		$allocatePositionAmountDatas(nos.positionAmountData, nos.positionAmountData.noPosAmt);
		nos.positionAmountData.group[0].posAmtType = ($clinit_FixMessageInfo$PosAmtType(), VALUE_ADJUSTED_AMOUNT);
		posAmtBytes = getBytesUtf8('' + posAmt);
		nos.positionAmountData.group[0].posAmt = fixFloatValueOf(posAmtBytes, posAmtBytes.length);
		nos.positionAmountData.group[0].positionCurrency = getBytesUtf8(positionCurrency);
		if (underlyingSecurityIDs.length > 0) {
			nos.undInstrmtGrp.noUnderlyings = underlyingSecurityIDs.length;
			$allocateUndInstrmtGrps(nos.undInstrmtGrp, nos.undInstrmtGrp.noUnderlyings);
			for (i_0 = 0; i_0 < nos.undInstrmtGrp.noUnderlyings; i_0++) {
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSecurityID = getBytesUtf8(underlyingSecurityIDs[i_0]);
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSymbol = getBytesUtf8(underlyingSecurityIDs[i_0]);
			}
		}
		buf = allocate(10240);
		$encode_5(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function $parseFixParam_0(param) {
		var i_0, iLen;
		iLen = 0;
		for (i_0 = 0; i_0 < param.length; i_0++) {
			if (param[i_0] == 0) break;
			++iLen;
		}
		return (!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0).buildFromBytes_0(param, 0, iLen);
	}

	function $process_0(this$static, object) {
		var fixObj; !! mLogger && mLogger.debug_0('creditOrderManager onData object!');
		if (instanceOf(object, Q$FixObject)) {
			fixObj = object;
			switch ($getMsgType(fixObj.messages)) {
			case 56:
				$dealExecutionReport(this$static, fixObj);
				break;
			case 16717:
				$dealPositionMaintenanceReport(this$static, fixObj);
				break;
			case 16730:
				$dealCollateralResponse(this$static, fixObj);
				break;
			case 57:
				$dealOrderCancelReject(this$static, fixObj);
			}
		}
	}

	function $securitiesTransferSpecWithContract(this$static, securityID, securityExchange, underlyingSecurityIDs, shortQty) {
		var buf, i_0, identity, nos, obj, order, shortQtyBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixPositionMaintenanceRequest_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.posReqID = getBytesUtf8('' + identity);
		nos.posTransType = P5_longLit;
		nos.posMaintAction = P4_longLit;
		nos.accountType = P2_longLit;
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		if (underlyingSecurityIDs.length > 0) {
			nos.undInstrmtGrp.noUnderlyings = underlyingSecurityIDs.length;
			$allocateUndInstrmtGrps(nos.undInstrmtGrp, nos.undInstrmtGrp.noUnderlyings);
			for (i_0 = 0; i_0 < nos.undInstrmtGrp.noUnderlyings; i_0++) {
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSecurityID = getBytesUtf8(underlyingSecurityIDs[i_0]);
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSymbol = getBytesUtf8(underlyingSecurityIDs[i_0]);
			}
		}
		nos.positionQty.noPositions = 1;
		$allocatePositionQtys(nos.positionQty, nos.positionQty.noPositions);
		nos.positionQty.group[0].posType = ($clinit_FixMessageInfo$PosType(), ADJUSTMENT_QTY);
		shortQtyBytes = getBytesUtf8('' + shortQty);
		nos.positionQty.group[0].shortQty = fixFloatValueOf(shortQtyBytes, shortQtyBytes.length);
		buf = allocate(10240);
		$encode_5(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function $securitiesTransferWithContract(this$static, securityID, securityExchange, underlyingSecurityIDs, shortQty) {
		var buf, i_0, identity, nos, obj, order, shortQtyBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this$static, '' + identity);
		nos = new FixPositionMaintenanceRequest_0;
		nos.senderCompID = this$static.SENDERCOMPID;
		nos.targetCompID = this$static.TARGETCOMPID;
		nos.posReqID = getBytesUtf8('' + identity);
		nos.posTransType = P5_longLit;
		nos.posMaintAction = P4_longLit;
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		if (underlyingSecurityIDs.length > 0) {
			nos.undInstrmtGrp.noUnderlyings = underlyingSecurityIDs.length;
			$allocateUndInstrmtGrps(nos.undInstrmtGrp, nos.undInstrmtGrp.noUnderlyings);
			for (i_0 = 0; i_0 < nos.undInstrmtGrp.noUnderlyings; i_0++) {
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSecurityID = getBytesUtf8(underlyingSecurityIDs[i_0]);
				nos.undInstrmtGrp.group[i_0].underlyingInstrument.underlyingSymbol = getBytesUtf8(underlyingSecurityIDs[i_0]);
			}
		}
		nos.positionQty.noPositions = 1;
		$allocatePositionQtys(nos.positionQty, nos.positionQty.noPositions);
		nos.positionQty.group[0].posType = ($clinit_FixMessageInfo$PosType(), ADJUSTMENT_QTY);
		shortQtyBytes = getBytesUtf8('' + shortQty);
		nos.positionQty.group[0].shortQty = fixFloatValueOf(shortQtyBytes, shortQtyBytes.length);
		buf = allocate(10240);
		$encode_5(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return order;
	}

	function CreditOrderManager_0() {
		TradeManager_0.call(this);
		$$init_0(this);
	}

	function CreditOrderManager_1(clientInfo) {
		TradeManager_0.call(this);
		$$init_0(this);
		clientInfo != null && clientInfo.length > 0 && (this.SENDERCOMPID = getBytesUtf8(clientInfo));
	}

	defineSeed(267, 268, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$CreditOrderManager, Q$TradeManager, Q$Exportable]), CreditOrderManager_0, CreditOrderManager_1);
	_.beginWatch_3 = function beginWatch_10(info, handler) {
		$beginWatchObject(this, info, handler);
	};
	_.cancelentrust_0 = function cancelentrust(origClOrdID, side, securityType, securityExchange) {
		var buf, identity, nos, obj, order;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixOrderCancelRequest_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.origClOrdID = !origClOrdID.length ? getBytesUtf8('0') : getBytesUtf8(origClOrdID);
		nos.clOrdID = getBytesUtf8('' + identity);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.instrument.securityType = getBytesUtf8(securityType);
		!securityExchange.length || (nos.instrument.securityExchange = getBytesUtf8(securityExchange));
		buf = allocateDirect(10240);
		$encode_2(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		log_1('cancelentrust fix object = ' + $toString_0(nos));
		return order;
	};
	_.closeOrder_0 = function closeOrder(securityID, securityExchange, side, orderQty, ordType, price) {
		var buf, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.positionEffect = 67;
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		buf = allocate(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.closeOrderSpecial_0 = function closeOrderSpecial(securityID, securityExchange, side, orderQty, ordType, price) {
		var buf, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.accountType = P2_longLit;
		nos.positionEffect = 67;
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		buf = allocate(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.collateralEntrust_0 = function collateralEntrust(securityID, securityExchange, side, orderQty, ordType, price) {
		var buf, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.accountType = P6_longLit;
		side == 49 && (nos.side = 49);
		side == 50 && (nos.side = 50);
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		buf = allocate(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.createCreditOrder_0 = function createCreditOrder(identity) {
		return $createCreditOrder(this, identity);
	};
	_.endWatch_3 = function endWatch_10(info, handler) {
		$endWatchObject(this, info, handler);
	};
	_.fundTransferWithoutContract_0 = function fundTransferWithoutContract(posAmt, positionCurrency) {
		var buf, identity, nos, obj, order, posAmtBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixPositionMaintenanceRequest_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.posReqID = getBytesUtf8('' + identity);
		nos.posTransType = P5_longLit;
		nos.posMaintAction = P4_longLit;
		nos.positionAmountData.noPosAmt = 1;
		$allocatePositionAmountDatas(nos.positionAmountData, nos.positionAmountData.noPosAmt);
		nos.positionAmountData.group[0].posAmtType = ($clinit_FixMessageInfo$PosAmtType(), VALUE_ADJUSTED_AMOUNT);
		posAmtBytes = getBytesUtf8('' + posAmt);
		nos.positionAmountData.group[0].posAmt = fixFloatValueOf(posAmtBytes, posAmtBytes.length);
		nos.positionAmountData.group[0].positionCurrency = getBytesUtf8(positionCurrency);
		buf = allocate(10240);
		$encode_5(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.getBackendInfo_0 = function getBackendInfo_0() {
		return _String(this.TARGETCOMPID);
	};
	_.getClientInfo_0 = function getClientInfo_1() {
		return _String(this.SENDERCOMPID);
	};
	_.onDomainData_0 = function onDomainData_11(object, source) {
		var e;
		try {
			$process_0(this, object);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				log_1(e.getMessage_0());
				$printStackTrace(e);
			} else throw unwrap($e0);
		}
	};
	_.openOrder_0 = function openOrder(securityID, securityExchange, side, orderQty, ordType, price) {
		var buf, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.positionEffect = 79;
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		buf = allocate(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.openOrderSpecial_0 = function openOrderSpecial(securityID, securityExchange, side, orderQty, ordType, price) {
		var buf, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.clOrdID = getBytesUtf8('' + identity);
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.accountType = P2_longLit;
		nos.positionEffect = 79;
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		buf = allocate(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.securitiesTransferSpecWithoutContract_0 = function securitiesTransferSpecWithoutContract(securityID, securityExchange, shortQty) {
		var buf, identity, nos, obj, order, shortQtyBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixPositionMaintenanceRequest_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.posReqID = getBytesUtf8('' + identity);
		nos.posTransType = P5_longLit;
		nos.posMaintAction = P4_longLit;
		nos.accountType = P2_longLit;
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		nos.positionQty.noPositions = 1;
		$allocatePositionQtys(nos.positionQty, nos.positionQty.noPositions);
		nos.positionQty.group[0].posType = ($clinit_FixMessageInfo$PosType(), ADJUSTMENT_QTY);
		shortQtyBytes = getBytesUtf8('' + shortQty);
		nos.positionQty.group[0].shortQty = fixFloatValueOf(shortQtyBytes, shortQtyBytes.length);
		buf = allocate(10240);
		$encode_5(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.securitiesTransferWithoutContract_0 = function securitiesTransferWithoutContract(securityID, securityExchange, shortQty) {
		var buf, identity, nos, obj, order, shortQtyBytes;
		identity = mIDGen.generatorID_0();
		order = $createCreditOrder(this, '' + identity);
		nos = new FixPositionMaintenanceRequest_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.posReqID = getBytesUtf8('' + identity);
		nos.posTransType = P5_longLit;
		nos.posMaintAction = P4_longLit;
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		nos.positionQty.noPositions = 1;
		$allocatePositionQtys(nos.positionQty, nos.positionQty.noPositions);
		nos.positionQty.group[0].posType = ($clinit_FixMessageInfo$PosType(), ADJUSTMENT_QTY);
		shortQtyBytes = getBytesUtf8('' + shortQty);
		nos.positionQty.group[0].shortQty = fixFloatValueOf(shortQtyBytes, shortQtyBytes.length);
		buf = allocate(10240);
		$encode_5(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.setBackendInfo_0 = function setBackendInfo_0(targetCompID) {
		targetCompID != null && targetCompID.length > 0 && (this.TARGETCOMPID = getBytesUtf8(targetCompID));
	};
	_.setClientInfo_0 = function setClientInfo_0(senderCompID) {
		senderCompID != null && senderCompID.length > 0 && (this.SENDERCOMPID = getBytesUtf8(senderCompID));
	};

	function $export_126(this$static) {
		if (!exported_126) {
			exported_126 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_CreditOrderManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Order_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new Account_ExporterImpl_0;
			$export0_126(this$static);
		}
	}

	function $export0_126(this$static) {
		var pkg = declarePackage('hippo.trade.CreditOrderManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.CreditOrderManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 ? (g = new CreditOrderManager_0) : a.length == 1 && (g = new CreditOrderManager_1(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.CreditOrderManager.prototype = new Object;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.cancelentrust = $entry(function(a0, a1, a2, a3) {
			return wrap_0(this.g.cancelentrust_0(a0, a1, a2, a3));
		});
		__0.closeOrder = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.closeOrder_0(a0, a1, a2, a3, a4, a5));
		});
		__0.closeOrderSpecial = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.closeOrderSpecial_0(a0, a1, a2, a3, a4, a5));
		});
		__0.closeOrderSpecialWithContract = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(__static_wrapper_closeOrderSpecialWithContract(this.g, a0, a1, a2, a3, a4, a5, a6));
		});
		__0.closeOrderWithContract = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(__static_wrapper_closeOrderWithContract(this.g, a0, a1, a2, a3, a4, a5, a6));
		});
		__0.collateralEntrust = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.collateralEntrust_0(a0, a1, a2, a3, a4, a5));
		});
		__0.collateralTransfer = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(__static_wrapper_collateralTransfer(this.g, a0, a1, a2, a3, a4, a5, a6));
		});
		__0.contractExtension = $entry(function(a0) {
			return wrap_0(__static_wrapper_contractExtension(this.g, a0));
		});
		__0.createCreditOrder = $entry(function(a0) {
			return wrap_0(this.g.createCreditOrder_0(a0));
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.fundTransferWithContract = $entry(function(a0, a1, a2) {
			return wrap_0(__static_wrapper_fundTransferWithContract(this.g, a0, a1, a2));
		});
		__0.fundTransferWithoutContract = $entry(function(a0, a1) {
			return wrap_0(this.g.fundTransferWithoutContract_0(a0, a1));
		});
		__0.getBackendInfo = $entry(function() {
			return this.g.getBackendInfo_0();
		});
		__0.getClientInfo = $entry(function() {
			return this.g.getClientInfo_0();
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_order_CreditOrderManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.openOrder = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.openOrder_0(a0, a1, a2, a3, a4, a5));
		});
		__0.openOrderSpecial = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.openOrderSpecial_0(a0, a1, a2, a3, a4, a5));
		});
		__0.securitiesTransferSpecWithContract = $entry(function(a0, a1, a2, a3) {
			return wrap_0(__static_wrapper_securitiesTransferSpecWithContract(this.g, a0, a1, a2, a3));
		});
		__0.securitiesTransferSpecWithoutContract = $entry(function(a0, a1, a2) {
			return wrap_0(this.g.securitiesTransferSpecWithoutContract_0(a0, a1, a2));
		});
		__0.securitiesTransferWithContract = $entry(function(a0, a1, a2, a3) {
			return wrap_0(__static_wrapper_securitiesTransferWithContract(this.g, a0, a1, a2, a3));
		});
		__0.securitiesTransferWithoutContract = $entry(function(a0, a1, a2) {
			return wrap_0(this.g.securitiesTransferWithoutContract_0(a0, a1, a2));
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setBackendInfo = $entry(function(a0) {
			this.g.setBackendInfo_0(a0);
		});
		__0.setClientInfo = $entry(function(a0) {
			this.g.setClientInfo_0(a0);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_order_CreditOrderManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.CreditOrderManager[p] === undefined && ($wnd.hippo.trade.CreditOrderManager[p] = pkg[p]);
	}

	function CreditOrderManager_ExporterImpl_0() {
		$export_126(this);
	}

	function __static_wrapper_closeOrderSpecialWithContract(instance, a0, a1, a2, a3, a4, a5, a6) {
		return $closeOrderSpecialWithContract(instance, a0, a1, a2, a3, a4, a5, ($clinit_ExporterUtil(), $toArrString(a6)));
	}

	function __static_wrapper_closeOrderWithContract(instance, a0, a1, a2, a3, a4, a5, a6) {
		return $closeOrderWithContract(instance, a0, a1, a2, a3, a4, a5, ($clinit_ExporterUtil(), $toArrString(a6)));
	}

	function __static_wrapper_collateralTransfer(instance, a0, a1, a2, a3, a4, a5, a6) {
		return $collateralTransfer(instance, fromDouble(a0), fromDouble(a1), a2, a3, a4, a5, a6);
	}

	function __static_wrapper_contractExtension(instance, a0) {
		return $contractExtension(instance, ($clinit_ExporterUtil(), $toArrString(a0)));
	}

	function __static_wrapper_fundTransferWithContract(instance, a0, a1, a2) {
		return $fundTransferWithContract(instance, a0, a1, ($clinit_ExporterUtil(), $toArrString(a2)));
	}

	function __static_wrapper_securitiesTransferSpecWithContract(instance, a0, a1, a2, a3) {
		return $securitiesTransferSpecWithContract(instance, a0, a1, ($clinit_ExporterUtil(), $toArrString(a2)), a3);
	}

	function __static_wrapper_securitiesTransferWithContract(instance, a0, a1, a2, a3) {
		return $securitiesTransferWithContract(instance, a0, a1, ($clinit_ExporterUtil(), $toArrString(a2)), a3);
	}

	defineSeed(269, 1, {}, CreditOrderManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_126() {
		return $wnd.hippo.trade.CreditOrderManager;
	};
	_.isAssignable = function isAssignable_126(o) {
		return o != null && instanceOf(o, Q$CreditOrderManager);
	};
	var exported_126 = false;

	function $putItems_8(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$add(this$static.mItems, item_0);
		}
	}

	function CreditOrderResult_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(270, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$CreditOrderResult, Q$OrderResult, Q$Exportable]), CreditOrderResult_0);
	_.getAllItems_9 = function getAllItems_8() {
		return $toArray_1(this.mItems, initDim(_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, makeCastMap([Q$Serializable]), Q$OrderResultItem, 0, 0));
	};
	_.getModule_0 = function getModule_4() {
		return 't2';
	};
	_.putItem_9 = function putItem_8(item_0) {
		$add(this.mItems, item_0);
	};

	function $export_127(this$static) {
		if (!exported_127) {
			exported_127 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_CreditOrderResult_2_classLit, this$static);
			new OrderResultItem_ExporterImpl_0;
			$export0_127(this$static);
		}
	}

	function $export0_127(this$static) {
		var pkg = declarePackage('hippo.trade.CreditOrderResult');
		var __0, __ = this$static;
		$wnd.hippo.trade.CreditOrderResult = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CreditOrderResult_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.CreditOrderResult.prototype = new Object;
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_9());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_9(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_9(this.g, a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.CreditOrderResult[p] === undefined && ($wnd.hippo.trade.CreditOrderResult[p] = pkg[p]);
	}

	function CreditOrderResult_ExporterImpl_0() {
		$export_127(this);
	}

	function __static_wrapper_putItems_9(instance, a0) {
		$putItems_8(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, makeCastMap([Q$Serializable]), Q$OrderResultItem, a0.length, 0))));
	}

	defineSeed(271, 1, {}, CreditOrderResult_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_127() {
		return $wnd.hippo.trade.CreditOrderResult;
	};
	_.isAssignable = function isAssignable_127(o) {
		return o != null && instanceOf(o, Q$CreditOrderResult);
	};
	var exported_127 = false;

	function $export_128(this$static) {
		if (!exported_128) {
			exported_128 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_CreditOrder_2_classLit, this$static);
			new OrderItem_ExporterImpl_0;
			new OrderResult_ExporterImpl_0;
			$export0_128(this$static);
		}
	}

	function $export0_128(this$static) {
		var pkg = declarePackage('hippo.trade.CreditOrder');
		var __0, __ = this$static;
		$wnd.hippo.trade.CreditOrder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new CreditOrder_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.CreditOrder.prototype = new Object;
		__0.getAllOrderItem = $entry(function() {
			return wrap_2(this.g.getAllOrderItem_0());
		});
		__0.getAllOrderResult = $entry(function() {
			return wrap_2(this.g.getAllOrderResult_0());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getOrderItem = $entry(function(a0) {
			return wrap_0(this.g.getOrderItem_0(a0));
		});
		__0.getOrderResult = $entry(function(a0) {
			return wrap_0(this.g.getOrderResult_0(a0));
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putOrderItem = $entry(function(a0) {
			this.g.putOrderItem_0(a0 == null ? null : a0.g);
		});
		__0.putOrderResult = $entry(function(a0) {
			this.g.putOrderResult_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.CreditOrder[p] === undefined && ($wnd.hippo.trade.CreditOrder[p] = pkg[p]);
	}

	function CreditOrder_ExporterImpl_0() {
		$export_128(this);
	}

	defineSeed(272, 1, {}, CreditOrder_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_128() {
		return $wnd.hippo.trade.CreditOrder;
	};
	_.isAssignable = function isAssignable_128(o) {
		return o != null && instanceOf(o, Q$CreditOrder);
	};
	var exported_128 = false;

	function FundOrder_0() {}

	defineSeed(273, 28, makeCastMap([Q$DomainObject, Q$FundOrder, Q$Order, Q$Exportable]), FundOrder_0);
	_.getAllOrderItem_0 = function getAllOrderItem_0() {
		return null;
	};
	_.getAllOrderResult_0 = function getAllOrderResult_0() {
		return null;
	};
	_.getOrderItem_0 = function getOrderItem_0(idx) {
		return null;
	};
	_.getOrderResult_0 = function getOrderResult_0(idx) {
		return null;
	};
	_.putOrderItem_0 = function putOrderItem_0(item_0) {};
	_.putOrderResult_0 = function putOrderResult_0(item_0) {};

	function FundOrderItem_0() {}

	defineSeed(274, 265, makeCastMap([Q$DomainObject, Q$FundOrderItem, Q$OrderItem, Q$Exportable]), FundOrderItem_0);

	function $export_129(this$static) {
		if (!exported_129) {
			exported_129 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_FundOrderItem_2_classLit, this$static);
			$export0_129(this$static);
		}
	}

	function $export0_129(this$static) {
		var pkg = declarePackage('hippo.trade.FundOrderItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.FundOrderItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FundOrderItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.FundOrderItem.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.FundOrderItem[p] === undefined && ($wnd.hippo.trade.FundOrderItem[p] = pkg[p]);
	}

	function FundOrderItem_ExporterImpl_0() {
		$export_129(this);
	}

	defineSeed(275, 1, {}, FundOrderItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_129() {
		return $wnd.hippo.trade.FundOrderItem;
	};
	_.isAssignable = function isAssignable_129(o) {
		return o != null && instanceOf(o, Q$FundOrderItem);
	};
	var exported_129 = false;

	function FundOrderManager_0() {
		TradeManager_0.call(this);
	}

	defineSeed(276, 268, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$FundOrderManager, Q$TradeManager, Q$Exportable]), FundOrderManager_0);
	_.createStockOrder_0 = function createStockOrder(identity) {
		return null;
	};
	_.entrust_0 = function entrust(req) {
		return null;
	};

	function $export_130(this$static) {
		if (!exported_130) {
			exported_130 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_FundOrderManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Order_ExporterImpl_0;
			new TradeRequest_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new Account_ExporterImpl_0;
			$export0_130(this$static);
		}
	}

	function $export0_130(this$static) {
		var pkg = declarePackage('hippo.trade.FundOrderManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.FundOrderManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FundOrderManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.FundOrderManager.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.createStockOrder = $entry(function(a0) {
			return wrap_0(this.g.createStockOrder_0(a0));
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.entrust = $entry(function(a0) {
			return wrap_0(this.g.entrust_0(a0 == null ? null : a0.g));
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_order_FundOrderManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_order_FundOrderManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.FundOrderManager[p] === undefined && ($wnd.hippo.trade.FundOrderManager[p] = pkg[p]);
	}

	function FundOrderManager_ExporterImpl_0() {
		$export_130(this);
	}

	defineSeed(277, 1, {}, FundOrderManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_130() {
		return $wnd.hippo.trade.FundOrderManager;
	};
	_.isAssignable = function isAssignable_130(o) {
		return o != null && instanceOf(o, Q$FundOrderManager);
	};
	var exported_130 = false;

	function FundOrderResult_0() {}

	defineSeed(278, 28, makeCastMap([Q$DomainObject, Q$FundOrderResult, Q$OrderResult, Q$Exportable]), FundOrderResult_0);

	function $export_131(this$static) {
		if (!exported_131) {
			exported_131 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_FundOrderResult_2_classLit, this$static);
			$export0_131(this$static);
		}
	}

	function $export0_131(this$static) {
		var pkg = declarePackage('hippo.trade.FundOrderResult');
		var __0, __ = this$static;
		$wnd.hippo.trade.FundOrderResult = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FundOrderResult_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.FundOrderResult.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.FundOrderResult[p] === undefined && ($wnd.hippo.trade.FundOrderResult[p] = pkg[p]);
	}

	function FundOrderResult_ExporterImpl_0() {
		$export_131(this);
	}

	defineSeed(279, 1, {}, FundOrderResult_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_131() {
		return $wnd.hippo.trade.FundOrderResult;
	};
	_.isAssignable = function isAssignable_131(o) {
		return o != null && instanceOf(o, Q$FundOrderResult);
	};
	var exported_131 = false;

	function $export_132(this$static) {
		if (!exported_132) {
			exported_132 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_FundOrder_2_classLit, this$static);
			new OrderItem_ExporterImpl_0;
			new OrderResult_ExporterImpl_0;
			$export0_132(this$static);
		}
	}

	function $export0_132(this$static) {
		var pkg = declarePackage('hippo.trade.FundOrder');
		var __0, __ = this$static;
		$wnd.hippo.trade.FundOrder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FundOrder_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.FundOrder.prototype = new Object;
		__0.getAllOrderItem = $entry(function() {
			return wrap_2(this.g.getAllOrderItem_0());
		});
		__0.getAllOrderResult = $entry(function() {
			return wrap_2(this.g.getAllOrderResult_0());
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getOrderItem = $entry(function(a0) {
			return wrap_0(this.g.getOrderItem_0(a0));
		});
		__0.getOrderResult = $entry(function(a0) {
			return wrap_0(this.g.getOrderResult_0(a0));
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putOrderItem = $entry(function(a0) {
			this.g.putOrderItem_0(a0 == null ? null : a0.g);
		});
		__0.putOrderResult = $entry(function(a0) {
			this.g.putOrderResult_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.FundOrder[p] === undefined && ($wnd.hippo.trade.FundOrder[p] = pkg[p]);
	}

	function FundOrder_ExporterImpl_0() {
		$export_132(this);
	}

	defineSeed(280, 1, {}, FundOrder_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_132() {
		return $wnd.hippo.trade.FundOrder;
	};
	_.isAssignable = function isAssignable_132(o) {
		return o != null && instanceOf(o, Q$FundOrder);
	};
	var exported_132 = false;

	function $export_133(this$static) {
		if (!exported_133) {
			exported_133 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_OrderItem_2_classLit, this$static);
			$export0_133(this$static);
		}
	}

	function $export0_133(this$static) {
		var pkg = declarePackage('hippo.trade.OrderItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.OrderItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new OrderItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.OrderItem.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.OrderItem[p] === undefined && ($wnd.hippo.trade.OrderItem[p] = pkg[p]);
	}

	function OrderItem_ExporterImpl_0() {
		$export_133(this);
	}

	defineSeed(281, 1, {}, OrderItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_133() {
		return $wnd.hippo.trade.OrderItem;
	};
	_.isAssignable = function isAssignable_133(o) {
		return o != null && instanceOf(o, Q$OrderItem);
	};
	var exported_133 = false;

	function $setBatch_no(this$static, batch_no) {
		this$static.batch_no = batch_no;
	}

	function $setEntrust_no(this$static, entrust_no) {
		this$static.entrust_no = entrust_no;
	}

	function $setOld_entrust_no(this$static, old_entrust_no) {
		this$static.old_entrust_no = old_entrust_no;
	}

	function OrderResultItem_0() {}

	defineSeed(282, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$OrderResultItem, Q$Exportable]), OrderResultItem_0);
	_.getBatch_no_0 = function getBatch_no() {
		return this.batch_no;
	};
	_.getEntrust_no_0 = function getEntrust_no() {
		return this.entrust_no;
	};
	_.getOld_entrust_no_0 = function getOld_entrust_no() {
		return this.old_entrust_no;
	};
	_.setBatch_no_0 = function setBatch_no(batch_no) {
		$setBatch_no(this, batch_no);
	};
	_.setEntrust_no_0 = function setEntrust_no(entrust_no) {
		$setEntrust_no(this, entrust_no);
	};
	_.setOld_entrust_no_0 = function setOld_entrust_no(old_entrust_no) {
		$setOld_entrust_no(this, old_entrust_no);
	};

	function $export_134(this$static) {
		if (!exported_134) {
			exported_134 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, this$static);
			$export0_134(this$static);
		}
	}

	function $export0_134(this$static) {
		var pkg = declarePackage('hippo.trade.OrderResultItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.OrderResultItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new OrderResultItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.OrderResultItem.prototype = new Object;
		__0.getBatch_no = $entry(function() {
			return this.g.getBatch_no_0();
		});
		__0.getEntrust_no = $entry(function() {
			return this.g.getEntrust_no_0();
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getOld_entrust_no = $entry(function() {
			return this.g.getOld_entrust_no_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setBatch_no = $entry(function(a0) {
			this.g.setBatch_no_0(a0);
		});
		__0.setEntrust_no = $entry(function(a0) {
			this.g.setEntrust_no_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setOld_entrust_no = $entry(function(a0) {
			this.g.setOld_entrust_no_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.OrderResultItem[p] === undefined && ($wnd.hippo.trade.OrderResultItem[p] = pkg[p]);
	}

	function OrderResultItem_ExporterImpl_0() {
		$export_134(this);
	}

	defineSeed(283, 1, {}, OrderResultItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_134() {
		return $wnd.hippo.trade.OrderResultItem;
	};
	_.isAssignable = function isAssignable_134(o) {
		return o != null && instanceOf(o, Q$OrderResultItem);
	};
	var exported_134 = false;

	function $export_135(this$static) {
		if (!exported_135) {
			exported_135 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_OrderResult_2_classLit, this$static);
			$export0_135(this$static);
		}
	}

	function $export0_135(this$static) {
		var pkg = declarePackage('com.gf.hippo.domain.trade.order.OrderResult');
		var __0, __ = this$static;
		$wnd.com.gf.hippo.domain.trade.order.OrderResult = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.com.gf.hippo.domain.trade.order.OrderResult.prototype = new Object;
		if (pkg) for (p in pkg)
		$wnd.com.gf.hippo.domain.trade.order.OrderResult[p] === undefined && ($wnd.com.gf.hippo.domain.trade.order.OrderResult[p] = pkg[p]);
	}

	function OrderResult_ExporterImpl_0() {
		$export_135(this);
	}

	defineSeed(284, 1, {}, OrderResult_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_135() {
		return $wnd.com.gf.hippo.domain.trade.order.OrderResult;
	};
	_.isAssignable = function isAssignable_135(o) {
		return o != null && instanceOf(o, Q$OrderResult);
	};
	var exported_135 = false;

	function $export_136(this$static) {
		if (!exported_136) {
			exported_136 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_Order_2_classLit, this$static);
			$export0_136(this$static);
		}
	}

	function $export0_136(this$static) {
		var pkg = declarePackage('com.gf.hippo.domain.trade.order.Order');
		var __0, __ = this$static;
		$wnd.com.gf.hippo.domain.trade.order.Order = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) && (g = a[0]);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.com.gf.hippo.domain.trade.order.Order.prototype = new Object;
		if (pkg) for (p in pkg)
		$wnd.com.gf.hippo.domain.trade.order.Order[p] === undefined && ($wnd.com.gf.hippo.domain.trade.order.Order[p] = pkg[p]);
	}

	function Order_ExporterImpl_0() {
		$export_136(this);
	}

	defineSeed(285, 1, {}, Order_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_136() {
		return $wnd.com.gf.hippo.domain.trade.order.Order;
	};
	_.isAssignable = function isAssignable_136(o) {
		return o != null && instanceOf(o, Q$Order);
	};
	var exported_136 = false;

	function StockOrder_0() {}

	defineSeed(286, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$Order, Q$StockOrder, Q$Exportable]), StockOrder_0);
	_.getAllOrderItem_0 = function getAllOrderItem_1() {
		return null;
	};
	_.getAllOrderResult_0 = function getAllOrderResult_1() {
		return null;
	};
	_.getOrderItem_0 = function getOrderItem_1(idx) {
		return null;
	};
	_.getOrderResult_0 = function getOrderResult_1(idx) {
		return this.orderResult;
	};
	_.putOrderItem_0 = function putOrderItem_1(item_0) {};
	_.putOrderResult_0 = function putOrderResult_1(item_0) {
		this.orderResult = item_0;
	};

	function $setAccount_0(this$static, account) {
		this$static.account = account;
	}

	function StockOrderItem_0() {}

	defineSeed(287, 265, makeCastMap([Q$DomainObject, Q$OrderItem, Q$StockOrderItem, Q$Exportable]), StockOrderItem_0);
	_.getAccount_1 = function getAccount_1() {
		return this.account;
	};
	_.getStock_2 = function getStock_2() {
		return this.stock;
	};
	_.setAccount_0 = function setAccount_1(account) {
		$setAccount_0(this, account);
	};
	_.setStock_0 = function setStock_0(stock) {
		this.stock = stock;
	};

	function $export_137(this$static) {
		if (!exported_137) {
			exported_137 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_StockOrderItem_2_classLit, this$static);
			new Account_ExporterImpl_0;
			new Stock_ExporterImpl_0;
			$export0_137(this$static);
		}
	}

	function $export0_137(this$static) {
		var pkg = declarePackage('hippo.trade.StockOrderItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.StockOrderItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockOrderItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.StockOrderItem.prototype = new Object;
		__0.getAccount = $entry(function() {
			return wrap_0(this.g.getAccount_1());
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getStock = $entry(function() {
			return wrap_0(this.g.getStock_2());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setStock = $entry(function(a0) {
			this.g.setStock_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.StockOrderItem[p] === undefined && ($wnd.hippo.trade.StockOrderItem[p] = pkg[p]);
	}

	function StockOrderItem_ExporterImpl_0() {
		$export_137(this);
	}

	defineSeed(288, 1, {}, StockOrderItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_137() {
		return $wnd.hippo.trade.StockOrderItem;
	};
	_.isAssignable = function isAssignable_137(o) {
		return o != null && instanceOf(o, Q$StockOrderItem);
	};
	var exported_137 = false;

	function $$init_1(this$static) {
		this$static.mMapOrder = new TreeMap_0;
		this$static.SENDERCOMPID = getBytesUtf8('APPNAME.APPVERSION.DOMAINVERSION');
		this$static.TARGETCOMPID = getBytesUtf8('FIX.5.0SP2');
	}

	function $createStockOrder(this$static, identity) {
		var oi;
		this$static.order_0 = new StockOrder_0;
		oi = new StockOrderItem_0;
		$setAccount_0(oi, this$static.account);
		$setIdentity(this$static.order_0, identity);
		$put_2(this$static.mMapOrder, identity, this$static.order_0);
		return this$static.order_0;
	}

	function $dealExecutionReport_0(this$static, fixObj) {
		var buf, clOrderID, d, data_0, messages, msg, msg1, orderResult, orderResultItem, parser, stockOrder;
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixExecutionReport)) {
			msg = msg1;
			clOrderID = $parseFixParam_1(msg.clOrdID);
			stockOrder = $get_3(this$static.mMapOrder, clOrderID);
			if (!stockOrder) return;
			orderResult = new StockOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			d = $parseFixParam_1(msg.text_0);
			data_0 = !! this$static.mParser && d != null && d.length > 0 ? this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d))) : null;
			$clinit_FixUtils();
			if (msg.origClOrdID[0] != 0) {
				stockOrder.return_code = 0;
				stockOrder.error_no = 0;
				if (data_0) {
					$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
					$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
					$setOld_entrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no_old'));
				} else {
					orderResultItem.batch_no = '--';
					orderResultItem.entrust_no = '--';
					orderResultItem.old_entrust_no = '--';
				}
				$add(orderResult.mItems, orderResultItem);
			} else {
				if (msg.ordStatus == 56) {
					if (data_0) {
						$setError_info(stockOrder, $getValueByField(data_0, 'error_info'));
						$setError_no(stockOrder, data_0.error_no);
						$setReturn_code(stockOrder, data_0.return_code);
					} else {
						stockOrder.error_info = 'reject entrust order and no msg.text';
						stockOrder.error_no = -1;
						stockOrder.return_code = -1;
					}
				} else {
					stockOrder.error_no = 0;
					stockOrder.return_code = 0;
					if (data_0) {
						$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
						$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
					} else {
						orderResultItem.batch_no = '--';
						orderResultItem.entrust_no = '--';
					}
					$add(orderResult.mItems, orderResultItem);
				}
			}
			stockOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, clOrderID);
			$invalidate(this$static, stockOrder, 'unknow');
			return;
		}
	}

	function $dealOrderCancelReject_0(this$static, fixObj) {
		var buf, clOrderID, d, data_0, messages, msg, msg1, orderResult, orderResultItem, parser, stockOrder;
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixOrderCancelReject)) {
			msg = msg1;
			clOrderID = $parseFixParam_1(msg.clOrdID);
			stockOrder = $get_3(this$static.mMapOrder, clOrderID);
			if (!stockOrder) return;
			orderResult = new StockOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			d = $parseFixParam_1(msg.text_0);
			data_0 = !! this$static.mParser && d != null && d.length > 0 ? this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d))) : null;
			if (data_0) {
				$setError_info(stockOrder, $getValueByField(data_0, 'error_info'));
				$setError_no(stockOrder, data_0.error_no);
				$setError_no(stockOrder, data_0.error_no);
				$setBatch_no(orderResultItem, $getValueByField(data_0, 'batch_no'));
				$setEntrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no'));
				$setOld_entrust_no(orderResultItem, $getValueByField(data_0, 'entrust_no_old'));
			} else {
				stockOrder.error_info = 'reject cancel order and no msg.text';
				stockOrder.error_no = -1;
				stockOrder.error_no = -1;
				orderResultItem.batch_no = '--';
				orderResultItem.entrust_no = '--';
				orderResultItem.old_entrust_no = '--';
			}
			$add(orderResult.mItems, orderResultItem);
			stockOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, clOrderID);
			$invalidate(this$static, stockOrder, 'unknow');
		}
	}

	function $parseFixParam_1(param) {
		var i_0, iLen;
		iLen = 0;
		for (i_0 = 0; i_0 < param.length; i_0++) {
			if (param[i_0] == 0) break;
			++iLen;
		}
		return (!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0).buildFromBytes_0(param, 0, iLen);
	}

	function $process_1(this$static, object) {
		var fixObj; !! mLogger && mLogger.debug_0('stockOrderManager onData object!');
		if (instanceOf(object, Q$FixObject)) {
			fixObj = object;
			switch ($getMsgType(fixObj.messages)) {
			case 56:
				$dealExecutionReport_0(this$static, fixObj);
				break;
			case 57:
				$dealOrderCancelReject_0(this$static, fixObj);
			}
		}
	}

	function StockOrderManager_0() {
		TradeManager_0.call(this);
		$$init_1(this);
	}

	function StockOrderManager_1(clientInfo) {
		TradeManager_0.call(this);
		$$init_1(this);
		clientInfo != null && clientInfo.length > 0 && (this.SENDERCOMPID = getBytesUtf8(clientInfo));
	}

	defineSeed(289, 268, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$StockOrderManager, Q$TradeManager, Q$Exportable]), StockOrderManager_0, StockOrderManager_1);
	_.bankTransfer_0 = function bankTransfer(posAmt, posAmtType, positionCurrency, password) {
		var buf, identity, obj, order, pmr, posAmtBytes;
		identity = mIDGen.generatorID_0();
		order = $createStockOrder(this, '' + identity);
		pmr = new FixPositionMaintenanceRequest_0;
		pmr.senderCompID = this.SENDERCOMPID;
		pmr.targetCompID = this.TARGETCOMPID;
		pmr.posReqID = getBytesUtf8('' + identity);
		pmr.posTransType = P1_longLit;
		pmr.posMaintAction = P1_longLit;
		pmr.positionAmountData.noPosAmt = 1;
		$allocatePositionAmountDatas(pmr.positionAmountData, pmr.positionAmountData.noPosAmt);
		pmr.positionAmountData.group[0].posAmtType = getBytesUtf8(posAmtType);
		posAmtBytes = getBytesUtf8('' + posAmt);
		pmr.positionAmountData.group[0].posAmt = fixFloatValueOf(posAmtBytes, posAmtBytes.length);
		pmr.positionAmountData.group[0].positionCurrency = getBytesUtf8(positionCurrency);
		pmr.parties.noPartyIDs = 1;
		$allocateParties(pmr.parties, pmr.parties.noPartyIDs);
		pmr.parties.group[0].partyID = getBytesUtf8(password);
		buf = allocate(10240);
		$encode_5(pmr, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.beginWatch_3 = function beginWatch_11(info, handler) {
		$beginWatchObject(this, info, handler);
	};
	_.cancelentrust_0 = function cancelentrust_0(origClOrdID, side, securityType, securityExchange) {
		var buf, identity, nos, obj, order;
		identity = mIDGen.generatorID_0();
		order = $createStockOrder(this, '' + identity);
		nos = new FixOrderCancelRequest_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.origClOrdID = !origClOrdID.length ? getBytesUtf8('0') : getBytesUtf8(origClOrdID);
		nos.clOrdID = getBytesUtf8('' + identity);
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.instrument.securityType = getBytesUtf8(securityType);
		!securityExchange.length || (nos.instrument.securityExchange = getBytesUtf8(securityExchange));
		buf = allocateDirect(10240);
		$encode_2(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		log_1('cancelentrust fix object = ' + $toString_0(nos));
		return order;
	};
	_.createStockOrder_0 = function createStockOrder_0(identity) {
		return $createStockOrder(this, identity);
	};
	_.endWatch_3 = function endWatch_11(info, handler) {
		$endWatchObject(this, info, handler);
	};
	_.getBackendInfo_0 = function getBackendInfo_1() {
		return _String(this.TARGETCOMPID);
	};
	_.getClientInfo_0 = function getClientInfo_2() {
		return _String(this.SENDERCOMPID);
	};
	_.onDomainData_0 = function onDomainData_12(object, source) {
		var e;
		try {
			$process_1(this, object);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				$printStackTrace(e);
			} else throw unwrap($e0);
		}
	};
	_.order_1 = function order_0(securityID, securityIDSource, securityType, securityExchange, securityGroup, side, transactTime, orderQty, ordType, price, currency) {
		var buf, identity, nos, obj, order, orderQtyBytes, priceBytes;
		identity = mIDGen.generatorID_0();
		order = $createStockOrder(this, '' + identity);
		nos = new FixNewOrderSingle_0;
		nos.senderCompID = this.SENDERCOMPID;
		nos.targetCompID = this.TARGETCOMPID;
		nos.msgSeqNum = fromInt(identity);
		nos.clOrdID = getBytesUtf8('' + identity);
		!securityType.length || (nos.instrument.securityType = getBytesUtf8(securityType));
		nos.instrument.securityID = getBytesUtf8(securityID);
		nos.instrument.securityIDSource = getBytesUtf8(securityIDSource);
		nos.instrument.securityExchange = getBytesUtf8(securityExchange);
		!securityGroup.length || (nos.instrument.securityGroup = getBytesUtf8(securityGroup));
		side == 49 ? (nos.side = 49) : side == 50 && (nos.side = 50);
		nos.transactTime = getBytesUtf8(transactTime);
		orderQtyBytes = getBytesUtf8('' + orderQty);
		nos.orderQtyData.orderQty = fixFloatValueOf(orderQtyBytes, orderQtyBytes.length);
		ordType == 48 ? (nos.ordType = 49) : ordType == 81 ? (nos.ordType = 81) : ordType == 82 ? (nos.ordType = 75) : ordType == 83 ? (nos.ordType = 55) : ordType == 84 ? (nos.ordType = 56) : ordType == 85 ? (nos.ordType = 74) : ordType == 86 && (nos.ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		nos.price = fixFloatValueOf(priceBytes, priceBytes.length);
		!currency.length || (nos.currency = getBytesUtf8(currency));
		buf = allocateDirect(10240);
		$encode_1(nos, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.setBackendInfo_0 = function setBackendInfo_1(targetCompID) {
		targetCompID != null && targetCompID.length > 0 && (this.TARGETCOMPID = getBytesUtf8(targetCompID));
	};
	_.setClientInfo_0 = function setClientInfo_1(senderCompID) {
		senderCompID != null && senderCompID.length > 0 && (this.SENDERCOMPID = getBytesUtf8(senderCompID));
	};

	function $export_138(this$static) {
		if (!exported_138) {
			exported_138 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_StockOrderManager_2_classLit, this$static);
			new Order_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new Account_ExporterImpl_0;
			$export0_138(this$static);
		}
	}

	function $export0_138(this$static) {
		var pkg = declarePackage('hippo.trade.StockOrderManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.StockOrderManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 ? (g = new StockOrderManager_0) : a.length == 1 && (g = new StockOrderManager_1(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.StockOrderManager.prototype = new Object;
		__0.bankTransfer = $entry(function(a0, a1, a2, a3) {
			return wrap_0(this.g.bankTransfer_0(a0, a1, a2, a3));
		});
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.cancelentrust = $entry(function(a0, a1, a2, a3) {
			return wrap_0(this.g.cancelentrust_0(a0, a1, a2, a3));
		});
		__0.createStockOrder = $entry(function(a0) {
			return wrap_0(this.g.createStockOrder_0(a0));
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getBackendInfo = $entry(function() {
			return this.g.getBackendInfo_0();
		});
		__0.getClientInfo = $entry(function() {
			return this.g.getClientInfo_0();
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_order_StockOrderManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.order = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
			return wrap_0(this.g.order_1(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10));
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setBackendInfo = $entry(function(a0) {
			this.g.setBackendInfo_0(a0);
		});
		__0.setClientInfo = $entry(function(a0) {
			this.g.setClientInfo_0(a0);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_order_StockOrderManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.StockOrderManager[p] === undefined && ($wnd.hippo.trade.StockOrderManager[p] = pkg[p]);
	}

	function StockOrderManager_ExporterImpl_0() {
		$export_138(this);
	}

	defineSeed(290, 1, {}, StockOrderManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_138() {
		return $wnd.hippo.trade.StockOrderManager;
	};
	_.isAssignable = function isAssignable_138(o) {
		return o != null && instanceOf(o, Q$StockOrderManager);
	};
	var exported_138 = false;

	function $putItems_9(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$add(this$static.mItems, item_0);
		}
	}

	function StockOrderResult_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(291, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$OrderResult, Q$StockOrderResult, Q$Exportable]), StockOrderResult_0);
	_.getAllItems_9 = function getAllItems_9() {
		return $toArray_1(this.mItems, initDim(_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, makeCastMap([Q$Serializable]), Q$OrderResultItem, 0, 0));
	};
	_.getModule_0 = function getModule_5() {
		return 't2';
	};
	_.putItem_9 = function putItem_9(item_0) {
		$add(this.mItems, item_0);
	};

	function $export_139(this$static) {
		if (!exported_139) {
			exported_139 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_StockOrderResult_2_classLit, this$static);
			new OrderResultItem_ExporterImpl_0;
			$export0_139(this$static);
		}
	}

	function $export0_139(this$static) {
		var pkg = declarePackage('hippo.trade.StockOrderResult');
		var __0, __ = this$static;
		$wnd.hippo.trade.StockOrderResult = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockOrderResult_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.StockOrderResult.prototype = new Object;
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_9());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_9(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_10(this.g, a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.StockOrderResult[p] === undefined && ($wnd.hippo.trade.StockOrderResult[p] = pkg[p]);
	}

	function StockOrderResult_ExporterImpl_0() {
		$export_139(this);
	}

	function __static_wrapper_putItems_10(instance, a0) {
		$putItems_9(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, makeCastMap([Q$Serializable]), Q$OrderResultItem, a0.length, 0))));
	}

	defineSeed(292, 1, {}, StockOrderResult_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_139() {
		return $wnd.hippo.trade.StockOrderResult;
	};
	_.isAssignable = function isAssignable_139(o) {
		return o != null && instanceOf(o, Q$StockOrderResult);
	};
	var exported_139 = false;

	function $export_140(this$static) {
		if (!exported_140) {
			exported_140 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_StockOrder_2_classLit, this$static);
			new OrderItem_ExporterImpl_0;
			new OrderResult_ExporterImpl_0;
			$export0_140(this$static);
		}
	}

	function $export0_140(this$static) {
		var pkg = declarePackage('hippo.trade.StockOrder');
		var __0, __ = this$static;
		$wnd.hippo.trade.StockOrder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new StockOrder_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.StockOrder.prototype = new Object;
		__0.getAllOrderItem = $entry(function() {
			return wrap_2(this.g.getAllOrderItem_0());
		});
		__0.getAllOrderResult = $entry(function() {
			return wrap_2(this.g.getAllOrderResult_0());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getOrderItem = $entry(function(a0) {
			return wrap_0(this.g.getOrderItem_0(a0));
		});
		__0.getOrderResult = $entry(function(a0) {
			return wrap_0(this.g.getOrderResult_0(a0));
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putOrderItem = $entry(function(a0) {
			this.g.putOrderItem_0(a0 == null ? null : a0.g);
		});
		__0.putOrderResult = $entry(function(a0) {
			this.g.putOrderResult_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.StockOrder[p] === undefined && ($wnd.hippo.trade.StockOrder[p] = pkg[p]);
	}

	function StockOrder_ExporterImpl_0() {
		$export_140(this);
	}

	defineSeed(293, 1, {}, StockOrder_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_140() {
		return $wnd.hippo.trade.StockOrder;
	};
	_.isAssignable = function isAssignable_140(o) {
		return o != null && instanceOf(o, Q$StockOrder);
	};
	var exported_140 = false;

	function ThirdOrder_0() {}

	defineSeed(294, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$Order, Q$ThirdOrder, Q$Exportable]), ThirdOrder_0);
	_.getAllOrderItem_0 = function getAllOrderItem_2() {
		return null;
	};
	_.getAllOrderResult_0 = function getAllOrderResult_2() {
		return null;
	};
	_.getOrderItem_0 = function getOrderItem_2(idx) {
		return null;
	};
	_.getOrderResult_0 = function getOrderResult_2(idx) {
		return this.orderResult;
	};
	_.putOrderItem_0 = function putOrderItem_2(item_0) {};
	_.putOrderResult_0 = function putOrderResult_2(item_0) {
		this.orderResult = item_0;
	};

	function $setAccount_1(this$static, account) {
		this$static.account = account;
	}

	function ThirdOrderItem_0() {}

	defineSeed(295, 265, makeCastMap([Q$DomainObject, Q$OrderItem, Q$ThirdOrderItem, Q$Exportable]), ThirdOrderItem_0);
	_.getAccount_1 = function getAccount_2() {
		return this.account;
	};
	_.getStock_2 = function getStock_3() {
		return this.stock;
	};
	_.setAccount_0 = function setAccount_2(account) {
		$setAccount_1(this, account);
	};
	_.setStock_0 = function setStock_1(stock) {
		this.stock = stock;
	};

	function $export_141(this$static) {
		if (!exported_141) {
			exported_141 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_ThirdOrderItem_2_classLit, this$static);
			new Account_ExporterImpl_0;
			new Stock_ExporterImpl_0;
			$export0_141(this$static);
		}
	}

	function $export0_141(this$static) {
		var pkg = declarePackage('hippo.trade.ThirdOrderItem');
		var __0, __ = this$static;
		$wnd.hippo.trade.ThirdOrderItem = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new ThirdOrderItem_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.ThirdOrderItem.prototype = new Object;
		__0.getAccount = $entry(function() {
			return wrap_0(this.g.getAccount_1());
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getStock = $entry(function() {
			return wrap_0(this.g.getStock_2());
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setStock = $entry(function(a0) {
			this.g.setStock_0(a0 == null ? null : a0.g);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.ThirdOrderItem[p] === undefined && ($wnd.hippo.trade.ThirdOrderItem[p] = pkg[p]);
	}

	function ThirdOrderItem_ExporterImpl_0() {
		$export_141(this);
	}

	defineSeed(296, 1, {}, ThirdOrderItem_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_141() {
		return $wnd.hippo.trade.ThirdOrderItem;
	};
	_.isAssignable = function isAssignable_141(o) {
		return o != null && instanceOf(o, Q$ThirdOrderItem);
	};
	var exported_141 = false;

	function $$init_2(this$static) {
		this$static.mMapOrder = new TreeMap_0;
		this$static.SENDERCOMPID = getBytesUtf8('APPNAME.APPVERSION.DOMAINVERSION');
		this$static.TARGETCOMPID = getBytesUtf8('FIX.5.0SP2');
	}

	function $createThirdOrder(this$static, identity) {
		var oi;
		this$static.order_0 = new ThirdOrder_0;
		oi = new ThirdOrderItem_0;
		$setAccount_1(oi, this$static.account);
		$setIdentity(this$static.order_0, identity);
		$put_2(this$static.mMapOrder, identity, this$static.order_0);
		return this$static.order_0;
	}

	function $dealPositionMaintenanceReport_0(this$static, fixObj) {
		var buf, d, data_0, fpmrMsg, messages, msg, orderResult, orderResultItem, parser, posReqID, thirdOrder; !! mLogger && mLogger.debug_0('thirdOrderManager deal FixPositionMaintenanceReport!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg = $parse(parser, buf, null);
		if (instanceOf(msg, Q$FixPositionMaintenanceReport)) {
			fpmrMsg = msg;
			posReqID = $parseFixParam_2(fpmrMsg.posReqID);
			thirdOrder = $get_3(this$static.mMapOrder, posReqID);
			if (!thirdOrder) return;
			orderResult = new ThirdOrderResult_0;
			orderResultItem = new OrderResultItem_0;
			$setReturn_code(thirdOrder, toInt(fpmrMsg.posMaintStatus));
			if (toInt(fpmrMsg.posMaintStatus) == 2) {
				d = $parseFixParam_2(fpmrMsg.text_0);
				data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
				$setError_info(thirdOrder, $getValueByField(data_0, 'error_info'));
				$setError_no(thirdOrder, data_0.error_no);
				$setReturn_code(thirdOrder, data_0.return_code);
			} else {
				thirdOrder.error_no = 0;
				thirdOrder.return_code = 0;
				orderResultItem.batch_no = posReqID;
				orderResultItem.entrust_no = posReqID;
				$add(orderResult.mItems, orderResultItem);
			}
			thirdOrder.orderResult = orderResult;
			$remove_3(this$static.mMapOrder, posReqID);
			$invalidate(this$static, thirdOrder, 'unknow');
			return;
		}
	}

	function $parseFixParam_2(param) {
		var i_0, iLen;
		iLen = 0;
		for (i_0 = 0; i_0 < param.length; i_0++) {
			if (param[i_0] == 0) break;
			++iLen;
		}
		return (!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0).buildFromBytes_0(param, 0, iLen);
	}

	function $process_2(this$static, object) {
		var fixObj; !! mLogger && mLogger.debug_0('thirdOrderManager onData object!');
		if (instanceOf(object, Q$FixObject)) {
			fixObj = object;
			$getMsgType(fixObj.messages) == 16717 && $dealPositionMaintenanceReport_0(this$static, fixObj);
		}
	}

	function ThirdOrderManager_0() {
		TradeManager_0.call(this);
		$$init_2(this);
	}

	function ThirdOrderManager_1(clientInfo) {
		TradeManager_0.call(this);
		$$init_2(this);
		clientInfo != null && clientInfo.length > 0 && (this.SENDERCOMPID = getBytesUtf8(clientInfo));
	}

	defineSeed(297, 268, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$ThirdOrderManager, Q$TradeManager, Q$Exportable]), ThirdOrderManager_0, ThirdOrderManager_1);
	_.bankTransfer_1 = function bankTransfer_0(posAmt, posAmtType, positionCurrency, fundAccount, bankPassword, fundPassword) {
		var buf, identity, obj, order, pmr, posAmtBytes;
		identity = mIDGen.generatorID_0();
		order = $createThirdOrder(this, '' + identity);
		pmr = new FixPositionMaintenanceRequest_0;
		pmr.senderCompID = this.SENDERCOMPID;
		pmr.targetCompID = this.TARGETCOMPID;
		pmr.posReqID = getBytesUtf8('' + identity);
		pmr.posTransType = P3_longLit;
		pmr.posMaintAction = P1_longLit;
		pmr.account = getBytesUtf8(fundAccount);
		pmr.positionAmountData.noPosAmt = 1;
		$allocatePositionAmountDatas(pmr.positionAmountData, pmr.positionAmountData.noPosAmt);
		pmr.positionAmountData.group[0].posAmtType = getBytesUtf8(posAmtType);
		posAmtBytes = getBytesUtf8('' + posAmt);
		pmr.positionAmountData.group[0].posAmt = fixFloatValueOf(posAmtBytes, posAmtBytes.length);
		pmr.positionAmountData.group[0].positionCurrency = getBytesUtf8(positionCurrency);
		pmr.parties.noPartyIDs = 2;
		$allocateParties(pmr.parties, pmr.parties.noPartyIDs);
		pmr.parties.group[0].partyID = getBytesUtf8(bankPassword);
		pmr.parties.group[0].partyIDSource = 66;
		pmr.parties.group[1].partyID = getBytesUtf8(fundPassword);
		pmr.parties.group[1].partyIDSource = 53;
		buf = allocate(10240);
		$encode_5(pmr, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return order;
	};
	_.beginWatch_3 = function beginWatch_12(info, handler) {
		$beginWatchObject(this, info, handler);
	};
	_.createThirdOrder_0 = function createThirdOrder(identity) {
		return $createThirdOrder(this, identity);
	};
	_.endWatch_3 = function endWatch_12(info, handler) {
		$endWatchObject(this, info, handler);
	};
	_.getBackendInfo_0 = function getBackendInfo_2() {
		return _String(this.TARGETCOMPID);
	};
	_.getClientInfo_0 = function getClientInfo_3() {
		return _String(this.SENDERCOMPID);
	};
	_.onDomainData_0 = function onDomainData_13(object, source) {
		var e;
		try {
			$process_2(this, object);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				$printStackTrace(e);
			} else throw unwrap($e0);
		}
	};
	_.preInit_0 = function preInit() {};
	_.setBackendInfo_0 = function setBackendInfo_2(targetCompID) {
		targetCompID != null && targetCompID.length > 0 && (this.TARGETCOMPID = getBytesUtf8(targetCompID));
	};
	_.setClientInfo_0 = function setClientInfo_2(senderCompID) {
		senderCompID != null && senderCompID.length > 0 && (this.SENDERCOMPID = getBytesUtf8(senderCompID));
	};

	function $export_142(this$static) {
		if (!exported_142) {
			exported_142 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_ThirdOrderManager_2_classLit, this$static);
			new Order_ExporterImpl_0;
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new Account_ExporterImpl_0;
			$export0_142(this$static);
		}
	}

	function $export0_142(this$static) {
		var pkg = declarePackage('hippo.trade.ThirdOrderManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.ThirdOrderManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 ? (g = new ThirdOrderManager_0) : a.length == 1 && (g = new ThirdOrderManager_1(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.ThirdOrderManager.prototype = new Object;
		__0.bankTransfer = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.bankTransfer_1(a0, a1, a2, a3, a4, a5));
		});
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.createThirdOrder = $entry(function(a0) {
			return wrap_0(this.g.createThirdOrder_0(a0));
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getBackendInfo = $entry(function() {
			return this.g.getBackendInfo_0();
		});
		__0.getClientInfo = $entry(function() {
			return this.g.getClientInfo_0();
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_order_ThirdOrderManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.preInit = $entry(function() {
			this.g.preInit_0();
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setBackendInfo = $entry(function(a0) {
			this.g.setBackendInfo_0(a0);
		});
		__0.setClientInfo = $entry(function(a0) {
			this.g.setClientInfo_0(a0);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_order_ThirdOrderManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.ThirdOrderManager[p] === undefined && ($wnd.hippo.trade.ThirdOrderManager[p] = pkg[p]);
	}

	function ThirdOrderManager_ExporterImpl_0() {
		$export_142(this);
	}

	defineSeed(298, 1, {}, ThirdOrderManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_142() {
		return $wnd.hippo.trade.ThirdOrderManager;
	};
	_.isAssignable = function isAssignable_142(o) {
		return o != null && instanceOf(o, Q$ThirdOrderManager);
	};
	var exported_142 = false;

	function $putItems_10(this$static, items) {
		var item_0, item$index, item$max;
		for (item$index = 0, item$max = items.length; item$index < item$max; ++item$index) {
			item_0 = items[item$index];
			$add(this$static.mItems, item_0);
		}
	}

	function ThirdOrderResult_0() {
		this.mItems = new ArrayList_0;
	}

	defineSeed(299, 227, makeCastMap([Q$DomainObject, Q$TradeObject, Q$OrderResult, Q$ThirdOrderResult, Q$Exportable]), ThirdOrderResult_0);
	_.getAllItems_9 = function getAllItems_10() {
		return $toArray_1(this.mItems, initDim(_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, makeCastMap([Q$Serializable]), Q$OrderResultItem, 0, 0));
	};
	_.getModule_0 = function getModule_6() {
		return 't2';
	};
	_.putItem_9 = function putItem_10(item_0) {
		$add(this.mItems, item_0);
	};

	function $export_143(this$static) {
		if (!exported_143) {
			exported_143 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_ThirdOrderResult_2_classLit, this$static);
			new OrderResultItem_ExporterImpl_0;
			$export0_143(this$static);
		}
	}

	function $export0_143(this$static) {
		var pkg = declarePackage('hippo.trade.ThirdOrderResult');
		var __0, __ = this$static;
		$wnd.hippo.trade.ThirdOrderResult = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new ThirdOrderResult_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.ThirdOrderResult.prototype = new Object;
		__0.getAllItems = $entry(function() {
			return wrap_2(this.g.getAllItems_9());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putItem = $entry(function(a0) {
			this.g.putItem_9(a0 == null ? null : a0.g);
		});
		__0.putItems = $entry(function(a0) {
			__static_wrapper_putItems_11(this.g, a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.ThirdOrderResult[p] === undefined && ($wnd.hippo.trade.ThirdOrderResult[p] = pkg[p]);
	}

	function ThirdOrderResult_ExporterImpl_0() {
		$export_143(this);
	}

	function __static_wrapper_putItems_11(instance, a0) {
		$putItems_10(instance, ($clinit_ExporterUtil(), $toArrObject(a0, initDim(_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit, makeCastMap([Q$Serializable]), Q$OrderResultItem, a0.length, 0))));
	}

	defineSeed(300, 1, {}, ThirdOrderResult_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_143() {
		return $wnd.hippo.trade.ThirdOrderResult;
	};
	_.isAssignable = function isAssignable_143(o) {
		return o != null && instanceOf(o, Q$ThirdOrderResult);
	};
	var exported_143 = false;

	function $export_144(this$static) {
		if (!exported_144) {
			exported_144 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_ThirdOrder_2_classLit, this$static);
			new OrderItem_ExporterImpl_0;
			new OrderResult_ExporterImpl_0;
			$export0_144(this$static);
		}
	}

	function $export0_144(this$static) {
		var pkg = declarePackage('hippo.trade.ThirdOrder');
		var __0, __ = this$static;
		$wnd.hippo.trade.ThirdOrder = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new ThirdOrder_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.ThirdOrder.prototype = new Object;
		__0.getAllOrderItem = $entry(function() {
			return wrap_2(this.g.getAllOrderItem_0());
		});
		__0.getAllOrderResult = $entry(function() {
			return wrap_2(this.g.getAllOrderResult_0());
		});
		__0.getError_info = $entry(function() {
			return this.g.getError_info_0();
		});
		__0.getError_no = $entry(function() {
			return this.g.getError_no_0();
		});
		__0.getError_pathinfo = $entry(function() {
			return this.g.getError_pathinfo_0();
		});
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getIdentity = $entry(function() {
			return this.g.getIdentity_0();
		});
		__0.getOrderItem = $entry(function(a0) {
			return wrap_0(this.g.getOrderItem_0(a0));
		});
		__0.getOrderResult = $entry(function(a0) {
			return wrap_0(this.g.getOrderResult_0(a0));
		});
		__0.getReturn_code = $entry(function() {
			return this.g.getReturn_code_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.putOrderItem = $entry(function(a0) {
			this.g.putOrderItem_0(a0 == null ? null : a0.g);
		});
		__0.putOrderResult = $entry(function(a0) {
			this.g.putOrderResult_0(a0);
		});
		__0.setError_info = $entry(function(a0) {
			this.g.setError_info_0(a0);
		});
		__0.setError_no = $entry(function(a0) {
			this.g.setError_no_0(a0);
		});
		__0.setError_pathinfo = $entry(function(a0) {
			this.g.setError_pathinfo_0(a0);
		});
		__0.setIdentity = $entry(function(a0) {
			this.g.setIdentity_0(a0);
		});
		__0.setReturn_code = $entry(function(a0) {
			this.g.setReturn_code_0(a0);
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.ThirdOrder[p] === undefined && ($wnd.hippo.trade.ThirdOrder[p] = pkg[p]);
	}

	function ThirdOrder_ExporterImpl_0() {
		$export_144(this);
	}

	defineSeed(301, 1, {}, ThirdOrder_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_144() {
		return $wnd.hippo.trade.ThirdOrder;
	};
	_.isAssignable = function isAssignable_144(o) {
		return o != null && instanceOf(o, Q$ThirdOrder);
	};
	var exported_144 = false;

	function $export_145(this$static) {
		if (!exported_145) {
			exported_145 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_order_TradeManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new Account_ExporterImpl_0;
			$export0_145(this$static);
		}
	}

	function $export0_145(this$static) {
		var pkg = declarePackage('hippo.trade.TradeManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.TradeManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new TradeManager_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.TradeManager.prototype = new Object;
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_order_TradeManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.setAccount = $entry(function(a0) {
			this.g.setAccount_0(a0 == null ? null : a0.g);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_order_TradeManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.TradeManager[p] === undefined && ($wnd.hippo.trade.TradeManager[p] = pkg[p]);
	}

	function TradeManager_ExporterImpl_0() {
		$export_145(this);
	}

	defineSeed(302, 1, {}, TradeManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_145() {
		return $wnd.hippo.trade.TradeManager;
	};
	_.isAssignable = function isAssignable_145(o) {
		return o != null && instanceOf(o, Q$TradeManager);
	};
	var exported_145 = false;

	function $clinit_CreditQueryManager() {
		$clinit_CreditQueryManager = nullMethod;
		DEFAULT_LINES = getBytesUtf8('10');
	}

	function $$init_3(this$static) {
		this$static.mMapTradeResData = new TreeMap_0;
		new TreeMap_0;
		this$static.SENDERCOMPID = getBytesUtf8('APPNAME.APPVERSION.DOMAINVERSION');
		this$static.TARGETCOMPID = getBytesUtf8('FIX.5.0SP2');
	}

	function $createTradeResData(this$static, identity) {
		this$static.tradeResData = new TradeResData_0;
		$setIdentity_0(this$static.tradeResData, identity);
		$put_2(this$static.mMapTradeResData, identity, this$static.tradeResData);
		return this$static.tradeResData;
	}

	function $dealExecutionReport_1(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixExecutionReport!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixExecutionReport)) {
			msg = msg1;
			$parseFixParam_3(msg.orderID);
			identity = $parseFixParam_3(msg.massStatusReqID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_3(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $dealQuote(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixQuote!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixQuote)) {
			msg = msg1;
			identity = $parseFixParam_3(msg.quoteReqID);
			$parseFixParam_3(msg.quoteID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_3(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $dealRequestForPositionsAck(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixQuote!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixRequestForPositionsAck)) {
			msg = msg1;
			identity = $parseFixParam_3(msg.posReqID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_3(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $dealSecurityList(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixSecurityList!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixSecurityList)) {
			msg = msg1;
			identity = $parseFixParam_3(msg.securityReqID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			if (msg.secListGrp.group.length <= 0) return;
			d = $parseFixParam_3(msg.secListGrp.group[0].text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $dealTradeCaptureReportRequestAck(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixTradeCaptureReportRequestAck!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixTradeCaptureReportRequestAck)) {
			msg = msg1;
			identity = $parseFixParam_3(msg.tradeRequestID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_3(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $parseFixParam_3(param) {
		var i_0, iLen;
		iLen = 0;
		for (i_0 = 0; i_0 < param.length; i_0++) {
			if (param[i_0] == 0) break;
			++iLen;
		}
		return (!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0).buildFromBytes_0(param, 0, iLen);
	}

	function $process_3(this$static, object) {
		var fixObj; !! mLogger && mLogger.debug_0('CreditQueryManager onData object!');
		if (instanceOf(object, Q$FixObject)) {
			fixObj = object;
			switch ($getMsgType(fixObj.messages)) {
			case 56:
				$dealExecutionReport_1(this$static, fixObj);
				break;
			case 16721:
				$dealTradeCaptureReportRequestAck(this$static, fixObj);
				break;
			case 83:
				$dealQuote(this$static, fixObj);
				break;
			case 16719:
				$dealRequestForPositionsAck(this$static, fixObj);
				break;
			case 121:
				$dealSecurityList(this$static, fixObj);
			}
		}
	}

	function $qryAmount(this$static, qryType, side, ordType, price, accountType, securityID, securityExchange, securityGroup, partyID, partyRole) {
		var buf, identity, obj, priceBytes, quoteRequest, tmpOrdType, tradeResData;
		identity = mIDGen.generatorID_0();
		tmpOrdType = 0;
		tradeResData = $createTradeResData(this$static, '' + identity);
		quoteRequest = new FixQuoteRequest_0;
		quoteRequest.senderCompID = this$static.SENDERCOMPID;
		quoteRequest.targetCompID = this$static.TARGETCOMPID;
		quoteRequest.quoteReqID = getBytesUtf8('' + identity);
		!qryType.length || (quoteRequest.cstmApplVerID = getBytesUtf8(qryType));
		quoteRequest.quotReqGrp.noRelatedSym = 1;
		$allocateQuotReqGrps(quoteRequest.quotReqGrp, quoteRequest.quotReqGrp.noRelatedSym);
		isValid_150(side) && (quoteRequest.quotReqGrp.group[0].side = side);
		ordType == 48 ? (tmpOrdType = 49) : ordType == 81 ? (tmpOrdType = 81) : ordType == 82 ? (tmpOrdType = 75) : ordType == 83 ? (tmpOrdType = 55) : ordType == 84 ? (tmpOrdType = 56) : ordType == 85 ? (tmpOrdType = 74) : ordType == 86 && (tmpOrdType = 54);
		quoteRequest.quotReqGrp.group[0].ordType = tmpOrdType;
		priceBytes = getBytesUtf8('' + price);
		quoteRequest.quotReqGrp.group[0].price = fixFloatValueOf(priceBytes, priceBytes.length);
		quoteRequest.quotReqGrp.group[0].accountType = accountType;
		quoteRequest.quotReqGrp.group[0].instrument.symbol = getBytesUtf8(securityID);
		quoteRequest.quotReqGrp.group[0].instrument.securityID = getBytesUtf8(securityID);
		quoteRequest.quotReqGrp.group[0].instrument.securityExchange = getBytesUtf8(securityExchange);
		quoteRequest.quotReqGrp.group[0].instrument.securityType = getBytesUtf8('CASH');
		!securityGroup.length || (quoteRequest.quotReqGrp.group[0].instrument.securityGroup = getBytesUtf8(securityGroup));
		if (partyID.length) {
			quoteRequest.quotReqGrp.group[0].parties.noPartyIDs = 1;
			$allocateParties(quoteRequest.quotReqGrp.group[0].parties, quoteRequest.quotReqGrp.group[0].parties.noPartyIDs);
			quoteRequest.quotReqGrp.group[0].parties.group[0].partyID = getBytesUtf8(partyID);
			quoteRequest.quotReqGrp.group[0].parties.group[0].partyRole = partyRole;
		}
		buf = allocateDirect(10240);
		$encode_6(quoteRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function $qryDeal(this$static, reqType, securityType, reqNum, positionStr) {
		var buf, identity, obj, tradeCaptureReportRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this$static, '' + identity);
		tradeCaptureReportRequest = new FixTradeCaptureReportRequest_0;
		tradeCaptureReportRequest.senderCompID = this$static.SENDERCOMPID;
		tradeCaptureReportRequest.targetCompID = this$static.TARGETCOMPID;
		tradeCaptureReportRequest.tradeRequestID = getBytesUtf8('' + identity);
		tradeCaptureReportRequest.tradeRequestType = reqType;
		!positionStr.length || (tradeCaptureReportRequest.cstmApplVerID = getBytesUtf8(positionStr));
		tradeCaptureReportRequest.instrument.securityType = getBytesUtf8(securityType);
		tradeCaptureReportRequest.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_9(tradeCaptureReportRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function $qryEntrust(this$static, reqType, securityType, reqNum, positionStr) {
		var buf, identity, obj, orderMassStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this$static, '' + identity);
		orderMassStatusRequest = new FixOrderMassStatusRequest_0;
		orderMassStatusRequest.senderCompID = this$static.SENDERCOMPID;
		orderMassStatusRequest.targetCompID = this$static.TARGETCOMPID;
		orderMassStatusRequest.massStatusReqID = getBytesUtf8('' + identity);
		orderMassStatusRequest.massStatusReqType = reqType;
		!positionStr.length || (orderMassStatusRequest.cstmApplVerID = getBytesUtf8(positionStr));
		orderMassStatusRequest.instrument.securityType = getBytesUtf8(securityType);
		orderMassStatusRequest.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_3(orderMassStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function $qryHisDeal(this$static, reqType, startDate, endDate, securityID, securityExchange, securityType, partyID, reqNum, positionStr) {
		var buf, identity, obj, tradeCaptureReportRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this$static, '' + identity);
		tradeCaptureReportRequest = new FixTradeCaptureReportRequest_0;
		tradeCaptureReportRequest.senderCompID = this$static.SENDERCOMPID;
		tradeCaptureReportRequest.targetCompID = this$static.TARGETCOMPID;
		tradeCaptureReportRequest.tradeRequestID = getBytesUtf8('' + identity);
		tradeCaptureReportRequest.tradeRequestType = reqType;
		!positionStr.length || (tradeCaptureReportRequest.cstmApplVerID = getBytesUtf8(positionStr));
		tradeCaptureReportRequest.financingDetails.agreementDesc = getBytesUtf8(' ');
		tradeCaptureReportRequest.financingDetails.startDate = getBytesUtf8(startDate);
		tradeCaptureReportRequest.financingDetails.endDate = getBytesUtf8(endDate);
		!securityID.length || (tradeCaptureReportRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (tradeCaptureReportRequest.instrument.securityExchange = getBytesUtf8(securityExchange));
		tradeCaptureReportRequest.instrument.securityType = getBytesUtf8(securityType);
		tradeCaptureReportRequest.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		if (partyID.length) {
			tradeCaptureReportRequest.parties.noPartyIDs = 1;
			$allocateParties(tradeCaptureReportRequest.parties, tradeCaptureReportRequest.parties.noPartyIDs);
			tradeCaptureReportRequest.parties.group[0].partyID = getBytesUtf8(partyID);
		}
		buf = allocateDirect(10240);
		$encode_9(tradeCaptureReportRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function $qryHisEntrust(this$static, reqType, startDate, endDate, securityID, securityExchange, securityType, partyID, reqNum, positionStr) {
		var buf, identity, obj, orderMassStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this$static, '' + identity);
		orderMassStatusRequest = new FixOrderMassStatusRequest_0;
		orderMassStatusRequest.senderCompID = this$static.SENDERCOMPID;
		orderMassStatusRequest.targetCompID = this$static.TARGETCOMPID;
		orderMassStatusRequest.massStatusReqID = getBytesUtf8('' + identity);
		orderMassStatusRequest.massStatusReqType = reqType;
		!positionStr.length || (orderMassStatusRequest.cstmApplVerID = getBytesUtf8(positionStr));
		!securityID.length || (orderMassStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (orderMassStatusRequest.instrument.securityExchange = getBytesUtf8(securityExchange));
		orderMassStatusRequest.instrument.securityType = getBytesUtf8(securityType);
		orderMassStatusRequest.instrument.issueDate = getBytesUtf8(startDate);
		orderMassStatusRequest.instrument.maturityDate = getBytesUtf8(endDate);
		orderMassStatusRequest.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		if (partyID.length) {
			orderMassStatusRequest.parties.noPartyIDs = 1;
			$allocateParties(orderMassStatusRequest.parties, orderMassStatusRequest.parties.noPartyIDs);
			orderMassStatusRequest.parties.group[0].partyID = getBytesUtf8(partyID);
		}
		buf = allocateDirect(10240);
		$encode_3(orderMassStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function $qrySecurityList(this$static, requestType, securityExchange, securitySubExchange, securityID, securityType, reqNum, positionStr) {
		var buf, identity, obj, securityListRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this$static, '' + identity);
		securityListRequest = new FixSecurityListRequest_0;
		securityListRequest.senderCompID = this$static.SENDERCOMPID;
		securityListRequest.targetCompID = this$static.TARGETCOMPID;
		securityListRequest.securityReqID = getBytesUtf8('' + identity);
		securityListRequest.securityListRequestType = requestType;
		!securityExchange.length || (securityListRequest.marketID = getBytesUtf8(securityExchange));
		!securitySubExchange.length || (securityListRequest.marketSegmentID = getBytesUtf8(securitySubExchange));
		!securityID.length || (securityListRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityType.length || (securityListRequest.instrument.securityType = getBytesUtf8(securityType));
		!positionStr.length || (securityListRequest.cstmApplVerID = getBytesUtf8(positionStr));
		securityListRequest.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_8(securityListRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function CreditQueryManager_0() {
		$clinit_CreditQueryManager();
		BaseTradeManager_0.call(this);
		$$init_3(this);
	}

	function CreditQueryManager_1(clientInfo) {
		$clinit_CreditQueryManager();
		BaseTradeManager_0.call(this);
		$$init_3(this);
		clientInfo != null && clientInfo.length > 0 && (this.SENDERCOMPID = getBytesUtf8(clientInfo));
	}

	defineSeed(303, 229, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$CreditQueryManager, Q$Exportable]), CreditQueryManager_0, CreditQueryManager_1);
	_.beginWatch_3 = function beginWatch_13(info, handler) {
		$beginWatchObject(this, info, handler);
	};
	_.endWatch_3 = function endWatch_13(info, handler) {
		$endWatchObject(this, info, handler);
	};
	_.getBackendInfo_0 = function getBackendInfo_3() {
		return _String(this.TARGETCOMPID);
	};
	_.getClientInfo_0 = function getClientInfo_4() {
		return _String(this.SENDERCOMPID);
	};
	_.onDomainData_0 = function onDomainData_14(object, source) {
		var e;
		try {
			$process_3(this, object);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				$printStackTrace(e);
			} else throw unwrap($e0);
		}
	};
	_.qryBankBalance_0 = function qryBankBalance(currency, password, partyID) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P1_longLit;
		requestForPositions.currency = getBytesUtf8(currency);
		requestForPositions.account = getBytesUtf8(password);
		if (partyID.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(partyID);
		}
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryCollateralSecurities_0 = function qryCollateralSecurities(securityID, securityExchange, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P65_longLit;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryDelivery_0 = function qryDelivery(matchStatus, currency, startDate, endDate, positionStr, reqNum, partyID, securityID, securityExchange) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P4_longLit;
		requestForPositions.matchStatus = matchStatus;
		requestForPositions.currency = !currency.length ? getBytesUtf8(' ') : getBytesUtf8(currency);
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		if (partyID.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(partyID);
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		requestForPositions.text_0 = getBytesUtf8((!positionStr.length ? ' ' : positionStr) + '|' + (!reqNum.length ? _String(DEFAULT_LINES) : reqNum) + '|');
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryFund_0 = function qryFund() {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P63_longLit;
		buf = allocate(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryFundJournal_0 = function qryFundJournal(currency, startDate, endDate, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P68_longLit;
		requestForPositions.currency = getBytesUtf8(currency);
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryHisContractJournal_0 = function qryHisContractJournal(matchStatus, securityAccount, contractID, contractType, securityID, securityExchange, startDate, endDate, reqNum, positionStr) {
		var buf, identity, index_0, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P6d_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		requestForPositions.parties.noPartyIDs = 3;
		!securityAccount.length && --requestForPositions.parties.noPartyIDs;
		!contractID.length && --requestForPositions.parties.noPartyIDs;
		!contractType.length && --requestForPositions.parties.noPartyIDs;
		$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
		index_0 = 0;
		if (securityAccount.length) {
			requestForPositions.parties.group[0].partyID = getBytesUtf8(securityAccount);
			requestForPositions.parties.group[0].partyRole = P5_longLit;
			requestForPositions.parties.group[0].partyIDSource = 53;
			++index_0;
		}
		if (contractID.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(contractID);
			requestForPositions.parties.group[index_0].partyRole = P37_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
			++index_0;
		}
		if (contractType.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(contractType);
			requestForPositions.parties.group[index_0].partyRole = P8_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		!startDate.length || (requestForPositions.instrument.issueDate = getBytesUtf8(startDate));
		!endDate.length || (requestForPositions.instrument.maturityDate = getBytesUtf8(endDate));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryLiabilitySummary_0 = function qryLiabilitySummary(reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P66_longLit;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryMarginTradingDebt_0 = function qryMarginTradingDebt(matchStatus, securityAccount, contractID, contractType, creditType, securityID, securityExchange, startDate, endDate, reqNum, positionStr) {
		var buf, identity, index_0, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P6a_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		requestForPositions.parties.noPartyIDs = 4;
		!securityAccount.length && --requestForPositions.parties.noPartyIDs;
		!contractID.length && --requestForPositions.parties.noPartyIDs;
		!contractType.length && --requestForPositions.parties.noPartyIDs;
		!creditType.length && --requestForPositions.parties.noPartyIDs;
		$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
		index_0 = 0;
		if (securityAccount.length) {
			requestForPositions.parties.group[0].partyID = getBytesUtf8(securityAccount);
			requestForPositions.parties.group[0].partyRole = P5_longLit;
			requestForPositions.parties.group[0].partyIDSource = 53;
			++index_0;
		}
		if (contractID.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(contractID);
			requestForPositions.parties.group[index_0].partyRole = P37_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
			++index_0;
		}
		if (contractType.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(contractType);
			requestForPositions.parties.group[index_0].partyRole = P8_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
			++index_0;
		}
		if (creditType.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(creditType);
			requestForPositions.parties.group[index_0].partyRole = P2_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		!startDate.length || (requestForPositions.instrument.issueDate = getBytesUtf8(startDate));
		!endDate.length || (requestForPositions.instrument.maturityDate = getBytesUtf8(endDate));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryNewStockBuyLimit_0 = function qryNewStockBuyLimit(matchStatus, securityExchange) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P430_longLit;
		requestForPositions.matchStatus = matchStatus;
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryNewStockNumber_0 = function qryNewStockNumber(matchStatus, account, securityID, securityExchange, startDate, endDate, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P43a_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		if (account.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(account);
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryNewStockWinning_0 = function qryNewStockWinning(matchStatus, account, securityID, securityExchange, startDate, endDate, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P44e_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		if (account.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(account);
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryPosi_0 = function qryPosi(partyID, securityID, securityExchange, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		if (partyID.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(partyID);
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryRtContractJournal_0 = function qryRtContractJournal(matchStatus, securityAccount, contractID, contractType, securityID, securityExchange, reqNum, positionStr) {
		var buf, identity, index_0, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P69_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		requestForPositions.parties.noPartyIDs = 3;
		!securityAccount.length && --requestForPositions.parties.noPartyIDs;
		!contractID.length && --requestForPositions.parties.noPartyIDs;
		!contractType.length && --requestForPositions.parties.noPartyIDs;
		$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
		index_0 = 0;
		if (securityAccount.length) {
			requestForPositions.parties.group[0].partyID = getBytesUtf8(securityAccount);
			requestForPositions.parties.group[0].partyRole = P5_longLit;
			requestForPositions.parties.group[0].partyIDSource = 53;
			++index_0;
		}
		if (contractID.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(contractID);
			requestForPositions.parties.group[index_0].partyRole = P37_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
			++index_0;
		}
		if (contractType.length) {
			requestForPositions.parties.group[index_0].partyID = getBytesUtf8(contractType);
			requestForPositions.parties.group[index_0].partyRole = P8_longLit;
			requestForPositions.parties.group[index_0].partyIDSource = 53;
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryTransferJournal_0 = function qryTransferJournal(securityID, entrustID, startDate, endDate, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P67_longLit;
		!entrustID.length || (requestForPositions.settlSessSubID = getBytesUtf8(entrustID));
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		requestForPositions.instrument.securityID = getBytesUtf8(securityID);
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryUnderlyingSecurities_0 = function qryUnderlyingSecurities(matchStatus, securityID, securityExchange, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P64_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? 10 : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.setBackendInfo_0 = function setBackendInfo_3(targetCompID) {
		targetCompID != null && targetCompID.length > 0 && (this.TARGETCOMPID = getBytesUtf8(targetCompID));
	};
	_.setClientInfo_0 = function setClientInfo_3(senderCompID) {
		senderCompID != null && senderCompID.length > 0 && (this.SENDERCOMPID = getBytesUtf8(senderCompID));
	};
	var DEFAULT_LINES;

	function $export_146(this$static) {
		if (!exported_146) {
			exported_146 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_query_CreditQueryManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new TradeResData_ExporterImpl_0;
			$export0_146(this$static);
		}
	}

	function $export0_146(this$static) {
		var pkg = declarePackage('hippo.trade.CreditQueryManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.CreditQueryManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 ? (g = new CreditQueryManager_0) : a.length == 1 && (g = new CreditQueryManager_1(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.CreditQueryManager.prototype = new Object;
		$wnd.hippo.trade.CreditQueryManager.DEFAULT_LINES = ($clinit_CreditQueryManager(), DEFAULT_LINES);
		$wnd.hippo.trade.CreditQueryManager.DEFAULT_LINES_INT = 10;
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getBackendInfo = $entry(function() {
			return this.g.getBackendInfo_0();
		});
		__0.getClientInfo = $entry(function() {
			return this.g.getClientInfo_0();
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_query_CreditQueryManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.qryAmount = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
			return wrap_0(__static_wrapper_qryAmount(this.g, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9));
		});
		__0.qryBankBalance = $entry(function(a0, a1, a2) {
			return wrap_0(this.g.qryBankBalance_0(a0, a1, a2));
		});
		__0.qryCollateralSecurities = $entry(function(a0, a1, a2, a3) {
			return wrap_0(this.g.qryCollateralSecurities_0(a0, a1, a2, a3));
		});
		__0.qryDeal = $entry(function(a0, a1, a2, a3) {
			return wrap_0(__static_wrapper_qryDeal(this.g, a0, a1, a2, a3));
		});
		__0.qryDelivery = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {
			return wrap_0(this.g.qryDelivery_0(a0, a1, a2, a3, a4, a5, a6, a7, a8));
		});
		__0.qryEntrust = $entry(function(a0, a1, a2, a3) {
			return wrap_0(__static_wrapper_qryEntrust(this.g, a0, a1, a2, a3));
		});
		__0.qryFund = $entry(function() {
			return wrap_0(this.g.qryFund_0());
		});
		__0.qryFundJournal = $entry(function(a0, a1, a2, a3, a4) {
			return wrap_0(this.g.qryFundJournal_0(a0, a1, a2, a3, a4));
		});
		__0.qryHisContractJournal = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
			return wrap_0(this.g.qryHisContractJournal_0(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9));
		});
		__0.qryHisDeal = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {
			return wrap_0(__static_wrapper_qryHisDeal(this.g, a0, a1, a2, a3, a4, a5, a6, a7, a8));
		});
		__0.qryHisEntrust = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {
			return wrap_0(__static_wrapper_qryHisEntrust(this.g, a0, a1, a2, a3, a4, a5, a6, a7, a8));
		});
		__0.qryLiabilitySummary = $entry(function(a0, a1) {
			return wrap_0(this.g.qryLiabilitySummary_0(a0, a1));
		});
		__0.qryMarginTradingDebt = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
			return wrap_0(this.g.qryMarginTradingDebt_0(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10));
		});
		__0.qryNewStockBuyLimit = $entry(function(a0, a1) {
			return wrap_0(this.g.qryNewStockBuyLimit_0(a0, a1));
		});
		__0.qryNewStockNumber = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(this.g.qryNewStockNumber_0(a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qryNewStockWinning = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(this.g.qryNewStockWinning_0(a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qryPosi = $entry(function(a0, a1, a2, a3, a4) {
			return wrap_0(this.g.qryPosi_0(a0, a1, a2, a3, a4));
		});
		__0.qryRtContractJournal = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(this.g.qryRtContractJournal_0(a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qrySecurityList = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(__static_wrapper_qrySecurityList(this.g, a0, a1, a2, a3, a4, a5, a6));
		});
		__0.qryTransferJournal = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.qryTransferJournal_0(a0, a1, a2, a3, a4, a5));
		});
		__0.qryUnderlyingSecurities = $entry(function(a0, a1, a2, a3, a4) {
			return wrap_0(this.g.qryUnderlyingSecurities_0(a0, a1, a2, a3, a4));
		});
		__0.setBackendInfo = $entry(function(a0) {
			this.g.setBackendInfo_0(a0);
		});
		__0.setClientInfo = $entry(function(a0) {
			this.g.setClientInfo_0(a0);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_query_CreditQueryManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.CreditQueryManager[p] === undefined && ($wnd.hippo.trade.CreditQueryManager[p] = pkg[p]);
	}

	function CreditQueryManager_ExporterImpl_0() {
		$export_146(this);
	}

	function __static_wrapper_qryAmount(instance, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
		return $qryAmount(instance, a0, a1, a2, a3, fromDouble(a4), a5, a6, a7, a8, fromDouble(a9));
	}

	function __static_wrapper_qryDeal(instance, a0, a1, a2, a3) {
		return $qryDeal(instance, fromDouble(a0), a1, a2, a3);
	}

	function __static_wrapper_qryEntrust(instance, a0, a1, a2, a3) {
		return $qryEntrust(instance, fromDouble(a0), a1, a2, a3);
	}

	function __static_wrapper_qryHisDeal(instance, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
		return $qryHisDeal(instance, fromDouble(a0), a1, a2, a3, a4, a5, a6, a7, a8);
	}

	function __static_wrapper_qryHisEntrust(instance, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
		return $qryHisEntrust(instance, fromDouble(a0), a1, a2, a3, a4, a5, a6, a7, a8);
	}

	function __static_wrapper_qrySecurityList(instance, a0, a1, a2, a3, a4, a5, a6) {
		return $qrySecurityList(instance, fromDouble(a0), a1, a2, a3, a4, a5, a6);
	}

	defineSeed(304, 1, {}, CreditQueryManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_146() {
		return $wnd.hippo.trade.CreditQueryManager;
	};
	_.isAssignable = function isAssignable_146(o) {
		return o != null && instanceOf(o, Q$CreditQueryManager);
	};
	var exported_146 = false;

	function $clinit_StockQueryManager() {
		$clinit_StockQueryManager = nullMethod;
		DEFAULT_LINES_0 = getBytesUtf8('10');
	}

	function $$init_4(this$static) {
		this$static.mMapTradeResData = new TreeMap_0;
		this$static.mMapFundAccounts = new TreeMap_0;
		this$static.SENDERCOMPID = getBytesUtf8('APPNAME.APPVERSION.DOMAINVERSION');
		this$static.TARGETCOMPID = getBytesUtf8('FIX.5.0SP2');
	}

	function $createTradeResData_0(this$static, identity) {
		this$static.tradeResData = new TradeResData_0;
		$setIdentity_0(this$static.tradeResData, identity);
		$put_2(this$static.mMapTradeResData, identity, this$static.tradeResData);
		return this$static.tradeResData;
	}

	function $dealExecutionReport_2(this$static, fixObj) {
		var buf, clOrdLinkID, d, data_0, fundAccount, fundAccounts, identity, messages, msg, msg1, parser, tradeResData, tradeResDataItem, tradeResDataItem$index, tradeResDataItem$max, tradeResDataItems; !! mLogger && mLogger.debug_0('StockQueryManager deal FixExecutionReport!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixExecutionReport)) {
			msg = msg1;
			d = $parseFixParam_4(msg.text_0);
			identity = $parseFixParam_4(msg.clOrdID);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			clOrdLinkID = $parseFixParam_4(msg.clOrdLinkID);
			if ($equals_151('1', clOrdLinkID)) {
				fundAccounts = $get_3(this$static.mMapFundAccounts, identity);
				if (!fundAccounts) return;
				$setError_info(fundAccounts, $getValueByField(data_0, 'error_info'));
				$setError_no(fundAccounts, data_0.error_no);
				$setReturn_code(fundAccounts, data_0.return_code);
				if (data_0.return_code == 0) {
					tradeResDataItems = $getAllItems_3(data_0);
					for (tradeResDataItem$index = 0, tradeResDataItem$max = tradeResDataItems.length; tradeResDataItem$index < tradeResDataItem$max; ++tradeResDataItem$index) {
						tradeResDataItem = tradeResDataItems[tradeResDataItem$index];
						fundAccount = new FundAccount_0;
						$setFund_account_0(fundAccount, $get_3(tradeResDataItem.mMapItems, 'fund_account'));
						$setMain_flag(fundAccount, $get_3(tradeResDataItem.mMapItems, 'main_flag'));
						$setMoney_type_0(fundAccount, $get_3(tradeResDataItem.mMapItems, 'money_type'));
						$setBank_no_0(fundAccount, $get_3(tradeResDataItem.mMapItems, 'bank_no'));
						$setBank_name(fundAccount, $get_3(tradeResDataItem.mMapItems, 'bank_name'));
						$setCurrent_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'current_balance'));
						$setEnable_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'enable_balance'));
						$setFrozen_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'frozen_balance'));
						$setFetch_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'fetch_balance'));
						$setFund_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'fund_balance'));
						$setMarket_value(fundAccount, $get_3(tradeResDataItem.mMapItems, 'market_value'));
						$setOpfund_market_value(fundAccount, $get_3(tradeResDataItem.mMapItems, 'opfund_market_value'));
						$setAsset_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'asset_balance'));
						$setCur_income_balance(fundAccount, $get_3(tradeResDataItem.mMapItems, 'cur_income_balance'));
						$add(fundAccounts.accounts, fundAccount);
					}
				}
				$invalidate(this$static, fundAccounts, 'unknow');
				$remove_3(this$static.mMapFundAccounts, identity);
			} else {
				tradeResData = $get_3(this$static.mMapTradeResData, identity);
				if (!tradeResData) return;
				$putItems_7(tradeResData, $getAllItems_3(data_0));
				$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
				$setError_no(tradeResData, data_0.error_no);
				$setReturn_code(tradeResData, data_0.error_no);
				$setTotal_0(tradeResData, data_0.total);
				$invalidate(this$static, tradeResData, 'unknow');
				$remove_3(this$static.mMapTradeResData, identity);
			}
		}
	}

	function $dealQuote_0(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('StockQueryManager deal FixQuote!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixQuote)) {
			msg = msg1;
			identity = $parseFixParam_4(msg.quoteReqID);
			$parseFixParam_4(msg.quoteID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_4(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $dealRequestForPositionsAck_0(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixQuote!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixRequestForPositionsAck)) {
			msg = msg1;
			identity = $parseFixParam_4(msg.posReqID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_4(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $dealTradeCaptureReportRequestAck_0(this$static, fixObj) {
		var buf, d, data_0, identity, messages, msg, msg1, parser, tradeResData; !! mLogger && mLogger.debug_0('creditQueryManager deal FixTradeCaptureReportRequestAck!');
		messages = fixObj.messages;
		buf = allocate(getBytesUtf8(messages).length);
		$put(buf, getBytesUtf8(messages));
		$position(buf, 0);
		parser = new FixMessageParser_0;
		msg1 = $parse(parser, buf, null);
		if (instanceOf(msg1, Q$FixTradeCaptureReportRequestAck)) {
			msg = msg1;
			identity = $parseFixParam_4(msg.tradeRequestID);
			tradeResData = $get_3(this$static.mMapTradeResData, identity);
			if (!tradeResData) return;
			d = $parseFixParam_4(msg.text_0);
			data_0 = this$static.mParser.unserialize_0($buildFromBytes((!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0), getBytesLatin1(d)));
			$putItems_7(tradeResData, $getAllItems_3(data_0));
			$setError_info(tradeResData, $getValueByField(data_0, 'error_info'));
			$setError_no(tradeResData, data_0.error_no);
			$setReturn_code(tradeResData, data_0.return_code);
			$setTotal_0(tradeResData, data_0.total);
			$invalidate(this$static, tradeResData, 'unknow');
			$remove_3(this$static.mMapTradeResData, identity);
		}
	}

	function $parseFixParam_4(param) {
		var i_0, iLen;
		iLen = 0;
		for (i_0 = 0; i_0 < param.length; i_0++) {
			if (param[i_0] == 0) break;
			++iLen;
		}
		return (!instance_0 && !instance_0 && (instance_0 = new BlobStringBuilder_0), instance_0).buildFromBytes_0(param, 0, iLen);
	}

	function $process_4(this$static, object) {
		var fixObj; !! mLogger && mLogger.debug_0('StockQueryManager onData object!');
		if (instanceOf(object, Q$FixObject)) {
			fixObj = object;
			switch ($getMsgType(fixObj.messages)) {
			case 56:
				$dealExecutionReport_2(this$static, fixObj);
				break;
			case 83:
				$dealQuote_0(this$static, fixObj);
				break;
			case 16721:
				$dealTradeCaptureReportRequestAck_0(this$static, fixObj);
				break;
			case 16719:
				$dealRequestForPositionsAck_0(this$static, fixObj);
			}
		}
	}

	function $qryAmount_0(this$static, side, ordType, price, securityID, securityExchange, securityGroup, partyID, partyRole) {
		var buf, identity, obj, priceBytes, quoteRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this$static, '' + identity);
		quoteRequest = new FixQuoteRequest_0;
		quoteRequest.senderCompID = this$static.SENDERCOMPID;
		quoteRequest.targetCompID = this$static.TARGETCOMPID;
		quoteRequest.quoteReqID = getBytesUtf8('' + identity);
		quoteRequest.quotReqGrp.noRelatedSym = 1;
		$allocateQuotReqGrps(quoteRequest.quotReqGrp, quoteRequest.quotReqGrp.noRelatedSym);
		side == 49 ? (quoteRequest.quotReqGrp.group[0].side = 49) : side == 50 && (quoteRequest.quotReqGrp.group[0].side = 50);
		ordType == 48 ? (quoteRequest.quotReqGrp.group[0].ordType = 49) : ordType == 81 ? (quoteRequest.quotReqGrp.group[0].ordType = 81) : ordType == 82 ? (quoteRequest.quotReqGrp.group[0].ordType = 75) : ordType == 83 ? (quoteRequest.quotReqGrp.group[0].ordType = 55) : ordType == 84 ? (quoteRequest.quotReqGrp.group[0].ordType = 56) : ordType == 85 ? (quoteRequest.quotReqGrp.group[0].ordType = 74) : ordType == 86 && (quoteRequest.quotReqGrp.group[0].ordType = 54);
		priceBytes = getBytesUtf8('' + price);
		quoteRequest.quotReqGrp.group[0].price = fixFloatValueOf(priceBytes, priceBytes.length);
		quoteRequest.quotReqGrp.group[0].accountType = P1_longLit;
		quoteRequest.quotReqGrp.group[0].instrument.symbol = getBytesUtf8(securityID);
		quoteRequest.quotReqGrp.group[0].instrument.securityID = getBytesUtf8(securityID);
		quoteRequest.quotReqGrp.group[0].instrument.securityExchange = getBytesUtf8(securityExchange);
		quoteRequest.quotReqGrp.group[0].instrument.securityType = getBytesUtf8('CS');
		!securityGroup.length || (quoteRequest.quotReqGrp.group[0].instrument.securityGroup = getBytesUtf8(securityGroup));
		if (partyID.length) {
			quoteRequest.quotReqGrp.group[0].parties.noPartyIDs = 1;
			$allocateParties(quoteRequest.quotReqGrp.group[0].parties, quoteRequest.quotReqGrp.group[0].parties.noPartyIDs);
			quoteRequest.quotReqGrp.group[0].parties.group[0].partyID = getBytesUtf8(partyID);
			quoteRequest.quotReqGrp.group[0].parties.group[0].partyRole = partyRole;
		}
		buf = allocateDirect(10240);
		$encode_6(quoteRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this$static.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	}

	function StockQueryManager_0() {
		$clinit_StockQueryManager();
		BaseTradeManager_0.call(this);
		$$init_4(this);
	}

	function StockQueryManager_1(clientInfo) {
		$clinit_StockQueryManager();
		BaseTradeManager_0.call(this);
		$$init_4(this);
		clientInfo != null && clientInfo.length > 0 && (this.SENDERCOMPID = getBytesUtf8(clientInfo));
	}

	defineSeed(305, 229, makeCastMap([Q$BaseManager, Q$Manager, Q$BaseTradeManager, Q$StockQueryManager, Q$Exportable]), StockQueryManager_0, StockQueryManager_1);
	_.beginWatch_3 = function beginWatch_14(info, handler) {
		$beginWatchObject(this, info, handler);
	};
	_.endWatch_3 = function endWatch_14(info, handler) {
		$endWatchObject(this, info, handler);
	};
	_.getBackendInfo_0 = function getBackendInfo_4() {
		return _String(this.TARGETCOMPID);
	};
	_.getClientInfo_0 = function getClientInfo_5() {
		return _String(this.SENDERCOMPID);
	};
	_.onDomainData_0 = function onDomainData_15(object, source) {
		var e;
		try {
			$process_4(this, object);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$Exception)) {
				e = $e0;
				$printStackTrace(e);
			} else throw unwrap($e0);
		}
	};
	_.qryBankBalance_0 = function qryBankBalance_0(currency, password, partyID) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P1_longLit;
		requestForPositions.currency = getBytesUtf8(currency);
		requestForPositions.account = getBytesUtf8(password);
		requestForPositions.accountType = P1_longLit;
		if (partyID.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(partyID);
		}
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryDeal_0 = function qryDeal(account, positionStr, reqNum, securityIDSource, securityID, sort_0) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		!account.length || (orderStatusRequest.account = getBytesUtf8(account));
		orderStatusRequest.acctIDSource = P1_longLit;
		!positionStr.length || (orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr));
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!securityID.length || (orderStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityIDSource.length || (orderStatusRequest.instrument.securityIDSource = getBytesUtf8(securityIDSource));
		!sort_0.length || (orderStatusRequest.instrument.securitySubType = getBytesUtf8(sort_0));
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryDelivery_1 = function qryDelivery_0(account, positionStr, reqNum, securityIDSource, securityID, startDate, endDate) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		!account.length || (orderStatusRequest.account = getBytesUtf8(account));
		orderStatusRequest.acctIDSource = P6_longLit;
		!positionStr.length || (orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr));
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!securityID.length || (orderStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityIDSource.length || (orderStatusRequest.instrument.securityIDSource = getBytesUtf8(securityIDSource));
		orderStatusRequest.financingDetails.agreementDesc = getBytesUtf8(' ');
		orderStatusRequest.financingDetails.startDate = getBytesUtf8(startDate);
		orderStatusRequest.financingDetails.endDate = getBytesUtf8(endDate);
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryEntrust_0 = function qryEntrust(account, type_0, positionStr, reqNum, securityIDSource, securityID, sort_0, batchNo) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		orderStatusRequest.ordStatusReqID = getBytesUtf8(type_0);
		!account.length || (orderStatusRequest.account = getBytesUtf8(account));
		orderStatusRequest.acctIDSource = P0_longLit;
		!positionStr.length || (orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr));
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!securityID.length || (orderStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityIDSource.length || (orderStatusRequest.instrument.securityIDSource = getBytesUtf8(securityIDSource));
		!sort_0.length || (orderStatusRequest.instrument.securitySubType = getBytesUtf8(sort_0));
		if (batchNo.length) {
			orderStatusRequest.financingDetails.agreementDesc = getBytesUtf8(' ');
			orderStatusRequest.financingDetails.agreementID = getBytesUtf8(batchNo);
		}
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryFund_1 = function qryFund_0(currency) {
		var buf, fundAccounts, identity, obj, orderStatusRequest;
		identity = mIDGen.generatorID_0();
		fundAccounts = (this.fundAccounts = new FundAccounts_0, $setIdentity(this.fundAccounts, '' + identity), $put_2(this.mMapFundAccounts, '' + identity, this.fundAccounts), this.fundAccounts);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		orderStatusRequest.acctIDSource = P2_longLit;
		!currency.length || (orderStatusRequest.instrument.symbol = getBytesUtf8(currency));
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return fundAccounts;
	};
	_.qryHisDeal_0 = function qryHisDeal(account, positionStr, reqNum, securityIDSource, securityID, StartDate, endDate) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		!account.length || (orderStatusRequest.account = getBytesUtf8(account));
		orderStatusRequest.acctIDSource = P4_longLit;
		!positionStr.length || (orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr));
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!securityID.length || (orderStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityIDSource.length || (orderStatusRequest.instrument.securityIDSource = getBytesUtf8(securityIDSource));
		orderStatusRequest.financingDetails.agreementDesc = getBytesUtf8(' ');
		orderStatusRequest.financingDetails.startDate = getBytesUtf8(StartDate);
		orderStatusRequest.financingDetails.endDate = getBytesUtf8(endDate);
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryHisEntrust_0 = function qryHisEntrust(account, positionStr, reqNum, securityIDSource, securityID, startDate, endDate) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		!account.length || (orderStatusRequest.account = getBytesUtf8(account));
		orderStatusRequest.acctIDSource = P8_longLit;
		orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr);
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!securityID.length || (orderStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityIDSource.length || (orderStatusRequest.instrument.securityIDSource = getBytesUtf8(securityIDSource));
		orderStatusRequest.financingDetails.agreementDesc = getBytesUtf8(' ');
		orderStatusRequest.financingDetails.startDate = getBytesUtf8(startDate);
		orderStatusRequest.financingDetails.endDate = getBytesUtf8(endDate);
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryNewStockBuyLimit_0 = function qryNewStockBuyLimit_0(matchStatus, securityExchange) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P42f_longLit;
		requestForPositions.matchStatus = matchStatus;
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryNewStockNumber_0 = function qryNewStockNumber_0(matchStatus, account, securityID, securityExchange, startDate, endDate, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P439_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		if (account.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(account);
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? __parseAndValidateInt(_String(DEFAULT_LINES_0)) : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryNewStockWinning_0 = function qryNewStockWinning_0(matchStatus, account, securityID, securityExchange, startDate, endDate, reqNum, positionStr) {
		var buf, identity, obj, requestForPositions, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		requestForPositions = new FixRequestForPositions_0;
		requestForPositions.senderCompID = this.SENDERCOMPID;
		requestForPositions.targetCompID = this.TARGETCOMPID;
		requestForPositions.posReqID = getBytesUtf8('' + identity);
		requestForPositions.posReqType = P0_longLit;
		requestForPositions.acctIDSource = P44d_longLit;
		requestForPositions.matchStatus = matchStatus;
		!positionStr.length || (requestForPositions.cstmApplVerID = getBytesUtf8(positionStr));
		if (account.length) {
			requestForPositions.parties.noPartyIDs = 1;
			$allocateParties(requestForPositions.parties, requestForPositions.parties.noPartyIDs);
			requestForPositions.parties.group[0].partyID = getBytesUtf8(account);
		}!securityID.length || (requestForPositions.instrument.securityID = getBytesUtf8(securityID));
		!securityExchange.length || (requestForPositions.instrument.securityExchange = getBytesUtf8(securityExchange));
		requestForPositions.instrument.issueDate = getBytesUtf8(startDate);
		requestForPositions.instrument.maturityDate = getBytesUtf8(endDate);
		requestForPositions.instrument.positionLimit = fromInt(!reqNum.length ? __parseAndValidateInt(_String(DEFAULT_LINES_0)) : __parseAndValidateInt(reqNum));
		buf = allocateDirect(10240);
		$encode_7(requestForPositions, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryPosi_0 = function qryPosi_0(account, positionStr, reqNum, securityIDSource, securityID) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		!account.length || (orderStatusRequest.account = getBytesUtf8(account));
		orderStatusRequest.acctIDSource = P3_longLit;
		!positionStr.length || (orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr));
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!securityID.length || (orderStatusRequest.instrument.securityID = getBytesUtf8(securityID));
		!securityIDSource.length || (orderStatusRequest.instrument.securityIDSource = getBytesUtf8(securityIDSource));
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.STOCK';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.qryTransJour_0 = function qryTransJour(positionStr, reqNum, bankNo) {
		var buf, identity, obj, orderStatusRequest, tradeResData;
		identity = mIDGen.generatorID_0();
		tradeResData = $createTradeResData_0(this, '' + identity);
		orderStatusRequest = new FixOrderStatusRequest_0;
		orderStatusRequest.senderCompID = this.SENDERCOMPID;
		orderStatusRequest.targetCompID = this.TARGETCOMPID;
		orderStatusRequest.clOrdID = getBytesUtf8('' + identity);
		orderStatusRequest.acctIDSource = P5_longLit;
		!positionStr.length || (orderStatusRequest.secondaryClOrdID = getBytesUtf8(positionStr));
		orderStatusRequest.clOrdLinkID = !reqNum.length ? DEFAULT_LINES_0 : getBytesUtf8(reqNum);
		!bankNo.length || (orderStatusRequest.instrument.symbol = getBytesUtf8(bankNo));
		buf = allocateDirect(10240);
		$encode_4(orderStatusRequest, buf);
		obj = new FixObject_0;
		obj.topic = 'HSUF.THIRD';
		$setMessages(obj, buf);
		this.mRepository.beginWatchObject_1(obj);
		return tradeResData;
	};
	_.setBackendInfo_0 = function setBackendInfo_4(targetCompID) {
		targetCompID != null && targetCompID.length > 0 && (this.TARGETCOMPID = getBytesUtf8(targetCompID));
	};
	_.setClientInfo_0 = function setClientInfo_4(senderCompID) {
		senderCompID != null && senderCompID.length > 0 && (this.SENDERCOMPID = getBytesUtf8(senderCompID));
	};
	var DEFAULT_LINES_0;

	function $export_147(this$static) {
		if (!exported_147) {
			exported_147 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_domain_client_trade_query_StockQueryManager_2_classLit, this$static);
			new DomainObject_ExporterImpl_0;
			new EventObject_ExporterImpl_0;
			new Parser_ExporterImpl_0;
			new Repository_ExporterImpl_0;
			new TradeResData_ExporterImpl_0;
			new FundAccounts_ExporterImpl_0;
			$export0_147(this$static);
		}
	}

	function $export0_147(this$static) {
		var pkg = declarePackage('hippo.trade.StockQueryManager');
		var __0, __ = this$static;
		$wnd.hippo.trade.StockQueryManager = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 ? (g = new StockQueryManager_0) : a.length == 1 && (g = new StockQueryManager_1(a[0]));
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.StockQueryManager.prototype = new Object;
		$wnd.hippo.trade.StockQueryManager.DEFAULT_LINES = ($clinit_StockQueryManager(), DEFAULT_LINES_0);
		__0.beginWatch = $entry(function(a0, a1) {
			this.g.beginWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.beginWatchObject = $entry(function(a0, a1) {
			this.g.beginWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatch = $entry(function(a0, a1) {
			this.g.endWatch_3(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.endWatchObject = $entry(function(a0, a1) {
			this.g.endWatchObject_0(a0 == null ? null : a0.g, a1 == null ? null : a1.g);
		});
		__0.getBackendInfo = $entry(function() {
			return this.g.getBackendInfo_0();
		});
		__0.getClientInfo = $entry(function() {
			return this.g.getClientInfo_0();
		});
		__0.getParser = $entry(function() {
			return wrap_0(this.g.getParser_0());
		});
		__0.getRepository = $entry(function() {
			return wrap_0(this.g.getRepository_0());
		});
		__0.init = $entry(function() {
			this.g.init_0();
		});
		__0.invalidate = $entry(function(a0, a1) {
			runDispatch(this.g, Lcom_gf_hippo_domain_client_trade_query_StockQueryManager_2_classLit, 0, arguments, false, false)[0];
		});
		__0.onDomainData = $entry(function(a0, a1) {
			this.g.onDomainData_0(a0 == null ? null : a0.g, a1);
		});
		__0.onDomainError = $entry(function(a0, a1) {
			this.g.onDomainError_0(a0 == null ? null : a0.g, a1);
		});
		__0.qryAmount = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(__static_wrapper_qryAmount_0(this.g, a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qryBankBalance = $entry(function(a0, a1, a2) {
			return wrap_0(this.g.qryBankBalance_0(a0, a1, a2));
		});
		__0.qryDeal = $entry(function(a0, a1, a2, a3, a4, a5) {
			return wrap_0(this.g.qryDeal_0(a0, a1, a2, a3, a4, a5));
		});
		__0.qryDelivery = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(this.g.qryDelivery_1(a0, a1, a2, a3, a4, a5, a6));
		});
		__0.qryEntrust = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(this.g.qryEntrust_0(a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qryFund = $entry(function(a0) {
			return wrap_0(this.g.qryFund_1(a0));
		});
		__0.qryHisDeal = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(this.g.qryHisDeal_0(a0, a1, a2, a3, a4, a5, a6));
		});
		__0.qryHisEntrust = $entry(function(a0, a1, a2, a3, a4, a5, a6) {
			return wrap_0(this.g.qryHisEntrust_0(a0, a1, a2, a3, a4, a5, a6));
		});
		__0.qryNewStockBuyLimit = $entry(function(a0, a1) {
			return wrap_0(this.g.qryNewStockBuyLimit_0(a0, a1));
		});
		__0.qryNewStockNumber = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(this.g.qryNewStockNumber_0(a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qryNewStockWinning = $entry(function(a0, a1, a2, a3, a4, a5, a6, a7) {
			return wrap_0(this.g.qryNewStockWinning_0(a0, a1, a2, a3, a4, a5, a6, a7));
		});
		__0.qryPosi = $entry(function(a0, a1, a2, a3, a4) {
			return wrap_0(this.g.qryPosi_0(a0, a1, a2, a3, a4));
		});
		__0.qryTransJour = $entry(function(a0, a1, a2) {
			return wrap_0(this.g.qryTransJour_0(a0, a1, a2));
		});
		__0.setBackendInfo = $entry(function(a0) {
			this.g.setBackendInfo_0(a0);
		});
		__0.setClientInfo = $entry(function(a0) {
			this.g.setClientInfo_0(a0);
		});
		__0.setParser = $entry(function(a0) {
			this.g.setParser_0(a0 == null ? null : a0.g);
		});
		__0.setRepository = $entry(function(a0) {
			this.g.setRepository_0(a0 == null ? null : a0.g);
		});
		registerDispatchMap(Lcom_gf_hippo_domain_client_trade_query_StockQueryManager_2_classLit, {
			0: {
				1: [
					[function() {
						return this.invalidate_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit]
				],
				2: [
					[function() {
						return this.invalidate_1.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit, 'string']
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.StockQueryManager[p] === undefined && ($wnd.hippo.trade.StockQueryManager[p] = pkg[p]);
	}

	function StockQueryManager_ExporterImpl_0() {
		$export_147(this);
	}

	function __static_wrapper_qryAmount_0(instance, a0, a1, a2, a3, a4, a5, a6, a7) {
		return $qryAmount_0(instance, a0, a1, a2, a3, a4, a5, a6, fromDouble(a7));
	}

	defineSeed(306, 1, {}, StockQueryManager_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_147() {
		return $wnd.hippo.trade.StockQueryManager;
	};
	_.isAssignable = function isAssignable_147(o) {
		return o != null && instanceOf(o, Q$StockQueryManager);
	};
	var exported_147 = false;

	function $getStackTrace(this$static) {
		if (this$static.stackTrace == null) {
			return initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, 0, 0);
		}
		return this$static.stackTrace;
	}

	function $printStackTrace(this$static) {
		var element$array, element$index, element$max, t;
		for (t = this$static; t; t = t.cause) {
			for (element$array = $getStackTrace(t), element$index = 0, element$max = element$array.length; element$index < element$max; ++element$index) {}
		}
	}

	function $setStackTrace(this$static, stackTrace) {
		var c, copy, i_0;
		copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stackTrace.length, 0);
		for (i_0 = 0, c = stackTrace.length; i_0 < c; ++i_0) {
			if (!stackTrace[i_0]) {
				throw new NullPointerException_0;
			}
			copy[i_0] = stackTrace[i_0];
		}
		this$static.stackTrace = copy;
	}

	function $toString(this$static) {
		var className, msg;
		className = this$static.___clazz$.typeName;
		msg = this$static.getMessage_0();
		return msg != null ? className + ': ' + msg : className;
	}

	defineSeed(310, 1, makeCastMap([Q$Serializable, Q$Throwable]));
	_.getMessage_0 = function getMessage_0() {
		return this.detailMessage;
	};
	_.toString$ = function toString_1() {
		return $toString(this);
	};

	function Exception_0() {
		$fillInStackTrace(this);
	}

	defineSeed(309, 310, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));

	function FixGarbledException_0(message) {
		Exception_0.call(this);
		this.description = new StringBuffer_0;
		$append_2(this.description, message);
	}

	defineSeed(308, 309, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), FixGarbledException_0);
	_.getMessage_0 = function getMessage_1() {
		return this.description.impl.string;
	};

	function $getMsgType(msg) {
		var buf, msgTypeInt;
		buf = allocate(getBytesUtf8(msg).length);
		$put(buf, getBytesUtf8(msg));
		$position(buf, 0);
		msgTypeInt = crackMsgType(buf);
		return msgTypeInt;
	}

	function $setMessages(this$static, buf) {
		var bs, bytes, i_0, iLen;
		bytes = $array(buf);
		iLen = 0;
		for (i_0 = 0; i_0 < bytes.length; i_0++) {
			if (bytes[i_0] == 0) break;
			++iLen;
		}
		bs = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, iLen, 1);
		$clinit_Utils();
		arraycopy(bytes, 0, bs, 0, iLen);
		this$static.messages = utf8ToString(bs, 0, bs.length);
	}

	function FixObject_0() {}

	defineSeed(311, 28, makeCastMap([Q$DomainObject, Q$FixObject, Q$Exportable]), FixObject_0);
	_.getMessages_0 = function getMessages() {
		return this.messages;
	};
	_.getModule_0 = function getModule_7() {
		return 'fix';
	};
	_.getMsgType_0 = function getMsgType() {
		return $getMsgType(this.messages);
	};
	_.getMsgType_1 = function getMsgType_0(msg) {
		return $getMsgType(msg);
	};
	_.getTopic_0 = function getTopic_0() {
		return this.topic;
	};
	_.setMessages_0 = function setMessages(buf) {
		$setMessages(this, buf);
	};
	_.setMessages_1 = function setMessages_0(messages) {
		this.messages = messages;
	};
	_.setTopic_0 = function setTopic_0(topic) {
		this.topic = topic;
	};

	function $export_148(this$static) {
		if (!exported_148) {
			exported_148 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_protocol_fix_FixObject_2_classLit, this$static);
			$export0_148(this$static);
		}
	}

	function $export0_148(this$static) {
		var pkg = declarePackage('hippo.common.FixObject');
		var __0, __ = this$static;
		$wnd.hippo.common.FixObject = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new FixObject_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.common.FixObject.prototype = new Object;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getMessages = $entry(function() {
			return this.g.getMessages_0();
		});
		__0.getModule = $entry(function() {
			return this.g.getModule_0();
		});
		__0.getMsgType = $entry(function(a0) {
			return runDispatch(this.g, Lcom_gf_hippo_protocol_fix_FixObject_2_classLit, 0, arguments, false, false)[0];
		});
		__0.getTopic = $entry(function() {
			return this.g.getTopic_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		__0.setMessages = $entry(function(a0) {
			runDispatch(this.g, Lcom_gf_hippo_protocol_fix_FixObject_2_classLit, 1, arguments, false, false)[0];
		});
		__0.setTopic = $entry(function(a0) {
			this.g.setTopic_0(a0);
		});
		registerDispatchMap(Lcom_gf_hippo_protocol_fix_FixObject_2_classLit, {
			0: {
				0: [
					[function() {
						return this.getMsgType_0.apply(this, arguments);
					},
					null, undefined]
				],
				1: [
					[function() {
						return this.getMsgType_1.apply(this, arguments);
					},
					null, undefined, 'string']
				]
			},
			1: {
				1: [
					[function() {
						return this.setMessages_1.apply(this, arguments);
					},
					null, undefined, 'string'],
					[function() {
						return this.setMessages_0.apply(this, arguments);
					},
					null, undefined, Lcom_gf_hippo_protocol_fix_nio_ByteBuffer_2_classLit]
				]
			}
		}, false);
		if (pkg) for (p in pkg)
		$wnd.hippo.common.FixObject[p] === undefined && ($wnd.hippo.common.FixObject[p] = pkg[p]);
	}

	function FixObject_ExporterImpl_0() {
		$export_148(this);
	}

	defineSeed(312, 1, {}, FixObject_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_148() {
		return $wnd.hippo.common.FixObject;
	};
	_.isAssignable = function isAssignable_148(o) {
		return o != null && instanceOf(o, Q$FixObject);
	};
	var exported_148 = false;

	function $getMessage(this$static) {
		var ref, txt;
		txt = this$static.text_0 == null ? 'null' : _String(this$static.text_0);
		ref = this$static.refMsgType == null ? 'null' : _String(this$static.refMsgType);
		return toString_183(this$static.sessionRejectReason) + ': text=' + txt + ' refTagID=' + toString_183(this$static.refTagID) + ' refMsgType=' + ref;
	}

	function FixSessionException_0(sessionRejectReason, text_0, refTagID, refMsgType) {
		Exception_0.call(this);
		this.refTagID = P0_longLit;
		this.refMsgType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1);
		this.sessionRejectReason = P0_longLit;
		this.sessionRejectReason = sessionRejectReason;
		this.text_0 = text_0;
		this.refTagID = refTagID;
		refMsgType != null && (this.refMsgType = refMsgType);
	}

	defineSeed(313, 309, makeCastMap([Q$FixSessionException, Q$Serializable, Q$Exception, Q$Throwable]), FixSessionException_0);
	_.getMessage_0 = function getMessage_2() {
		return $getMessage(this);
	};
	_.refTagID = P0_longLit;
	_.sessionRejectReason = P0_longLit;

	function $clinit_FixUtils() {
		$clinit_FixUtils = nullMethod;
		var buffer, i_0, len;
		digitsBuf = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 24, 1);
		getBytesUtf8('8');
		getBytesUtf8('9');
		MIN_VALUE = getBytesUtf8('-9223372036854775808');
		buf_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 24, 1);
		TAGS = initDim(_3_3B_classLit, makeCastMap([Q$Serializable]), Q$byte_$1, 500, 0);
		for (i_0 = 0; i_0 < TAGS.length; i_0++) {
			len = digits_1(fromInt(i_0)) + 1;
			buffer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, len, 1);
			longToNumeric_0(buffer, len - 1, fromInt(i_0), len - 1);
			buffer[len - 1] = 61;
			TAGS[i_0] = buffer;
		}
		new FixMessageParser_0;
	}

	function computeChecksum(buf, start_0, end) {
		$clinit_FixUtils();
		var array, cks, i_0;
		cks = 0;
		array = $array(buf);
		for (i_0 = start_0; i_0 < end; i_0++) {
			cks += array[i_0];
		}
		return cks % 256;
	}

	function findEndOfMessage(buf) {
		$clinit_FixUtils();
		var pos;
		while (buf.position < buf.limit) {
			if ((pos = scan(buf)) < 0) return;
			$position(buf, pos + 1);
			if ($get(buf.byteArray, buf.position++) != 49) continue;
			if ($get(buf.byteArray, buf.position++) != 48) continue;
			if ($get(buf.byteArray, buf.position++) != 61) continue;
			if ((pos = scan(buf)) < 0) return;
			$position(buf, pos + 1);
			return;
		}
	}

	function fixFloatValueOf(s, length_0) {
		$clinit_FixUtils();
		var c, dec, decimal, decimals, negative, oriLength, start_0, value_0;
		start_0 = 0;
		negative = false;
		oriLength = length_0;
		c = s[0];
		if (c == 45) {
			++start_0;
			--length_0;
			negative = true;
		}
		if (length_0 == 0) throw new NumberFormatException_1('to short number');
		for (decimal = oriLength - 1; decimal >= 0; decimal--)
		if (s[decimal] == 46) break;
		decimals = start_0 + length_0 - 1 - decimal;
		if (decimal > -1) {
			value_0 = mul(longValueOf(s, start_0, decimal - start_0), P2710_longLit);
			dec = 4 < decimals ? 4 : decimals;
			decimal < oriLength - 1 && (value_0 = add_0(value_0, fromInt(intValueOf(s, decimal + 1, dec) * multiplier(4 - dec))));
		} else value_0 = mul(longValueOf(s, start_0, length_0), P2710_longLit);
		if (negative) return neg(value_0);
		return value_0;
	}

	function getMsgType_1(msgType) {
		$clinit_FixUtils();
		return msgType < 255 ? initValues(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, [narrow_byte(msgType)]) : initValues(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, [narrow_byte(msgType >>> 8), narrow_byte(msgType)]);
	}

	function getMsgTypeTagAsInt(b, length_0) {
		$clinit_FixUtils();
		var i_0, val;
		val = 0;
		val |= b[0];
		if (length_0 > 1) for (i_0 = 1; i_0 < length_0; i_0++) {
			val <<= 8;
			val |= b[i_0];
		}
		return val;
	}

	function getTagBooleanValue(msgType, tag, buf) {
		$clinit_FixUtils();
		var c;
		c = $get(buf.byteArray, buf.position++);
		if (c == 1) {
			throw new FixSessionException_0(P4_longLit, getBytesUtf8('Premature end of buffer missing SOH'), fromInt(tag), msgType);
		}
		if ($get(buf.byteArray, buf.position++) != 1) {
			throw new FixSessionException_0(P5_longLit, getBytesUtf8('Integer value length exceeds one character'), fromInt(tag), msgType);
		}
		return c == 89;
	}

	function getTagCharValue(msgType, tag, buf) {
		$clinit_FixUtils();
		var c;
		c = $get(buf.byteArray, buf.position++);
		if (c == 1) {
			throw new FixSessionException_0(P4_longLit, getBytesUtf8('Premature end of buffer missing SOH'), fromInt(tag), msgType);
		}
		if ($get(buf.byteArray, buf.position++) != 1) {
			throw new FixSessionException_0(P5_longLit, getBytesUtf8('Integer value length exceeds one character, read' + $get_0(buf, buf.position - 1)), fromInt(tag), msgType);
		}
		return c;
	}

	function getTagFloatValue(msgType, tag, buf) {
		$clinit_FixUtils();
		var c, start_0, val;
		start_0 = 0;
		fillNul(digitsBuf);
		while ((c = $get(buf.byteArray, buf.position++)) != 1) {
			digitsBuf[start_0++] = c;
			if (start_0 == 22) {
				throw new FixSessionException_0(P5_longLit, getBytesUtf8('Value is incorrect or out of range for this tag 24'), fromInt(tag), msgType);
			}
		}
		try {
			val = fixFloatValueOf(digitsBuf, start_0);
			return val;
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$NumberFormatException)) {
				throw new FixSessionException_0(P6_longLit, getBytesUtf8('Incorrect data format for value'), fromInt(tag), msgType);
			} else throw unwrap($e0);
		}
	}

	function getTagId(out) {
		$clinit_FixUtils();
		var array, i_0, t0, t1, t2, t3, t4, x_0;
		i_0 = out.position;
		array = $array(out);
		if (array[i_0] != 61) {
			t0 = array[i_0] - 48;
			if (array[++i_0] != 61) {
				t1 = array[i_0] - 48;
				if (array[++i_0] != 61) {
					t2 = array[i_0] - 48;
					if (array[++i_0] != 61) {
						t3 = array[i_0] - 48;
						if (array[++i_0] != 61) {
							t4 = array[i_0] - 48;
							if (array[++i_0] != 61) {
								throw new FixGarbledException_0("Tag not terminated by '=' or exceding 5");
							} else {
								x_0 = t4 + t3 * 10 + t2 * 100 + t1 * 1000 + t0 * 10000;
							}
						} else {
							x_0 = t3 + t2 * 10 + t1 * 100 + t0 * 1000;
						}
					} else {
						x_0 = t2 + t1 * 10 + t0 * 100;
					}
				} else {
					x_0 = t1 + t0 * 10;
				}
			} else {
				x_0 = t0;
			}
		} else {
			throw new FixGarbledException_0('Tag with no value');
		}
		$position(out, ++i_0);
		return x_0;
	}

	function getTagIntValue(msgType, tag, buf) {
		$clinit_FixUtils();
		var c, start_0;
		start_0 = 0;
		while ((c = $get(buf.byteArray, buf.position++)) != 1) {
			digitsBuf[start_0++] = c;
			if (start_0 == 24) {
				throw new FixSessionException_0(P5_longLit, getBytesUtf8('Value length exceeds maximum number of digits 24'), fromInt(tag), msgType);
			}
		}
		if (start_0 == 0) throw new FixSessionException_0(P4_longLit, getBytesUtf8('Tag specified without a value'), fromInt(tag), msgType);
		if (c != 1) throw new FixSessionException_0(P4_longLit, getBytesUtf8('Message not terminated by SOH'), fromInt(tag), msgType);
		return intValueOf(digitsBuf, 0, start_0);
	}

	function getTagStringValue(msgType, tag, src_0, dst) {
		$clinit_FixUtils();
		var c, end, start_0;
		start_0 = 0;
		end = dst.length;
		fillNul(dst);
		while ((c = $get(src_0.byteArray, src_0.position++)) != 1) {
			if (start_0 >= end) {
				throw new FixSessionException_0(P5_longLit, getBytesUtf8('Value length exceeds maximum of ' + end), fromInt(tag), msgType);
			} else {
				dst[start_0] = c;
				++start_0;
			}
		}
		if (start_0 == 0) throw new FixSessionException_0(P4_longLit, getBytesUtf8('Tag specified without a value'), fromInt(tag), msgType);
		return dst;
	}

	function longToFixFloat(out, l_0, length_0) {
		var ch_0, count, decimal, j, missingDigits, negative, pos;
		negative = lt(l_0, P0_longLit);
		pos = length_0;
		missingDigits = -(length_0 - 4);
		missingDigits > 0 ? (decimal = 2) : missingDigits < 0 ? (decimal = length_0 - 4 + 1) : (decimal = 2);
		pos += length_0 <= 4 ? decimal + missingDigits : 1;
		fillNul(out);
		fill(out, pos);
		if (eq(l_0, P0_longLit)) {
			out[0] = 48;
			return;
		}
		count = 2;
		j = l_0;
		if (negative) {
			++pos;
			++decimal;
		} else {
			count = 1;
			j = neg(l_0);
		}
		while (neq(l_0 = div(l_0, Pa_longLit), P0_longLit))++count;
		do {
			ch_0 = -toInt(mod(j, Pa_longLit));
			ch_0 > 9 ? (ch_0 = ch_0 - 10 + 97) : (ch_0 += 48);
			out[--pos] = narrow_byte(ch_0);
			pos == decimal && --pos;
		}
		while (neq(j = div(j, Pa_longLit), P0_longLit));
		out[decimal - 1] = 46;
		negative && (out[0] = 45);
	}

	function put_0(out, i_0) {
		var charPos, i2, q, q2, r, sign, size_0;
		if (eq(i_0, P0_longLit)) {
			$set(out.byteArray, out.position++, 48);
			return;
		}
		eq(i_0, N8000000000000000_longLit) && $put(out, MIN_VALUE);
		size_0 = lt(i_0, P0_longLit) ? digits_1(neg(i_0)) + 1 : digits_1(i_0);
		sign = 0;
		charPos = size_0;
		if (lt(i_0, P0_longLit)) {
			sign = 45;
			i_0 = neg(i_0);
		}
		while (gt(i_0, P7fffffff_longLit)) {
			q = div(i_0, P64_longLit);
			r = toInt(sub_0(i_0, add_0(add_0(shl(q, 6), shl(q, 5)), shl(q, 2))));
			i_0 = q;
			buf_0[--charPos] = ($clinit_Utils(), DigitOnes)[r];
			buf_0[--charPos] = DigitTens[r];
		}
		i2 = toInt(i_0);
		while (i2 >= 65536) {
			q2 = ~~ (i2 / 100);
			r = i2 - ((q2 << 6) + (q2 << 5) + (q2 << 2));
			i2 = q2;
			buf_0[--charPos] = ($clinit_Utils(), DigitOnes)[r];
			buf_0[--charPos] = DigitTens[r];
		}
		for (;;) {
			q2 = i2 * 52429 >>> 19;
			r = i2 - ((q2 << 3) + (q2 << 1));
			buf_0[--charPos] = ($clinit_Utils(), digits_0)[r];
			i2 = q2;
			if (q2 == 0) break;
		}
		sign != 0 && (buf_0[--charPos] = sign);
		$put_0(out, buf_0, size_0);
	}

	function put_1(out, buf) {
		var b, b$index, b$max, i_0;
		i_0 = 0;
		for (b$index = 0, b$max = buf.length; b$index < b$max; ++b$index) {
			b = buf[b$index];
			if (b == 1 || b == 0) break;
			++i_0;
		}
		$put_0(out, buf, i_0);
	}

	function putFixFloatTag(buf, tag, value_0) {
		$clinit_FixUtils();
		var length_0;
		length_0 = digits_1(value_0);
		longToFixFloat(digitsBuf, value_0, length_0);
		if (tag >= TAGS.length) {
			put_0(buf, fromInt(tag));
			$set(buf.byteArray, buf.position++, 61);
		} else {
			$put(buf, TAGS[tag]);
		}
		put_1(buf, digitsBuf);
		$set(buf.byteArray, buf.position++, 1);
	}

	function putFixTag(buf, tag, value_0) {
		$clinit_FixUtils();
		if (tag >= TAGS.length) {
			put_0(buf, fromInt(tag));
			$set(buf.byteArray, buf.position++, 61);
		} else {
			$put(buf, TAGS[tag]);
		}
		$set(buf.byteArray, buf.position++, value_0);
		$set(buf.byteArray, buf.position++, 1);
	}

	function putFixTag_0(buf, tag, value_0) {
		$clinit_FixUtils();
		if (tag >= TAGS.length) {
			put_0(buf, fromInt(tag));
			$set(buf.byteArray, buf.position++, 61);
		} else {
			$put(buf, TAGS[tag]);
		}
		if (lt(value_0, P0_longLit)) {
			$set(buf.byteArray, buf.position++, 45);
			value_0 = mul(value_0, N1_longLit);
		}
		put_0(buf, value_0);
		$set(buf.byteArray, buf.position++, 1);
	}

	function putFixTag_1(buf, tag, value_0) {
		$clinit_FixUtils();
		if (tag >= TAGS.length) {
			put_0(buf, fromInt(tag));
			$set(buf.byteArray, buf.position++, 61);
		} else {
			$put(buf, TAGS[tag]);
		}
		put_1(buf, value_0);
		$set(buf.byteArray, buf.position++, 1);
	}

	function putFixTag_2(buf, tag, value_0, end) {
		$clinit_FixUtils();
		if (tag >= TAGS.length) {
			put_0(buf, fromInt(tag));
			$set(buf.byteArray, buf.position++, 61);
		} else {
			$put(buf, TAGS[tag]);
		}
		$put_0(buf, value_0, end);
		$set(buf.byteArray, buf.position++, 1);
	}

	var MIN_VALUE, TAGS, buf_0, digitsBuf;

	function $clinit_MsgTypes() {
		$clinit_MsgTypes = nullMethod;
		UNKNOWN = getBytesUtf8('U0');
		HEARTBEAT = getBytesUtf8('0');
		TESTREQUEST = getBytesUtf8('1');
		RESENDREQUEST = getBytesUtf8('2');
		REJECT = getBytesUtf8('3');
		SEQUENCERESET = getBytesUtf8('4');
		LOGOUT = getBytesUtf8('5');
		IOI = getBytesUtf8('6');
		ADVERTISEMENT = getBytesUtf8('7');
		EXECUTIONREPORT = getBytesUtf8('8');
		ORDERCANCELREJECT = getBytesUtf8('9');
		LOGON = getBytesUtf8('A');
		NEWS = getBytesUtf8('B');
		EMAIL = getBytesUtf8('C');
		NEWORDERSINGLE = getBytesUtf8('D');
		NEWORDERLIST = getBytesUtf8('E');
		ORDERCANCELREQUEST = getBytesUtf8('F');
		ORDERCANCELREPLACEREQUEST = getBytesUtf8('G');
		ORDERSTATUSREQUEST = getBytesUtf8('H');
		ALLOCATIONINSTRUCTION = getBytesUtf8('J');
		LISTCANCELREQUEST = getBytesUtf8('K');
		LISTEXECUTE = getBytesUtf8('L');
		LISTSTATUSREQUEST = getBytesUtf8('M');
		LISTSTATUS = getBytesUtf8('N');
		ALLOCATIONINSTRUCTIONACK = getBytesUtf8('P');
		DONTKNOWTRADEDK = getBytesUtf8('Q');
		QUOTEREQUEST = getBytesUtf8('R');
		QUOTE = getBytesUtf8('S');
		SETTLEMENTINSTRUCTIONS = getBytesUtf8('T');
		MARKETDATAREQUEST = getBytesUtf8('V');
		MARKETDATASNAPSHOTFULLREFRESH = getBytesUtf8('W');
		MARKETDATAINCREMENTALREFRESH = getBytesUtf8('X');
		MARKETDATAREQUESTREJECT = getBytesUtf8('Y');
		QUOTECANCEL = getBytesUtf8('Z');
		QUOTESTATUSREQUEST = getBytesUtf8('a');
		MASSQUOTEACKNOWLEDGEMENT = getBytesUtf8('b');
		SECURITYDEFINITIONREQUEST = getBytesUtf8('c');
		SECURITYDEFINITION = getBytesUtf8('d');
		SECURITYSTATUSREQUEST = getBytesUtf8('e');
		SECURITYSTATUS = getBytesUtf8('f');
		TRADINGSESSIONSTATUSREQUEST = getBytesUtf8('g');
		TRADINGSESSIONSTATUS = getBytesUtf8('h');
		MASSQUOTE = getBytesUtf8('i');
		BUSINESSMESSAGEREJECT = getBytesUtf8('j');
		BIDREQUEST = getBytesUtf8('k');
		BIDRESPONSE = getBytesUtf8('l');
		LISTSTRIKEPRICE = getBytesUtf8('m');
		REGISTRATIONINSTRUCTIONS = getBytesUtf8('o');
		REGISTRATIONINSTRUCTIONSRESPONSE = getBytesUtf8('p');
		ORDERMASSCANCELREQUEST = getBytesUtf8('q');
		ORDERMASSCANCELREPORT = getBytesUtf8('r');
		NEWORDERCROSS = getBytesUtf8('s');
		CROSSORDERCANCELREPLACEREQUEST = getBytesUtf8('t');
		CROSSORDERCANCELREQUEST = getBytesUtf8('u');
		SECURITYTYPEREQUEST = getBytesUtf8('v');
		SECURITYTYPES = getBytesUtf8('w');
		SECURITYLISTREQUEST = getBytesUtf8('x');
		SECURITYLIST = getBytesUtf8('y');
		DERIVATIVESECURITYLISTREQUEST = getBytesUtf8('z');
		DERIVATIVESECURITYLIST = getBytesUtf8('AA');
		NEWORDERMULTILEG = getBytesUtf8('AB');
		MULTILEGORDERCANCELREPLACE = getBytesUtf8('AC');
		TRADECAPTUREREPORTREQUEST = getBytesUtf8('AD');
		TRADECAPTUREREPORT = getBytesUtf8('AE');
		ORDERMASSSTATUSREQUEST = getBytesUtf8('AF');
		QUOTEREQUESTREJECT = getBytesUtf8('AG');
		RFQREQUEST = getBytesUtf8('AH');
		QUOTESTATUSREPORT = getBytesUtf8('AI');
		QUOTERESPONSE = getBytesUtf8('AJ');
		CONFIRMATION = getBytesUtf8('AK');
		POSITIONMAINTENANCEREQUEST = getBytesUtf8('AL');
		POSITIONMAINTENANCEREPORT = getBytesUtf8('AM');
		REQUESTFORPOSITIONS = getBytesUtf8('AN');
		REQUESTFORPOSITIONSACK = getBytesUtf8('AO');
		POSITIONREPORT = getBytesUtf8('AP');
		TRADECAPTUREREPORTREQUESTACK = getBytesUtf8('AQ');
		TRADECAPTUREREPORTACK = getBytesUtf8('AR');
		ALLOCATIONREPORT = getBytesUtf8('AS');
		ALLOCATIONREPORTACK = getBytesUtf8('AT');
		CONFIRMATION_ACK = getBytesUtf8('AU');
		SETTLEMENTINSTRUCTIONREQUEST = getBytesUtf8('AV');
		ASSIGNMENTREPORT = getBytesUtf8('AW');
		COLLATERALREQUEST = getBytesUtf8('AX');
		COLLATERALASSIGNMENT = getBytesUtf8('AY');
		COLLATERALRESPONSE = getBytesUtf8('AZ');
		COLLATERALREPORT = getBytesUtf8('BA');
		COLLATERALINQUIRY = getBytesUtf8('BB');
		NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST = getBytesUtf8('BC');
		NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE = getBytesUtf8('BD');
		USERREQUEST = getBytesUtf8('BE');
		USERRESPONSE = getBytesUtf8('BF');
		COLLATERALINQUIRYACK = getBytesUtf8('BG');
		CONFIRMATIONREQUEST = getBytesUtf8('BH');
		CONTRARYINTENTIONREPORT = getBytesUtf8('BO');
		SECURITYDEFINITIONUPDATEREPORT = getBytesUtf8('BP');
		SECURITYLISTUPDATEREPORT = getBytesUtf8('BK');
		ADJUSTEDPOSITIONREPORT = getBytesUtf8('BL');
		ALLOCATIONINSTRUCTIONALERT = getBytesUtf8('BM');
		EXECUTIONACKNOWLEDGEMENT = getBytesUtf8('BN');
		TRADINGSESSIONLIST = getBytesUtf8('BJ');
		TRADINGSESSIONLISTREQUEST = getBytesUtf8('BI');
		SETTLEMENTOBLIGATIONREPORT = getBytesUtf8('BQ');
		DERIVATIVESECURITYLISTUPDATEREPORT = getBytesUtf8('BR');
		TRADINGSESSIONLISTUPDATEREPORT = getBytesUtf8('BS');
		MARKETDEFINITIONREQUEST = getBytesUtf8('BT');
		MARKETDEFINITION = getBytesUtf8('BU');
		MARKETDEFINITIONUPDATEREPORT = getBytesUtf8('BV');
		USERNOTIFICATION = getBytesUtf8('CB');
		ORDERMASSACTIONREPORT = getBytesUtf8('BZ');
		ORDERMASSACTIONREQUEST = getBytesUtf8('CA');
		APPLICATIONMESSAGEREQUEST = getBytesUtf8('BW');
		APPLICATIONMESSAGEREQUESTACK = getBytesUtf8('BX');
		APPLICATIONMESSAGEREPORT = getBytesUtf8('BY');
		STREAMASSIGNMENTREQUEST = getBytesUtf8('CC');
		STREAMASSIGNMENTREPORT = getBytesUtf8('CD');
		STREAMASSIGNMENTREPORTACK = getBytesUtf8('CE');
		PARTYDETAILSLISTREQUEST = getBytesUtf8('CF');
		PARTYDETAILSLISTREPORT = getBytesUtf8('CG');
	}

	function MsgTypes_0() {
		$clinit_MsgTypes();
	}

	defineSeed(315, 28, makeCastMap([Q$DomainObject, Q$MsgTypes, Q$Exportable]), MsgTypes_0);
	var ADJUSTEDPOSITIONREPORT, ADVERTISEMENT, ALLOCATIONINSTRUCTION, ALLOCATIONINSTRUCTIONACK, ALLOCATIONINSTRUCTIONALERT, ALLOCATIONREPORT, ALLOCATIONREPORTACK, APPLICATIONMESSAGEREPORT, APPLICATIONMESSAGEREQUEST, APPLICATIONMESSAGEREQUESTACK, ASSIGNMENTREPORT, BIDREQUEST, BIDRESPONSE, BUSINESSMESSAGEREJECT, COLLATERALASSIGNMENT, COLLATERALINQUIRY, COLLATERALINQUIRYACK, COLLATERALREPORT, COLLATERALREQUEST, COLLATERALRESPONSE, CONFIRMATION, CONFIRMATIONREQUEST, CONFIRMATION_ACK, CONTRARYINTENTIONREPORT, CROSSORDERCANCELREPLACEREQUEST, CROSSORDERCANCELREQUEST, DERIVATIVESECURITYLIST, DERIVATIVESECURITYLISTREQUEST, DERIVATIVESECURITYLISTUPDATEREPORT, DONTKNOWTRADEDK, EMAIL, EXECUTIONACKNOWLEDGEMENT, EXECUTIONREPORT, HEARTBEAT, IOI, LISTCANCELREQUEST, LISTEXECUTE, LISTSTATUS, LISTSTATUSREQUEST, LISTSTRIKEPRICE, LOGON, LOGOUT, MARKETDATAINCREMENTALREFRESH, MARKETDATAREQUEST, MARKETDATAREQUESTREJECT, MARKETDATASNAPSHOTFULLREFRESH, MARKETDEFINITION, MARKETDEFINITIONREQUEST, MARKETDEFINITIONUPDATEREPORT, MASSQUOTE, MASSQUOTEACKNOWLEDGEMENT, MULTILEGORDERCANCELREPLACE, NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST, NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE, NEWORDERCROSS, NEWORDERLIST, NEWORDERMULTILEG, NEWORDERSINGLE, NEWS, ORDERCANCELREJECT, ORDERCANCELREPLACEREQUEST, ORDERCANCELREQUEST, ORDERMASSACTIONREPORT, ORDERMASSACTIONREQUEST, ORDERMASSCANCELREPORT, ORDERMASSCANCELREQUEST, ORDERMASSSTATUSREQUEST, ORDERSTATUSREQUEST, PARTYDETAILSLISTREPORT, PARTYDETAILSLISTREQUEST, POSITIONMAINTENANCEREPORT, POSITIONMAINTENANCEREQUEST, POSITIONREPORT, QUOTE, QUOTECANCEL, QUOTEREQUEST, QUOTEREQUESTREJECT, QUOTERESPONSE, QUOTESTATUSREPORT, QUOTESTATUSREQUEST, REGISTRATIONINSTRUCTIONS, REGISTRATIONINSTRUCTIONSRESPONSE, REJECT, REQUESTFORPOSITIONS, REQUESTFORPOSITIONSACK, RESENDREQUEST, RFQREQUEST, SECURITYDEFINITION, SECURITYDEFINITIONREQUEST, SECURITYDEFINITIONUPDATEREPORT, SECURITYLIST, SECURITYLISTREQUEST, SECURITYLISTUPDATEREPORT, SECURITYSTATUS, SECURITYSTATUSREQUEST, SECURITYTYPEREQUEST, SECURITYTYPES, SEQUENCERESET, SETTLEMENTINSTRUCTIONREQUEST, SETTLEMENTINSTRUCTIONS, SETTLEMENTOBLIGATIONREPORT, STREAMASSIGNMENTREPORT, STREAMASSIGNMENTREPORTACK, STREAMASSIGNMENTREQUEST, TESTREQUEST, TRADECAPTUREREPORT, TRADECAPTUREREPORTACK, TRADECAPTUREREPORTREQUEST, TRADECAPTUREREPORTREQUESTACK, TRADINGSESSIONLIST, TRADINGSESSIONLISTREQUEST, TRADINGSESSIONLISTUPDATEREPORT, TRADINGSESSIONSTATUS, TRADINGSESSIONSTATUSREQUEST, UNKNOWN, USERNOTIFICATION, USERREQUEST, USERRESPONSE;

	function $export_149(this$static) {
		if (!exported_149) {
			exported_149 = true;
			$clinit_ExporterUtil();
			$addExporter(impl, Lcom_gf_hippo_protocol_fix_MsgTypes_2_classLit, this$static);
			$export0_149(this$static);
		}
	}

	function $export0_149(this$static) {
		var pkg = declarePackage('hippo.trade.MsgTypes');
		var __0, __ = this$static;
		$wnd.hippo.trade.MsgTypes = $entry(function() {
			var g, j = this,
				a = arguments;
			a.length == 1 && __.isAssignable(a[0]) ? (g = a[0]) : a.length == 0 && (g = new MsgTypes_0);
			j.g = g;
			setWrapper(g, j);
			return j;
		});
		__0 = $wnd.hippo.trade.MsgTypes.prototype = new Object;
		$wnd.hippo.trade.MsgTypes.UNKNOWN = ($clinit_MsgTypes(), UNKNOWN);
		$wnd.hippo.trade.MsgTypes.HEARTBEAT = HEARTBEAT;
		$wnd.hippo.trade.MsgTypes.TESTREQUEST = TESTREQUEST;
		$wnd.hippo.trade.MsgTypes.RESENDREQUEST = RESENDREQUEST;
		$wnd.hippo.trade.MsgTypes.REJECT = REJECT;
		$wnd.hippo.trade.MsgTypes.SEQUENCERESET = SEQUENCERESET;
		$wnd.hippo.trade.MsgTypes.LOGOUT = LOGOUT;
		$wnd.hippo.trade.MsgTypes.IOI = IOI;
		$wnd.hippo.trade.MsgTypes.ADVERTISEMENT = ADVERTISEMENT;
		$wnd.hippo.trade.MsgTypes.EXECUTIONREPORT = EXECUTIONREPORT;
		$wnd.hippo.trade.MsgTypes.ORDERCANCELREJECT = ORDERCANCELREJECT;
		$wnd.hippo.trade.MsgTypes.LOGON = LOGON;
		$wnd.hippo.trade.MsgTypes.NEWS = NEWS;
		$wnd.hippo.trade.MsgTypes.EMAIL = EMAIL;
		$wnd.hippo.trade.MsgTypes.NEWORDERSINGLE = NEWORDERSINGLE;
		$wnd.hippo.trade.MsgTypes.NEWORDERLIST = NEWORDERLIST;
		$wnd.hippo.trade.MsgTypes.ORDERCANCELREQUEST = ORDERCANCELREQUEST;
		$wnd.hippo.trade.MsgTypes.ORDERCANCELREPLACEREQUEST = ORDERCANCELREPLACEREQUEST;
		$wnd.hippo.trade.MsgTypes.ORDERSTATUSREQUEST = ORDERSTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONINSTRUCTION = ALLOCATIONINSTRUCTION;
		$wnd.hippo.trade.MsgTypes.LISTCANCELREQUEST = LISTCANCELREQUEST;
		$wnd.hippo.trade.MsgTypes.LISTEXECUTE = LISTEXECUTE;
		$wnd.hippo.trade.MsgTypes.LISTSTATUSREQUEST = LISTSTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.LISTSTATUS = LISTSTATUS;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONINSTRUCTIONACK = ALLOCATIONINSTRUCTIONACK;
		$wnd.hippo.trade.MsgTypes.DONTKNOWTRADEDK = DONTKNOWTRADEDK;
		$wnd.hippo.trade.MsgTypes.QUOTEREQUEST = QUOTEREQUEST;
		$wnd.hippo.trade.MsgTypes.QUOTE = QUOTE;
		$wnd.hippo.trade.MsgTypes.SETTLEMENTINSTRUCTIONS = SETTLEMENTINSTRUCTIONS;
		$wnd.hippo.trade.MsgTypes.MARKETDATAREQUEST = MARKETDATAREQUEST;
		$wnd.hippo.trade.MsgTypes.MARKETDATASNAPSHOTFULLREFRESH = MARKETDATASNAPSHOTFULLREFRESH;
		$wnd.hippo.trade.MsgTypes.MARKETDATAINCREMENTALREFRESH = MARKETDATAINCREMENTALREFRESH;
		$wnd.hippo.trade.MsgTypes.MARKETDATAREQUESTREJECT = MARKETDATAREQUESTREJECT;
		$wnd.hippo.trade.MsgTypes.QUOTECANCEL = QUOTECANCEL;
		$wnd.hippo.trade.MsgTypes.QUOTESTATUSREQUEST = QUOTESTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.MASSQUOTEACKNOWLEDGEMENT = MASSQUOTEACKNOWLEDGEMENT;
		$wnd.hippo.trade.MsgTypes.SECURITYDEFINITIONREQUEST = SECURITYDEFINITIONREQUEST;
		$wnd.hippo.trade.MsgTypes.SECURITYDEFINITION = SECURITYDEFINITION;
		$wnd.hippo.trade.MsgTypes.SECURITYSTATUSREQUEST = SECURITYSTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.SECURITYSTATUS = SECURITYSTATUS;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONSTATUSREQUEST = TRADINGSESSIONSTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONSTATUS = TRADINGSESSIONSTATUS;
		$wnd.hippo.trade.MsgTypes.MASSQUOTE = MASSQUOTE;
		$wnd.hippo.trade.MsgTypes.BUSINESSMESSAGEREJECT = BUSINESSMESSAGEREJECT;
		$wnd.hippo.trade.MsgTypes.BIDREQUEST = BIDREQUEST;
		$wnd.hippo.trade.MsgTypes.BIDRESPONSE = BIDRESPONSE;
		$wnd.hippo.trade.MsgTypes.LISTSTRIKEPRICE = LISTSTRIKEPRICE;
		$wnd.hippo.trade.MsgTypes.REGISTRATIONINSTRUCTIONS = REGISTRATIONINSTRUCTIONS;
		$wnd.hippo.trade.MsgTypes.REGISTRATIONINSTRUCTIONSRESPONSE = REGISTRATIONINSTRUCTIONSRESPONSE;
		$wnd.hippo.trade.MsgTypes.ORDERMASSCANCELREQUEST = ORDERMASSCANCELREQUEST;
		$wnd.hippo.trade.MsgTypes.ORDERMASSCANCELREPORT = ORDERMASSCANCELREPORT;
		$wnd.hippo.trade.MsgTypes.NEWORDERCROSS = NEWORDERCROSS;
		$wnd.hippo.trade.MsgTypes.CROSSORDERCANCELREPLACEREQUEST = CROSSORDERCANCELREPLACEREQUEST;
		$wnd.hippo.trade.MsgTypes.CROSSORDERCANCELREQUEST = CROSSORDERCANCELREQUEST;
		$wnd.hippo.trade.MsgTypes.SECURITYTYPEREQUEST = SECURITYTYPEREQUEST;
		$wnd.hippo.trade.MsgTypes.SECURITYTYPES = SECURITYTYPES;
		$wnd.hippo.trade.MsgTypes.SECURITYLISTREQUEST = SECURITYLISTREQUEST;
		$wnd.hippo.trade.MsgTypes.SECURITYLIST = SECURITYLIST;
		$wnd.hippo.trade.MsgTypes.DERIVATIVESECURITYLISTREQUEST = DERIVATIVESECURITYLISTREQUEST;
		$wnd.hippo.trade.MsgTypes.DERIVATIVESECURITYLIST = DERIVATIVESECURITYLIST;
		$wnd.hippo.trade.MsgTypes.NEWORDERMULTILEG = NEWORDERMULTILEG;
		$wnd.hippo.trade.MsgTypes.MULTILEGORDERCANCELREPLACE = MULTILEGORDERCANCELREPLACE;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORTREQUEST = TRADECAPTUREREPORTREQUEST;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORT = TRADECAPTUREREPORT;
		$wnd.hippo.trade.MsgTypes.ORDERMASSSTATUSREQUEST = ORDERMASSSTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.QUOTEREQUESTREJECT = QUOTEREQUESTREJECT;
		$wnd.hippo.trade.MsgTypes.RFQREQUEST = RFQREQUEST;
		$wnd.hippo.trade.MsgTypes.QUOTESTATUSREPORT = QUOTESTATUSREPORT;
		$wnd.hippo.trade.MsgTypes.QUOTERESPONSE = QUOTERESPONSE;
		$wnd.hippo.trade.MsgTypes.CONFIRMATION = CONFIRMATION;
		$wnd.hippo.trade.MsgTypes.POSITIONMAINTENANCEREQUEST = POSITIONMAINTENANCEREQUEST;
		$wnd.hippo.trade.MsgTypes.POSITIONMAINTENANCEREPORT = POSITIONMAINTENANCEREPORT;
		$wnd.hippo.trade.MsgTypes.REQUESTFORPOSITIONS = REQUESTFORPOSITIONS;
		$wnd.hippo.trade.MsgTypes.REQUESTFORPOSITIONSACK = REQUESTFORPOSITIONSACK;
		$wnd.hippo.trade.MsgTypes.POSITIONREPORT = POSITIONREPORT;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORTREQUESTACK = TRADECAPTUREREPORTREQUESTACK;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORTACK = TRADECAPTUREREPORTACK;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONREPORT = ALLOCATIONREPORT;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONREPORTACK = ALLOCATIONREPORTACK;
		$wnd.hippo.trade.MsgTypes.CONFIRMATION_ACK = CONFIRMATION_ACK;
		$wnd.hippo.trade.MsgTypes.SETTLEMENTINSTRUCTIONREQUEST = SETTLEMENTINSTRUCTIONREQUEST;
		$wnd.hippo.trade.MsgTypes.ASSIGNMENTREPORT = ASSIGNMENTREPORT;
		$wnd.hippo.trade.MsgTypes.COLLATERALREQUEST = COLLATERALREQUEST;
		$wnd.hippo.trade.MsgTypes.COLLATERALASSIGNMENT = COLLATERALASSIGNMENT;
		$wnd.hippo.trade.MsgTypes.COLLATERALRESPONSE = COLLATERALRESPONSE;
		$wnd.hippo.trade.MsgTypes.COLLATERALREPORT = COLLATERALREPORT;
		$wnd.hippo.trade.MsgTypes.COLLATERALINQUIRY = COLLATERALINQUIRY;
		$wnd.hippo.trade.MsgTypes.NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST = NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST;
		$wnd.hippo.trade.MsgTypes.NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE = NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE;
		$wnd.hippo.trade.MsgTypes.USERREQUEST = USERREQUEST;
		$wnd.hippo.trade.MsgTypes.USERRESPONSE = USERRESPONSE;
		$wnd.hippo.trade.MsgTypes.COLLATERALINQUIRYACK = COLLATERALINQUIRYACK;
		$wnd.hippo.trade.MsgTypes.CONFIRMATIONREQUEST = CONFIRMATIONREQUEST;
		$wnd.hippo.trade.MsgTypes.CONTRARYINTENTIONREPORT = CONTRARYINTENTIONREPORT;
		$wnd.hippo.trade.MsgTypes.SECURITYDEFINITIONUPDATEREPORT = SECURITYDEFINITIONUPDATEREPORT;
		$wnd.hippo.trade.MsgTypes.SECURITYLISTUPDATEREPORT = SECURITYLISTUPDATEREPORT;
		$wnd.hippo.trade.MsgTypes.ADJUSTEDPOSITIONREPORT = ADJUSTEDPOSITIONREPORT;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONINSTRUCTIONALERT = ALLOCATIONINSTRUCTIONALERT;
		$wnd.hippo.trade.MsgTypes.EXECUTIONACKNOWLEDGEMENT = EXECUTIONACKNOWLEDGEMENT;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONLIST = TRADINGSESSIONLIST;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONLISTREQUEST = TRADINGSESSIONLISTREQUEST;
		$wnd.hippo.trade.MsgTypes.SETTLEMENTOBLIGATIONREPORT = SETTLEMENTOBLIGATIONREPORT;
		$wnd.hippo.trade.MsgTypes.DERIVATIVESECURITYLISTUPDATEREPORT = DERIVATIVESECURITYLISTUPDATEREPORT;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONLISTUPDATEREPORT = TRADINGSESSIONLISTUPDATEREPORT;
		$wnd.hippo.trade.MsgTypes.MARKETDEFINITIONREQUEST = MARKETDEFINITIONREQUEST;
		$wnd.hippo.trade.MsgTypes.MARKETDEFINITION = MARKETDEFINITION;
		$wnd.hippo.trade.MsgTypes.MARKETDEFINITIONUPDATEREPORT = MARKETDEFINITIONUPDATEREPORT;
		$wnd.hippo.trade.MsgTypes.USERNOTIFICATION = USERNOTIFICATION;
		$wnd.hippo.trade.MsgTypes.ORDERMASSACTIONREPORT = ORDERMASSACTIONREPORT;
		$wnd.hippo.trade.MsgTypes.ORDERMASSACTIONREQUEST = ORDERMASSACTIONREQUEST;
		$wnd.hippo.trade.MsgTypes.APPLICATIONMESSAGEREQUEST = APPLICATIONMESSAGEREQUEST;
		$wnd.hippo.trade.MsgTypes.APPLICATIONMESSAGEREQUESTACK = APPLICATIONMESSAGEREQUESTACK;
		$wnd.hippo.trade.MsgTypes.APPLICATIONMESSAGEREPORT = APPLICATIONMESSAGEREPORT;
		$wnd.hippo.trade.MsgTypes.STREAMASSIGNMENTREQUEST = STREAMASSIGNMENTREQUEST;
		$wnd.hippo.trade.MsgTypes.STREAMASSIGNMENTREPORT = STREAMASSIGNMENTREPORT;
		$wnd.hippo.trade.MsgTypes.STREAMASSIGNMENTREPORTACK = STREAMASSIGNMENTREPORTACK;
		$wnd.hippo.trade.MsgTypes.PARTYDETAILSLISTREQUEST = PARTYDETAILSLISTREQUEST;
		$wnd.hippo.trade.MsgTypes.PARTYDETAILSLISTREPORT = PARTYDETAILSLISTREPORT;
		$wnd.hippo.trade.MsgTypes.UNKNOWN_INT = 21808;
		$wnd.hippo.trade.MsgTypes.HEARTBEAT_INT = 48;
		$wnd.hippo.trade.MsgTypes.TESTREQUEST_INT = 49;
		$wnd.hippo.trade.MsgTypes.RESENDREQUEST_INT = 50;
		$wnd.hippo.trade.MsgTypes.REJECT_INT = 51;
		$wnd.hippo.trade.MsgTypes.SEQUENCERESET_INT = 52;
		$wnd.hippo.trade.MsgTypes.LOGOUT_INT = 53;
		$wnd.hippo.trade.MsgTypes.IOI_INT = 54;
		$wnd.hippo.trade.MsgTypes.ADVERTISEMENT_INT = 55;
		$wnd.hippo.trade.MsgTypes.EXECUTIONREPORT_INT = 56;
		$wnd.hippo.trade.MsgTypes.ORDERCANCELREJECT_INT = 57;
		$wnd.hippo.trade.MsgTypes.LOGON_INT = 65;
		$wnd.hippo.trade.MsgTypes.NEWS_INT = 66;
		$wnd.hippo.trade.MsgTypes.EMAIL_INT = 67;
		$wnd.hippo.trade.MsgTypes.NEWORDERSINGLE_INT = 68;
		$wnd.hippo.trade.MsgTypes.NEWORDERLIST_INT = 69;
		$wnd.hippo.trade.MsgTypes.ORDERCANCELREQUEST_INT = 70;
		$wnd.hippo.trade.MsgTypes.ORDERCANCELREPLACEREQUEST_INT = 71;
		$wnd.hippo.trade.MsgTypes.ORDERSTATUSREQUEST_INT = 72;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONINSTRUCTION_INT = 74;
		$wnd.hippo.trade.MsgTypes.LISTCANCELREQUEST_INT = 75;
		$wnd.hippo.trade.MsgTypes.LISTEXECUTE_INT = 76;
		$wnd.hippo.trade.MsgTypes.LISTSTATUSREQUEST_INT = 77;
		$wnd.hippo.trade.MsgTypes.LISTSTATUS_INT = 78;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONINSTRUCTIONACK_INT = 80;
		$wnd.hippo.trade.MsgTypes.DONTKNOWTRADEDK_INT = 81;
		$wnd.hippo.trade.MsgTypes.QUOTEREQUEST_INT = 82;
		$wnd.hippo.trade.MsgTypes.QUOTE_INT = 83;
		$wnd.hippo.trade.MsgTypes.SETTLEMENTINSTRUCTIONS_INT = 84;
		$wnd.hippo.trade.MsgTypes.MARKETDATAREQUEST_INT = 86;
		$wnd.hippo.trade.MsgTypes.MARKETDATASNAPSHOTFULLREFRESH_INT = 87;
		$wnd.hippo.trade.MsgTypes.MARKETDATAINCREMENTALREFRESH_INT = 88;
		$wnd.hippo.trade.MsgTypes.MARKETDATAREQUESTREJECT_INT = 89;
		$wnd.hippo.trade.MsgTypes.QUOTECANCEL_INT = 90;
		$wnd.hippo.trade.MsgTypes.QUOTESTATUSREQUEST_INT = 97;
		$wnd.hippo.trade.MsgTypes.MASSQUOTEACKNOWLEDGEMENT_INT = 98;
		$wnd.hippo.trade.MsgTypes.SECURITYDEFINITIONREQUEST_INT = 99;
		$wnd.hippo.trade.MsgTypes.SECURITYDEFINITION_INT = 100;
		$wnd.hippo.trade.MsgTypes.SECURITYSTATUSREQUEST_INT = 101;
		$wnd.hippo.trade.MsgTypes.SECURITYSTATUS_INT = 102;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONSTATUSREQUEST_INT = 103;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONSTATUS_INT = 104;
		$wnd.hippo.trade.MsgTypes.MASSQUOTE_INT = 105;
		$wnd.hippo.trade.MsgTypes.BUSINESSMESSAGEREJECT_INT = 106;
		$wnd.hippo.trade.MsgTypes.BIDREQUEST_INT = 107;
		$wnd.hippo.trade.MsgTypes.BIDRESPONSE_INT = 108;
		$wnd.hippo.trade.MsgTypes.LISTSTRIKEPRICE_INT = 109;
		$wnd.hippo.trade.MsgTypes.REGISTRATIONINSTRUCTIONS_INT = 111;
		$wnd.hippo.trade.MsgTypes.REGISTRATIONINSTRUCTIONSRESPONSE_INT = 112;
		$wnd.hippo.trade.MsgTypes.ORDERMASSCANCELREQUEST_INT = 113;
		$wnd.hippo.trade.MsgTypes.ORDERMASSCANCELREPORT_INT = 114;
		$wnd.hippo.trade.MsgTypes.NEWORDERCROSS_INT = 115;
		$wnd.hippo.trade.MsgTypes.CROSSORDERCANCELREPLACEREQUEST_INT = 116;
		$wnd.hippo.trade.MsgTypes.CROSSORDERCANCELREQUEST_INT = 117;
		$wnd.hippo.trade.MsgTypes.SECURITYTYPEREQUEST_INT = 118;
		$wnd.hippo.trade.MsgTypes.SECURITYTYPES_INT = 119;
		$wnd.hippo.trade.MsgTypes.SECURITYLISTREQUEST_INT = 120;
		$wnd.hippo.trade.MsgTypes.SECURITYLIST_INT = 121;
		$wnd.hippo.trade.MsgTypes.DERIVATIVESECURITYLISTREQUEST_INT = 122;
		$wnd.hippo.trade.MsgTypes.DERIVATIVESECURITYLIST_INT = 16705;
		$wnd.hippo.trade.MsgTypes.NEWORDERMULTILEG_INT = 16706;
		$wnd.hippo.trade.MsgTypes.MULTILEGORDERCANCELREPLACE_INT = 16707;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORTREQUEST_INT = 16708;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORT_INT = 16709;
		$wnd.hippo.trade.MsgTypes.ORDERMASSSTATUSREQUEST_INT = 16710;
		$wnd.hippo.trade.MsgTypes.QUOTEREQUESTREJECT_INT = 16711;
		$wnd.hippo.trade.MsgTypes.RFQREQUEST_INT = 16712;
		$wnd.hippo.trade.MsgTypes.QUOTESTATUSREPORT_INT = 16713;
		$wnd.hippo.trade.MsgTypes.QUOTERESPONSE_INT = 16714;
		$wnd.hippo.trade.MsgTypes.CONFIRMATION_INT = 16715;
		$wnd.hippo.trade.MsgTypes.POSITIONMAINTENANCEREQUEST_INT = 16716;
		$wnd.hippo.trade.MsgTypes.POSITIONMAINTENANCEREPORT_INT = 16717;
		$wnd.hippo.trade.MsgTypes.REQUESTFORPOSITIONS_INT = 16718;
		$wnd.hippo.trade.MsgTypes.REQUESTFORPOSITIONSACK_INT = 16719;
		$wnd.hippo.trade.MsgTypes.POSITIONREPORT_INT = 16720;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORTREQUESTACK_INT = 16721;
		$wnd.hippo.trade.MsgTypes.TRADECAPTUREREPORTACK_INT = 16722;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONREPORT_INT = 16723;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONREPORTACK_INT = 16724;
		$wnd.hippo.trade.MsgTypes.CONFIRMATION_ACK_INT = 16725;
		$wnd.hippo.trade.MsgTypes.SETTLEMENTINSTRUCTIONREQUEST_INT = 16726;
		$wnd.hippo.trade.MsgTypes.ASSIGNMENTREPORT_INT = 16727;
		$wnd.hippo.trade.MsgTypes.COLLATERALREQUEST_INT = 16728;
		$wnd.hippo.trade.MsgTypes.COLLATERALASSIGNMENT_INT = 16729;
		$wnd.hippo.trade.MsgTypes.COLLATERALRESPONSE_INT = 16730;
		$wnd.hippo.trade.MsgTypes.COLLATERALREPORT_INT = 16961;
		$wnd.hippo.trade.MsgTypes.COLLATERALINQUIRY_INT = 16962;
		$wnd.hippo.trade.MsgTypes.NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST_INT = 16963;
		$wnd.hippo.trade.MsgTypes.NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE_INT = 16964;
		$wnd.hippo.trade.MsgTypes.USERREQUEST_INT = 16965;
		$wnd.hippo.trade.MsgTypes.USERRESPONSE_INT = 16966;
		$wnd.hippo.trade.MsgTypes.COLLATERALINQUIRYACK_INT = 16967;
		$wnd.hippo.trade.MsgTypes.CONFIRMATIONREQUEST_INT = 16968;
		$wnd.hippo.trade.MsgTypes.CONTRARYINTENTIONREPORT_INT = 16975;
		$wnd.hippo.trade.MsgTypes.SECURITYDEFINITIONUPDATEREPORT_INT = 16976;
		$wnd.hippo.trade.MsgTypes.SECURITYLISTUPDATEREPORT_INT = 16971;
		$wnd.hippo.trade.MsgTypes.ADJUSTEDPOSITIONREPORT_INT = 16972;
		$wnd.hippo.trade.MsgTypes.ALLOCATIONINSTRUCTIONALERT_INT = 16973;
		$wnd.hippo.trade.MsgTypes.EXECUTIONACKNOWLEDGEMENT_INT = 16974;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONLIST_INT = 16970;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONLISTREQUEST_INT = 16969;
		$wnd.hippo.trade.MsgTypes.SETTLEMENTOBLIGATIONREPORT_INT = 16977;
		$wnd.hippo.trade.MsgTypes.DERIVATIVESECURITYLISTUPDATEREPORT_INT = 16978;
		$wnd.hippo.trade.MsgTypes.TRADINGSESSIONLISTUPDATEREPORT_INT = 16979;
		$wnd.hippo.trade.MsgTypes.MARKETDEFINITIONREQUEST_INT = 16980;
		$wnd.hippo.trade.MsgTypes.MARKETDEFINITION_INT = 16981;
		$wnd.hippo.trade.MsgTypes.MARKETDEFINITIONUPDATEREPORT_INT = 16982;
		$wnd.hippo.trade.MsgTypes.USERNOTIFICATION_INT = 17218;
		$wnd.hippo.trade.MsgTypes.ORDERMASSACTIONREPORT_INT = 16986;
		$wnd.hippo.trade.MsgTypes.ORDERMASSACTIONREQUEST_INT = 17217;
		$wnd.hippo.trade.MsgTypes.APPLICATIONMESSAGEREQUEST_INT = 16983;
		$wnd.hippo.trade.MsgTypes.APPLICATIONMESSAGEREQUESTACK_INT = 16984;
		$wnd.hippo.trade.MsgTypes.APPLICATIONMESSAGEREPORT_INT = 16985;
		$wnd.hippo.trade.MsgTypes.STREAMASSIGNMENTREQUEST_INT = 17219;
		$wnd.hippo.trade.MsgTypes.STREAMASSIGNMENTREPORT_INT = 17220;
		$wnd.hippo.trade.MsgTypes.STREAMASSIGNMENTREPORTACK_INT = 17221;
		$wnd.hippo.trade.MsgTypes.PARTYDETAILSLISTREQUEST_INT = 17222;
		$wnd.hippo.trade.MsgTypes.PARTYDETAILSLISTREPORT_INT = 17223;
		__0.getId = $entry(function() {
			return this.g.getId_0();
		});
		__0.getType = $entry(function() {
			return this.g.getType_0();
		});
		if (pkg) for (p in pkg)
		$wnd.hippo.trade.MsgTypes[p] === undefined && ($wnd.hippo.trade.MsgTypes[p] = pkg[p]);
	}

	function MsgTypes_ExporterImpl_0() {
		$export_149(this);
	}

	defineSeed(316, 1, {}, MsgTypes_ExporterImpl_0);
	_.getJsConstructor = function getJsConstructor_149() {
		return $wnd.hippo.trade.MsgTypes;
	};
	_.isAssignable = function isAssignable_149(o) {
		return o != null && instanceOf(o, Q$MsgTypes);
	};
	var exported_149 = false;

	function $clinit_UtcDateOnlyConverter() {
		$clinit_UtcDateOnlyConverter = nullMethod;
		$clinit_DateTimeFormat();
		getFormat('yyyyMMdd', new DefaultDateTimeFormatInfo_0);
	}

	function $clinit_UtcTimeOnlyConverter() {
		$clinit_UtcTimeOnlyConverter = nullMethod;
		$clinit_DateTimeFormat();
		getFormat('HH:mm:ss', new DefaultDateTimeFormatInfo_0);
	}

	function $clinit_UtcTimestampConverter() {
		$clinit_UtcTimestampConverter = nullMethod;
		$clinit_DateTimeFormat();
		getFormat('yyyyMMdd-HH:mm:ss', new DefaultDateTimeFormatInfo_0);
		new HashMap_0;
	}

	function $clinit_Utils() {
		$clinit_Utils = nullMethod;
		$clinit_UtcTimestampConverter();
		$clinit_UtcTimeOnlyConverter();
		$clinit_UtcDateOnlyConverter();
		digitsBuf_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 24, 1);
		DigitOnes = initValues(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
		DigitTens = initValues(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, [48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57]);
		digits_0 = initValues(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);
	}

	function digits_1(number) {
		$clinit_Utils();
		number = lt(number, P0_longLit) ? neg(number) : number;
		if (lt(number, Pa_longLit)) return 1;
		if (lt(number, P64_longLit)) return 2;
		if (lt(number, P3e8_longLit)) return 3;
		if (lt(number, P2710_longLit)) return 4;
		if (lt(number, P186a0_longLit)) return 5;
		if (lt(number, Pf4240_longLit)) return 6;
		if (lt(number, P989680_longLit)) return 7;
		if (lt(number, P5f5e100_longLit)) return 8;
		if (lt(number, P3b9aca00_longLit)) return 9;
		if (lt(number, P2540be400_longLit)) return 10;
		if (lt(number, P174876e800_longLit)) return 11;
		if (lt(number, Pe8d4a51000_longLit)) return 12;
		if (lt(number, P9184e72a000_longLit)) return 13;
		if (lt(number, P5af3107a4000_longLit)) return 14;
		if (lt(number, P38d7ea4c68000_longLit)) return 15;
		if (lt(number, P2386f26fc10000_longLit)) return 16;
		if (lt(number, P16345785d8a0000_longLit)) return 17;
		if (lt(number, Pde0b6b3a7640000_longLit)) return 18;
		return 19;
	}

	function equals_12(x_0, y_0) {
		$clinit_Utils();
		var len, offset;
		len = x_0.length < y_0.length ? x_0.length : y_0.length;
		offset = 0;
		while (len > 0) {
			if (x_0[offset] != y_0[offset]) return false;
			++offset;
			--len;
		}
		return true;
	}

	function fill(buf, len) {
		$clinit_Utils();
		var i_0;
		for (i_0 = 0; i_0 < len; i_0++)
		buf[i_0] = 48;
	}

	function fillNul(buf) {
		$clinit_Utils();
		var i_0;
		for (i_0 = 0; i_0 < buf.length; i_0++)
		buf[i_0] = 0;
	}

	function intValueOf(b, pos, len) {
		$clinit_Utils();
		var sign, x_0;
		while (len > 0 && (b[pos] == 0 || b[pos] == 32)) {
			++pos;
			--len;
		}
		sign = 1;
		if (b[pos] == 43) {
			sign = 1;
			--len;
			++pos;
		} else if (b[pos] == 45) {
			sign = -1;
			--len;
			++pos;
		}
		x_0 = 0;
		while (len > 0 && b[pos] >= 48 && b[pos] <= 57) {
			x_0 *= 10;
			x_0 += b[pos] - 48;
			--len;
			++pos;
		}
		if (len != 0) throw new NumberFormatException_0;
		return sign * x_0;
	}

	function lastIndexTrim(arr) {
		$clinit_Utils();
		var len;
		len = arr.length;
		if (len > 0) {
			while (len > 0 && arr[len - 1] == 0)--len;
			return len;
		}
		return len;
	}

	function longToNumeric(out, l_0, digits) {
		$clinit_Utils();
		longToNumeric_1(digitsBuf_0, l_0, digits);
		$put_0(out, digitsBuf_0, digits);
	}

	function longToNumeric_0(out, outLen, l_0, length_0) {
		$clinit_Utils();
		var ch_0, count, j, negative, pos;
		fill(out, outLen);
		if (eq(l_0, P0_longLit)) {
			out[length_0 - 1] = 48;
			return;
		}
		count = 2;
		j = l_0;
		negative = lt(l_0, P0_longLit);
		if (!negative) {
			count = 1;
			j = neg(l_0);
		}
		while (neq(l_0 = div(l_0, Pa_longLit), P0_longLit))++count;
		pos = length_0;
		do {
			ch_0 = -toInt(mod(j, Pa_longLit));
			ch_0 > 9 ? (ch_0 = ch_0 - 10 + 97) : (ch_0 += 48);
			out[--pos] = narrow_byte(ch_0);
		}
		while (neq(j = div(j, Pa_longLit), P0_longLit));
		negative && (out[0] = 45);
	}

	function longToNumeric_1(out, l_0, length_0) {
		longToNumeric_0(out, out.length, l_0, length_0);
	}

	function longValueOf(b, pos, len) {
		$clinit_Utils();
		var x_0;
		while (len > 0 && (b[pos] == 0 || b[pos] == 32)) {
			++pos;
			--len;
		}
		x_0 = P0_longLit;
		while (len > 0 && b[pos] >= 48 && b[pos] <= 57) {
			x_0 = mul(x_0, Pa_longLit);
			x_0 = add_0(x_0, fromInt(b[pos] - 48));
			--len;
			++pos;
		}
		if (len != 0) throw new NumberFormatException_0;
		return x_0;
	}

	function multiplier(number) {
		$clinit_Utils();
		switch (number) {
		case 0:
			return 1;
		case 1:
			return 10;
		case 2:
			return 100;
		case 3:
			return 1000;
		case 4:
			return 10000;
		case 5:
			return 100000;
		case 6:
			return 1000000;
		case 7:
			return 10000000;
		case 8:
			return 100000000;
		default:
		case 9:
			return 1000000000;
		}
	}

	function scan(buf) {
		$clinit_Utils();
		var pos;
		buf.mark = buf.position;
		while ($get(buf.byteArray, buf.position++) != 1) {}
		pos = buf.position - 1;
		$reset(buf);
		return pos;
	}

	var DigitOnes, DigitTens, digits_0, digitsBuf_0;

	function $setBuffer(this$static, buf) {
		this$static.buf = buf;
	}

	defineSeed(323, 1, {});
	_.msgTypeInt = 0;

	function $clinit_FixMessage() {
		$clinit_FixMessage = nullMethod;
		tmpMsgType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 4, 1);
		tmpBeginString = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE).length, 1);
	}

	function $equals(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixMessage)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		equals_12(this$static.beginString, msg.beginString) || (ret = false);
		equals_12(this$static.applVerID, msg.applVerID) || (ret = false);
		equals_12(this$static.cstmApplVerID, msg.cstmApplVerID) || (ret = false);
		if (neq(this$static.applExtID, msg.applExtID)) {
			ret = false;
			$print((valueOf_1(this$static.applExtID), valueOf_1(msg.applExtID)));
		}
		equals_12(this$static.senderCompID, msg.senderCompID) || (ret = false);
		equals_12(this$static.targetCompID, msg.targetCompID) || (ret = false);
		equals_12(this$static.onBehalfOfCompID, msg.onBehalfOfCompID) || (ret = false);
		equals_12(this$static.deliverToCompID, msg.deliverToCompID) || (ret = false);
		if (neq(this$static.secureDataLen, msg.secureDataLen)) {
			ret = false;
			$print((valueOf_1(this$static.secureDataLen), valueOf_1(msg.secureDataLen)));
		}
		equals_12(this$static.secureData, msg.secureData) || (ret = false);
		if (neq(this$static.msgSeqNum, msg.msgSeqNum)) {
			ret = false;
			$print((valueOf_1(this$static.msgSeqNum), valueOf_1(msg.msgSeqNum)));
		}
		equals_12(this$static.senderSubID, msg.senderSubID) || (ret = false);
		equals_12(this$static.senderLocationID, msg.senderLocationID) || (ret = false);
		equals_12(this$static.targetSubID, msg.targetSubID) || (ret = false);
		equals_12(this$static.targetLocationID, msg.targetLocationID) || (ret = false);
		equals_12(this$static.onBehalfOfSubID, msg.onBehalfOfSubID) || (ret = false);
		equals_12(this$static.onBehalfOfLocationID, msg.onBehalfOfLocationID) || (ret = false);
		equals_12(this$static.deliverToSubID, msg.deliverToSubID) || (ret = false);
		equals_12(this$static.deliverToLocationID, msg.deliverToLocationID) || (ret = false);
		if (this$static.possDupFlag != msg.possDupFlag) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this$static.possResend != msg.possResend) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this$static.xmlDataLen, msg.xmlDataLen)) {
			ret = false;
			$print((valueOf_1(this$static.xmlDataLen), valueOf_1(msg.xmlDataLen)));
		}
		equals_12(this$static.xmlData, msg.xmlData) || (ret = false);
		equals_12(this$static.messageEncoding, msg.messageEncoding) || (ret = false);
		if (neq(this$static.lastMsgSeqNumProcessed, msg.lastMsgSeqNumProcessed)) {
			ret = false;
			$print((valueOf_1(this$static.lastMsgSeqNumProcessed), valueOf_1(msg.lastMsgSeqNumProcessed)));
		}
		$equals_27(this$static.hopGrp, msg.hopGrp) || (ret = false);
		return ret;
	}

	function $getAll(this$static) {
		var bodyLength, checkSumBegin, id_0, lastTagPosition, tagId, value_0;
		if ($remaining(this$static.buf) < ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG).length + 1 + 5) throw new FixGarbledException_0('Message too short to contain mandatory header tags');
		tagId = getTagId(this$static.buf);
		if (tagId != 8) throw new FixGarbledException_0('First tag in FIX message is not BEGINSTRING (8)');
		getTagStringValue(null, 8, this$static.buf, tmpBeginString);
		if (!equals_12(BEGINSTRING_VALUE, tmpBeginString)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('BeginString not equal to: ' + _String(BEGINSTRING_VALUE)), P8_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		tagId = getTagId(this$static.buf);
		if (tagId != 9) throw new FixGarbledException_0('Second tag in FIX message is not BODYLENGTH (9)');
		bodyLength = getTagIntValue(null, 9, this$static.buf);
		if (bodyLength < 0) throw new FixGarbledException_0('Invalid BODYLENGTH (9) value: ' + bodyLength);
		checkSumBegin = this$static.buf.position + bodyLength;
		if (checkSumBegin > this$static.buf.limit) throw new FixGarbledException_0('Message too short to contain mandatory checksum');
		tagId = getTagId(this$static.buf);
		if (tagId != 35) throw new FixGarbledException_0('Third tag in FIX message is not MSGTYPE (35)');
		getTagStringValue(null, 35, this$static.buf, tmpMsgType);
		this$static.msgTypeEnd = this$static.buf.position;
		this$static.msgTypeInt = ($clinit_FixUtils(), getMsgTypeTagAsInt(tmpMsgType, lastIndexTrim(tmpMsgType)));
		if (!isValid_82(tmpMsgType)) throw new FixSessionException_0(Pb_longLit, getBytesUtf8('MsgType not in specificaton for tag'), P23_longLit, getMsgType_1(this$static.msgTypeInt));
		$position(this$static.buf, this$static.msgTypeEnd);
		lastTagPosition = this$static.msgTypeEnd;
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 1128:
				this$static.applVerID = getTagStringValue(null, 1128, value_0, this$static.applVerID);
				if (!isValid_4(this$static.applVerID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.applVerID + ') for tag'), P468_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1129:
				this$static.cstmApplVerID = getTagStringValue(null, 1129, value_0, this$static.cstmApplVerID);
				break;
			case 1156:
				this$static.applExtID = fromInt(getTagIntValue(null, 1156, value_0));
				break;
			case 49:
				this$static.senderCompID = getTagStringValue(null, 49, value_0, this$static.senderCompID);
				break;
			case 56:
				this$static.targetCompID = getTagStringValue(null, 56, value_0, this$static.targetCompID);
				break;
			case 115:
				this$static.onBehalfOfCompID = getTagStringValue(null, 115, value_0, this$static.onBehalfOfCompID);
				break;
			case 128:
				this$static.deliverToCompID = getTagStringValue(null, 128, value_0, this$static.deliverToCompID);
				break;
			case 90:
				this$static.secureDataLen = fromInt(getTagIntValue(null, 90, value_0));
				break;
			case 91:
				this$static.secureData = getTagStringValue(null, 91, value_0, this$static.secureData);
				break;
			case 34:
				this$static.msgSeqNum = fromInt(getTagIntValue(null, 34, value_0));
				break;
			case 50:
				this$static.senderSubID = getTagStringValue(null, 50, value_0, this$static.senderSubID);
				break;
			case 142:
				this$static.senderLocationID = getTagStringValue(null, 142, value_0, this$static.senderLocationID);
				break;
			case 57:
				this$static.targetSubID = getTagStringValue(null, 57, value_0, this$static.targetSubID);
				break;
			case 143:
				this$static.targetLocationID = getTagStringValue(null, 143, value_0, this$static.targetLocationID);
				break;
			case 116:
				this$static.onBehalfOfSubID = getTagStringValue(null, 116, value_0, this$static.onBehalfOfSubID);
				break;
			case 144:
				this$static.onBehalfOfLocationID = getTagStringValue(null, 144, value_0, this$static.onBehalfOfLocationID);
				break;
			case 129:
				this$static.deliverToSubID = getTagStringValue(null, 129, value_0, this$static.deliverToSubID);
				break;
			case 145:
				this$static.deliverToLocationID = getTagStringValue(null, 145, value_0, this$static.deliverToLocationID);
				break;
			case 43:
				this$static.possDupFlag = getTagBooleanValue(null, 43, value_0);
				break;
			case 97:
				this$static.possResend = getTagBooleanValue(null, 97, value_0);
				break;
			case 52:
				this$static.sendingTime = getTagStringValue(null, 52, value_0, this$static.sendingTime);
				break;
			case 122:
				this$static.origSendingTime = getTagStringValue(null, 122, value_0, this$static.origSendingTime);
				break;
			case 212:
				this$static.xmlDataLen = fromInt(getTagIntValue(null, 212, value_0));
				break;
			case 213:
				this$static.xmlData = getTagStringValue(null, 213, value_0, this$static.xmlData);
				break;
			case 347:
				this$static.messageEncoding = getTagStringValue(null, 347, value_0, this$static.messageEncoding);
				break;
			case 369:
				this$static.lastMsgSeqNumProcessed = fromInt(getTagIntValue(null, 369, value_0));
				break;
			default:
				$position(this$static.buf, lastTagPosition);
				return;
			}
			lastTagPosition = this$static.buf.position;
		}
	}

	function $print() {}

	function FixMessage_0() {
		new StringBuffer_0;
		this.checkSum = P0_longLit;
		this.bodyLength = P0_longLit;
		this.applExtID = P0_longLit;
		this.secureDataLen = P0_longLit;
		this.msgSeqNum = P0_longLit;
		this.possDupFlag = false;
		this.possResend = false;
		this.xmlDataLen = P0_longLit;
		this.lastMsgSeqNumProcessed = P0_longLit;
		this.beginString = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 8, 1);
		this.applVerID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.cstmApplVerID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.senderCompID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.targetCompID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.onBehalfOfCompID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.deliverToCompID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secureData = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 2048, 1);
		this.senderSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.senderLocationID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.targetSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.targetLocationID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.onBehalfOfSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.onBehalfOfLocationID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.deliverToSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.deliverToLocationID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.sendingTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.origSendingTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.xmlData = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.messageEncoding = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.hopGrp = new FixHopGrp_0;
	}

	function crackMsgType(buf) {
		$clinit_FixMessage();
		var bodyLength, checkSumBegin, e, msgTypeInt, startPos, tagId;
		try {
			startPos = buf.position;
			if (buf.limit - buf.position < ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG).length + 1 + 5) throw new FixGarbledException_0('Message too short to contain mandatory header tags');
			tagId = getTagId(buf);
			if (tagId != 8) throw new FixGarbledException_0('First tag in FIX message is not BEGINSTRING (8)');
			getTagStringValue(null, 8, buf, tmpBeginString);
			tagId = getTagId(buf);
			if (tagId != 9) throw new FixGarbledException_0('Second tag in FIX message is not BODYLENGTH (9)');
			bodyLength = getTagIntValue(null, 9, buf);
			if (bodyLength < 0) throw new FixGarbledException_0('Invalid BODYLENGTH (9) value: ' + bodyLength);
			checkSumBegin = buf.position + bodyLength;
			if (checkSumBegin > buf.limit) return -1;
			tagId = getTagId(buf);
			if (tagId != 35) throw new FixGarbledException_0('Third tag in FIX message is not MSGTYPE (35)');
			getTagStringValue(null, 35, buf, tmpMsgType);
			$position(buf, startPos);
			msgTypeInt = ($clinit_FixUtils(), getMsgTypeTagAsInt(tmpMsgType, lastIndexTrim(tmpMsgType)));
		} catch ($e0) {
			$e0 = wrap($e0);
			if (instanceOf($e0, Q$FixSessionException)) {
				e = $e0;
				throw new FixGarbledException_0($getMessage(e));
			} else if (instanceOf($e0, Q$NumberFormatException)) {
				e = $e0;
				throw new FixGarbledException_0(e.detailMessage);
			} else throw unwrap($e0);
		}
		return msgTypeInt;
	}

	defineSeed(322, 323, makeCastMap([Q$FixMessage]));
	_.equals$ = function equals_13(o) {
		return $equals(this, o);
	};
	_.applExtID = P0_longLit;
	_.bodyLength = P0_longLit;
	_.checkSum = P0_longLit;
	_.lastMsgSeqNumProcessed = P0_longLit;
	_.msgSeqNum = P0_longLit;
	_.msgTypeEnd = 0;
	_.possDupFlag = false;
	_.possResend = false;
	_.secureDataLen = P0_longLit;
	_.xmlDataLen = P0_longLit;
	var tmpBeginString, tmpMsgType;

	function $clear(this$static) {
		$clinit_Utils();
		this$static.collAsgnID[0] = 0;
		this$static.collReqID[0] = 0;
		this$static.collAsgnReason = P7fffffffffffffff_longLit;
		this$static.collAsgnTransType = P7fffffffffffffff_longLit;
		this$static.collAsgnRefID[0] = 0;
		this$static.transactTime[0] = 0;
		this$static.expireTime[0] = 0;
		this$static.account[0] = 0;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.clOrdID[0] = 0;
		this$static.orderID[0] = 0;
		this$static.secondaryOrderID[0] = 0;
		this$static.secondaryClOrdID[0] = 0;
		this$static.settlDate[0] = 0;
		this$static.quantity = P7fffffffffffffff_longLit;
		this$static.qtyType = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.marginExcess = P7fffffffffffffff_longLit;
		this$static.totalNetValue = P7fffffffffffffff_longLit;
		this$static.cashOutstanding = P7fffffffffffffff_longLit;
		this$static.side = 127;
		this$static.price = P7fffffffffffffff_longLit;
		this$static.priceType = P7fffffffffffffff_longLit;
		this$static.accruedInterestAmt = P7fffffffffffffff_longLit;
		this$static.endAccruedInterestAmt = P7fffffffffffffff_longLit;
		this$static.startCash = P7fffffffffffffff_longLit;
		this$static.endCash = P7fffffffffffffff_longLit;
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
		this$static.settlSessID[0] = 0;
		this$static.settlSessSubID[0] = 0;
		this$static.clearingBusinessDate[0] = 0;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_88(this$static.parties);
		$clear_30(this$static.execCollGrp);
		$clear_133(this$static.trdCollGrp);
		$clear_40(this$static.instrument);
		$clear_34(this$static.financingDetails);
		$clear_37(this$static.instrmtLegGrp);
		$clear_140(this$static.undInstrmtCollGrp);
		$clear_135(this$static.trdRegTimestamps);
		$clear_64(this$static.miscFeesGrp);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_119(this$static.stipulations);
		$clear_117(this$static.settlInstructionsData);
	}

	function $encode(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), COLLATERALASSIGNMENT_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 902, this$static.collAsgnID, lastIndexTrim(this$static.collAsgnID));
		this$static.collReqID[0] != 0 && putFixTag_2(out, 894, this$static.collReqID, lastIndexTrim(this$static.collReqID));
		putFixTag_0(out, 895, this$static.collAsgnReason);
		putFixTag_0(out, 903, this$static.collAsgnTransType);
		this$static.collAsgnRefID[0] != 0 && putFixTag_2(out, 907, this$static.collAsgnRefID, lastIndexTrim(this$static.collAsgnRefID));
		putFixTag_1(out, 60, this$static.transactTime);
		this$static.expireTime[0] != 0 && putFixTag_1(out, 126, this$static.expireTime);
		this$static.parties.noPartyIDs != 0 && $isSet_5(this$static.parties) && $encode_52(this$static.parties, out);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.accountType, P7fffffffffffffff_longLit) && putFixTag_0(out, 581, this$static.accountType);
		this$static.clOrdID[0] != 0 && putFixTag_2(out, 11, this$static.clOrdID, lastIndexTrim(this$static.clOrdID));
		this$static.orderID[0] != 0 && putFixTag_2(out, 37, this$static.orderID, lastIndexTrim(this$static.orderID));
		this$static.secondaryOrderID[0] != 0 && putFixTag_2(out, 198, this$static.secondaryOrderID, lastIndexTrim(this$static.secondaryOrderID));
		this$static.secondaryClOrdID[0] != 0 && putFixTag_2(out, 526, this$static.secondaryClOrdID, lastIndexTrim(this$static.secondaryClOrdID));
		neq(fromInt(this$static.execCollGrp.noExecs), P7fffffffffffffff_longLit) && $encode_25(this$static.execCollGrp, out);
		neq(fromInt(this$static.trdCollGrp.noTrades), P7fffffffffffffff_longLit) && $encode_86(this$static.trdCollGrp, out);
		$isSet_1(this$static.instrument) && $encode_31(this$static.instrument, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		this$static.settlDate[0] != 0 && putFixTag_1(out, 64, this$static.settlDate);
		putFixFloatTag(out, 53, this$static.quantity);
		neq(this$static.qtyType, P7fffffffffffffff_longLit) && putFixTag_0(out, 854, this$static.qtyType);
		this$static.currency[0] != 0 && putFixTag_2(out, 15, this$static.currency, lastIndexTrim(this$static.currency));
		neq(fromInt(this$static.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && $encode_29(this$static.instrmtLegGrp, out);
		neq(fromInt(this$static.undInstrmtCollGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_93(this$static.undInstrmtCollGrp, out);
		neq(this$static.marginExcess, P7fffffffffffffff_longLit) && putFixTag_0(out, 899, this$static.marginExcess);
		neq(this$static.totalNetValue, P7fffffffffffffff_longLit) && putFixTag_0(out, 900, this$static.totalNetValue);
		neq(this$static.cashOutstanding, P7fffffffffffffff_longLit) && putFixTag_0(out, 901, this$static.cashOutstanding);
		neq(fromInt(this$static.trdRegTimestamps.noTrdRegTimestamps), P7fffffffffffffff_longLit) && $encode_88(this$static.trdRegTimestamps, out);
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		neq(fromInt(this$static.miscFeesGrp.noMiscFees), P7fffffffffffffff_longLit) && $encode_43(this$static.miscFeesGrp, out);
		neq(this$static.price, P7fffffffffffffff_longLit) && putFixFloatTag(out, 44, this$static.price);
		neq(this$static.priceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 423, this$static.priceType);
		neq(this$static.accruedInterestAmt, P7fffffffffffffff_longLit) && putFixTag_0(out, 159, this$static.accruedInterestAmt);
		neq(this$static.endAccruedInterestAmt, P7fffffffffffffff_longLit) && putFixTag_0(out, 920, this$static.endAccruedInterestAmt);
		neq(this$static.startCash, P7fffffffffffffff_longLit) && putFixTag_0(out, 921, this$static.startCash);
		neq(this$static.endCash, P7fffffffffffffff_longLit) && putFixTag_0(out, 922, this$static.endCash);
		neq(this$static.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && $encode_79(this$static.spreadOrBenchmarkCurveData, out);
		neq(fromInt(this$static.stipulations.noStipulations), P7fffffffffffffff_longLit) && $encode_80(this$static.stipulations, out);
		neq(this$static.settlInstructionsData.settlDeliveryType, P7fffffffffffffff_longLit) && $encode_78(this$static.settlInstructionsData, out);
		this$static.tradingSessionID[0] != 0 && putFixTag_2(out, 336, this$static.tradingSessionID, lastIndexTrim(this$static.tradingSessionID));
		this$static.tradingSessionSubID[0] != 0 && putFixTag_2(out, 625, this$static.tradingSessionSubID, lastIndexTrim(this$static.tradingSessionSubID));
		this$static.settlSessID[0] != 0 && putFixTag_2(out, 716, this$static.settlSessID, lastIndexTrim(this$static.settlSessID));
		this$static.settlSessSubID[0] != 0 && putFixTag_2(out, 717, this$static.settlSessSubID, lastIndexTrim(this$static.settlSessSubID));
		this$static.clearingBusinessDate[0] != 0 && putFixTag_1(out, 715, this$static.clearingBusinessDate);
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function FixCollateralAssignment_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.collAsgnReason = P0_longLit;
		this.collAsgnTransType = P0_longLit;
		this.accountType = P0_longLit;
		this.quantity = P0_longLit;
		this.qtyType = P0_longLit;
		this.marginExcess = P0_longLit;
		this.totalNetValue = P0_longLit;
		this.cashOutstanding = P0_longLit;
		this.side = 32;
		this.price = P0_longLit;
		this.priceType = P0_longLit;
		this.accruedInterestAmt = P0_longLit;
		this.endAccruedInterestAmt = P0_longLit;
		this.startCash = P0_longLit;
		this.endCash = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.collAsgnID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.collReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.collAsgnRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.expireTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.parties = new FixParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryOrderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execCollGrp = new FixExecCollGrp_0;
		this.trdCollGrp = new FixTrdCollGrp_0;
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.settlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.undInstrmtCollGrp = new FixUndInstrmtCollGrp_0;
		this.trdRegTimestamps = new FixTrdRegTimestamps_0;
		this.miscFeesGrp = new FixMiscFeesGrp_0;
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.stipulations = new FixStipulations_0;
		this.settlInstructionsData = new FixSettlInstructionsData_0;
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear(this);
		this.msgTypeInt = 16729;
	}

	defineSeed(321, 322, makeCastMap([Q$FixCollateralAssignment, Q$FixMessage]), FixCollateralAssignment_0);
	_.equals$ = function equals_14(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixCollateralAssignment)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.collAsgnID, msg.collAsgnID) || (ret = false);
		equals_12(this.collReqID, msg.collReqID) || (ret = false);
		if (neq(this.collAsgnReason, msg.collAsgnReason)) {
			ret = false;
			$print((valueOf_1(this.collAsgnReason), valueOf_1(msg.collAsgnReason)));
		}
		if (neq(this.collAsgnTransType, msg.collAsgnTransType)) {
			ret = false;
			$print((valueOf_1(this.collAsgnTransType), valueOf_1(msg.collAsgnTransType)));
		}
		equals_12(this.collAsgnRefID, msg.collAsgnRefID) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.secondaryOrderID, msg.secondaryOrderID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		$equals_20(this.execCollGrp, msg.execCollGrp) || (ret = false);
		$equals_130(this.trdCollGrp, msg.trdCollGrp) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		if (neq(this.quantity, msg.quantity)) {
			ret = false;
			$print((valueOf_1(this.quantity), valueOf_1(msg.quantity)));
		}
		if (neq(this.qtyType, msg.qtyType)) {
			ret = false;
			$print((valueOf_1(this.qtyType), valueOf_1(msg.qtyType)));
		}
		equals_12(this.currency, msg.currency) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_137(this.undInstrmtCollGrp, msg.undInstrmtCollGrp) || (ret = false);
		if (neq(this.marginExcess, msg.marginExcess)) {
			ret = false;
			$print((valueOf_1(this.marginExcess), valueOf_1(msg.marginExcess)));
		}
		if (neq(this.totalNetValue, msg.totalNetValue)) {
			ret = false;
			$print((valueOf_1(this.totalNetValue), valueOf_1(msg.totalNetValue)));
		}
		if (neq(this.cashOutstanding, msg.cashOutstanding)) {
			ret = false;
			$print((valueOf_1(this.cashOutstanding), valueOf_1(msg.cashOutstanding)));
		}
		$equals_132(this.trdRegTimestamps, msg.trdRegTimestamps) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		$equals_58(this.miscFeesGrp, msg.miscFeesGrp) || (ret = false);
		if (neq(this.price, msg.price)) {
			ret = false;
			$print((valueOf_1(this.price), valueOf_1(msg.price)));
		}
		if (neq(this.priceType, msg.priceType)) {
			ret = false;
			$print((valueOf_1(this.priceType), valueOf_1(msg.priceType)));
		}
		if (neq(this.accruedInterestAmt, msg.accruedInterestAmt)) {
			ret = false;
			$print((valueOf_1(this.accruedInterestAmt), valueOf_1(msg.accruedInterestAmt)));
		}
		if (neq(this.endAccruedInterestAmt, msg.endAccruedInterestAmt)) {
			ret = false;
			$print((valueOf_1(this.endAccruedInterestAmt), valueOf_1(msg.endAccruedInterestAmt)));
		}
		if (neq(this.startCash, msg.startCash)) {
			ret = false;
			$print((valueOf_1(this.startCash), valueOf_1(msg.startCash)));
		}
		if (neq(this.endCash, msg.endCash)) {
			ret = false;
			$print((valueOf_1(this.endCash), valueOf_1(msg.endCash)));
		}
		$equals_114(this.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		$equals_115(this.stipulations, msg.stipulations) || (ret = false);
		$equals_113(this.settlInstructionsData, msg.settlInstructionsData) || (ret = false);
		equals_12(this.tradingSessionID, msg.tradingSessionID) || (ret = false);
		equals_12(this.tradingSessionSubID, msg.tradingSessionSubID) || (ret = false);
		equals_12(this.settlSessID, msg.settlSessID) || (ret = false);
		equals_12(this.settlSessSubID, msg.settlSessSubID) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_2() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'CollateralAssignment' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), COLLATERALASSIGNMENT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			this.senderCompID[0] != 0 && (s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep));
			this.targetCompID[0] != 0 && (s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep));
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			neq(this.msgSeqNum, P7fffffffffffffff_longLit) && (s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep));
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			this.sendingTime[0] != 0 && (s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep));
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'CollAsgnID(902)=' + $trim(_String(this.collAsgnID)) + charToString(sep);
			this.collReqID[0] != 0 && (s += 'CollReqID(894)=' + $trim(_String(this.collReqID)) + charToString(sep));
			s += 'CollAsgnReason(895)=' + $trim('' + toString_183(this.collAsgnReason)) + charToString(sep);
			s += 'CollAsgnTransType(903)=' + $trim('' + toString_183(this.collAsgnTransType)) + charToString(sep);
			this.collAsgnRefID[0] != 0 && (s += 'CollAsgnRefID(907)=' + $trim(_String(this.collAsgnRefID)) + charToString(sep));
			s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep);
			this.expireTime[0] != 0 && (s += 'ExpireTime(126)=' + $trim(_String(this.expireTime)) + charToString(sep));
			this.parties.noPartyIDs != 0 && (s += $trim($toString_84(this.parties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			this.orderID[0] != 0 && (s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep));
			this.secondaryOrderID[0] != 0 && (s += 'SecondaryOrderID(198)=' + $trim(_String(this.secondaryOrderID)) + charToString(sep));
			this.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this.secondaryClOrdID)) + charToString(sep));
			neq(fromInt(this.execCollGrp.noExecs), P7fffffffffffffff_longLit) && (s += $trim($toString_21(this.execCollGrp)));
			neq(fromInt(this.trdCollGrp.noTrades), P7fffffffffffffff_longLit) && (s += $trim($toString_131(this.trdCollGrp)));
			this.instrument.securityID[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			this.settlDate[0] != 0 && (s += 'SettlDate(64)=' + $trim(_String(this.settlDate)) + charToString(sep));
			neq(this.quantity, P7fffffffffffffff_longLit) && (s += 'Quantity(53)=' + $trim('' + toString_183(this.quantity)) + charToString(sep));
			neq(this.qtyType, P7fffffffffffffff_longLit) && (s += 'QtyType(854)=' + $trim('' + toString_183(this.qtyType)) + charToString(sep));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			neq(fromInt(this.undInstrmtCollGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_138(this.undInstrmtCollGrp)));
			neq(this.marginExcess, P7fffffffffffffff_longLit) && (s += 'MarginExcess(899)=' + $trim('' + toString_183(this.marginExcess)) + charToString(sep));
			neq(this.totalNetValue, P7fffffffffffffff_longLit) && (s += 'TotalNetValue(900)=' + $trim('' + toString_183(this.totalNetValue)) + charToString(sep));
			neq(this.cashOutstanding, P7fffffffffffffff_longLit) && (s += 'CashOutstanding(901)=' + $trim('' + toString_183(this.cashOutstanding)) + charToString(sep));
			neq(fromInt(this.trdRegTimestamps.noTrdRegTimestamps), P7fffffffffffffff_longLit) && (s += $trim($toString_133(this.trdRegTimestamps)));
			this.side != 127 && (s += 'Side(54)=' + $trim('' + this.side) + charToString(sep));
			neq(fromInt(this.miscFeesGrp.noMiscFees), P7fffffffffffffff_longLit) && (s += $trim($toString_59(this.miscFeesGrp)));
			neq(this.price, P7fffffffffffffff_longLit) && (s += 'Price(44)=' + $trim('' + toString_183(this.price)) + charToString(sep));
			neq(this.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this.priceType)) + charToString(sep));
			neq(this.accruedInterestAmt, P7fffffffffffffff_longLit) && (s += 'AccruedInterestAmt(159)=' + $trim('' + toString_183(this.accruedInterestAmt)) + charToString(sep));
			neq(this.endAccruedInterestAmt, P7fffffffffffffff_longLit) && (s += 'EndAccruedInterestAmt(920)=' + $trim('' + toString_183(this.endAccruedInterestAmt)) + charToString(sep));
			neq(this.startCash, P7fffffffffffffff_longLit) && (s += 'StartCash(921)=' + $trim('' + toString_183(this.startCash)) + charToString(sep));
			neq(this.endCash, P7fffffffffffffff_longLit) && (s += 'EndCash(922)=' + $trim('' + toString_183(this.endCash)) + charToString(sep));
			neq(this.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this.spreadOrBenchmarkCurveData)));
			neq(fromInt(this.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this.stipulations)));
			neq(this.settlInstructionsData.settlDeliveryType, P7fffffffffffffff_longLit) && (s += $trim($toString_114(this.settlInstructionsData)));
			this.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this.tradingSessionID)) + charToString(sep));
			this.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this.tradingSessionSubID)) + charToString(sep));
			this.settlSessID[0] != 0 && (s += 'SettlSessID(716)=' + $trim(_String(this.settlSessID)) + charToString(sep));
			this.settlSessSubID[0] != 0 && (s += 'SettlSessSubID(717)=' + $trim(_String(this.settlSessSubID)) + charToString(sep));
			this.clearingBusinessDate[0] != 0 && (s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.accruedInterestAmt = P0_longLit;
	_.cashOutstanding = P0_longLit;
	_.collAsgnReason = P0_longLit;
	_.collAsgnTransType = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.endAccruedInterestAmt = P0_longLit;
	_.endCash = P0_longLit;
	_.marginExcess = P0_longLit;
	_.price = P0_longLit;
	_.priceType = P0_longLit;
	_.qtyType = P0_longLit;
	_.quantity = P0_longLit;
	_.side = 0;
	_.startCash = P0_longLit;
	_.totalNetValue = P0_longLit;

	function $checkRequiredTags(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.collRespID[0] == 0) return 904;
		if (this$static.collAsgnID[0] == 0) return 902;
		if (eq(this$static.collAsgnRespType, P7fffffffffffffff_longLit)) return 905;
		if (this$static.transactTime[0] == 0) return 60;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $clear_0(this$static) {
		$clinit_Utils();
		this$static.collRespID[0] = 0;
		this$static.collAsgnID[0] = 0;
		this$static.collReqID[0] = 0;
		this$static.collAsgnReason = P7fffffffffffffff_longLit;
		this$static.collAsgnTransType = P7fffffffffffffff_longLit;
		this$static.collAsgnRespType = P7fffffffffffffff_longLit;
		this$static.collAsgnRejectReason = P7fffffffffffffff_longLit;
		this$static.transactTime[0] = 0;
		this$static.collApplType = P7fffffffffffffff_longLit;
		this$static.financialStatus[0] = 0;
		this$static.clearingBusinessDate[0] = 0;
		this$static.account[0] = 0;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.clOrdID[0] = 0;
		this$static.orderID[0] = 0;
		this$static.secondaryOrderID[0] = 0;
		this$static.secondaryClOrdID[0] = 0;
		this$static.settlDate[0] = 0;
		this$static.quantity = P7fffffffffffffff_longLit;
		this$static.qtyType = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.marginExcess = P7fffffffffffffff_longLit;
		this$static.totalNetValue = P7fffffffffffffff_longLit;
		this$static.cashOutstanding = P7fffffffffffffff_longLit;
		this$static.side = 127;
		this$static.price = P7fffffffffffffff_longLit;
		this$static.priceType = P7fffffffffffffff_longLit;
		this$static.accruedInterestAmt = P7fffffffffffffff_longLit;
		this$static.endAccruedInterestAmt = P7fffffffffffffff_longLit;
		this$static.startCash = P7fffffffffffffff_longLit;
		this$static.endCash = P7fffffffffffffff_longLit;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_88(this$static.parties);
		$clear_30(this$static.execCollGrp);
		$clear_133(this$static.trdCollGrp);
		$clear_40(this$static.instrument);
		$clear_34(this$static.financingDetails);
		$clear_37(this$static.instrmtLegGrp);
		$clear_140(this$static.undInstrmtCollGrp);
		$clear_135(this$static.trdRegTimestamps);
		$clear_64(this$static.miscFeesGrp);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_119(this$static.stipulations);
	}

	function $getAll_0(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 904:
				this$static.collRespID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 904, value_0, this$static.collRespID);
				break;
			case 902:
				this$static.collAsgnID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 902, value_0, this$static.collAsgnID);
				break;
			case 894:
				this$static.collReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 894, value_0, this$static.collReqID);
				break;
			case 895:
				this$static.collAsgnReason = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 895, value_0));
				if (!isValid_14(this$static.collAsgnReason)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.collAsgnReason) + ') for tag'), P37f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 903:
				this$static.collAsgnTransType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 903, value_0));
				if (!isValid_17(this$static.collAsgnTransType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.collAsgnTransType) + ') for tag'), P387_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 905:
				this$static.collAsgnRespType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 905, value_0));
				if (!isValid_16(this$static.collAsgnRespType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.collAsgnRespType) + ') for tag'), P389_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 906:
				this$static.collAsgnRejectReason = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 906, value_0));
				if (!isValid_15(this$static.collAsgnRejectReason)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.collAsgnRejectReason) + ') for tag'), P38a_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 60, value_0, this$static.transactTime);
				break;
			case 1043:
				this$static.collApplType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 1043, value_0));
				if (!isValid_13(this$static.collApplType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.collApplType) + ') for tag'), P413_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 291:
				this$static.financialStatus = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 291, value_0, this$static.financialStatus);
				if (!isValid_56(this$static.financialStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.financialStatus + ') for tag'), P123_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 715:
				this$static.clearingBusinessDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 715, value_0, this$static.clearingBusinessDate);
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 1, value_0, this$static.account);
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 11, value_0, this$static.clOrdID);
				break;
			case 37:
				this$static.orderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 37, value_0, this$static.orderID);
				break;
			case 198:
				this$static.secondaryOrderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 198, value_0, this$static.secondaryOrderID);
				break;
			case 526:
				this$static.secondaryClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 526, value_0, this$static.secondaryClOrdID);
				break;
			case 124:
				this$static.execCollGrp.noExecs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 124, value_0);
				$getAll_33(this$static.execCollGrp, this$static.execCollGrp.noExecs, value_0);
				break;
			case 897:
				this$static.trdCollGrp.noTrades = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 897, value_0);
				$getAll_92(this$static.trdCollGrp, this$static.trdCollGrp.noTrades, value_0);
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 64:
				this$static.settlDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 64, value_0, this$static.settlDate);
				break;
			case 53:
				this$static.quantity = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 53, value_0);
				break;
			case 854:
				this$static.qtyType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 854, value_0));
				if (!isValid_123(this$static.qtyType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.qtyType) + ') for tag'), P356_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 15, value_0, this$static.currency);
				break;
			case 555:
				this$static.instrmtLegGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 555, value_0);
				$getAll_38(this$static.instrmtLegGrp, this$static.instrmtLegGrp.noLegs, value_0);
				break;
			case 711:
				this$static.undInstrmtCollGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 711, value_0);
				$getAll_96(this$static.undInstrmtCollGrp, this$static.undInstrmtCollGrp.noUnderlyings, value_0);
				break;
			case 899:
				this$static.marginExcess = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 899, value_0);
				break;
			case 900:
				this$static.totalNetValue = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 900, value_0);
				break;
			case 901:
				this$static.cashOutstanding = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 901, value_0);
				break;
			case 768:
				this$static.trdRegTimestamps.noTrdRegTimestamps = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 768, value_0);
				$getAll_93(this$static.trdRegTimestamps, this$static.trdRegTimestamps.noTrdRegTimestamps, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 136:
				this$static.miscFeesGrp.noMiscFees = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 136, value_0);
				$getAll_54(this$static.miscFeesGrp, this$static.miscFeesGrp.noMiscFees, value_0);
				break;
			case 44:
				this$static.price = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 44, value_0);
				break;
			case 423:
				this$static.priceType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 423, value_0));
				if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 159:
				this$static.accruedInterestAmt = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 159, value_0);
				break;
			case 920:
				this$static.endAccruedInterestAmt = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 920, value_0);
				break;
			case 921:
				this$static.startCash = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 921, value_0);
				break;
			case 922:
				this$static.endCash = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 922, value_0);
				break;
			case 218:
				$getAll_84(this$static.spreadOrBenchmarkCurveData, 218, value_0);
				break;
			case 232:
				this$static.stipulations.noStipulations = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 232, value_0);
				$getAll_85(this$static.stipulations, this$static.stipulations.noStipulations, value_0);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1), 10, value_0));
				id_0 = $checkRequiredTags(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixCollateralResponse_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.collAsgnReason = P0_longLit;
		this.collAsgnTransType = P0_longLit;
		this.collAsgnRespType = P0_longLit;
		this.collAsgnRejectReason = P0_longLit;
		this.collApplType = P0_longLit;
		this.accountType = P0_longLit;
		this.quantity = P0_longLit;
		this.qtyType = P0_longLit;
		this.marginExcess = P0_longLit;
		this.totalNetValue = P0_longLit;
		this.cashOutstanding = P0_longLit;
		this.side = 32;
		this.price = P0_longLit;
		this.priceType = P0_longLit;
		this.accruedInterestAmt = P0_longLit;
		this.endAccruedInterestAmt = P0_longLit;
		this.startCash = P0_longLit;
		this.endCash = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.collRespID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.collAsgnID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.collReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.financialStatus = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryOrderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execCollGrp = new FixExecCollGrp_0;
		this.trdCollGrp = new FixTrdCollGrp_0;
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.settlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.undInstrmtCollGrp = new FixUndInstrmtCollGrp_0;
		this.trdRegTimestamps = new FixTrdRegTimestamps_0;
		this.miscFeesGrp = new FixMiscFeesGrp_0;
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.stipulations = new FixStipulations_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_0(this);
		this.msgTypeInt = 16730;
	}

	defineSeed(324, 322, makeCastMap([Q$FixCollateralResponse, Q$FixMessage]), FixCollateralResponse_0);
	_.equals$ = function equals_15(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixCollateralResponse)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.collRespID, msg.collRespID) || (ret = false);
		equals_12(this.collAsgnID, msg.collAsgnID) || (ret = false);
		equals_12(this.collReqID, msg.collReqID) || (ret = false);
		if (neq(this.collAsgnReason, msg.collAsgnReason)) {
			ret = false;
			$print((valueOf_1(this.collAsgnReason), valueOf_1(msg.collAsgnReason)));
		}
		if (neq(this.collAsgnTransType, msg.collAsgnTransType)) {
			ret = false;
			$print((valueOf_1(this.collAsgnTransType), valueOf_1(msg.collAsgnTransType)));
		}
		if (neq(this.collAsgnRespType, msg.collAsgnRespType)) {
			ret = false;
			$print((valueOf_1(this.collAsgnRespType), valueOf_1(msg.collAsgnRespType)));
		}
		if (neq(this.collAsgnRejectReason, msg.collAsgnRejectReason)) {
			ret = false;
			$print((valueOf_1(this.collAsgnRejectReason), valueOf_1(msg.collAsgnRejectReason)));
		}
		if (neq(this.collApplType, msg.collApplType)) {
			ret = false;
			$print((valueOf_1(this.collApplType), valueOf_1(msg.collApplType)));
		}
		equals_12(this.financialStatus, msg.financialStatus) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.secondaryOrderID, msg.secondaryOrderID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		$equals_20(this.execCollGrp, msg.execCollGrp) || (ret = false);
		$equals_130(this.trdCollGrp, msg.trdCollGrp) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		if (neq(this.quantity, msg.quantity)) {
			ret = false;
			$print((valueOf_1(this.quantity), valueOf_1(msg.quantity)));
		}
		if (neq(this.qtyType, msg.qtyType)) {
			ret = false;
			$print((valueOf_1(this.qtyType), valueOf_1(msg.qtyType)));
		}
		equals_12(this.currency, msg.currency) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_137(this.undInstrmtCollGrp, msg.undInstrmtCollGrp) || (ret = false);
		if (neq(this.marginExcess, msg.marginExcess)) {
			ret = false;
			$print((valueOf_1(this.marginExcess), valueOf_1(msg.marginExcess)));
		}
		if (neq(this.totalNetValue, msg.totalNetValue)) {
			ret = false;
			$print((valueOf_1(this.totalNetValue), valueOf_1(msg.totalNetValue)));
		}
		if (neq(this.cashOutstanding, msg.cashOutstanding)) {
			ret = false;
			$print((valueOf_1(this.cashOutstanding), valueOf_1(msg.cashOutstanding)));
		}
		$equals_132(this.trdRegTimestamps, msg.trdRegTimestamps) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		$equals_58(this.miscFeesGrp, msg.miscFeesGrp) || (ret = false);
		if (neq(this.price, msg.price)) {
			ret = false;
			$print((valueOf_1(this.price), valueOf_1(msg.price)));
		}
		if (neq(this.priceType, msg.priceType)) {
			ret = false;
			$print((valueOf_1(this.priceType), valueOf_1(msg.priceType)));
		}
		if (neq(this.accruedInterestAmt, msg.accruedInterestAmt)) {
			ret = false;
			$print((valueOf_1(this.accruedInterestAmt), valueOf_1(msg.accruedInterestAmt)));
		}
		if (neq(this.endAccruedInterestAmt, msg.endAccruedInterestAmt)) {
			ret = false;
			$print((valueOf_1(this.endAccruedInterestAmt), valueOf_1(msg.endAccruedInterestAmt)));
		}
		if (neq(this.startCash, msg.startCash)) {
			ret = false;
			$print((valueOf_1(this.startCash), valueOf_1(msg.startCash)));
		}
		if (neq(this.endCash, msg.endCash)) {
			ret = false;
			$print((valueOf_1(this.endCash), valueOf_1(msg.endCash)));
		}
		$equals_114(this.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		$equals_115(this.stipulations, msg.stipulations) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_3() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'CollateralResponse' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), COLLATERALRESPONSE_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			this.senderCompID[0] != 0 && (s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep));
			this.targetCompID[0] != 0 && (s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep));
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			neq(this.msgSeqNum, P7fffffffffffffff_longLit) && (s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep));
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			this.sendingTime[0] != 0 && (s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep));
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'CollRespID(904)=' + $trim(_String(this.collRespID)) + charToString(sep);
			s += 'CollAsgnID(902)=' + $trim(_String(this.collAsgnID)) + charToString(sep);
			this.collReqID[0] != 0 && (s += 'CollReqID(894)=' + $trim(_String(this.collReqID)) + charToString(sep));
			neq(this.collAsgnReason, P7fffffffffffffff_longLit) && (s += 'CollAsgnReason(895)=' + $trim('' + toString_183(this.collAsgnReason)) + charToString(sep));
			neq(this.collAsgnTransType, P7fffffffffffffff_longLit) && (s += 'CollAsgnTransType(903)=' + $trim('' + toString_183(this.collAsgnTransType)) + charToString(sep));
			s += 'CollAsgnRespType(905)=' + $trim('' + toString_183(this.collAsgnRespType)) + charToString(sep);
			neq(this.collAsgnRejectReason, P7fffffffffffffff_longLit) && (s += 'CollAsgnRejectReason(906)=' + $trim('' + toString_183(this.collAsgnRejectReason)) + charToString(sep));
			s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep);
			neq(this.collApplType, P7fffffffffffffff_longLit) && (s += 'CollApplType(1043)=' + $trim('' + toString_183(this.collApplType)) + charToString(sep));
			this.financialStatus[0] != 0 && (s += 'FinancialStatus(291)=' + $trim(_String(this.financialStatus)) + charToString(sep));
			this.clearingBusinessDate[0] != 0 && (s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			this.orderID[0] != 0 && (s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep));
			this.secondaryOrderID[0] != 0 && (s += 'SecondaryOrderID(198)=' + $trim(_String(this.secondaryOrderID)) + charToString(sep));
			this.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this.secondaryClOrdID)) + charToString(sep));
			neq(fromInt(this.execCollGrp.noExecs), P7fffffffffffffff_longLit) && (s += $trim($toString_21(this.execCollGrp)));
			neq(fromInt(this.trdCollGrp.noTrades), P7fffffffffffffff_longLit) && (s += $trim($toString_131(this.trdCollGrp)));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			this.settlDate[0] != 0 && (s += 'SettlDate(64)=' + $trim(_String(this.settlDate)) + charToString(sep));
			neq(this.quantity, P7fffffffffffffff_longLit) && (s += 'Quantity(53)=' + $trim('' + toString_183(this.quantity)) + charToString(sep));
			neq(this.qtyType, P7fffffffffffffff_longLit) && (s += 'QtyType(854)=' + $trim('' + toString_183(this.qtyType)) + charToString(sep));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			neq(fromInt(this.undInstrmtCollGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_138(this.undInstrmtCollGrp)));
			neq(this.marginExcess, P7fffffffffffffff_longLit) && (s += 'MarginExcess(899)=' + $trim('' + toString_183(this.marginExcess)) + charToString(sep));
			neq(this.totalNetValue, P7fffffffffffffff_longLit) && (s += 'TotalNetValue(900)=' + $trim('' + toString_183(this.totalNetValue)) + charToString(sep));
			neq(this.cashOutstanding, P7fffffffffffffff_longLit) && (s += 'CashOutstanding(901)=' + $trim('' + toString_183(this.cashOutstanding)) + charToString(sep));
			neq(fromInt(this.trdRegTimestamps.noTrdRegTimestamps), P7fffffffffffffff_longLit) && (s += $trim($toString_133(this.trdRegTimestamps)));
			this.side != 127 && (s += 'Side(54)=' + $trim('' + this.side) + charToString(sep));
			neq(fromInt(this.miscFeesGrp.noMiscFees), P7fffffffffffffff_longLit) && (s += $trim($toString_59(this.miscFeesGrp)));
			neq(this.price, P7fffffffffffffff_longLit) && (s += 'Price(44)=' + $trim('' + toString_183(this.price)) + charToString(sep));
			neq(this.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this.priceType)) + charToString(sep));
			neq(this.accruedInterestAmt, P7fffffffffffffff_longLit) && (s += 'AccruedInterestAmt(159)=' + $trim('' + toString_183(this.accruedInterestAmt)) + charToString(sep));
			neq(this.endAccruedInterestAmt, P7fffffffffffffff_longLit) && (s += 'EndAccruedInterestAmt(920)=' + $trim('' + toString_183(this.endAccruedInterestAmt)) + charToString(sep));
			neq(this.startCash, P7fffffffffffffff_longLit) && (s += 'StartCash(921)=' + $trim('' + toString_183(this.startCash)) + charToString(sep));
			neq(this.endCash, P7fffffffffffffff_longLit) && (s += 'EndCash(922)=' + $trim('' + toString_183(this.endCash)) + charToString(sep));
			neq(this.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this.spreadOrBenchmarkCurveData)));
			neq(fromInt(this.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this.stipulations)));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.accruedInterestAmt = P0_longLit;
	_.cashOutstanding = P0_longLit;
	_.collApplType = P0_longLit;
	_.collAsgnReason = P0_longLit;
	_.collAsgnRejectReason = P0_longLit;
	_.collAsgnRespType = P0_longLit;
	_.collAsgnTransType = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.endAccruedInterestAmt = P0_longLit;
	_.endCash = P0_longLit;
	_.marginExcess = P0_longLit;
	_.price = P0_longLit;
	_.priceType = P0_longLit;
	_.qtyType = P0_longLit;
	_.quantity = P0_longLit;
	_.side = 0;
	_.startCash = P0_longLit;
	_.totalNetValue = P0_longLit;

	function $checkRequiredTags_0(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.msgSeqNum, P7fffffffffffffff_longLit)) return 34;
		if (this$static.sendingTime[0] == 0) return 52;
		if (this$static.orderID[0] == 0) return 37;
		if (this$static.execAckStatus == 127) return 1036;
		if (this$static.execID[0] == 0) return 17;
		if (this$static.side == 127) return 54;
		if (!$isSet_1(this$static.instrument)) return 55;
		if (!$isSet_4(this$static.orderQtyData)) return 38;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_1(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 37:
				this$static.orderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 37, value_0, this$static.orderID);
				break;
			case 198:
				this$static.secondaryOrderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 198, value_0, this$static.secondaryOrderID);
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 11, value_0, this$static.clOrdID);
				break;
			case 1036:
				this$static.execAckStatus = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 1036, value_0);
				if (!isValid_49(this$static.execAckStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.execAckStatus + ') for tag'), P40c_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 17:
				this$static.execID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 17, value_0, this$static.execID);
				break;
			case 127:
				this$static.dKReason = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 127, value_0);
				if (!isValid_31(this$static.dKReason)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.dKReason + ') for tag'), P7f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 555:
				this$static.instrmtLegGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 555, value_0);
				$getAll_38(this$static.instrmtLegGrp, this$static.instrmtLegGrp.noLegs, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 38:
				$getAll_66(this$static.orderQtyData, 38, value_0);
				break;
			case 32:
				this$static.lastQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 32, value_0);
				break;
			case 31:
				this$static.lastPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 31, value_0);
				break;
			case 423:
				this$static.priceType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 423, value_0));
				if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 669:
				this$static.lastParPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 669, value_0);
				break;
			case 14:
				this$static.cumQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 14, value_0);
				break;
			case 6:
				this$static.avgPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 6, value_0);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1), 10, value_0));
				id_0 = $checkRequiredTags_0(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixExecutionAcknowledgement_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.execAckStatus = 32;
		this.dKReason = 32;
		this.side = 32;
		this.lastQty = P0_longLit;
		this.lastPx = P0_longLit;
		this.priceType = P0_longLit;
		this.lastParPx = P0_longLit;
		this.cumQty = P0_longLit;
		this.avgPx = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryOrderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.orderQtyData = new FixOrderQtyData_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clinit_Utils();
		this.orderID[0] = 0;
		this.secondaryOrderID[0] = 0;
		this.clOrdID[0] = 0;
		this.execAckStatus = 127;
		this.execID[0] = 0;
		this.dKReason = 127;
		this.side = 127;
		this.lastQty = P7fffffffffffffff_longLit;
		this.lastPx = P7fffffffffffffff_longLit;
		this.priceType = P7fffffffffffffff_longLit;
		this.lastParPx = P7fffffffffffffff_longLit;
		this.cumQty = P7fffffffffffffff_longLit;
		this.avgPx = P7fffffffffffffff_longLit;
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		$clear_40(this.instrument);
		$clear_142(this.undInstrmtGrp);
		$clear_37(this.instrmtLegGrp);
		$clear_87(this.orderQtyData);
		this.msgTypeInt = 16974;
	}

	defineSeed(325, 322, makeCastMap([Q$FixExecutionAcknowledgement, Q$FixMessage]), FixExecutionAcknowledgement_0);
	_.equals$ = function equals_16(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixExecutionAcknowledgement)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.secondaryOrderID, msg.secondaryOrderID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		if (this.execAckStatus != msg.execAckStatus) {
			ret = false;
			$print((valueOf(this.execAckStatus), valueOf(msg.execAckStatus)));
		}
		equals_12(this.execID, msg.execID) || (ret = false);
		if (this.dKReason != msg.dKReason) {
			ret = false;
			$print((valueOf(this.dKReason), valueOf(msg.dKReason)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		$equals_82(this.orderQtyData, msg.orderQtyData) || (ret = false);
		if (neq(this.lastQty, msg.lastQty)) {
			ret = false;
			$print((valueOf_1(this.lastQty), valueOf_1(msg.lastQty)));
		}
		if (neq(this.lastPx, msg.lastPx)) {
			ret = false;
			$print((valueOf_1(this.lastPx), valueOf_1(msg.lastPx)));
		}
		if (neq(this.priceType, msg.priceType)) {
			ret = false;
			$print((valueOf_1(this.priceType), valueOf_1(msg.priceType)));
		}
		if (neq(this.lastParPx, msg.lastParPx)) {
			ret = false;
			$print((valueOf_1(this.lastParPx), valueOf_1(msg.lastParPx)));
		}
		if (neq(this.cumQty, msg.cumQty)) {
			ret = false;
			$print((valueOf_1(this.cumQty), valueOf_1(msg.cumQty)));
		}
		if (neq(this.avgPx, msg.avgPx)) {
			ret = false;
			$print((valueOf_1(this.avgPx), valueOf_1(msg.avgPx)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_4() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'ExecutionAcknowledgement' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONACKNOWLEDGEMENT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep);
			this.secondaryOrderID[0] != 0 && (s += 'SecondaryOrderID(198)=' + $trim(_String(this.secondaryOrderID)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			s += 'ExecAckStatus(1036)=' + $trim('' + this.execAckStatus) + charToString(sep);
			s += 'ExecID(17)=' + $trim(_String(this.execID)) + charToString(sep);
			this.dKReason != 127 && (s += 'DKReason(127)=' + $trim('' + this.dKReason) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			s += 'Side(54)=' + $trim('' + this.side) + charToString(sep);
			neq(this.orderQtyData.orderQty, P7fffffffffffffff_longLit) && (s += $trim($toString_83(this.orderQtyData)));
			neq(this.lastQty, P7fffffffffffffff_longLit) && (s += 'LastQty(32)=' + $trim('' + toString_183(this.lastQty)) + charToString(sep));
			neq(this.lastPx, P7fffffffffffffff_longLit) && (s += 'LastPx(31)=' + $trim('' + toString_183(this.lastPx)) + charToString(sep));
			neq(this.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this.priceType)) + charToString(sep));
			neq(this.lastParPx, P7fffffffffffffff_longLit) && (s += 'LastParPx(669)=' + $trim('' + toString_183(this.lastParPx)) + charToString(sep));
			neq(this.cumQty, P7fffffffffffffff_longLit) && (s += 'CumQty(14)=' + $trim('' + toString_183(this.cumQty)) + charToString(sep));
			neq(this.avgPx, P7fffffffffffffff_longLit) && (s += 'AvgPx(6)=' + $trim('' + toString_183(this.avgPx)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.avgPx = P0_longLit;
	_.cumQty = P0_longLit;
	_.dKReason = 0;
	_.encodedTextLen = P0_longLit;
	_.execAckStatus = 0;
	_.lastParPx = P0_longLit;
	_.lastPx = P0_longLit;
	_.lastQty = P0_longLit;
	_.priceType = P0_longLit;
	_.side = 0;

	function $$init_5(this$static) {
		this$static.totNumReports = P0_longLit;
		this$static.lastRptRequested = false;
		this$static.crossType = P0_longLit;
		this$static.execType = 32;
		this$static.ordStatus = 32;
		this$static.workingIndicator = false;
		this$static.ordRejReason = P0_longLit;
		this$static.execRestatementReason = P0_longLit;
		this$static.acctIDSource = P0_longLit;
		this$static.accountType = P0_longLit;
		this$static.dayBookingInst = 32;
		this$static.bookingUnit = 32;
		this$static.preallocMethod = 32;
		this$static.orderCategory = 32;
		this$static.cashMargin = 32;
		this$static.side = 32;
		this$static.qtyType = P0_longLit;
		this$static.lotType = 32;
		this$static.ordType = 32;
		this$static.priceType = P0_longLit;
		this$static.price = P0_longLit;
		this$static.priceProtectionScope = 32;
		this$static.stopPx = P0_longLit;
		this$static.peggedPrice = P0_longLit;
		this$static.peggedRefPrice = P0_longLit;
		this$static.discretionPrice = P0_longLit;
		this$static.targetStrategy = P0_longLit;
		this$static.participationRate = P0_longLit;
		this$static.targetStrategyPerformance = P0_longLit;
		this$static.solicitedFlag = false;
		this$static.timeInForce = 32;
		this$static.aggressorIndicator = false;
		this$static.orderCapacity = 32;
		this$static.preTradeAnonymity = false;
		this$static.custOrderCapacity = P0_longLit;
		this$static.lastQty = P0_longLit;
		this$static.calculatedCcyLastQty = P0_longLit;
		this$static.lastSwapPoints = P0_longLit;
		this$static.underlyingLastQty = P0_longLit;
		this$static.lastPx = P0_longLit;
		this$static.underlyingLastPx = P0_longLit;
		this$static.lastParPx = P0_longLit;
		this$static.lastSpotRate = P0_longLit;
		this$static.lastForwardPoints = P0_longLit;
		this$static.lastCapacity = 32;
		this$static.leavesQty = P0_longLit;
		this$static.cumQty = P0_longLit;
		this$static.avgPx = P0_longLit;
		this$static.dayOrderQty = P0_longLit;
		this$static.dayCumQty = P0_longLit;
		this$static.dayAvgPx = P0_longLit;
		this$static.totNoFills = P0_longLit;
		this$static.lastFragment = false;
		this$static.gTBookingInst = P0_longLit;
		this$static.reportToExch = false;
		this$static.grossTradeAmt = P0_longLit;
		this$static.numDaysInterest = P0_longLit;
		this$static.accruedInterestRate = P0_longLit;
		this$static.accruedInterestAmt = P0_longLit;
		this$static.interestAtMaturity = P0_longLit;
		this$static.endAccruedInterestAmt = P0_longLit;
		this$static.startCash = P0_longLit;
		this$static.endCash = P0_longLit;
		this$static.tradedFlatSwitch = false;
		this$static.basisFeaturePrice = P0_longLit;
		this$static.concession = P0_longLit;
		this$static.totalTakedown = P0_longLit;
		this$static.netMoney = P0_longLit;
		this$static.settlCurrAmt = P0_longLit;
		this$static.settlCurrFxRate = P0_longLit;
		this$static.settlCurrFxRateCalc = 32;
		this$static.handlInst = 32;
		this$static.minQty = P0_longLit;
		this$static.matchIncrement = P0_longLit;
		this$static.maxPriceLevels = P0_longLit;
		this$static.maxFloor = P0_longLit;
		this$static.positionEffect = 32;
		this$static.maxShow = P0_longLit;
		this$static.bookingType = P0_longLit;
		this$static.encodedTextLen = P0_longLit;
		this$static.orderQty2 = P0_longLit;
		this$static.lastForwardPoints2 = P0_longLit;
		this$static.multiLegReportingType = 32;
		this$static.cancellationRights = 32;
		this$static.moneyLaunderingStatus = 32;
		this$static.execPriceType = 32;
		this$static.execPriceAdjustment = P0_longLit;
		this$static.priorityIndicator = P0_longLit;
		this$static.priceImprovement = P0_longLit;
		this$static.lastLiquidityInd = P0_longLit;
		this$static.copyMsgIndicator = false;
		this$static.manualOrderIndicator = false;
		this$static.custDirectedOrder = false;
		this$static.orderHandlingInstSource = P0_longLit;
		this$static.dividendYield = P0_longLit;
		this$static.volatility = P0_longLit;
		this$static.timeToExpiration = P0_longLit;
		this$static.riskFreeRate = P0_longLit;
		this$static.priceDelta = P0_longLit;
	}

	function $clear_1(this$static) {
		$clinit_Utils();
		this$static.orderID[0] = 0;
		this$static.secondaryOrderID[0] = 0;
		this$static.secondaryClOrdID[0] = 0;
		this$static.secondaryExecID[0] = 0;
		this$static.clOrdID[0] = 0;
		this$static.origClOrdID[0] = 0;
		this$static.clOrdLinkID[0] = 0;
		this$static.quoteRespID[0] = 0;
		this$static.ordStatusReqID[0] = 0;
		this$static.massStatusReqID[0] = 0;
		this$static.hostCrossID[0] = 0;
		this$static.totNumReports = P7fffffffffffffff_longLit;
		this$static.lastRptRequested = false;
		this$static.tradeOriginationDate[0] = 0;
		this$static.listID[0] = 0;
		this$static.crossID[0] = 0;
		this$static.origCrossID[0] = 0;
		this$static.crossType = P7fffffffffffffff_longLit;
		this$static.trdMatchID[0] = 0;
		this$static.execID[0] = 0;
		this$static.execRefID[0] = 0;
		this$static.execType = 127;
		this$static.ordStatus = 127;
		this$static.workingIndicator = false;
		this$static.ordRejReason = P7fffffffffffffff_longLit;
		this$static.execRestatementReason = P7fffffffffffffff_longLit;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.dayBookingInst = 127;
		this$static.bookingUnit = 127;
		this$static.preallocMethod = 127;
		this$static.allocID[0] = 0;
		this$static.settlType[0] = 0;
		this$static.settlDate[0] = 0;
		this$static.matchType[0] = 0;
		this$static.orderCategory = 127;
		this$static.cashMargin = 127;
		this$static.clearingFeeIndicator[0] = 0;
		this$static.side = 127;
		this$static.qtyType = P7fffffffffffffff_longLit;
		this$static.lotType = 127;
		this$static.ordType = 127;
		this$static.priceType = P7fffffffffffffff_longLit;
		this$static.price = P7fffffffffffffff_longLit;
		this$static.priceProtectionScope = 127;
		this$static.stopPx = P7fffffffffffffff_longLit;
		this$static.peggedPrice = P7fffffffffffffff_longLit;
		this$static.peggedRefPrice = P7fffffffffffffff_longLit;
		this$static.discretionPrice = P7fffffffffffffff_longLit;
		this$static.targetStrategy = P7fffffffffffffff_longLit;
		this$static.targetStrategyParameters[0] = 0;
		this$static.participationRate = P7fffffffffffffff_longLit;
		this$static.targetStrategyPerformance = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.complianceID[0] = 0;
		this$static.solicitedFlag = false;
		this$static.timeInForce = 127;
		this$static.effectiveTime[0] = 0;
		this$static.expireDate[0] = 0;
		this$static.expireTime[0] = 0;
		this$static.execInst[0] = 0;
		this$static.aggressorIndicator = false;
		this$static.orderCapacity = 127;
		this$static.orderRestrictions[0] = 0;
		this$static.preTradeAnonymity = false;
		this$static.custOrderCapacity = P7fffffffffffffff_longLit;
		this$static.lastQty = P7fffffffffffffff_longLit;
		this$static.calculatedCcyLastQty = P7fffffffffffffff_longLit;
		this$static.lastSwapPoints = P7fffffffffffffff_longLit;
		this$static.underlyingLastQty = P7fffffffffffffff_longLit;
		this$static.lastPx = P7fffffffffffffff_longLit;
		this$static.underlyingLastPx = P7fffffffffffffff_longLit;
		this$static.lastParPx = P7fffffffffffffff_longLit;
		this$static.lastSpotRate = P7fffffffffffffff_longLit;
		this$static.lastForwardPoints = P7fffffffffffffff_longLit;
		this$static.lastMkt[0] = 0;
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
		this$static.timeBracket[0] = 0;
		this$static.lastCapacity = 127;
		this$static.leavesQty = P7fffffffffffffff_longLit;
		this$static.cumQty = P7fffffffffffffff_longLit;
		this$static.avgPx = P7fffffffffffffff_longLit;
		this$static.dayOrderQty = P7fffffffffffffff_longLit;
		this$static.dayCumQty = P7fffffffffffffff_longLit;
		this$static.dayAvgPx = P7fffffffffffffff_longLit;
		this$static.totNoFills = P7fffffffffffffff_longLit;
		this$static.lastFragment = false;
		this$static.gTBookingInst = P7fffffffffffffff_longLit;
		this$static.tradeDate[0] = 0;
		this$static.transactTime[0] = 0;
		this$static.reportToExch = false;
		this$static.grossTradeAmt = P7fffffffffffffff_longLit;
		this$static.numDaysInterest = P7fffffffffffffff_longLit;
		this$static.exDate[0] = 0;
		this$static.accruedInterestRate = P7fffffffffffffff_longLit;
		this$static.accruedInterestAmt = P7fffffffffffffff_longLit;
		this$static.interestAtMaturity = P7fffffffffffffff_longLit;
		this$static.endAccruedInterestAmt = P7fffffffffffffff_longLit;
		this$static.startCash = P7fffffffffffffff_longLit;
		this$static.endCash = P7fffffffffffffff_longLit;
		this$static.tradedFlatSwitch = false;
		this$static.basisFeatureDate[0] = 0;
		this$static.basisFeaturePrice = P7fffffffffffffff_longLit;
		this$static.concession = P7fffffffffffffff_longLit;
		this$static.totalTakedown = P7fffffffffffffff_longLit;
		this$static.netMoney = P7fffffffffffffff_longLit;
		this$static.settlCurrAmt = P7fffffffffffffff_longLit;
		this$static.settlCurrency[0] = 0;
		this$static.settlCurrFxRate = P7fffffffffffffff_longLit;
		this$static.settlCurrFxRateCalc = 127;
		this$static.handlInst = 127;
		this$static.minQty = P7fffffffffffffff_longLit;
		this$static.matchIncrement = P7fffffffffffffff_longLit;
		this$static.maxPriceLevels = P7fffffffffffffff_longLit;
		this$static.maxFloor = P7fffffffffffffff_longLit;
		this$static.positionEffect = 127;
		this$static.maxShow = P7fffffffffffffff_longLit;
		this$static.bookingType = P7fffffffffffffff_longLit;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		this$static.settlDate2[0] = 0;
		this$static.orderQty2 = P7fffffffffffffff_longLit;
		this$static.lastForwardPoints2 = P7fffffffffffffff_longLit;
		this$static.multiLegReportingType = 127;
		this$static.cancellationRights = 127;
		this$static.moneyLaunderingStatus = 127;
		this$static.registID[0] = 0;
		this$static.designation[0] = 0;
		this$static.transBkdTime[0] = 0;
		this$static.execValuationPoint[0] = 0;
		this$static.execPriceType = 127;
		this$static.execPriceAdjustment = P7fffffffffffffff_longLit;
		this$static.priorityIndicator = P7fffffffffffffff_longLit;
		this$static.priceImprovement = P7fffffffffffffff_longLit;
		this$static.lastLiquidityInd = P7fffffffffffffff_longLit;
		this$static.copyMsgIndicator = false;
		this$static.manualOrderIndicator = false;
		this$static.custDirectedOrder = false;
		this$static.receivedDeptID[0] = 0;
		this$static.custOrderHandlingInst[0] = 0;
		this$static.orderHandlingInstSource = P7fffffffffffffff_longLit;
		this$static.dividendYield = P7fffffffffffffff_longLit;
		this$static.volatility = P7fffffffffffffff_longLit;
		this$static.timeToExpiration = P7fffffffffffffff_longLit;
		this$static.riskFreeRate = P7fffffffffffffff_longLit;
		this$static.priceDelta = P7fffffffffffffff_longLit;
		$clear_10(this$static.applicationSequenceControl);
		$clear_88(this$static.parties);
		$clear_23(this$static.contraGrp);
		$clear_95(this$static.preAllocGrp);
		$clear_40(this$static.instrument);
		$clear_34(this$static.financingDetails);
		$clear_142(this$static.undInstrmtGrp);
		$clear_119(this$static.stipulations);
		$clear_87(this$static.orderQtyData);
		$clear_139(this$static.triggeringInstruction);
		$clear_90(this$static.pegInstructions);
		$clear_25(this$static.discretionInstructions);
		$clear_121(this$static.strategyParametersGrp);
		$clear_32(this$static.fillsGrp);
		$clear_14(this$static.commissionData);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_152(this$static.yieldData);
		$clear_105(this$static.rateSource);
		$clear_26(this$static.displayInstruction);
		$clear_21(this$static.contAmtGrp);
		$clear_35(this$static.instrmtLegExecGrp);
		$clear_64(this$static.miscFeesGrp);
		$clear_135(this$static.trdRegTimestamps);
	}

	function $getAll_2(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 1180:
				$getAll_21(this$static.applicationSequenceControl, 1180, value_0);
				break;
			case 37:
				this$static.orderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 37, value_0, this$static.orderID);
				break;
			case 198:
				this$static.secondaryOrderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 198, value_0, this$static.secondaryOrderID);
				break;
			case 526:
				this$static.secondaryClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 526, value_0, this$static.secondaryClOrdID);
				break;
			case 527:
				this$static.secondaryExecID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 527, value_0, this$static.secondaryExecID);
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 11, value_0, this$static.clOrdID);
				break;
			case 41:
				this$static.origClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 41, value_0, this$static.origClOrdID);
				break;
			case 583:
				this$static.clOrdLinkID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 583, value_0, this$static.clOrdLinkID);
				break;
			case 693:
				this$static.quoteRespID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 693, value_0, this$static.quoteRespID);
				break;
			case 790:
				this$static.ordStatusReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 790, value_0, this$static.ordStatusReqID);
				break;
			case 584:
				this$static.massStatusReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 584, value_0, this$static.massStatusReqID);
				break;
			case 961:
				this$static.hostCrossID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 961, value_0, this$static.hostCrossID);
				break;
			case 911:
				this$static.totNumReports = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 911, value_0));
				break;
			case 912:
				this$static.lastRptRequested = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 912, value_0);
				if (!isValid_68(this$static.lastRptRequested)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.lastRptRequested + ') for tag'), P390_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 229:
				this$static.tradeOriginationDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 229, value_0, this$static.tradeOriginationDate);
				break;
			case 382:
				this$static.contraGrp.noContraBrokers = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 382, value_0);
				$getAll_29(this$static.contraGrp, this$static.contraGrp.noContraBrokers, value_0);
				break;
			case 66:
				this$static.listID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 66, value_0, this$static.listID);
				break;
			case 548:
				this$static.crossID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 548, value_0, this$static.crossID);
				break;
			case 551:
				this$static.origCrossID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 551, value_0, this$static.origCrossID);
				break;
			case 549:
				this$static.crossType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 549, value_0));
				if (!isValid_26(this$static.crossType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.crossType) + ') for tag'), P225_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 880:
				this$static.trdMatchID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 880, value_0, this$static.trdMatchID);
				break;
			case 17:
				this$static.execID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 17, value_0, this$static.execID);
				break;
			case 19:
				this$static.execRefID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 19, value_0, this$static.execRefID);
				break;
			case 150:
				this$static.execType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 150, value_0);
				if (!isValid_53(this$static.execType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.execType + ') for tag'), P96_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 39:
				this$static.ordStatus = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 39, value_0);
				if (!isValid_88(this$static.ordStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordStatus + ') for tag'), P27_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 636:
				this$static.workingIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 636, value_0);
				if (!isValid_185(this$static.workingIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.workingIndicator + ') for tag'), P27c_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 103:
				this$static.ordRejReason = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 103, value_0));
				if (!isValid_87(this$static.ordRejReason)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.ordRejReason) + ') for tag'), P67_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 378:
				this$static.execRestatementReason = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 378, value_0));
				if (!isValid_52(this$static.execRestatementReason)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.execRestatementReason) + ') for tag'), P17a_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 589:
				this$static.dayBookingInst = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 589, value_0);
				if (!isValid_32(this$static.dayBookingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.dayBookingInst + ') for tag'), P24d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 590:
				this$static.bookingUnit = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 590, value_0);
				if (!isValid_7(this$static.bookingUnit)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.bookingUnit + ') for tag'), P24e_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 591:
				this$static.preallocMethod = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 591, value_0);
				if (!isValid_114(this$static.preallocMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.preallocMethod + ') for tag'), P24f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 70:
				this$static.allocID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 70, value_0, this$static.allocID);
				break;
			case 78:
				this$static.preAllocGrp.noAllocs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 78, value_0);
				$getAll_71(this$static.preAllocGrp, this$static.preAllocGrp.noAllocs, value_0);
				break;
			case 63:
				this$static.settlType = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 63, value_0, this$static.settlType);
				if (!isValid_149(this$static.settlType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlType + ') for tag'), P3f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 64:
				this$static.settlDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 64, value_0, this$static.settlDate);
				break;
			case 574:
				this$static.matchType = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 574, value_0, this$static.matchType);
				if (!isValid_75(this$static.matchType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.matchType + ') for tag'), P23e_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1115:
				this$static.orderCategory = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1115, value_0);
				if (!isValid_91(this$static.orderCategory)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderCategory + ') for tag'), P45b_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 544:
				this$static.cashMargin = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 544, value_0);
				if (!isValid_10(this$static.cashMargin)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.cashMargin + ') for tag'), P220_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 635:
				this$static.clearingFeeIndicator = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 635, value_0, this$static.clearingFeeIndicator);
				if (!isValid_11(this$static.clearingFeeIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.clearingFeeIndicator + ') for tag'), P27b_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 207:
				$getAll_40(this$static.instrument, 207, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 232:
				this$static.stipulations.noStipulations = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 232, value_0);
				$getAll_85(this$static.stipulations, this$static.stipulations.noStipulations, value_0);
				break;
			case 854:
				this$static.qtyType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 854, value_0));
				if (!isValid_123(this$static.qtyType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.qtyType) + ') for tag'), P356_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1093:
				this$static.lotType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1093, value_0);
				if (!isValid_72(this$static.lotType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.lotType + ') for tag'), P445_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 38:
				$getAll_66(this$static.orderQtyData, 38, value_0);
				break;
			case 40:
				this$static.ordType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 40, value_0);
				if (!isValid_89(this$static.ordType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordType + ') for tag'), P28_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 423:
				this$static.priceType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 423, value_0));
				if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 44:
				this$static.price = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 44, value_0);
				break;
			case 1092:
				this$static.priceProtectionScope = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1092, value_0);
				if (!isValid_116(this$static.priceProtectionScope)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.priceProtectionScope + ') for tag'), P444_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 99:
				this$static.stopPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 99, value_0);
				break;
			case 1100:
				$getAll_95(this$static.triggeringInstruction, 1100, value_0);
				break;
			case 211:
				$getAll_68(this$static.pegInstructions, 211, value_0);
				break;
			case 388:
				$getAll_30(this$static.discretionInstructions, 388, value_0);
				break;
			case 839:
				this$static.peggedPrice = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 839, value_0);
				break;
			case 1095:
				this$static.peggedRefPrice = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1095, value_0);
				break;
			case 845:
				this$static.discretionPrice = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 845, value_0);
				break;
			case 847:
				this$static.targetStrategy = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 847, value_0));
				if (!isValid_158(this$static.targetStrategy)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.targetStrategy) + ') for tag'), P34f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 957:
				this$static.strategyParametersGrp.noStrategyParameters = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 957, value_0);
				$getAll_86(this$static.strategyParametersGrp, this$static.strategyParametersGrp.noStrategyParameters, value_0);
				break;
			case 848:
				this$static.targetStrategyParameters = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 848, value_0, this$static.targetStrategyParameters);
				break;
			case 849:
				this$static.participationRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 849, value_0);
				break;
			case 850:
				this$static.targetStrategyPerformance = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 850, value_0);
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 15, value_0, this$static.currency);
				break;
			case 376:
				this$static.complianceID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 376, value_0, this$static.complianceID);
				break;
			case 377:
				this$static.solicitedFlag = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 377, value_0);
				if (!isValid_151(this$static.solicitedFlag)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.solicitedFlag + ') for tag'), P179_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 59:
				this$static.timeInForce = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 59, value_0);
				if (!isValid_162(this$static.timeInForce)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.timeInForce + ') for tag'), P3b_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 168:
				this$static.effectiveTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 168, value_0, this$static.effectiveTime);
				break;
			case 432:
				this$static.expireDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 432, value_0, this$static.expireDate);
				break;
			case 126:
				this$static.expireTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 126, value_0, this$static.expireTime);
				break;
			case 18:
				this$static.execInst = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 18, value_0, this$static.execInst);
				if (!isValid_50(this$static.execInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.execInst + ') for tag'), P12_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1057:
				this$static.aggressorIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1057, value_0);
				if (!isValid_3(this$static.aggressorIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.aggressorIndicator + ') for tag'), P421_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 528:
				this$static.orderCapacity = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 528, value_0);
				if (!isValid_90(this$static.orderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderCapacity + ') for tag'), P210_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 529:
				this$static.orderRestrictions = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 529, value_0, this$static.orderRestrictions);
				if (!isValid_93(this$static.orderRestrictions)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderRestrictions + ') for tag'), P211_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1091:
				this$static.preTradeAnonymity = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1091, value_0);
				break;
			case 582:
				this$static.custOrderCapacity = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 582, value_0));
				if (!isValid_27(this$static.custOrderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.custOrderCapacity) + ') for tag'), P246_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 32:
				this$static.lastQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 32, value_0);
				break;
			case 1056:
				this$static.calculatedCcyLastQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1056, value_0);
				break;
			case 1071:
				this$static.lastSwapPoints = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1071, value_0);
				break;
			case 652:
				this$static.underlyingLastQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 652, value_0);
				break;
			case 31:
				this$static.lastPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 31, value_0);
				break;
			case 651:
				this$static.underlyingLastPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 651, value_0);
				break;
			case 669:
				this$static.lastParPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 669, value_0);
				break;
			case 194:
				this$static.lastSpotRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 194, value_0);
				break;
			case 195:
				this$static.lastForwardPoints = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 195, value_0);
				break;
			case 30:
				this$static.lastMkt = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 30, value_0, this$static.lastMkt);
				break;
			case 336:
				this$static.tradingSessionID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 336, value_0, this$static.tradingSessionID);
				if (!isValid_168(this$static.tradingSessionID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionID + ') for tag'), P150_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 625:
				this$static.tradingSessionSubID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 625, value_0, this$static.tradingSessionSubID);
				if (!isValid_169(this$static.tradingSessionSubID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionSubID + ') for tag'), P271_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 943:
				this$static.timeBracket = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 943, value_0, this$static.timeBracket);
				break;
			case 29:
				this$static.lastCapacity = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 29, value_0);
				if (!isValid_65(this$static.lastCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.lastCapacity + ') for tag'), P1d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 151:
				this$static.leavesQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 151, value_0);
				break;
			case 14:
				this$static.cumQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 14, value_0);
				break;
			case 6:
				this$static.avgPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 6, value_0);
				break;
			case 424:
				this$static.dayOrderQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 424, value_0);
				break;
			case 425:
				this$static.dayCumQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 425, value_0);
				break;
			case 426:
				this$static.dayAvgPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 426, value_0);
				break;
			case 1361:
				this$static.totNoFills = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1361, value_0));
				break;
			case 893:
				this$static.lastFragment = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 893, value_0);
				if (!isValid_66(this$static.lastFragment)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.lastFragment + ') for tag'), P37d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1362:
				this$static.fillsGrp.noFills = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1362, value_0);
				$getAll_35(this$static.fillsGrp, this$static.fillsGrp.noFills, value_0);
				break;
			case 427:
				this$static.gTBookingInst = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 427, value_0));
				if (!isValid_60(this$static.gTBookingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.gTBookingInst) + ') for tag'), P1ab_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 75:
				this$static.tradeDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 75, value_0, this$static.tradeDate);
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 60, value_0, this$static.transactTime);
				break;
			case 113:
				this$static.reportToExch = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 113, value_0);
				if (!isValid_131(this$static.reportToExch)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.reportToExch + ') for tag'), P71_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 12:
				$getAll_24(this$static.commissionData, 12, value_0);
				break;
			case 218:
				$getAll_84(this$static.spreadOrBenchmarkCurveData, 218, value_0);
				break;
			case 235:
				$getAll_103(this$static.yieldData, 235, value_0);
				break;
			case 381:
				this$static.grossTradeAmt = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 381, value_0);
				break;
			case 157:
				this$static.numDaysInterest = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 157, value_0));
				break;
			case 230:
				this$static.exDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 230, value_0, this$static.exDate);
				break;
			case 158:
				this$static.accruedInterestRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 158, value_0);
				break;
			case 159:
				this$static.accruedInterestAmt = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 159, value_0);
				break;
			case 738:
				this$static.interestAtMaturity = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 738, value_0);
				break;
			case 920:
				this$static.endAccruedInterestAmt = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 920, value_0);
				break;
			case 921:
				this$static.startCash = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 921, value_0);
				break;
			case 922:
				this$static.endCash = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 922, value_0);
				break;
			case 258:
				this$static.tradedFlatSwitch = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 258, value_0);
				if (!isValid_167(this$static.tradedFlatSwitch)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradedFlatSwitch + ') for tag'), P102_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 259:
				this$static.basisFeatureDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 259, value_0, this$static.basisFeatureDate);
				break;
			case 260:
				this$static.basisFeaturePrice = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 260, value_0);
				break;
			case 238:
				this$static.concession = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 238, value_0);
				break;
			case 237:
				this$static.totalTakedown = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 237, value_0);
				break;
			case 118:
				this$static.netMoney = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 118, value_0);
				break;
			case 119:
				this$static.settlCurrAmt = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 119, value_0);
				break;
			case 120:
				this$static.settlCurrency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 120, value_0, this$static.settlCurrency);
				break;
			case 1445:
				this$static.rateSource.noRateSources = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1445, value_0);
				$getAll_77(this$static.rateSource, this$static.rateSource.noRateSources, value_0);
				break;
			case 155:
				this$static.settlCurrFxRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 155, value_0);
				break;
			case 156:
				this$static.settlCurrFxRateCalc = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 156, value_0);
				if (!isValid_146(this$static.settlCurrFxRateCalc)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlCurrFxRateCalc + ') for tag'), P9c_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 21:
				this$static.handlInst = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 21, value_0);
				if (!isValid_62(this$static.handlInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.handlInst + ') for tag'), P15_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 110:
				this$static.minQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 110, value_0);
				break;
			case 1089:
				this$static.matchIncrement = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1089, value_0);
				break;
			case 1090:
				this$static.maxPriceLevels = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1090, value_0));
				break;
			case 1138:
				$getAll_31(this$static.displayInstruction, 1138, value_0);
				break;
			case 111:
				this$static.maxFloor = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 111, value_0);
				break;
			case 77:
				this$static.positionEffect = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 77, value_0);
				if (!isValid_113(this$static.positionEffect)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.positionEffect + ') for tag'), P4d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 210:
				this$static.maxShow = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 210, value_0);
				break;
			case 775:
				this$static.bookingType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 775, value_0));
				if (!isValid_6(this$static.bookingType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.bookingType) + ') for tag'), P307_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 355, value_0, this$static.encodedText);
				break;
			case 193:
				this$static.settlDate2 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 193, value_0, this$static.settlDate2);
				break;
			case 192:
				this$static.orderQty2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 192, value_0);
				break;
			case 641:
				this$static.lastForwardPoints2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 641, value_0);
				break;
			case 442:
				this$static.multiLegReportingType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 442, value_0);
				if (!isValid_83(this$static.multiLegReportingType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.multiLegReportingType + ') for tag'), P1ba_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 480:
				this$static.cancellationRights = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 480, value_0);
				if (!isValid_9(this$static.cancellationRights)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.cancellationRights + ') for tag'), P1e0_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 481:
				this$static.moneyLaunderingStatus = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 481, value_0);
				if (!isValid_80(this$static.moneyLaunderingStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.moneyLaunderingStatus + ') for tag'), P1e1_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 513:
				this$static.registID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 513, value_0, this$static.registID);
				break;
			case 494:
				this$static.designation = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 494, value_0, this$static.designation);
				break;
			case 483:
				this$static.transBkdTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 483, value_0, this$static.transBkdTime);
				break;
			case 515:
				this$static.execValuationPoint = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 515, value_0, this$static.execValuationPoint);
				break;
			case 484:
				this$static.execPriceType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 484, value_0);
				if (!isValid_51(this$static.execPriceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.execPriceType + ') for tag'), P1e4_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 485:
				this$static.execPriceAdjustment = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 485, value_0);
				break;
			case 638:
				this$static.priorityIndicator = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 638, value_0));
				if (!isValid_119(this$static.priorityIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priorityIndicator) + ') for tag'), P27e_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 639:
				this$static.priceImprovement = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 639, value_0);
				break;
			case 851:
				this$static.lastLiquidityInd = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 851, value_0));
				if (!isValid_67(this$static.lastLiquidityInd)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.lastLiquidityInd) + ') for tag'), P353_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 518:
				this$static.contAmtGrp.noContAmts = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 518, value_0);
				$getAll_28(this$static.contAmtGrp, this$static.contAmtGrp.noContAmts, value_0);
				break;
			case 555:
				this$static.instrmtLegExecGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 555, value_0);
				$getAll_37(this$static.instrmtLegExecGrp, this$static.instrmtLegExecGrp.noLegs, value_0);
				break;
			case 797:
				this$static.copyMsgIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 797, value_0);
				break;
			case 1028:
				this$static.manualOrderIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1028, value_0);
				break;
			case 1029:
				this$static.custDirectedOrder = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1029, value_0);
				break;
			case 1030:
				this$static.receivedDeptID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1030, value_0, this$static.receivedDeptID);
				break;
			case 1031:
				this$static.custOrderHandlingInst = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1031, value_0, this$static.custOrderHandlingInst);
				if (!isValid_28(this$static.custOrderHandlingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.custOrderHandlingInst + ') for tag'), P407_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1032:
				this$static.orderHandlingInstSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1032, value_0));
				if (!isValid_92(this$static.orderHandlingInstSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.orderHandlingInstSource) + ') for tag'), P408_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1380:
				this$static.dividendYield = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1380, value_0);
				break;
			case 136:
				this$static.miscFeesGrp.noMiscFees = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 136, value_0);
				$getAll_54(this$static.miscFeesGrp, this$static.miscFeesGrp.noMiscFees, value_0);
				break;
			case 768:
				this$static.trdRegTimestamps.noTrdRegTimestamps = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 768, value_0);
				$getAll_93(this$static.trdRegTimestamps, this$static.trdRegTimestamps.noTrdRegTimestamps, value_0);
				break;
			case 1188:
				this$static.volatility = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1188, value_0);
				break;
			case 1189:
				this$static.timeToExpiration = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1189, value_0);
				break;
			case 1190:
				this$static.riskFreeRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 1190, value_0);
				break;
			case 811:
				this$static.priceDelta = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 811, value_0);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1), 10, value_0));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixExecutionReport_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		$$init_5(this);
		this.applicationSequenceControl = new FixApplicationSequenceControl_0;
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryOrderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryExecID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdLinkID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quoteRespID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.ordStatusReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.massStatusReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.hostCrossID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.tradeOriginationDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.contraGrp = new FixContraGrp_0;
		this.listID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.crossID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origCrossID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.trdMatchID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.allocID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.preAllocGrp = new FixPreAllocGrp_0;
		this.settlType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.matchType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingFeeIndicator = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.stipulations = new FixStipulations_0;
		this.orderQtyData = new FixOrderQtyData_0;
		this.triggeringInstruction = new FixTriggeringInstruction_0;
		this.pegInstructions = new FixPegInstructions_0;
		this.discretionInstructions = new FixDiscretionInstructions_0;
		this.strategyParametersGrp = new FixStrategyParametersGrp_0;
		this.targetStrategyParameters = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.complianceID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.effectiveTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.expireDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.expireTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.execInst = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderRestrictions = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.lastMkt = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.timeBracket = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.fillsGrp = new FixFillsGrp_0;
		this.tradeDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.commissionData = new FixCommissionData_0;
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.yieldData = new FixYieldData_0;
		this.exDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.basisFeatureDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.rateSource = new FixRateSource_0;
		this.displayInstruction = new FixDisplayInstruction_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 409600, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.settlDate2 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.registID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.designation = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transBkdTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.execValuationPoint = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.contAmtGrp = new FixContAmtGrp_0;
		this.instrmtLegExecGrp = new FixInstrmtLegExecGrp_0;
		this.receivedDeptID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.custOrderHandlingInst = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.miscFeesGrp = new FixMiscFeesGrp_0;
		this.trdRegTimestamps = new FixTrdRegTimestamps_0;
		$clear_1(this);
		this.msgTypeInt = 56;
	}

	defineSeed(326, 322, makeCastMap([Q$FixExecutionReport, Q$FixMessage]), FixExecutionReport_0);
	_.equals$ = function equals_17(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixExecutionReport)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		$equals_0(this.applicationSequenceControl, msg.applicationSequenceControl) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.secondaryOrderID, msg.secondaryOrderID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		equals_12(this.secondaryExecID, msg.secondaryExecID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.origClOrdID, msg.origClOrdID) || (ret = false);
		equals_12(this.clOrdLinkID, msg.clOrdLinkID) || (ret = false);
		equals_12(this.quoteRespID, msg.quoteRespID) || (ret = false);
		equals_12(this.ordStatusReqID, msg.ordStatusReqID) || (ret = false);
		equals_12(this.massStatusReqID, msg.massStatusReqID) || (ret = false);
		equals_12(this.hostCrossID, msg.hostCrossID) || (ret = false);
		if (neq(this.totNumReports, msg.totNumReports)) {
			ret = false;
			$print((valueOf_1(this.totNumReports), valueOf_1(msg.totNumReports)));
		}
		if (this.lastRptRequested != msg.lastRptRequested) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_83(this.parties, msg.parties) || (ret = false);
		$equals_13(this.contraGrp, msg.contraGrp) || (ret = false);
		equals_12(this.listID, msg.listID) || (ret = false);
		equals_12(this.crossID, msg.crossID) || (ret = false);
		equals_12(this.origCrossID, msg.origCrossID) || (ret = false);
		if (neq(this.crossType, msg.crossType)) {
			ret = false;
			$print((valueOf_1(this.crossType), valueOf_1(msg.crossType)));
		}
		equals_12(this.trdMatchID, msg.trdMatchID) || (ret = false);
		equals_12(this.execID, msg.execID) || (ret = false);
		equals_12(this.execRefID, msg.execRefID) || (ret = false);
		if (this.execType != msg.execType) {
			ret = false;
			$print((valueOf(this.execType), valueOf(msg.execType)));
		}
		if (this.ordStatus != msg.ordStatus) {
			ret = false;
			$print((valueOf(this.ordStatus), valueOf(msg.ordStatus)));
		}
		if (this.workingIndicator != msg.workingIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.ordRejReason, msg.ordRejReason)) {
			ret = false;
			$print((valueOf_1(this.ordRejReason), valueOf_1(msg.ordRejReason)));
		}
		if (neq(this.execRestatementReason, msg.execRestatementReason)) {
			ret = false;
			$print((valueOf_1(this.execRestatementReason), valueOf_1(msg.execRestatementReason)));
		}
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		if (this.dayBookingInst != msg.dayBookingInst) {
			ret = false;
			$print((valueOf(this.dayBookingInst), valueOf(msg.dayBookingInst)));
		}
		if (this.bookingUnit != msg.bookingUnit) {
			ret = false;
			$print((valueOf(this.bookingUnit), valueOf(msg.bookingUnit)));
		}
		if (this.preallocMethod != msg.preallocMethod) {
			ret = false;
			$print((valueOf(this.preallocMethod), valueOf(msg.preallocMethod)));
		}
		equals_12(this.allocID, msg.allocID) || (ret = false);
		$equals_90(this.preAllocGrp, msg.preAllocGrp) || (ret = false);
		equals_12(this.settlType, msg.settlType) || (ret = false);
		equals_12(this.matchType, msg.matchType) || (ret = false);
		if (this.orderCategory != msg.orderCategory) {
			ret = false;
			$print((valueOf(this.orderCategory), valueOf(msg.orderCategory)));
		}
		if (this.cashMargin != msg.cashMargin) {
			ret = false;
			$print((valueOf(this.cashMargin), valueOf(msg.cashMargin)));
		}
		equals_12(this.clearingFeeIndicator, msg.clearingFeeIndicator) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		$equals_115(this.stipulations, msg.stipulations) || (ret = false);
		if (neq(this.qtyType, msg.qtyType)) {
			ret = false;
			$print((valueOf_1(this.qtyType), valueOf_1(msg.qtyType)));
		}
		if (this.lotType != msg.lotType) {
			ret = false;
			$print((valueOf(this.lotType), valueOf(msg.lotType)));
		}
		$equals_82(this.orderQtyData, msg.orderQtyData) || (ret = false);
		if (this.ordType != msg.ordType) {
			ret = false;
			$print((valueOf(this.ordType), valueOf(msg.ordType)));
		}
		if (neq(this.priceType, msg.priceType)) {
			ret = false;
			$print((valueOf_1(this.priceType), valueOf_1(msg.priceType)));
		}
		if (neq(this.price, msg.price)) {
			ret = false;
			$print((valueOf_1(this.price), valueOf_1(msg.price)));
		}
		if (this.priceProtectionScope != msg.priceProtectionScope) {
			ret = false;
			$print((valueOf(this.priceProtectionScope), valueOf(msg.priceProtectionScope)));
		}
		if (neq(this.stopPx, msg.stopPx)) {
			ret = false;
			$print((valueOf_1(this.stopPx), valueOf_1(msg.stopPx)));
		}
		$equals_136(this.triggeringInstruction, msg.triggeringInstruction) || (ret = false);
		$equals_85(this.pegInstructions, msg.pegInstructions) || (ret = false);
		$equals_15(this.discretionInstructions, msg.discretionInstructions) || (ret = false);
		if (neq(this.peggedPrice, msg.peggedPrice)) {
			ret = false;
			$print((valueOf_1(this.peggedPrice), valueOf_1(msg.peggedPrice)));
		}
		if (neq(this.peggedRefPrice, msg.peggedRefPrice)) {
			ret = false;
			$print((valueOf_1(this.peggedRefPrice), valueOf_1(msg.peggedRefPrice)));
		}
		if (neq(this.discretionPrice, msg.discretionPrice)) {
			ret = false;
			$print((valueOf_1(this.discretionPrice), valueOf_1(msg.discretionPrice)));
		}
		if (neq(this.targetStrategy, msg.targetStrategy)) {
			ret = false;
			$print((valueOf_1(this.targetStrategy), valueOf_1(msg.targetStrategy)));
		}
		$equals_117(this.strategyParametersGrp, msg.strategyParametersGrp) || (ret = false);
		equals_12(this.targetStrategyParameters, msg.targetStrategyParameters) || (ret = false);
		if (neq(this.participationRate, msg.participationRate)) {
			ret = false;
			$print((valueOf_1(this.participationRate), valueOf_1(msg.participationRate)));
		}
		if (neq(this.targetStrategyPerformance, msg.targetStrategyPerformance)) {
			ret = false;
			$print((valueOf_1(this.targetStrategyPerformance), valueOf_1(msg.targetStrategyPerformance)));
		}
		equals_12(this.currency, msg.currency) || (ret = false);
		equals_12(this.complianceID, msg.complianceID) || (ret = false);
		if (this.solicitedFlag != msg.solicitedFlag) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.timeInForce != msg.timeInForce) {
			ret = false;
			$print((valueOf(this.timeInForce), valueOf(msg.timeInForce)));
		}
		equals_12(this.execInst, msg.execInst) || (ret = false);
		if (this.aggressorIndicator != msg.aggressorIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.orderCapacity != msg.orderCapacity) {
			ret = false;
			$print((valueOf(this.orderCapacity), valueOf(msg.orderCapacity)));
		}
		equals_12(this.orderRestrictions, msg.orderRestrictions) || (ret = false);
		if (this.preTradeAnonymity != msg.preTradeAnonymity) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.custOrderCapacity, msg.custOrderCapacity)) {
			ret = false;
			$print((valueOf_1(this.custOrderCapacity), valueOf_1(msg.custOrderCapacity)));
		}
		if (neq(this.lastQty, msg.lastQty)) {
			ret = false;
			$print((valueOf_1(this.lastQty), valueOf_1(msg.lastQty)));
		}
		if (neq(this.calculatedCcyLastQty, msg.calculatedCcyLastQty)) {
			ret = false;
			$print((valueOf_1(this.calculatedCcyLastQty), valueOf_1(msg.calculatedCcyLastQty)));
		}
		if (neq(this.lastSwapPoints, msg.lastSwapPoints)) {
			ret = false;
			$print((valueOf_1(this.lastSwapPoints), valueOf_1(msg.lastSwapPoints)));
		}
		if (neq(this.underlyingLastQty, msg.underlyingLastQty)) {
			ret = false;
			$print((valueOf_1(this.underlyingLastQty), valueOf_1(msg.underlyingLastQty)));
		}
		if (neq(this.lastPx, msg.lastPx)) {
			ret = false;
			$print((valueOf_1(this.lastPx), valueOf_1(msg.lastPx)));
		}
		if (neq(this.underlyingLastPx, msg.underlyingLastPx)) {
			ret = false;
			$print((valueOf_1(this.underlyingLastPx), valueOf_1(msg.underlyingLastPx)));
		}
		if (neq(this.lastParPx, msg.lastParPx)) {
			ret = false;
			$print((valueOf_1(this.lastParPx), valueOf_1(msg.lastParPx)));
		}
		if (neq(this.lastSpotRate, msg.lastSpotRate)) {
			ret = false;
			$print((valueOf_1(this.lastSpotRate), valueOf_1(msg.lastSpotRate)));
		}
		if (neq(this.lastForwardPoints, msg.lastForwardPoints)) {
			ret = false;
			$print((valueOf_1(this.lastForwardPoints), valueOf_1(msg.lastForwardPoints)));
		}
		equals_12(this.lastMkt, msg.lastMkt) || (ret = false);
		equals_12(this.tradingSessionID, msg.tradingSessionID) || (ret = false);
		equals_12(this.tradingSessionSubID, msg.tradingSessionSubID) || (ret = false);
		equals_12(this.timeBracket, msg.timeBracket) || (ret = false);
		if (this.lastCapacity != msg.lastCapacity) {
			ret = false;
			$print((valueOf(this.lastCapacity), valueOf(msg.lastCapacity)));
		}
		if (neq(this.leavesQty, msg.leavesQty)) {
			ret = false;
			$print((valueOf_1(this.leavesQty), valueOf_1(msg.leavesQty)));
		}
		if (neq(this.cumQty, msg.cumQty)) {
			ret = false;
			$print((valueOf_1(this.cumQty), valueOf_1(msg.cumQty)));
		}
		if (neq(this.avgPx, msg.avgPx)) {
			ret = false;
			$print((valueOf_1(this.avgPx), valueOf_1(msg.avgPx)));
		}
		if (neq(this.dayOrderQty, msg.dayOrderQty)) {
			ret = false;
			$print((valueOf_1(this.dayOrderQty), valueOf_1(msg.dayOrderQty)));
		}
		if (neq(this.dayCumQty, msg.dayCumQty)) {
			ret = false;
			$print((valueOf_1(this.dayCumQty), valueOf_1(msg.dayCumQty)));
		}
		if (neq(this.dayAvgPx, msg.dayAvgPx)) {
			ret = false;
			$print((valueOf_1(this.dayAvgPx), valueOf_1(msg.dayAvgPx)));
		}
		if (neq(this.totNoFills, msg.totNoFills)) {
			ret = false;
			$print((valueOf_1(this.totNoFills), valueOf_1(msg.totNoFills)));
		}
		if (this.lastFragment != msg.lastFragment) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_24(this.fillsGrp, msg.fillsGrp) || (ret = false);
		if (neq(this.gTBookingInst, msg.gTBookingInst)) {
			ret = false;
			$print((valueOf_1(this.gTBookingInst), valueOf_1(msg.gTBookingInst)));
		}
		if (this.reportToExch != msg.reportToExch) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_4(this.commissionData, msg.commissionData) || (ret = false);
		$equals_114(this.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		$equals_150(this.yieldData, msg.yieldData) || (ret = false);
		if (neq(this.grossTradeAmt, msg.grossTradeAmt)) {
			ret = false;
			$print((valueOf_1(this.grossTradeAmt), valueOf_1(msg.grossTradeAmt)));
		}
		if (neq(this.numDaysInterest, msg.numDaysInterest)) {
			ret = false;
			$print((valueOf_1(this.numDaysInterest), valueOf_1(msg.numDaysInterest)));
		}
		if (neq(this.accruedInterestRate, msg.accruedInterestRate)) {
			ret = false;
			$print((valueOf_1(this.accruedInterestRate), valueOf_1(msg.accruedInterestRate)));
		}
		if (neq(this.accruedInterestAmt, msg.accruedInterestAmt)) {
			ret = false;
			$print((valueOf_1(this.accruedInterestAmt), valueOf_1(msg.accruedInterestAmt)));
		}
		if (neq(this.interestAtMaturity, msg.interestAtMaturity)) {
			ret = false;
			$print((valueOf_1(this.interestAtMaturity), valueOf_1(msg.interestAtMaturity)));
		}
		if (neq(this.endAccruedInterestAmt, msg.endAccruedInterestAmt)) {
			ret = false;
			$print((valueOf_1(this.endAccruedInterestAmt), valueOf_1(msg.endAccruedInterestAmt)));
		}
		if (neq(this.startCash, msg.startCash)) {
			ret = false;
			$print((valueOf_1(this.startCash), valueOf_1(msg.startCash)));
		}
		if (neq(this.endCash, msg.endCash)) {
			ret = false;
			$print((valueOf_1(this.endCash), valueOf_1(msg.endCash)));
		}
		if (this.tradedFlatSwitch != msg.tradedFlatSwitch) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.basisFeaturePrice, msg.basisFeaturePrice)) {
			ret = false;
			$print((valueOf_1(this.basisFeaturePrice), valueOf_1(msg.basisFeaturePrice)));
		}
		if (neq(this.concession, msg.concession)) {
			ret = false;
			$print((valueOf_1(this.concession), valueOf_1(msg.concession)));
		}
		if (neq(this.totalTakedown, msg.totalTakedown)) {
			ret = false;
			$print((valueOf_1(this.totalTakedown), valueOf_1(msg.totalTakedown)));
		}
		if (neq(this.netMoney, msg.netMoney)) {
			ret = false;
			$print((valueOf_1(this.netMoney), valueOf_1(msg.netMoney)));
		}
		if (neq(this.settlCurrAmt, msg.settlCurrAmt)) {
			ret = false;
			$print((valueOf_1(this.settlCurrAmt), valueOf_1(msg.settlCurrAmt)));
		}
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		$equals_101(this.rateSource, msg.rateSource) || (ret = false);
		if (neq(this.settlCurrFxRate, msg.settlCurrFxRate)) {
			ret = false;
			$print((valueOf_1(this.settlCurrFxRate), valueOf_1(msg.settlCurrFxRate)));
		}
		if (this.settlCurrFxRateCalc != msg.settlCurrFxRateCalc) {
			ret = false;
			$print((valueOf(this.settlCurrFxRateCalc), valueOf(msg.settlCurrFxRateCalc)));
		}
		if (this.handlInst != msg.handlInst) {
			ret = false;
			$print((valueOf(this.handlInst), valueOf(msg.handlInst)));
		}
		if (neq(this.minQty, msg.minQty)) {
			ret = false;
			$print((valueOf_1(this.minQty), valueOf_1(msg.minQty)));
		}
		if (neq(this.matchIncrement, msg.matchIncrement)) {
			ret = false;
			$print((valueOf_1(this.matchIncrement), valueOf_1(msg.matchIncrement)));
		}
		if (neq(this.maxPriceLevels, msg.maxPriceLevels)) {
			ret = false;
			$print((valueOf_1(this.maxPriceLevels), valueOf_1(msg.maxPriceLevels)));
		}
		$equals_16(this.displayInstruction, msg.displayInstruction) || (ret = false);
		if (neq(this.maxFloor, msg.maxFloor)) {
			ret = false;
			$print((valueOf_1(this.maxFloor), valueOf_1(msg.maxFloor)));
		}
		if (this.positionEffect != msg.positionEffect) {
			ret = false;
			$print((valueOf(this.positionEffect), valueOf(msg.positionEffect)));
		}
		if (neq(this.maxShow, msg.maxShow)) {
			ret = false;
			$print((valueOf_1(this.maxShow), valueOf_1(msg.maxShow)));
		}
		if (neq(this.bookingType, msg.bookingType)) {
			ret = false;
			$print((valueOf_1(this.bookingType), valueOf_1(msg.bookingType)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		if (neq(this.orderQty2, msg.orderQty2)) {
			ret = false;
			$print((valueOf_1(this.orderQty2), valueOf_1(msg.orderQty2)));
		}
		if (neq(this.lastForwardPoints2, msg.lastForwardPoints2)) {
			ret = false;
			$print((valueOf_1(this.lastForwardPoints2), valueOf_1(msg.lastForwardPoints2)));
		}
		if (this.multiLegReportingType != msg.multiLegReportingType) {
			ret = false;
			$print((valueOf(this.multiLegReportingType), valueOf(msg.multiLegReportingType)));
		}
		if (this.cancellationRights != msg.cancellationRights) {
			ret = false;
			$print((valueOf(this.cancellationRights), valueOf(msg.cancellationRights)));
		}
		if (this.moneyLaunderingStatus != msg.moneyLaunderingStatus) {
			ret = false;
			$print((valueOf(this.moneyLaunderingStatus), valueOf(msg.moneyLaunderingStatus)));
		}
		equals_12(this.registID, msg.registID) || (ret = false);
		equals_12(this.designation, msg.designation) || (ret = false);
		if (this.execPriceType != msg.execPriceType) {
			ret = false;
			$print((valueOf(this.execPriceType), valueOf(msg.execPriceType)));
		}
		if (neq(this.execPriceAdjustment, msg.execPriceAdjustment)) {
			ret = false;
			$print((valueOf_1(this.execPriceAdjustment), valueOf_1(msg.execPriceAdjustment)));
		}
		if (neq(this.priorityIndicator, msg.priorityIndicator)) {
			ret = false;
			$print((valueOf_1(this.priorityIndicator), valueOf_1(msg.priorityIndicator)));
		}
		if (neq(this.priceImprovement, msg.priceImprovement)) {
			ret = false;
			$print((valueOf_1(this.priceImprovement), valueOf_1(msg.priceImprovement)));
		}
		if (neq(this.lastLiquidityInd, msg.lastLiquidityInd)) {
			ret = false;
			$print((valueOf_1(this.lastLiquidityInd), valueOf_1(msg.lastLiquidityInd)));
		}
		$equals_11(this.contAmtGrp, msg.contAmtGrp) || (ret = false);
		$equals_28(this.instrmtLegExecGrp, msg.instrmtLegExecGrp) || (ret = false);
		if (this.copyMsgIndicator != msg.copyMsgIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.manualOrderIndicator != msg.manualOrderIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.custDirectedOrder != msg.custDirectedOrder) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.receivedDeptID, msg.receivedDeptID) || (ret = false);
		equals_12(this.custOrderHandlingInst, msg.custOrderHandlingInst) || (ret = false);
		if (neq(this.orderHandlingInstSource, msg.orderHandlingInstSource)) {
			ret = false;
			$print((valueOf_1(this.orderHandlingInstSource), valueOf_1(msg.orderHandlingInstSource)));
		}
		if (neq(this.dividendYield, msg.dividendYield)) {
			ret = false;
			$print((valueOf_1(this.dividendYield), valueOf_1(msg.dividendYield)));
		}
		$equals_58(this.miscFeesGrp, msg.miscFeesGrp) || (ret = false);
		$equals_132(this.trdRegTimestamps, msg.trdRegTimestamps) || (ret = false);
		if (neq(this.volatility, msg.volatility)) {
			ret = false;
			$print((valueOf_1(this.volatility), valueOf_1(msg.volatility)));
		}
		if (neq(this.timeToExpiration, msg.timeToExpiration)) {
			ret = false;
			$print((valueOf_1(this.timeToExpiration), valueOf_1(msg.timeToExpiration)));
		}
		if (neq(this.riskFreeRate, msg.riskFreeRate)) {
			ret = false;
			$print((valueOf_1(this.riskFreeRate), valueOf_1(msg.riskFreeRate)));
		}
		if (neq(this.priceDelta, msg.priceDelta)) {
			ret = false;
			$print((valueOf_1(this.priceDelta), valueOf_1(msg.priceDelta)));
		}
		return ret;
	};
	_.toString$ = function toString_5() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'ExecutionReport' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), EXECUTIONREPORT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			this.senderCompID[0] != 0 && (s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep));
			this.targetCompID[0] != 0 && (s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep));
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			this.applicationSequenceControl.applID[0] != 0 && (s += $trim($toString_1(this.applicationSequenceControl)));
			s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep);
			this.secondaryOrderID[0] != 0 && (s += 'SecondaryOrderID(198)=' + $trim(_String(this.secondaryOrderID)) + charToString(sep));
			this.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this.secondaryClOrdID)) + charToString(sep));
			this.secondaryExecID[0] != 0 && (s += 'SecondaryExecID(527)=' + $trim(_String(this.secondaryExecID)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			this.origClOrdID[0] != 0 && (s += 'OrigClOrdID(41)=' + $trim(_String(this.origClOrdID)) + charToString(sep));
			this.clOrdLinkID[0] != 0 && (s += 'ClOrdLinkID(583)=' + $trim(_String(this.clOrdLinkID)) + charToString(sep));
			this.quoteRespID[0] != 0 && (s += 'QuoteRespID(693)=' + $trim(_String(this.quoteRespID)) + charToString(sep));
			this.ordStatusReqID[0] != 0 && (s += 'OrdStatusReqID(790)=' + $trim(_String(this.ordStatusReqID)) + charToString(sep));
			this.massStatusReqID[0] != 0 && (s += 'MassStatusReqID(584)=' + $trim(_String(this.massStatusReqID)) + charToString(sep));
			this.hostCrossID[0] != 0 && (s += 'HostCrossID(961)=' + $trim(_String(this.hostCrossID)) + charToString(sep));
			neq(this.totNumReports, P7fffffffffffffff_longLit) && (s += 'TotNumReports(911)=' + $trim('' + toString_183(this.totNumReports)) + charToString(sep));
			this.lastRptRequested && (s += 'LastRptRequested(912)=' + $trim('' + this.lastRptRequested) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.tradeOriginationDate[0] != 0 && (s += 'TradeOriginationDate(229)=' + $trim(_String(this.tradeOriginationDate)) + charToString(sep));
			neq(fromInt(this.contraGrp.noContraBrokers), P7fffffffffffffff_longLit) && (s += $trim($toString_14(this.contraGrp)));
			this.listID[0] != 0 && (s += 'ListID(66)=' + $trim(_String(this.listID)) + charToString(sep));
			this.crossID[0] != 0 && (s += 'CrossID(548)=' + $trim(_String(this.crossID)) + charToString(sep));
			this.origCrossID[0] != 0 && (s += 'OrigCrossID(551)=' + $trim(_String(this.origCrossID)) + charToString(sep));
			neq(this.crossType, P7fffffffffffffff_longLit) && (s += 'CrossType(549)=' + $trim('' + toString_183(this.crossType)) + charToString(sep));
			this.trdMatchID[0] != 0 && (s += 'TrdMatchID(880)=' + $trim(_String(this.trdMatchID)) + charToString(sep));
			s += 'ExecID(17)=' + $trim(_String(this.execID)) + charToString(sep);
			this.execRefID[0] != 0 && (s += 'ExecRefID(19)=' + $trim(_String(this.execRefID)) + charToString(sep));
			s += 'ExecType(150)=' + $trim('' + this.execType) + charToString(sep);
			s += 'OrdStatus(39)=' + $trim('' + this.ordStatus) + charToString(sep);
			this.workingIndicator && (s += 'WorkingIndicator(636)=' + $trim('' + this.workingIndicator) + charToString(sep));
			neq(this.ordRejReason, P7fffffffffffffff_longLit) && (s += 'OrdRejReason(103)=' + $trim('' + toString_183(this.ordRejReason)) + charToString(sep));
			neq(this.execRestatementReason, P7fffffffffffffff_longLit) && (s += 'ExecRestatementReason(378)=' + $trim('' + toString_183(this.execRestatementReason)) + charToString(sep));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.dayBookingInst != 127 && (s += 'DayBookingInst(589)=' + $trim('' + this.dayBookingInst) + charToString(sep));
			this.bookingUnit != 127 && (s += 'BookingUnit(590)=' + $trim('' + this.bookingUnit) + charToString(sep));
			this.preallocMethod != 127 && (s += 'PreallocMethod(591)=' + $trim('' + this.preallocMethod) + charToString(sep));
			this.allocID[0] != 0 && (s += 'AllocID(70)=' + $trim(_String(this.allocID)) + charToString(sep));
			neq(fromInt(this.preAllocGrp.noAllocs), P7fffffffffffffff_longLit) && (s += $trim($toString_91(this.preAllocGrp)));
			this.settlType[0] != 0 && (s += 'SettlType(63)=' + $trim(_String(this.settlType)) + charToString(sep));
			this.settlDate[0] != 0 && (s += 'SettlDate(64)=' + $trim(_String(this.settlDate)) + charToString(sep));
			this.matchType[0] != 0 && (s += 'MatchType(574)=' + $trim(_String(this.matchType)) + charToString(sep));
			this.orderCategory != 127 && (s += 'OrderCategory(1115)=' + $trim('' + this.orderCategory) + charToString(sep));
			this.cashMargin != 127 && (s += 'CashMargin(544)=' + $trim('' + this.cashMargin) + charToString(sep));
			this.clearingFeeIndicator[0] != 0 && (s += 'ClearingFeeIndicator(635)=' + $trim(_String(this.clearingFeeIndicator)) + charToString(sep));
			this.instrument.securityID[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			$isSet_15(this.undInstrmtGrp) && (s += $trim($toString_140(this.undInstrmtGrp)));
			s += 'Side(54)=' + $trim('' + this.side) + charToString(sep);
			neq(fromInt(this.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this.stipulations)));
			neq(this.qtyType, P7fffffffffffffff_longLit) && (s += 'QtyType(854)=' + $trim('' + toString_183(this.qtyType)) + charToString(sep));
			this.lotType != 127 && (s += 'LotType(1093)=' + $trim('' + this.lotType) + charToString(sep));
			neq(this.orderQtyData.orderQty, P7fffffffffffffff_longLit) && (s += $trim($toString_83(this.orderQtyData)));
			this.ordType != 127 && (s += 'OrdType(40)=' + $trim('' + this.ordType) + charToString(sep));
			neq(this.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this.priceType)) + charToString(sep));
			neq(this.price, P7fffffffffffffff_longLit) && (s += 'Price(44)=' + $trim('' + toString_183(this.price)) + charToString(sep));
			this.priceProtectionScope != 127 && (s += 'PriceProtectionScope(1092)=' + $trim('' + this.priceProtectionScope) + charToString(sep));
			neq(this.stopPx, P7fffffffffffffff_longLit) && (s += 'StopPx(99)=' + $trim('' + toString_183(this.stopPx)) + charToString(sep));
			this.triggeringInstruction.triggerType != 127 && (s += $trim($toString_137(this.triggeringInstruction)));
			neq(this.pegInstructions.pegOffsetValue, P7fffffffffffffff_longLit) && (s += $trim($toString_86(this.pegInstructions)));
			this.discretionInstructions.discretionInst != 127 && (s += $trim($toString_16(this.discretionInstructions)));
			neq(this.peggedPrice, P7fffffffffffffff_longLit) && (s += 'PeggedPrice(839)=' + $trim('' + toString_183(this.peggedPrice)) + charToString(sep));
			neq(this.peggedRefPrice, P7fffffffffffffff_longLit) && (s += 'PeggedRefPrice(1095)=' + $trim('' + toString_183(this.peggedRefPrice)) + charToString(sep));
			neq(this.discretionPrice, P7fffffffffffffff_longLit) && (s += 'DiscretionPrice(845)=' + $trim('' + toString_183(this.discretionPrice)) + charToString(sep));
			neq(this.targetStrategy, P7fffffffffffffff_longLit) && (s += 'TargetStrategy(847)=' + $trim('' + toString_183(this.targetStrategy)) + charToString(sep));
			neq(fromInt(this.strategyParametersGrp.noStrategyParameters), P7fffffffffffffff_longLit) && (s += $trim($toString_118(this.strategyParametersGrp)));
			this.targetStrategyParameters[0] != 0 && (s += 'TargetStrategyParameters(848)=' + $trim(_String(this.targetStrategyParameters)) + charToString(sep));
			neq(this.participationRate, P7fffffffffffffff_longLit) && (s += 'ParticipationRate(849)=' + $trim('' + toString_183(this.participationRate)) + charToString(sep));
			neq(this.targetStrategyPerformance, P7fffffffffffffff_longLit) && (s += 'TargetStrategyPerformance(850)=' + $trim('' + toString_183(this.targetStrategyPerformance)) + charToString(sep));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			this.complianceID[0] != 0 && (s += 'ComplianceID(376)=' + $trim(_String(this.complianceID)) + charToString(sep));
			this.solicitedFlag && (s += 'SolicitedFlag(377)=' + $trim('' + this.solicitedFlag) + charToString(sep));
			this.timeInForce != 127 && (s += 'TimeInForce(59)=' + $trim('' + this.timeInForce) + charToString(sep));
			this.effectiveTime[0] != 0 && (s += 'EffectiveTime(168)=' + $trim(_String(this.effectiveTime)) + charToString(sep));
			this.expireDate[0] != 0 && (s += 'ExpireDate(432)=' + $trim(_String(this.expireDate)) + charToString(sep));
			this.expireTime[0] != 0 && (s += 'ExpireTime(126)=' + $trim(_String(this.expireTime)) + charToString(sep));
			this.execInst[0] != 0 && (s += 'ExecInst(18)=' + $trim(_String(this.execInst)) + charToString(sep));
			this.aggressorIndicator && (s += 'AggressorIndicator(1057)=' + $trim('' + this.aggressorIndicator) + charToString(sep));
			this.orderCapacity != 127 && (s += 'OrderCapacity(528)=' + $trim('' + this.orderCapacity) + charToString(sep));
			this.orderRestrictions[0] != 0 && (s += 'OrderRestrictions(529)=' + $trim(_String(this.orderRestrictions)) + charToString(sep));
			this.preTradeAnonymity && (s += 'PreTradeAnonymity(1091)=' + $trim('' + this.preTradeAnonymity) + charToString(sep));
			neq(this.custOrderCapacity, P7fffffffffffffff_longLit) && (s += 'CustOrderCapacity(582)=' + $trim('' + toString_183(this.custOrderCapacity)) + charToString(sep));
			neq(this.lastQty, P7fffffffffffffff_longLit) && (s += 'LastQty(32)=' + $trim('' + toString_183(this.lastQty)) + charToString(sep));
			neq(this.calculatedCcyLastQty, P7fffffffffffffff_longLit) && (s += 'CalculatedCcyLastQty(1056)=' + $trim('' + toString_183(this.calculatedCcyLastQty)) + charToString(sep));
			neq(this.lastSwapPoints, P7fffffffffffffff_longLit) && (s += 'LastSwapPoints(1071)=' + $trim('' + toString_183(this.lastSwapPoints)) + charToString(sep));
			neq(this.underlyingLastQty, P7fffffffffffffff_longLit) && (s += 'UnderlyingLastQty(652)=' + $trim('' + toString_183(this.underlyingLastQty)) + charToString(sep));
			neq(this.lastPx, P7fffffffffffffff_longLit) && (s += 'LastPx(31)=' + $trim('' + toString_183(this.lastPx)) + charToString(sep));
			neq(this.underlyingLastPx, P7fffffffffffffff_longLit) && (s += 'UnderlyingLastPx(651)=' + $trim('' + toString_183(this.underlyingLastPx)) + charToString(sep));
			neq(this.lastParPx, P7fffffffffffffff_longLit) && (s += 'LastParPx(669)=' + $trim('' + toString_183(this.lastParPx)) + charToString(sep));
			neq(this.lastSpotRate, P7fffffffffffffff_longLit) && (s += 'LastSpotRate(194)=' + $trim('' + toString_183(this.lastSpotRate)) + charToString(sep));
			neq(this.lastForwardPoints, P7fffffffffffffff_longLit) && (s += 'LastForwardPoints(195)=' + $trim('' + toString_183(this.lastForwardPoints)) + charToString(sep));
			this.lastMkt[0] != 0 && (s += 'LastMkt(30)=' + $trim(_String(this.lastMkt)) + charToString(sep));
			this.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this.tradingSessionID)) + charToString(sep));
			this.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this.tradingSessionSubID)) + charToString(sep));
			this.timeBracket[0] != 0 && (s += 'TimeBracket(943)=' + $trim(_String(this.timeBracket)) + charToString(sep));
			this.lastCapacity != 127 && (s += 'LastCapacity(29)=' + $trim('' + this.lastCapacity) + charToString(sep));
			s += 'LeavesQty(151)=' + $trim('' + toString_183(this.leavesQty)) + charToString(sep);
			s += 'CumQty(14)=' + $trim('' + toString_183(this.cumQty)) + charToString(sep);
			neq(this.avgPx, P7fffffffffffffff_longLit) && (s += 'AvgPx(6)=' + $trim('' + toString_183(this.avgPx)) + charToString(sep));
			neq(this.dayOrderQty, P7fffffffffffffff_longLit) && (s += 'DayOrderQty(424)=' + $trim('' + toString_183(this.dayOrderQty)) + charToString(sep));
			neq(this.dayCumQty, P7fffffffffffffff_longLit) && (s += 'DayCumQty(425)=' + $trim('' + toString_183(this.dayCumQty)) + charToString(sep));
			neq(this.dayAvgPx, P7fffffffffffffff_longLit) && (s += 'DayAvgPx(426)=' + $trim('' + toString_183(this.dayAvgPx)) + charToString(sep));
			neq(this.totNoFills, P7fffffffffffffff_longLit) && (s += 'TotNoFills(1361)=' + $trim('' + toString_183(this.totNoFills)) + charToString(sep));
			this.lastFragment && (s += 'LastFragment(893)=' + $trim('' + this.lastFragment) + charToString(sep));
			neq(fromInt(this.fillsGrp.noFills), P7fffffffffffffff_longLit) && (s += $trim($toString_25(this.fillsGrp)));
			neq(this.gTBookingInst, P7fffffffffffffff_longLit) && (s += 'GTBookingInst(427)=' + $trim('' + toString_183(this.gTBookingInst)) + charToString(sep));
			this.tradeDate[0] != 0 && (s += 'TradeDate(75)=' + $trim(_String(this.tradeDate)) + charToString(sep));
			this.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep));
			this.reportToExch && (s += 'ReportToExch(113)=' + $trim('' + this.reportToExch) + charToString(sep));
			neq(this.commissionData.commission, P7fffffffffffffff_longLit) && (s += $trim($toString_5(this.commissionData)));
			neq(this.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this.spreadOrBenchmarkCurveData)));
			this.yieldData.yieldType[0] != 0 && (s += $trim($toString_151(this.yieldData)));
			neq(this.grossTradeAmt, P7fffffffffffffff_longLit) && (s += 'GrossTradeAmt(381)=' + $trim('' + toString_183(this.grossTradeAmt)) + charToString(sep));
			neq(this.numDaysInterest, P7fffffffffffffff_longLit) && (s += 'NumDaysInterest(157)=' + $trim('' + toString_183(this.numDaysInterest)) + charToString(sep));
			this.exDate[0] != 0 && (s += 'ExDate(230)=' + $trim(_String(this.exDate)) + charToString(sep));
			neq(this.accruedInterestRate, P7fffffffffffffff_longLit) && (s += 'AccruedInterestRate(158)=' + $trim('' + toString_183(this.accruedInterestRate)) + charToString(sep));
			neq(this.accruedInterestAmt, P7fffffffffffffff_longLit) && (s += 'AccruedInterestAmt(159)=' + $trim('' + toString_183(this.accruedInterestAmt)) + charToString(sep));
			neq(this.interestAtMaturity, P7fffffffffffffff_longLit) && (s += 'InterestAtMaturity(738)=' + $trim('' + toString_183(this.interestAtMaturity)) + charToString(sep));
			neq(this.endAccruedInterestAmt, P7fffffffffffffff_longLit) && (s += 'EndAccruedInterestAmt(920)=' + $trim('' + toString_183(this.endAccruedInterestAmt)) + charToString(sep));
			neq(this.startCash, P7fffffffffffffff_longLit) && (s += 'StartCash(921)=' + $trim('' + toString_183(this.startCash)) + charToString(sep));
			neq(this.endCash, P7fffffffffffffff_longLit) && (s += 'EndCash(922)=' + $trim('' + toString_183(this.endCash)) + charToString(sep));
			this.tradedFlatSwitch && (s += 'TradedFlatSwitch(258)=' + $trim('' + this.tradedFlatSwitch) + charToString(sep));
			this.basisFeatureDate[0] != 0 && (s += 'BasisFeatureDate(259)=' + $trim(_String(this.basisFeatureDate)) + charToString(sep));
			neq(this.basisFeaturePrice, P7fffffffffffffff_longLit) && (s += 'BasisFeaturePrice(260)=' + $trim('' + toString_183(this.basisFeaturePrice)) + charToString(sep));
			neq(this.concession, P7fffffffffffffff_longLit) && (s += 'Concession(238)=' + $trim('' + toString_183(this.concession)) + charToString(sep));
			neq(this.totalTakedown, P7fffffffffffffff_longLit) && (s += 'TotalTakedown(237)=' + $trim('' + toString_183(this.totalTakedown)) + charToString(sep));
			neq(this.netMoney, P7fffffffffffffff_longLit) && (s += 'NetMoney(118)=' + $trim('' + toString_183(this.netMoney)) + charToString(sep));
			neq(this.settlCurrAmt, P7fffffffffffffff_longLit) && (s += 'SettlCurrAmt(119)=' + $trim('' + toString_183(this.settlCurrAmt)) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			neq(fromInt(this.rateSource.noRateSources), P7fffffffffffffff_longLit) && (s += $trim($toString_102(this.rateSource)));
			neq(this.settlCurrFxRate, P7fffffffffffffff_longLit) && (s += 'SettlCurrFxRate(155)=' + $trim('' + toString_183(this.settlCurrFxRate)) + charToString(sep));
			this.settlCurrFxRateCalc != 127 && (s += 'SettlCurrFxRateCalc(156)=' + $trim('' + this.settlCurrFxRateCalc) + charToString(sep));
			this.handlInst != 127 && (s += 'HandlInst(21)=' + $trim('' + this.handlInst) + charToString(sep));
			neq(this.minQty, P7fffffffffffffff_longLit) && (s += 'MinQty(110)=' + $trim('' + toString_183(this.minQty)) + charToString(sep));
			neq(this.matchIncrement, P7fffffffffffffff_longLit) && (s += 'MatchIncrement(1089)=' + $trim('' + toString_183(this.matchIncrement)) + charToString(sep));
			neq(this.maxPriceLevels, P7fffffffffffffff_longLit) && (s += 'MaxPriceLevels(1090)=' + $trim('' + toString_183(this.maxPriceLevels)) + charToString(sep));
			neq(this.displayInstruction.displayQty, P7fffffffffffffff_longLit) && (s += $trim($toString_17(this.displayInstruction)));
			neq(this.maxFloor, P7fffffffffffffff_longLit) && (s += 'MaxFloor(111)=' + $trim('' + toString_183(this.maxFloor)) + charToString(sep));
			this.positionEffect != 127 && (s += 'PositionEffect(77)=' + $trim('' + this.positionEffect) + charToString(sep));
			neq(this.maxShow, P7fffffffffffffff_longLit) && (s += 'MaxShow(210)=' + $trim('' + toString_183(this.maxShow)) + charToString(sep));
			neq(this.bookingType, P7fffffffffffffff_longLit) && (s += 'BookingType(775)=' + $trim('' + toString_183(this.bookingType)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			this.settlDate2[0] != 0 && (s += 'SettlDate2(193)=' + $trim(_String(this.settlDate2)) + charToString(sep));
			neq(this.orderQty2, P7fffffffffffffff_longLit) && (s += 'OrderQty2(192)=' + $trim('' + toString_183(this.orderQty2)) + charToString(sep));
			neq(this.lastForwardPoints2, P7fffffffffffffff_longLit) && (s += 'LastForwardPoints2(641)=' + $trim('' + toString_183(this.lastForwardPoints2)) + charToString(sep));
			this.multiLegReportingType != 127 && (s += 'MultiLegReportingType(442)=' + $trim('' + this.multiLegReportingType) + charToString(sep));
			this.cancellationRights != 127 && (s += 'CancellationRights(480)=' + $trim('' + this.cancellationRights) + charToString(sep));
			this.moneyLaunderingStatus != 127 && (s += 'MoneyLaunderingStatus(481)=' + $trim('' + this.moneyLaunderingStatus) + charToString(sep));
			this.registID[0] != 0 && (s += 'RegistID(513)=' + $trim(_String(this.registID)) + charToString(sep));
			this.designation[0] != 0 && (s += 'Designation(494)=' + $trim(_String(this.designation)) + charToString(sep));
			this.transBkdTime[0] != 0 && (s += 'TransBkdTime(483)=' + $trim(_String(this.transBkdTime)) + charToString(sep));
			this.execValuationPoint[0] != 0 && (s += 'ExecValuationPoint(515)=' + $trim(_String(this.execValuationPoint)) + charToString(sep));
			this.execPriceType != 127 && (s += 'ExecPriceType(484)=' + $trim('' + this.execPriceType) + charToString(sep));
			neq(this.execPriceAdjustment, P7fffffffffffffff_longLit) && (s += 'ExecPriceAdjustment(485)=' + $trim('' + toString_183(this.execPriceAdjustment)) + charToString(sep));
			neq(this.priorityIndicator, P7fffffffffffffff_longLit) && (s += 'PriorityIndicator(638)=' + $trim('' + toString_183(this.priorityIndicator)) + charToString(sep));
			neq(this.priceImprovement, P7fffffffffffffff_longLit) && (s += 'PriceImprovement(639)=' + $trim('' + toString_183(this.priceImprovement)) + charToString(sep));
			neq(this.lastLiquidityInd, P7fffffffffffffff_longLit) && (s += 'LastLiquidityInd(851)=' + $trim('' + toString_183(this.lastLiquidityInd)) + charToString(sep));
			neq(fromInt(this.contAmtGrp.noContAmts), P7fffffffffffffff_longLit) && (s += $trim($toString_12(this.contAmtGrp)));
			neq(fromInt(this.instrmtLegExecGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_29(this.instrmtLegExecGrp)));
			this.copyMsgIndicator && (s += 'CopyMsgIndicator(797)=' + $trim('' + this.copyMsgIndicator) + charToString(sep));
			this.manualOrderIndicator && (s += 'ManualOrderIndicator(1028)=' + $trim('' + this.manualOrderIndicator) + charToString(sep));
			this.custDirectedOrder && (s += 'CustDirectedOrder(1029)=' + $trim('' + this.custDirectedOrder) + charToString(sep));
			this.receivedDeptID[0] != 0 && (s += 'ReceivedDeptID(1030)=' + $trim(_String(this.receivedDeptID)) + charToString(sep));
			this.custOrderHandlingInst[0] != 0 && (s += 'CustOrderHandlingInst(1031)=' + $trim(_String(this.custOrderHandlingInst)) + charToString(sep));
			neq(this.orderHandlingInstSource, P7fffffffffffffff_longLit) && (s += 'OrderHandlingInstSource(1032)=' + $trim('' + toString_183(this.orderHandlingInstSource)) + charToString(sep));
			neq(this.dividendYield, P7fffffffffffffff_longLit) && (s += 'DividendYield(1380)=' + $trim('' + toString_183(this.dividendYield)) + charToString(sep));
			neq(fromInt(this.miscFeesGrp.noMiscFees), P7fffffffffffffff_longLit) && (s += $trim($toString_59(this.miscFeesGrp)));
			neq(fromInt(this.trdRegTimestamps.noTrdRegTimestamps), P7fffffffffffffff_longLit) && (s += $trim($toString_133(this.trdRegTimestamps)));
			neq(this.volatility, P7fffffffffffffff_longLit) && (s += 'Volatility(1188)=' + $trim('' + toString_183(this.volatility)) + charToString(sep));
			neq(this.timeToExpiration, P7fffffffffffffff_longLit) && (s += 'TimeToExpiration(1189)=' + $trim('' + toString_183(this.timeToExpiration)) + charToString(sep));
			neq(this.riskFreeRate, P7fffffffffffffff_longLit) && (s += 'RiskFreeRate(1190)=' + $trim('' + toString_183(this.riskFreeRate)) + charToString(sep));
			neq(this.priceDelta, P7fffffffffffffff_longLit) && (s += 'PriceDelta(811)=' + $trim('' + toString_183(this.priceDelta)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.accruedInterestAmt = P0_longLit;
	_.accruedInterestRate = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.aggressorIndicator = false;
	_.avgPx = P0_longLit;
	_.basisFeaturePrice = P0_longLit;
	_.bookingType = P0_longLit;
	_.bookingUnit = 0;
	_.calculatedCcyLastQty = P0_longLit;
	_.cancellationRights = 0;
	_.cashMargin = 0;
	_.concession = P0_longLit;
	_.copyMsgIndicator = false;
	_.crossType = P0_longLit;
	_.cumQty = P0_longLit;
	_.custDirectedOrder = false;
	_.custOrderCapacity = P0_longLit;
	_.dayAvgPx = P0_longLit;
	_.dayBookingInst = 0;
	_.dayCumQty = P0_longLit;
	_.dayOrderQty = P0_longLit;
	_.discretionPrice = P0_longLit;
	_.dividendYield = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.endAccruedInterestAmt = P0_longLit;
	_.endCash = P0_longLit;
	_.execPriceAdjustment = P0_longLit;
	_.execPriceType = 0;
	_.execRestatementReason = P0_longLit;
	_.execType = 0;
	_.gTBookingInst = P0_longLit;
	_.grossTradeAmt = P0_longLit;
	_.handlInst = 0;
	_.interestAtMaturity = P0_longLit;
	_.lastCapacity = 0;
	_.lastForwardPoints = P0_longLit;
	_.lastForwardPoints2 = P0_longLit;
	_.lastFragment = false;
	_.lastLiquidityInd = P0_longLit;
	_.lastParPx = P0_longLit;
	_.lastPx = P0_longLit;
	_.lastQty = P0_longLit;
	_.lastRptRequested = false;
	_.lastSpotRate = P0_longLit;
	_.lastSwapPoints = P0_longLit;
	_.leavesQty = P0_longLit;
	_.lotType = 0;
	_.manualOrderIndicator = false;
	_.matchIncrement = P0_longLit;
	_.maxFloor = P0_longLit;
	_.maxPriceLevels = P0_longLit;
	_.maxShow = P0_longLit;
	_.minQty = P0_longLit;
	_.moneyLaunderingStatus = 0;
	_.multiLegReportingType = 0;
	_.netMoney = P0_longLit;
	_.numDaysInterest = P0_longLit;
	_.ordRejReason = P0_longLit;
	_.ordStatus = 0;
	_.ordType = 0;
	_.orderCapacity = 0;
	_.orderCategory = 0;
	_.orderHandlingInstSource = P0_longLit;
	_.orderQty2 = P0_longLit;
	_.participationRate = P0_longLit;
	_.peggedPrice = P0_longLit;
	_.peggedRefPrice = P0_longLit;
	_.positionEffect = 0;
	_.preTradeAnonymity = false;
	_.preallocMethod = 0;
	_.price = P0_longLit;
	_.priceDelta = P0_longLit;
	_.priceImprovement = P0_longLit;
	_.priceProtectionScope = 0;
	_.priceType = P0_longLit;
	_.priorityIndicator = P0_longLit;
	_.qtyType = P0_longLit;
	_.reportToExch = false;
	_.riskFreeRate = P0_longLit;
	_.settlCurrAmt = P0_longLit;
	_.settlCurrFxRate = P0_longLit;
	_.settlCurrFxRateCalc = 0;
	_.side = 0;
	_.solicitedFlag = false;
	_.startCash = P0_longLit;
	_.stopPx = P0_longLit;
	_.targetStrategy = P0_longLit;
	_.targetStrategyPerformance = P0_longLit;
	_.timeInForce = 0;
	_.timeToExpiration = P0_longLit;
	_.totNoFills = P0_longLit;
	_.totNumReports = P0_longLit;
	_.totalTakedown = P0_longLit;
	_.tradedFlatSwitch = false;
	_.underlyingLastPx = P0_longLit;
	_.underlyingLastQty = P0_longLit;
	_.volatility = P0_longLit;
	_.workingIndicator = false;

	function $checkRequiredTags_1(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.msgSeqNum, P7fffffffffffffff_longLit)) return 34;
		if (this$static.sendingTime[0] == 0) return 52;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_3(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 112:
				this$static.testReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), HEARTBEAT_1), 112, value_0, this$static.testReqID);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), HEARTBEAT_1), 10, value_0));
				id_0 = $checkRequiredTags_1(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixHeartbeat_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.testReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 64, 1);
		$clinit_Utils();
		this.testReqID[0] = 0;
		this.msgTypeInt = 48;
	}

	defineSeed(327, 322, makeCastMap([Q$FixHeartbeat, Q$FixMessage]), FixHeartbeat_0);
	_.equals$ = function equals_18(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixHeartbeat)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.testReqID, msg.testReqID) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_6() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'Heartbeat' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), HEARTBEAT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			this.testReqID[0] != 0 && (s += 'TestReqID(112)=' + $trim(_String(this.testReqID)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};

	function $clear_2(this$static) {
		this$static.encryptMethod = P7fffffffffffffff_longLit;
		this$static.heartBtInt = P7fffffffffffffff_longLit;
		this$static.rawDataLength = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.rawData[0] = 0;
		this$static.resetSeqNumFlag = false;
		this$static.nextExpectedMsgSeqNum = P7fffffffffffffff_longLit;
		this$static.maxMessageSize = P7fffffffffffffff_longLit;
		this$static.testMessageIndicator = false;
		this$static.username[0] = 0;
		this$static.password[0] = 0;
		this$static.newPassword[0] = 0;
		this$static.encryptedPasswordMethod = P7fffffffffffffff_longLit;
		this$static.encryptedPasswordLen = P7fffffffffffffff_longLit;
		this$static.encryptedPassword[0] = 0;
		this$static.encryptedNewPasswordLen = P7fffffffffffffff_longLit;
		this$static.encryptedNewPassword[0] = 0;
		this$static.sessionStatus = P7fffffffffffffff_longLit;
		this$static.defaultApplVerID[0] = 0;
		this$static.defaultApplExtID = P7fffffffffffffff_longLit;
		this$static.defaultCstmApplVerID[0] = 0;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_66(this$static.msgTypeGrp);
	}

	function $encode_0(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), LOGON_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		this$static.senderCompID[0] != 0 && putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		this$static.targetCompID[0] != 0 && putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		neq(this$static.encryptMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 98, this$static.encryptMethod);
		neq(this$static.heartBtInt, P7fffffffffffffff_longLit) && putFixTag_0(out, 108, this$static.heartBtInt);
		neq(this$static.rawDataLength, P7fffffffffffffff_longLit) && putFixTag_0(out, 95, this$static.rawDataLength);
		this$static.rawData[0] != 0 && putFixTag_2(out, 96, this$static.rawData, lastIndexTrim(this$static.rawData));
		this$static.resetSeqNumFlag && putFixTag(out, 141, this$static.resetSeqNumFlag ? 89 : 78);
		neq(this$static.nextExpectedMsgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 789, this$static.nextExpectedMsgSeqNum);
		neq(this$static.maxMessageSize, P7fffffffffffffff_longLit) && putFixTag_0(out, 383, this$static.maxMessageSize);
		this$static.msgTypeGrp.noMsgTypes != 0 && $isSet_2(this$static.msgTypeGrp) && $encode_45(this$static.msgTypeGrp, out);
		this$static.testMessageIndicator && putFixTag(out, 464, this$static.testMessageIndicator ? 89 : 78);
		this$static.username[0] != 0 && putFixTag_2(out, 553, this$static.username, lastIndexTrim(this$static.username));
		this$static.password[0] != 0 && putFixTag_2(out, 554, this$static.password, lastIndexTrim(this$static.password));
		this$static.newPassword[0] != 0 && putFixTag_2(out, 925, this$static.newPassword, lastIndexTrim(this$static.newPassword));
		neq(this$static.encryptedPasswordMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1400, this$static.encryptedPasswordMethod);
		neq(this$static.encryptedPasswordLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 1401, this$static.encryptedPasswordLen);
		this$static.encryptedPassword[0] != 0 && putFixTag_2(out, 1402, this$static.encryptedPassword, lastIndexTrim(this$static.encryptedPassword));
		neq(this$static.encryptedNewPasswordLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 1403, this$static.encryptedNewPasswordLen);
		this$static.encryptedNewPassword[0] != 0 && putFixTag_2(out, 1404, this$static.encryptedNewPassword, lastIndexTrim(this$static.encryptedNewPassword));
		neq(this$static.sessionStatus, P7fffffffffffffff_longLit) && putFixTag_0(out, 1409, this$static.sessionStatus);
		this$static.defaultApplVerID[0] != 0 && putFixTag_2(out, 1137, this$static.defaultApplVerID, lastIndexTrim(this$static.defaultApplVerID));
		neq(this$static.defaultApplExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1407, this$static.defaultApplExtID);
		this$static.defaultCstmApplVerID[0] != 0 && putFixTag_2(out, 1408, this$static.defaultCstmApplVerID, lastIndexTrim(this$static.defaultCstmApplVerID));
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function $getAll_4(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 98:
				this$static.encryptMethod = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 98, value_0));
				if (!isValid_46(this$static.encryptMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.encryptMethod) + ') for tag'), P62_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 108:
				this$static.heartBtInt = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 108, value_0));
				break;
			case 95:
				this$static.rawDataLength = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 95, value_0));
				break;
			case 96:
				this$static.rawData = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 96, value_0, this$static.rawData);
				break;
			case 141:
				this$static.resetSeqNumFlag = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 141, value_0);
				if (!isValid_132(this$static.resetSeqNumFlag)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.resetSeqNumFlag + ') for tag'), P8d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 789:
				this$static.nextExpectedMsgSeqNum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 789, value_0));
				break;
			case 383:
				this$static.maxMessageSize = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 383, value_0));
				break;
			case 384:
				this$static.msgTypeGrp.noMsgTypes = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 384, value_0);
				$getAll_55(this$static.msgTypeGrp, this$static.msgTypeGrp.noMsgTypes, value_0);
				break;
			case 464:
				this$static.testMessageIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 464, value_0);
				if (!isValid_160(this$static.testMessageIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.testMessageIndicator + ') for tag'), P1d0_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 553:
				this$static.username = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 553, value_0, this$static.username);
				break;
			case 554:
				this$static.password = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 554, value_0, this$static.password);
				break;
			case 925:
				this$static.newPassword = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 925, value_0, this$static.newPassword);
				break;
			case 1400:
				this$static.encryptedPasswordMethod = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1400, value_0));
				break;
			case 1401:
				this$static.encryptedPasswordLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1401, value_0));
				break;
			case 1402:
				this$static.encryptedPassword = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1402, value_0, this$static.encryptedPassword);
				break;
			case 1403:
				this$static.encryptedNewPasswordLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1403, value_0));
				break;
			case 1404:
				this$static.encryptedNewPassword = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1404, value_0, this$static.encryptedNewPassword);
				break;
			case 1409:
				this$static.sessionStatus = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1409, value_0));
				if (!isValid_145(this$static.sessionStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.sessionStatus) + ') for tag'), P581_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1137:
				this$static.defaultApplVerID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1137, value_0, this$static.defaultApplVerID);
				break;
			case 1407:
				this$static.defaultApplExtID = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1407, value_0));
				break;
			case 1408:
				this$static.defaultCstmApplVerID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 1408, value_0, this$static.defaultCstmApplVerID);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGON_1), 10, value_0));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixLogon_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.encryptMethod = P0_longLit;
		this.heartBtInt = P0_longLit;
		this.rawDataLength = P0_longLit;
		this.resetSeqNumFlag = false;
		this.nextExpectedMsgSeqNum = P0_longLit;
		this.maxMessageSize = P0_longLit;
		this.testMessageIndicator = false;
		this.encryptedPasswordMethod = P0_longLit;
		this.encryptedPasswordLen = P0_longLit;
		this.encryptedNewPasswordLen = P0_longLit;
		this.sessionStatus = P0_longLit;
		this.defaultApplExtID = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.rawData = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 9192, 1);
		this.msgTypeGrp = new FixMsgTypeGrp_0;
		this.username = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.password = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.newPassword = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encryptedPassword = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encryptedNewPassword = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.defaultApplVerID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.defaultCstmApplVerID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_2(this);
		this.msgTypeInt = 65;
	}

	defineSeed(328, 322, makeCastMap([Q$FixLogon, Q$FixMessage]), FixLogon_0);
	_.equals$ = function equals_19(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLogon)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		if (neq(this.encryptMethod, msg.encryptMethod)) {
			ret = false;
			$print((valueOf_1(this.encryptMethod), valueOf_1(msg.encryptMethod)));
		}
		if (neq(this.heartBtInt, msg.heartBtInt)) {
			ret = false;
			$print((valueOf_1(this.heartBtInt), valueOf_1(msg.heartBtInt)));
		}
		if (neq(this.rawDataLength, msg.rawDataLength)) {
			ret = false;
			$print((valueOf_1(this.rawDataLength), valueOf_1(msg.rawDataLength)));
		}
		equals_12(this.rawData, msg.rawData) || (ret = false);
		if (this.resetSeqNumFlag != msg.resetSeqNumFlag) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.nextExpectedMsgSeqNum, msg.nextExpectedMsgSeqNum)) {
			ret = false;
			$print((valueOf_1(this.nextExpectedMsgSeqNum), valueOf_1(msg.nextExpectedMsgSeqNum)));
		}
		if (neq(this.maxMessageSize, msg.maxMessageSize)) {
			ret = false;
			$print((valueOf_1(this.maxMessageSize), valueOf_1(msg.maxMessageSize)));
		}
		$equals_60(this.msgTypeGrp, msg.msgTypeGrp) || (ret = false);
		if (this.testMessageIndicator != msg.testMessageIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.username, msg.username) || (ret = false);
		equals_12(this.password, msg.password) || (ret = false);
		equals_12(this.newPassword, msg.newPassword) || (ret = false);
		if (neq(this.encryptedPasswordMethod, msg.encryptedPasswordMethod)) {
			ret = false;
			$print((valueOf_1(this.encryptedPasswordMethod), valueOf_1(msg.encryptedPasswordMethod)));
		}
		if (neq(this.encryptedPasswordLen, msg.encryptedPasswordLen)) {
			ret = false;
			$print((valueOf_1(this.encryptedPasswordLen), valueOf_1(msg.encryptedPasswordLen)));
		}
		equals_12(this.encryptedPassword, msg.encryptedPassword) || (ret = false);
		if (neq(this.encryptedNewPasswordLen, msg.encryptedNewPasswordLen)) {
			ret = false;
			$print((valueOf_1(this.encryptedNewPasswordLen), valueOf_1(msg.encryptedNewPasswordLen)));
		}
		equals_12(this.encryptedNewPassword, msg.encryptedNewPassword) || (ret = false);
		if (neq(this.sessionStatus, msg.sessionStatus)) {
			ret = false;
			$print((valueOf_1(this.sessionStatus), valueOf_1(msg.sessionStatus)));
		}
		equals_12(this.defaultApplVerID, msg.defaultApplVerID) || (ret = false);
		if (neq(this.defaultApplExtID, msg.defaultApplExtID)) {
			ret = false;
			$print((valueOf_1(this.defaultApplExtID), valueOf_1(msg.defaultApplExtID)));
		}
		equals_12(this.defaultCstmApplVerID, msg.defaultCstmApplVerID) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_7() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'Logon' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), LOGON_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'EncryptMethod(98)=' + $trim('' + toString_183(this.encryptMethod)) + charToString(sep);
			s += 'HeartBtInt(108)=' + $trim('' + toString_183(this.heartBtInt)) + charToString(sep);
			neq(this.rawDataLength, P7fffffffffffffff_longLit) && (s += 'RawDataLength(95)=' + $trim('' + toString_183(this.rawDataLength)) + charToString(sep));
			this.rawData[0] != 0 && (s += 'RawData(96)=' + $trim(_String(this.rawData)) + charToString(sep));
			this.resetSeqNumFlag && (s += 'ResetSeqNumFlag(141)=' + $trim('' + this.resetSeqNumFlag) + charToString(sep));
			neq(this.nextExpectedMsgSeqNum, P7fffffffffffffff_longLit) && (s += 'NextExpectedMsgSeqNum(789)=' + $trim('' + toString_183(this.nextExpectedMsgSeqNum)) + charToString(sep));
			neq(this.maxMessageSize, P7fffffffffffffff_longLit) && (s += 'MaxMessageSize(383)=' + $trim('' + toString_183(this.maxMessageSize)) + charToString(sep));
			this.msgTypeGrp.noMsgTypes != 0 && (s += $trim($toString_61(this.msgTypeGrp)));
			this.testMessageIndicator && (s += 'TestMessageIndicator(464)=' + $trim('' + this.testMessageIndicator) + charToString(sep));
			this.username[0] != 0 && (s += 'Username(553)=' + $trim(_String(this.username)) + charToString(sep));
			this.password[0] != 0 && (s += 'Password(554)=' + $trim(_String(this.password)) + charToString(sep));
			this.newPassword[0] != 0 && (s += 'NewPassword(925)=' + $trim(_String(this.newPassword)) + charToString(sep));
			neq(this.encryptedPasswordMethod, P7fffffffffffffff_longLit) && (s += 'EncryptedPasswordMethod(1400)=' + $trim('' + toString_183(this.encryptedPasswordMethod)) + charToString(sep));
			neq(this.encryptedPasswordLen, P7fffffffffffffff_longLit) && (s += 'EncryptedPasswordLen(1401)=' + $trim('' + toString_183(this.encryptedPasswordLen)) + charToString(sep));
			this.encryptedPassword[0] != 0 && (s += 'EncryptedPassword(1402)=' + $trim(_String(this.encryptedPassword)) + charToString(sep));
			neq(this.encryptedNewPasswordLen, P7fffffffffffffff_longLit) && (s += 'EncryptedNewPasswordLen(1403)=' + $trim('' + toString_183(this.encryptedNewPasswordLen)) + charToString(sep));
			this.encryptedNewPassword[0] != 0 && (s += 'EncryptedNewPassword(1404)=' + $trim(_String(this.encryptedNewPassword)) + charToString(sep));
			neq(this.sessionStatus, P7fffffffffffffff_longLit) && (s += 'SessionStatus(1409)=' + $trim('' + toString_183(this.sessionStatus)) + charToString(sep));
			s += 'DefaultApplVerID(1137)=' + $trim(_String(this.defaultApplVerID)) + charToString(sep);
			neq(this.defaultApplExtID, P7fffffffffffffff_longLit) && (s += 'DefaultApplExtID(1407)=' + $trim('' + toString_183(this.defaultApplExtID)) + charToString(sep));
			this.defaultCstmApplVerID[0] != 0 && (s += 'DefaultCstmApplVerID(1408)=' + $trim(_String(this.defaultCstmApplVerID)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.defaultApplExtID = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.encryptMethod = P0_longLit;
	_.encryptedNewPasswordLen = P0_longLit;
	_.encryptedPasswordLen = P0_longLit;
	_.encryptedPasswordMethod = P0_longLit;
	_.heartBtInt = P0_longLit;
	_.maxMessageSize = P0_longLit;
	_.nextExpectedMsgSeqNum = P0_longLit;
	_.rawDataLength = P0_longLit;
	_.resetSeqNumFlag = false;
	_.sessionStatus = P0_longLit;
	_.testMessageIndicator = false;

	function $checkRequiredTags_2(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.msgSeqNum, P7fffffffffffffff_longLit)) return 34;
		if (this$static.sendingTime[0] == 0) return 52;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_5(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 1409:
				this$static.sessionStatus = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGOUT_1), 1409, value_0));
				if (!isValid_145(this$static.sessionStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.sessionStatus) + ') for tag'), P581_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGOUT_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGOUT_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), LOGOUT_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), LOGOUT_1), 10, value_0));
				id_0 = $checkRequiredTags_2(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixLogout_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.sessionStatus = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.sessionStatus = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		this.msgTypeInt = 53;
	}

	defineSeed(329, 322, makeCastMap([Q$FixLogout, Q$FixMessage]), FixLogout_0);
	_.equals$ = function equals_20(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLogout)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		if (neq(this.sessionStatus, msg.sessionStatus)) {
			ret = false;
			$print((valueOf_1(this.sessionStatus), valueOf_1(msg.sessionStatus)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_8() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'Logout' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), LOGOUT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			neq(this.sessionStatus, P7fffffffffffffff_longLit) && (s += 'SessionStatus(1409)=' + $trim('' + toString_183(this.sessionStatus)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.encodedTextLen = P0_longLit;
	_.sessionStatus = P0_longLit;

	function $clinit_FixMessageInfo() {
		$clinit_FixMessageInfo = nullMethod;
		BEGINSTRING_VALUE = getBytesUtf8('FIXT.1.1');
		BEGINSTRING_VALUE_WITH_TAG = getBytesUtf8('8=FIXT.1.1\1');
		getBytesUtf8(' fixprotocol.org FIX.5.0SP2');
	}

	var BEGINSTRING_VALUE, BEGINSTRING_VALUE_WITH_TAG;

	function isValid_0(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_1(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		if (eq(P64_longLit, val)) return true;
		if (eq(P65_longLit, val)) return true;
		if (eq(P66_longLit, val)) return true;
		if (eq(P67_longLit, val)) return true;
		if (eq(P68_longLit, val)) return true;
		if (eq(P69_longLit, val)) return true;
		if (eq(P6a_longLit, val)) return true;
		if (eq(P42f_longLit, val)) return true;
		if (eq(P439_longLit, val)) return true;
		if (eq(P6d_longLit, val)) return true;
		if (eq(P44d_longLit, val)) return true;
		if (eq(P430_longLit, val)) return true;
		if (eq(P43a_longLit, val)) return true;
		if (eq(P44e_longLit, val)) return true;
		return false;
	}

	function isValid_2(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_3(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$ApplVerID() {
		$clinit_FixMessageInfo$ApplVerID = nullMethod;
		FIX41 = getBytesUtf8('3');
		FIX40 = getBytesUtf8('2');
		FIX30 = getBytesUtf8('1');
		FIX27 = getBytesUtf8('0');
		FIX50 = getBytesUtf8('7');
		FIX44 = getBytesUtf8('6');
		FIX43 = getBytesUtf8('5');
		FIX42 = getBytesUtf8('4');
		FIX50SP2 = getBytesUtf8('9');
		FIX50SP1 = getBytesUtf8('8');
	}

	function isValid_4(val) {
		$clinit_FixMessageInfo$ApplVerID();
		if (equals_12(FIX41, val)) return true;
		if (equals_12(FIX40, val)) return true;
		if (equals_12(FIX30, val)) return true;
		if (equals_12(FIX27, val)) return true;
		if (equals_12(FIX50, val)) return true;
		if (equals_12(FIX44, val)) return true;
		if (equals_12(FIX43, val)) return true;
		if (equals_12(FIX42, val)) return true;
		if (equals_12(FIX50SP2, val)) return true;
		if (equals_12(FIX50SP1, val)) return true;
		return false;
	}

	var FIX27, FIX30, FIX40, FIX41, FIX42, FIX43, FIX44, FIX50, FIX50SP1, FIX50SP2;

	function $clinit_FixMessageInfo$BenchmarkCurveName() {
		$clinit_FixMessageInfo$BenchmarkCurveName = nullMethod;
		SONIA = getBytesUtf8('SONIA');
		TREASURY = getBytesUtf8('Treasury');
		OTHER = getBytesUtf8('OTHER');
		LIBOR_LONDON_INTERBANK_OFFER = getBytesUtf8('LIBOR');
		PFANDBRIEFE = getBytesUtf8('Pfandbriefe');
		SWAP = getBytesUtf8('SWAP');
		LIBID = getBytesUtf8('LIBID');
		MUNIAAA = getBytesUtf8('MuniAAA');
		EURIBOR = getBytesUtf8('Euribor');
		EUREPO = getBytesUtf8('EUREPO');
		FUTURESWAP = getBytesUtf8('FutureSWAP');
		EONIA = getBytesUtf8('EONIA');
	}

	function isValid_5(val) {
		$clinit_FixMessageInfo$BenchmarkCurveName();
		if (equals_12(SONIA, val)) return true;
		if (equals_12(TREASURY, val)) return true;
		if (equals_12(OTHER, val)) return true;
		if (equals_12(LIBOR_LONDON_INTERBANK_OFFER, val)) return true;
		if (equals_12(PFANDBRIEFE, val)) return true;
		if (equals_12(SWAP, val)) return true;
		if (equals_12(LIBID, val)) return true;
		if (equals_12(MUNIAAA, val)) return true;
		if (equals_12(EURIBOR, val)) return true;
		if (equals_12(EUREPO, val)) return true;
		if (equals_12(FUTURESWAP, val)) return true;
		if (equals_12(EONIA, val)) return true;
		return false;
	}

	var EONIA, EUREPO, EURIBOR, FUTURESWAP, LIBID, LIBOR_LONDON_INTERBANK_OFFER, MUNIAAA, OTHER, PFANDBRIEFE, SONIA, SWAP, TREASURY;

	function isValid_6(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_7(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function isValid_8(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_9(val) {
		if (77 == val) return true;
		if (78 == val) return true;
		if (79 == val) return true;
		if (89 == val) return true;
		return false;
	}

	function isValid_10(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$ClearingFeeIndicator() {
		$clinit_FixMessageInfo$ClearingFeeIndicator = nullMethod;
		EQUITY_MEMBER_AND_CLEARING_MEMBER = getBytesUtf8('E');
		FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_B = getBytesUtf8('F');
		CBOE_MEMBER = getBytesUtf8('B');
		NONMEMBER_AND_CUSTOMER = getBytesUtf8('C');
		LESSEE_106F_EMPLOYEES = getBytesUtf8('L');
		ALL_OTHER_OWNERSHIP_TYPES = getBytesUtf8('M');
		I106H_AND_106J_FIRMS = getBytesUtf8('H');
		GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERS = getBytesUtf8('I');
		I3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = getBytesUtf8('3');
		I2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = getBytesUtf8('2');
		I1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = getBytesUtf8('1');
		I5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = getBytesUtf8('5');
		I4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = getBytesUtf8('4');
		I6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = getBytesUtf8('9');
	}

	function isValid_11(val) {
		$clinit_FixMessageInfo$ClearingFeeIndicator();
		if (equals_12(EQUITY_MEMBER_AND_CLEARING_MEMBER, val)) return true;
		if (equals_12(FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_B, val)) return true;
		if (equals_12(CBOE_MEMBER, val)) return true;
		if (equals_12(NONMEMBER_AND_CUSTOMER, val)) return true;
		if (equals_12(LESSEE_106F_EMPLOYEES, val)) return true;
		if (equals_12(ALL_OTHER_OWNERSHIP_TYPES, val)) return true;
		if (equals_12(I106H_AND_106J_FIRMS, val)) return true;
		if (equals_12(GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERS, val)) return true;
		if (equals_12(I3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, val)) return true;
		if (equals_12(I2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, val)) return true;
		if (equals_12(I1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, val)) return true;
		if (equals_12(I5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, val)) return true;
		if (equals_12(I4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, val)) return true;
		if (equals_12(I6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, val)) return true;
		return false;
	}

	var ALL_OTHER_OWNERSHIP_TYPES, CBOE_MEMBER, EQUITY_MEMBER_AND_CLEARING_MEMBER, FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_B, GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERS, I106H_AND_106J_FIRMS, I1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, I2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, I3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, I4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, I5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, I6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT, LESSEE_106F_EMPLOYEES, NONMEMBER_AND_CUSTOMER;

	function isValid_12(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_13(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_14(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_15(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_16(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_17(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_18(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_19(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_20(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_21(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_22(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_23(val) {
		if (eq(Pf_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_24(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_25(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_26(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_27(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$CustOrderHandlingInst() {
		$clinit_FixMessageInfo$CustOrderHandlingInst = nullMethod;
		EXCHANGE_FOR_PHYSICAL_TRANSACTION = getBytesUtf8('E.W');
		STOP_STOCK_TRANSACTION = getBytesUtf8('S.W');
		LIMIT_ON_OPEN = getBytesUtf8('LOO');
		TIME_ORDER = getBytesUtf8('TMO');
		MARKET_ON_OPEN = getBytesUtf8('MOO');
		PEGGED = getBytesUtf8('PEG');
		MINIMUM_QUANTITY = getBytesUtf8('MQT');
		IMBALANCE_ONLY = getBytesUtf8('IO');
		IMMEDIATE_OR_CANCEL = getBytesUtf8('IOC');
		WORK = getBytesUtf8('WRK');
		MARKET_ON_CLOSE = getBytesUtf8('MOC');
		MARKET_AT_OPEN = getBytesUtf8('MAO');
		ALL_OR_NONE = getBytesUtf8('AON');
		DIRECTED_ORDER = getBytesUtf8('DIR');
		TRAILING_STOP = getBytesUtf8('TS');
		SCALE = getBytesUtf8('SCL');
		LIMIT_ON_CLOSE = getBytesUtf8('LOC');
		NOT_HELD = getBytesUtf8('NH');
		CASH_NOT_HELD = getBytesUtf8('CNH');
		RESERVE_SIZE_ORDER = getBytesUtf8('RSV');
		FILL_OR_KILL = getBytesUtf8('FOK');
		OVER_THE_DAY = getBytesUtf8('OVD');
		MARKET_AT_CLOSE = getBytesUtf8('MAC');
		ADDON_ORDER = getBytesUtf8('ADD');
	}

	function isValid_28(val) {
		$clinit_FixMessageInfo$CustOrderHandlingInst();
		if (equals_12(EXCHANGE_FOR_PHYSICAL_TRANSACTION, val)) return true;
		if (equals_12(STOP_STOCK_TRANSACTION, val)) return true;
		if (equals_12(LIMIT_ON_OPEN, val)) return true;
		if (equals_12(TIME_ORDER, val)) return true;
		if (equals_12(MARKET_ON_OPEN, val)) return true;
		if (equals_12(PEGGED, val)) return true;
		if (equals_12(MINIMUM_QUANTITY, val)) return true;
		if (equals_12(IMBALANCE_ONLY, val)) return true;
		if (equals_12(IMMEDIATE_OR_CANCEL, val)) return true;
		if (equals_12(WORK, val)) return true;
		if (equals_12(MARKET_ON_CLOSE, val)) return true;
		if (equals_12(MARKET_AT_OPEN, val)) return true;
		if (equals_12(ALL_OR_NONE, val)) return true;
		if (equals_12(DIRECTED_ORDER, val)) return true;
		if (equals_12(TRAILING_STOP, val)) return true;
		if (equals_12(SCALE, val)) return true;
		if (equals_12(LIMIT_ON_CLOSE, val)) return true;
		if (equals_12(NOT_HELD, val)) return true;
		if (equals_12(CASH_NOT_HELD, val)) return true;
		if (equals_12(RESERVE_SIZE_ORDER, val)) return true;
		if (equals_12(FILL_OR_KILL, val)) return true;
		if (equals_12(OVER_THE_DAY, val)) return true;
		if (equals_12(MARKET_AT_CLOSE, val)) return true;
		if (equals_12(ADDON_ORDER, val)) return true;
		return false;
	}

	var ADDON_ORDER, ALL_OR_NONE, CASH_NOT_HELD, DIRECTED_ORDER, EXCHANGE_FOR_PHYSICAL_TRANSACTION, FILL_OR_KILL, IMBALANCE_ONLY, IMMEDIATE_OR_CANCEL, LIMIT_ON_CLOSE, LIMIT_ON_OPEN, MARKET_AT_CLOSE, MARKET_AT_OPEN, MARKET_ON_CLOSE, MARKET_ON_OPEN, MINIMUM_QUANTITY, NOT_HELD, OVER_THE_DAY, PEGGED, RESERVE_SIZE_ORDER, SCALE, STOP_STOCK_TRANSACTION, TIME_ORDER, TRAILING_STOP, WORK;

	function isValid_29(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_30(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function isValid_31(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (70 == val) return true;
		if (65 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (90 == val) return true;
		return false;
	}

	function isValid_32(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function isValid_33(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_34(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$DeskOrderHandlingInst() {
		$clinit_FixMessageInfo$DeskOrderHandlingInst = nullMethod;
		EXCHANGE_FOR_PHYSICAL_TRANSACTION_0 = getBytesUtf8('E.W');
		STOP_STOCK_TRANSACTION_0 = getBytesUtf8('S.W');
		LIMIT_ON_OPEN_0 = getBytesUtf8('LOO');
		TIME_ORDER_0 = getBytesUtf8('TMO');
		MARKET_ON_OPEN_0 = getBytesUtf8('MOO');
		PEGGED_0 = getBytesUtf8('PEG');
		MINIMUM_QUANTITY_0 = getBytesUtf8('MQT');
		IMBALANCE_ONLY_0 = getBytesUtf8('IO');
		IMMEDIATE_OR_CANCEL_0 = getBytesUtf8('IOC');
		WORK_0 = getBytesUtf8('WRK');
		MARKET_ON_CLOSE_0 = getBytesUtf8('MOC');
		MARKET_AT_OPEN_0 = getBytesUtf8('MAO');
		ALL_OR_NONE_0 = getBytesUtf8('AON');
		DIRECTED_ORDER_0 = getBytesUtf8('DIR');
		TRAILING_STOP_0 = getBytesUtf8('TS');
		SCALE_0 = getBytesUtf8('SCL');
		LIMIT_ON_CLOSE_0 = getBytesUtf8('LOC');
		NOT_HELD_0 = getBytesUtf8('NH');
		CASH_NOT_HELD_0 = getBytesUtf8('CNH');
		RESERVE_SIZE_ORDER_0 = getBytesUtf8('RSV');
		FILL_OR_KILL_0 = getBytesUtf8('FOK');
		OVER_THE_DAY_0 = getBytesUtf8('OVD');
		MARKET_AT_CLOSE_0 = getBytesUtf8('MAC');
		ADDON_ORDER_0 = getBytesUtf8('ADD');
	}

	function isValid_35(val) {
		$clinit_FixMessageInfo$DeskOrderHandlingInst();
		if (equals_12(EXCHANGE_FOR_PHYSICAL_TRANSACTION_0, val)) return true;
		if (equals_12(STOP_STOCK_TRANSACTION_0, val)) return true;
		if (equals_12(LIMIT_ON_OPEN_0, val)) return true;
		if (equals_12(TIME_ORDER_0, val)) return true;
		if (equals_12(MARKET_ON_OPEN_0, val)) return true;
		if (equals_12(PEGGED_0, val)) return true;
		if (equals_12(MINIMUM_QUANTITY_0, val)) return true;
		if (equals_12(IMBALANCE_ONLY_0, val)) return true;
		if (equals_12(IMMEDIATE_OR_CANCEL_0, val)) return true;
		if (equals_12(WORK_0, val)) return true;
		if (equals_12(MARKET_ON_CLOSE_0, val)) return true;
		if (equals_12(MARKET_AT_OPEN_0, val)) return true;
		if (equals_12(ALL_OR_NONE_0, val)) return true;
		if (equals_12(DIRECTED_ORDER_0, val)) return true;
		if (equals_12(TRAILING_STOP_0, val)) return true;
		if (equals_12(SCALE_0, val)) return true;
		if (equals_12(LIMIT_ON_CLOSE_0, val)) return true;
		if (equals_12(NOT_HELD_0, val)) return true;
		if (equals_12(CASH_NOT_HELD_0, val)) return true;
		if (equals_12(RESERVE_SIZE_ORDER_0, val)) return true;
		if (equals_12(FILL_OR_KILL_0, val)) return true;
		if (equals_12(OVER_THE_DAY_0, val)) return true;
		if (equals_12(MARKET_AT_CLOSE_0, val)) return true;
		if (equals_12(ADDON_ORDER_0, val)) return true;
		return false;
	}

	var ADDON_ORDER_0, ALL_OR_NONE_0, CASH_NOT_HELD_0, DIRECTED_ORDER_0, EXCHANGE_FOR_PHYSICAL_TRANSACTION_0, FILL_OR_KILL_0, IMBALANCE_ONLY_0, IMMEDIATE_OR_CANCEL_0, LIMIT_ON_CLOSE_0, LIMIT_ON_OPEN_0, MARKET_AT_CLOSE_0, MARKET_AT_OPEN_0, MARKET_ON_CLOSE_0, MARKET_ON_OPEN_0, MINIMUM_QUANTITY_0, NOT_HELD_0, OVER_THE_DAY_0, PEGGED_0, RESERVE_SIZE_ORDER_0, SCALE_0, STOP_STOCK_TRANSACTION_0, TIME_ORDER_0, TRAILING_STOP_0, WORK_0;

	function $clinit_FixMessageInfo$DeskType() {
		$clinit_FixMessageInfo$DeskType = nullMethod;
		PROGRAM_TRADING = getBytesUtf8('PT');
		DERIVATIVES = getBytesUtf8('D');
		TRADING = getBytesUtf8('T');
		ARBITRAGE = getBytesUtf8('AR');
		INTERNATIONAL = getBytesUtf8('IN');
		AGENCY = getBytesUtf8('A');
		SALES = getBytesUtf8('S');
		PROPRIETARY = getBytesUtf8('PR');
		PREFERRED_TRADING = getBytesUtf8('PF');
		INSTITUTIONAL = getBytesUtf8('IS');
		OTHER_0 = getBytesUtf8('O');
	}

	function isValid_36(val) {
		$clinit_FixMessageInfo$DeskType();
		if (equals_12(PROGRAM_TRADING, val)) return true;
		if (equals_12(DERIVATIVES, val)) return true;
		if (equals_12(TRADING, val)) return true;
		if (equals_12(ARBITRAGE, val)) return true;
		if (equals_12(INTERNATIONAL, val)) return true;
		if (equals_12(AGENCY, val)) return true;
		if (equals_12(SALES, val)) return true;
		if (equals_12(PROPRIETARY, val)) return true;
		if (equals_12(PREFERRED_TRADING, val)) return true;
		if (equals_12(INSTITUTIONAL, val)) return true;
		if (equals_12(OTHER_0, val)) return true;
		return false;
	}

	var AGENCY, ARBITRAGE, DERIVATIVES, INSTITUTIONAL, INTERNATIONAL, OTHER_0, PREFERRED_TRADING, PROGRAM_TRADING, PROPRIETARY, SALES, TRADING;

	function isValid_37(val) {
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_38(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_39(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_40(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_41(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_42(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_43(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_44(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_45(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function isValid_46(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_47(val) {
		if (eq(P13_longLit, val)) return true;
		if (eq(P11_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_48(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (71 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		return false;
	}

	function isValid_49(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$ExecInst() {
		$clinit_FixMessageInfo$ExecInst = nullMethod;
		GO_ALONG = getBytesUtf8('3');
		WORK_1 = getBytesUtf8('2');
		NOT_HELD_1 = getBytesUtf8('1');
		STAY_ON_OFFER_SIDE = getBytesUtf8('0');
		STRICT_SCALE = getBytesUtf8('7');
		PARTICIPANT_DONT_INITIATE = getBytesUtf8('6');
		HELD = getBytesUtf8('5');
		OVER_THE_DAY_1 = getBytesUtf8('4');
		STAY_ON_BID_SIDE = getBytesUtf8('9');
		TRY_TO_SCALE = getBytesUtf8('8');
		PERCENT_OF_VOLUME_INDICATES_THAT_THE_SENDER_DOES_NOT_WANT_TO_BE_ = getBytesUtf8('D');
		DO_NOT_INCREASE__DNI = getBytesUtf8('E');
		DO_NOT_REDUCE__DNR = getBytesUtf8('F');
		ALL_OR_NONE__AON = getBytesUtf8('G');
		NO_CROSS_CROSS_IS_FORBIDDEN = getBytesUtf8('A');
		OK_TO_CROSS = getBytesUtf8('B');
		CALL_FIRST = getBytesUtf8('C');
		LAST_PEG_LAST_SALE = getBytesUtf8('L');
		MIDPRICE_PEG_MIDPRICE_OF_INSIDE_QUOTE = getBytesUtf8('M');
		NONNEGOTIABLE = getBytesUtf8('N');
		OPENING_PEG = getBytesUtf8('O');
		REINSTATE_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_Q_AND_L = getBytesUtf8('H');
		INSTITUTIONS_ONLY = getBytesUtf8('I');
		REINSTATE_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_K_AND_M = getBytesUtf8('J');
		CANCEL_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_J_AND_M = getBytesUtf8('K');
		CUSTOMER_DISPLAY_INSTRUCTION_RULE_11AC114 = getBytesUtf8('U');
		FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = getBytesUtf8('T');
		PEG_TO_VWAP = getBytesUtf8('W');
		NETTING_FOR_FOREX = getBytesUtf8('V');
		CANCEL_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_H_AND_L = getBytesUtf8('Q');
		MARKET_PEG = getBytesUtf8('P');
		SUSPEND = getBytesUtf8('S');
		PRIMARY_PEG_PRIMARY_MARKET__BUY_AT_BIDSELL_AT_OFFER = getBytesUtf8('R');
		TRY_TO_STOP = getBytesUtf8('Y');
		TRADE_ALONG = getBytesUtf8('X');
		CANCEL_IF_NOT_BEST = getBytesUtf8('Z');
		INTERMARKET_SWEEP = getBytesUtf8('f');
		EXTERNAL_ROUTING_ALLOWED = getBytesUtf8('g');
		PEG_TO_LIMIT_PRICE = getBytesUtf8('d');
		WORK_TO_TARGET_STRATEGY = getBytesUtf8('e');
		STRICT_LIMIT_NO_PRICE_IMPROVEMENT = getBytesUtf8('b');
		IGNORE_PRICE_VALIDITY_CHECKS = getBytesUtf8('c');
		TRAILING_STOP_PEG = getBytesUtf8('a');
		REINSTATE_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_O_AND_P = getBytesUtf8('n');
		CANCEL_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_N_AND_P = getBytesUtf8('o');
		SUSPEND_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_H_AND_Q = getBytesUtf8('l');
		SUSPEND_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_J_AND_K = getBytesUtf8('m');
		SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE = getBytesUtf8('j');
		BEST_EXECUTION = getBytesUtf8('k');
		EXTERNAL_ROUTING_NOT_ALLOWED = getBytesUtf8('h');
		IMBALANCE_ONLY_1 = getBytesUtf8('i');
		EXECUTE_AS_FX_NEUTRAL = getBytesUtf8('t');
		EXECUTE_AS_DURATION_NEUTRAL = getBytesUtf8('s');
		EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED = getBytesUtf8('r');
		RELEASE_FROM_SUSPENSION_MUTUALLY_EXCLUSIVE_WITH_S = getBytesUtf8('q');
		SUSPEND_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_N_AND_O = getBytesUtf8('p');
	}

	function isValid_50(val) {
		$clinit_FixMessageInfo$ExecInst();
		if (equals_12(GO_ALONG, val)) return true;
		if (equals_12(WORK_1, val)) return true;
		if (equals_12(NOT_HELD_1, val)) return true;
		if (equals_12(STAY_ON_OFFER_SIDE, val)) return true;
		if (equals_12(STRICT_SCALE, val)) return true;
		if (equals_12(PARTICIPANT_DONT_INITIATE, val)) return true;
		if (equals_12(HELD, val)) return true;
		if (equals_12(OVER_THE_DAY_1, val)) return true;
		if (equals_12(STAY_ON_BID_SIDE, val)) return true;
		if (equals_12(TRY_TO_SCALE, val)) return true;
		if (equals_12(PERCENT_OF_VOLUME_INDICATES_THAT_THE_SENDER_DOES_NOT_WANT_TO_BE_, val)) return true;
		if (equals_12(DO_NOT_INCREASE__DNI, val)) return true;
		if (equals_12(DO_NOT_REDUCE__DNR, val)) return true;
		if (equals_12(ALL_OR_NONE__AON, val)) return true;
		if (equals_12(NO_CROSS_CROSS_IS_FORBIDDEN, val)) return true;
		if (equals_12(OK_TO_CROSS, val)) return true;
		if (equals_12(CALL_FIRST, val)) return true;
		if (equals_12(LAST_PEG_LAST_SALE, val)) return true;
		if (equals_12(MIDPRICE_PEG_MIDPRICE_OF_INSIDE_QUOTE, val)) return true;
		if (equals_12(NONNEGOTIABLE, val)) return true;
		if (equals_12(OPENING_PEG, val)) return true;
		if (equals_12(REINSTATE_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_Q_AND_L, val)) return true;
		if (equals_12(INSTITUTIONS_ONLY, val)) return true;
		if (equals_12(REINSTATE_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_K_AND_M, val)) return true;
		if (equals_12(CANCEL_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_J_AND_M, val)) return true;
		if (equals_12(CUSTOMER_DISPLAY_INSTRUCTION_RULE_11AC114, val)) return true;
		if (equals_12(FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER, val)) return true;
		if (equals_12(PEG_TO_VWAP, val)) return true;
		if (equals_12(NETTING_FOR_FOREX, val)) return true;
		if (equals_12(CANCEL_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_H_AND_L, val)) return true;
		if (equals_12(MARKET_PEG, val)) return true;
		if (equals_12(SUSPEND, val)) return true;
		if (equals_12(PRIMARY_PEG_PRIMARY_MARKET__BUY_AT_BIDSELL_AT_OFFER, val)) return true;
		if (equals_12(TRY_TO_STOP, val)) return true;
		if (equals_12(TRADE_ALONG, val)) return true;
		if (equals_12(CANCEL_IF_NOT_BEST, val)) return true;
		if (equals_12(INTERMARKET_SWEEP, val)) return true;
		if (equals_12(EXTERNAL_ROUTING_ALLOWED, val)) return true;
		if (equals_12(PEG_TO_LIMIT_PRICE, val)) return true;
		if (equals_12(WORK_TO_TARGET_STRATEGY, val)) return true;
		if (equals_12(STRICT_LIMIT_NO_PRICE_IMPROVEMENT, val)) return true;
		if (equals_12(IGNORE_PRICE_VALIDITY_CHECKS, val)) return true;
		if (equals_12(TRAILING_STOP_PEG, val)) return true;
		if (equals_12(REINSTATE_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_O_AND_P, val)) return true;
		if (equals_12(CANCEL_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_N_AND_P, val)) return true;
		if (equals_12(SUSPEND_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_H_AND_Q, val)) return true;
		if (equals_12(SUSPEND_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_J_AND_K, val)) return true;
		if (equals_12(SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE, val)) return true;
		if (equals_12(BEST_EXECUTION, val)) return true;
		if (equals_12(EXTERNAL_ROUTING_NOT_ALLOWED, val)) return true;
		if (equals_12(IMBALANCE_ONLY_1, val)) return true;
		if (equals_12(EXECUTE_AS_FX_NEUTRAL, val)) return true;
		if (equals_12(EXECUTE_AS_DURATION_NEUTRAL, val)) return true;
		if (equals_12(EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED, val)) return true;
		if (equals_12(RELEASE_FROM_SUSPENSION_MUTUALLY_EXCLUSIVE_WITH_S, val)) return true;
		if (equals_12(SUSPEND_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_N_AND_O, val)) return true;
		return false;
	}

	var ALL_OR_NONE__AON, BEST_EXECUTION, CALL_FIRST, CANCEL_IF_NOT_BEST, CANCEL_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_N_AND_P, CANCEL_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_H_AND_L, CANCEL_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_J_AND_M, CUSTOMER_DISPLAY_INSTRUCTION_RULE_11AC114, DO_NOT_INCREASE__DNI, DO_NOT_REDUCE__DNR, EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED, EXECUTE_AS_DURATION_NEUTRAL, EXECUTE_AS_FX_NEUTRAL, EXTERNAL_ROUTING_ALLOWED, EXTERNAL_ROUTING_NOT_ALLOWED, FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER, GO_ALONG, HELD, IGNORE_PRICE_VALIDITY_CHECKS, IMBALANCE_ONLY_1, INSTITUTIONS_ONLY, INTERMARKET_SWEEP, LAST_PEG_LAST_SALE, MARKET_PEG, MIDPRICE_PEG_MIDPRICE_OF_INSIDE_QUOTE, NETTING_FOR_FOREX, NONNEGOTIABLE, NOT_HELD_1, NO_CROSS_CROSS_IS_FORBIDDEN, OK_TO_CROSS, OPENING_PEG, OVER_THE_DAY_1, PARTICIPANT_DONT_INITIATE, PEG_TO_LIMIT_PRICE, PEG_TO_VWAP, PERCENT_OF_VOLUME_INDICATES_THAT_THE_SENDER_DOES_NOT_WANT_TO_BE_, PRIMARY_PEG_PRIMARY_MARKET__BUY_AT_BIDSELL_AT_OFFER, REINSTATE_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_O_AND_P, REINSTATE_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_Q_AND_L, REINSTATE_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_K_AND_M, RELEASE_FROM_SUSPENSION_MUTUALLY_EXCLUSIVE_WITH_S, SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE, STAY_ON_BID_SIDE, STAY_ON_OFFER_SIDE, STRICT_LIMIT_NO_PRICE_IMPROVEMENT, STRICT_SCALE, SUSPEND, SUSPEND_ON_CONNECTION_LOSS_MUTUALLY_EXCLUSIVE_WITH_N_AND_O, SUSPEND_ON_SYSTEM_FAILURE_MUTUALLY_EXCLUSIVE_WITH_H_AND_Q, SUSPEND_ON_TRADING_HALT_MUTUALLY_EXCLUSIVE_WITH_J_AND_K, TRADE_ALONG, TRAILING_STOP_PEG, TRY_TO_SCALE, TRY_TO_STOP, WORK_1, WORK_TO_TARGET_STRATEGY;

	function isValid_51(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (81 == val) return true;
		if (80 == val) return true;
		if (83 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (79 == val) return true;
		return false;
	}

	function isValid_52(val) {
		if (eq(Pb_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_53(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (70 == val) return true;
		if (71 == val) return true;
		if (65 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (76 == val) return true;
		if (72 == val) return true;
		if (73 == val) return true;
		if (74 == val) return true;
		if (75 == val) return true;
		if (51 == val) return true;
		if (48 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		return false;
	}

	function isValid_54(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_55(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$FinancialStatus() {
		$clinit_FixMessageInfo$FinancialStatus = nullMethod;
		RESTRICTED = getBytesUtf8('3');
		PENDING_DELISTING = getBytesUtf8('2');
		BANKRUPT = getBytesUtf8('1');
	}

	function isValid_56(val) {
		$clinit_FixMessageInfo$FinancialStatus();
		if (equals_12(RESTRICTED, val)) return true;
		if (equals_12(PENDING_DELISTING, val)) return true;
		if (equals_12(BANKRUPT, val)) return true;
		return false;
	}

	var BANKRUPT, PENDING_DELISTING, RESTRICTED;

	function isValid_57(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_58(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_59(val) {
		if (78 == val) return true;
		if (89 == val) return true;
		return false;
	}

	function isValid_60(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_61(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_62(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function isValid_63(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_64(val) {
		if (eq(P13_longLit, val)) return true;
		if (eq(P11_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P15_longLit, val)) return true;
		if (eq(P14_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		if (eq(P16_longLit, val)) return true;
		if (eq(P17_longLit, val)) return true;
		if (eq(P18_longLit, val)) return true;
		if (eq(P19_longLit, val)) return true;
		if (eq(P1a_longLit, val)) return true;
		if (eq(P1b_longLit, val)) return true;
		if (eq(P1c_longLit, val)) return true;
		if (eq(P1d_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_65(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_66(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_67(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_68(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_69(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_70(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_71(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_72(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_73(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_74(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$MatchType() {
		$clinit_FixMessageInfo$MatchType = nullMethod;
		_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES = getBytesUtf8('A2');
		_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_A = getBytesUtf8('A1');
		ACT_M6_MATCH = getBytesUtf8('M6');
		_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES = getBytesUtf8('A4');
		ACT_DEFAULT_AFTER_M2 = getBytesUtf8('M5');
		_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AN = getBytesUtf8('A3');
		_PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIME = getBytesUtf8('A5');
		SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I = getBytesUtf8('S2');
		SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I = getBytesUtf8('S1');
		ACT_DEFAULT_TRADE = getBytesUtf8('M4');
		ACT_ACCEPTED_TRADE = getBytesUtf8('M3');
		SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCH = getBytesUtf8('M2');
		_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_T = getBytesUtf8('M1');
		COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST = getBytesUtf8('AQ');
		OCS_LOCKED_IN_NONACT = getBytesUtf8('MT');
		SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I = getBytesUtf8('S3');
		CONFIRMED_TRADE_REPORT_REPORTING_FROM_RECOGNIZED_MARKETS = getBytesUtf8('3');
		SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I = getBytesUtf8('S4');
		TWOPARTY_TRADE_REPORT_PRIVATELY_NEGOTIATED_TRADE = getBytesUtf8('2');
		SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I = getBytesUtf8('S5');
		ONEPARTY_TRADE_REPORT_PRIVATELY_NEGOTIATED_TRADE = getBytesUtf8('1');
		CALL_AUCTION = getBytesUtf8('7');
		COUNTERORDER_SELECTION = getBytesUtf8('6');
		CROSS_AUCTION = getBytesUtf8('5');
		AUTOMATCH = getBytesUtf8('4');
		ISSUINGBUY_BACK_AUCTION = getBytesUtf8('8');
	}

	function isValid_75(val) {
		$clinit_FixMessageInfo$MatchType();
		if (equals_12(_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES, val)) return true;
		if (equals_12(_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_A, val)) return true;
		if (equals_12(ACT_M6_MATCH, val)) return true;
		if (equals_12(_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES, val)) return true;
		if (equals_12(ACT_DEFAULT_AFTER_M2, val)) return true;
		if (equals_12(_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AN, val)) return true;
		if (equals_12(_PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIME, val)) return true;
		if (equals_12(SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, val)) return true;
		if (equals_12(SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, val)) return true;
		if (equals_12(ACT_DEFAULT_TRADE, val)) return true;
		if (equals_12(ACT_ACCEPTED_TRADE, val)) return true;
		if (equals_12(SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCH, val)) return true;
		if (equals_12(_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_T, val)) return true;
		if (equals_12(COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST, val)) return true;
		if (equals_12(OCS_LOCKED_IN_NONACT, val)) return true;
		if (equals_12(SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, val)) return true;
		if (equals_12(CONFIRMED_TRADE_REPORT_REPORTING_FROM_RECOGNIZED_MARKETS, val)) return true;
		if (equals_12(SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, val)) return true;
		if (equals_12(TWOPARTY_TRADE_REPORT_PRIVATELY_NEGOTIATED_TRADE, val)) return true;
		if (equals_12(SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, val)) return true;
		if (equals_12(ONEPARTY_TRADE_REPORT_PRIVATELY_NEGOTIATED_TRADE, val)) return true;
		if (equals_12(CALL_AUCTION, val)) return true;
		if (equals_12(COUNTERORDER_SELECTION, val)) return true;
		if (equals_12(CROSS_AUCTION, val)) return true;
		if (equals_12(AUTOMATCH, val)) return true;
		if (equals_12(ISSUINGBUY_BACK_AUCTION, val)) return true;
		return false;
	}

	var ACT_ACCEPTED_TRADE, ACT_DEFAULT_AFTER_M2, ACT_DEFAULT_TRADE, ACT_M6_MATCH, AUTOMATCH, CALL_AUCTION, COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST, CONFIRMED_TRADE_REPORT_REPORTING_FROM_RECOGNIZED_MARKETS, COUNTERORDER_SELECTION, CROSS_AUCTION, ISSUINGBUY_BACK_AUCTION, OCS_LOCKED_IN_NONACT, ONEPARTY_TRADE_REPORT_PRIVATELY_NEGOTIATED_TRADE, SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCH, SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_I, TWOPARTY_TRADE_REPORT_PRIVATELY_NEGOTIATED_TRADE, _PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIME, _PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_T, _PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES, _PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_A, _PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES, _PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AN;

	function isValid_76(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_77(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_78(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$MiscFeeType() {
		$clinit_FixMessageInfo$MiscFeeType = nullMethod;
		TRANSFER_FEE = getBytesUtf8('13');
		SECURITY_LENDING = getBytesUtf8('14');
		CONVERSION = getBytesUtf8('11');
		AGENT = getBytesUtf8('12');
		LOCAL_COMMISSION = getBytesUtf8('3');
		TAX = getBytesUtf8('2');
		REGULATORY_EG_SEC = getBytesUtf8('1');
		PER_TRANSACTION = getBytesUtf8('10');
		OTHER_1 = getBytesUtf8('7');
		LEVY = getBytesUtf8('6');
		STAMP = getBytesUtf8('5');
		EXCHANGE_FEES = getBytesUtf8('4');
		CONSUMPTION_TAX = getBytesUtf8('9');
		MARKUP = getBytesUtf8('8');
	}

	function isValid_79(val) {
		$clinit_FixMessageInfo$MiscFeeType();
		if (equals_12(TRANSFER_FEE, val)) return true;
		if (equals_12(SECURITY_LENDING, val)) return true;
		if (equals_12(CONVERSION, val)) return true;
		if (equals_12(AGENT, val)) return true;
		if (equals_12(LOCAL_COMMISSION, val)) return true;
		if (equals_12(TAX, val)) return true;
		if (equals_12(REGULATORY_EG_SEC, val)) return true;
		if (equals_12(PER_TRANSACTION, val)) return true;
		if (equals_12(OTHER_1, val)) return true;
		if (equals_12(LEVY, val)) return true;
		if (equals_12(STAMP, val)) return true;
		if (equals_12(EXCHANGE_FEES, val)) return true;
		if (equals_12(CONSUMPTION_TAX, val)) return true;
		if (equals_12(MARKUP, val)) return true;
		return false;
	}

	var AGENT, CONSUMPTION_TAX, CONVERSION, EXCHANGE_FEES, LEVY, LOCAL_COMMISSION, MARKUP, OTHER_1, PER_TRANSACTION, REGULATORY_EG_SEC, SECURITY_LENDING, STAMP, TAX, TRANSFER_FEE;

	function isValid_80(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (78 == val) return true;
		if (89 == val) return true;
		return false;
	}

	function isValid_81(val) {
		if (83 == val) return true;
		if (82 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$MsgType() {
		$clinit_FixMessageInfo$MsgType = nullMethod;
		REJECT_0 = getBytesUtf8('3');
		RESENDREQUEST_0 = getBytesUtf8('2');
		TESTREQUEST_0 = getBytesUtf8('1');
		HEARTBEAT_0 = getBytesUtf8('0');
		ADVERTISEMENT_0 = getBytesUtf8('7');
		IOI_0 = getBytesUtf8('6');
		LOGOUT_0 = getBytesUtf8('5');
		SEQUENCERESET_0 = getBytesUtf8('4');
		ORDERCANCELREJECT_0 = getBytesUtf8('9');
		EXECUTIONREPORT_0 = getBytesUtf8('8');
		NEWORDERSINGLE_0 = getBytesUtf8('D');
		NEWORDERLIST_0 = getBytesUtf8('E');
		ORDERCANCELREQUEST_0 = getBytesUtf8('F');
		ORDERCANCELREPLACEREQUEST_0 = getBytesUtf8('G');
		LOGON_0 = getBytesUtf8('A');
		NEWS_0 = getBytesUtf8('B');
		EMAIL_0 = getBytesUtf8('C');
		LISTEXECUTE_0 = getBytesUtf8('L');
		LISTSTATUSREQUEST_0 = getBytesUtf8('M');
		LISTSTATUS_0 = getBytesUtf8('N');
		ORDERSTATUSREQUEST_0 = getBytesUtf8('H');
		ALLOCATIONINSTRUCTION_0 = getBytesUtf8('J');
		LISTCANCELREQUEST_0 = getBytesUtf8('K');
		SETTLEMENTINSTRUCTIONS_0 = getBytesUtf8('T');
		MARKETDATASNAPSHOTFULLREFRESH_0 = getBytesUtf8('W');
		MARKETDATAREQUEST_0 = getBytesUtf8('V');
		DONTKNOWTRADEDK_0 = getBytesUtf8('Q');
		ALLOCATIONINSTRUCTIONACK_0 = getBytesUtf8('P');
		QUOTE_0 = getBytesUtf8('S');
		QUOTEREQUEST_0 = getBytesUtf8('R');
		MARKETDATAREQUESTREJECT_0 = getBytesUtf8('Y');
		MARKETDATAINCREMENTALREFRESH_0 = getBytesUtf8('X');
		QUOTECANCEL_0 = getBytesUtf8('Z');
		SECURITYSTATUS_0 = getBytesUtf8('f');
		TRADINGSESSIONSTATUSREQUEST_0 = getBytesUtf8('g');
		SECURITYDEFINITION_0 = getBytesUtf8('d');
		SECURITYSTATUSREQUEST_0 = getBytesUtf8('e');
		MASSQUOTEACKNOWLEDGEMENT_0 = getBytesUtf8('b');
		SECURITYDEFINITIONREQUEST_0 = getBytesUtf8('c');
		QUOTESTATUSREQUEST_0 = getBytesUtf8('a');
		XML_NON_FIX = getBytesUtf8('n');
		REGISTRATIONINSTRUCTIONS_0 = getBytesUtf8('o');
		BIDRESPONSE_0 = getBytesUtf8('l');
		LISTSTRIKEPRICE_0 = getBytesUtf8('m');
		BUSINESSMESSAGEREJECT_0 = getBytesUtf8('j');
		BIDREQUEST_0 = getBytesUtf8('k');
		TRADINGSESSIONSTATUS_0 = getBytesUtf8('h');
		MASSQUOTE_0 = getBytesUtf8('i');
		SECURITYTYPES_0 = getBytesUtf8('w');
		SECURITYTYPEREQUEST_0 = getBytesUtf8('v');
		CROSSORDERCANCELREQUEST_0 = getBytesUtf8('u');
		CROSSORDERCANCELREPLACEREQUEST_0 = getBytesUtf8('t');
		NEWORDERCROSS_0 = getBytesUtf8('s');
		ORDERMASSCANCELREPORT_0 = getBytesUtf8('r');
		ORDERMASSCANCELREQUEST_0 = getBytesUtf8('q');
		REGISTRATIONINSTRUCTIONSRESPONSE_0 = getBytesUtf8('p');
		DERIVATIVESECURITYLISTREQUEST_0 = getBytesUtf8('z');
		SECURITYLIST_0 = getBytesUtf8('y');
		SECURITYLISTREQUEST_0 = getBytesUtf8('x');
		ALLOCATIONREPORTACK_0 = getBytesUtf8('AT');
		ALLOCATIONREPORT_0 = getBytesUtf8('AS');
		TRADECAPTUREREPORTACK_0 = getBytesUtf8('AR');
		TRADECAPTUREREPORTREQUESTACK_0 = getBytesUtf8('AQ');
		COLLATERALREQUEST_0 = getBytesUtf8('AX');
		ASSIGNMENTREPORT_0 = getBytesUtf8('AW');
		SETTLEMENTINSTRUCTIONREQUEST_0 = getBytesUtf8('AV');
		CONFIRMATION_ACK_0 = getBytesUtf8('AU');
		COLLATERALRESPONSE_0 = getBytesUtf8('AZ');
		COLLATERALASSIGNMENT_0 = getBytesUtf8('AY');
		COLLATERALREPORT_0 = getBytesUtf8('BA');
		MULTILEGORDERCANCELREPLACE_0 = getBytesUtf8('AC');
		TRADECAPTUREREPORTREQUEST_0 = getBytesUtf8('AD');
		DERIVATIVESECURITYLIST_0 = getBytesUtf8('AA');
		NEWORDERMULTILEG_0 = getBytesUtf8('AB');
		QUOTEREQUESTREJECT_0 = getBytesUtf8('AG');
		RFQREQUEST_0 = getBytesUtf8('AH');
		TRADECAPTUREREPORT_0 = getBytesUtf8('AE');
		ORDERMASSSTATUSREQUEST_0 = getBytesUtf8('AF');
		CONFIRMATION_0 = getBytesUtf8('AK');
		POSITIONMAINTENANCEREQUEST_0 = getBytesUtf8('AL');
		QUOTESTATUSREPORT_0 = getBytesUtf8('AI');
		QUOTERESPONSE_0 = getBytesUtf8('AJ');
		REQUESTFORPOSITIONSACK_0 = getBytesUtf8('AO');
		POSITIONREPORT_0 = getBytesUtf8('AP');
		POSITIONMAINTENANCEREPORT_0 = getBytesUtf8('AM');
		REQUESTFORPOSITIONS_0 = getBytesUtf8('AN');
		APPLICATIONMESSAGEREQUEST_0 = getBytesUtf8('BW');
		MARKETDEFINITIONUPDATEREPORT_0 = getBytesUtf8('BV');
		APPLICATIONMESSAGEREPORT_0 = getBytesUtf8('BY');
		APPLICATIONMESSAGEREQUESTACK_0 = getBytesUtf8('BX');
		TRADINGSESSIONLISTUPDATEREPORT_0 = getBytesUtf8('BS');
		DERIVATIVESECURITYLISTUPDATEREPORT_0 = getBytesUtf8('BR');
		MARKETDEFINITION_0 = getBytesUtf8('BU');
		MARKETDEFINITIONREQUEST_0 = getBytesUtf8('BT');
		USERNOTIFICATION_0 = getBytesUtf8('CB');
		ORDERMASSACTIONREQUEST_0 = getBytesUtf8('CA');
		ORDERMASSACTIONREPORT_0 = getBytesUtf8('BZ');
		USERRESPONSE_0 = getBytesUtf8('BF');
		COLLATERALINQUIRYACK_0 = getBytesUtf8('BG');
		CONFIRMATIONREQUEST_0 = getBytesUtf8('BH');
		TRADINGSESSIONLISTREQUEST_0 = getBytesUtf8('BI');
		COLLATERALINQUIRY_0 = getBytesUtf8('BB');
		NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST_0 = getBytesUtf8('BC');
		NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE_0 = getBytesUtf8('BD');
		USERREQUEST_0 = getBytesUtf8('BE');
		EXECUTIONACKNOWLEDGEMENT_0 = getBytesUtf8('BN');
		CONTRARYINTENTIONREPORT_0 = getBytesUtf8('BO');
		SECURITYDEFINITIONUPDATEREPORT_0 = getBytesUtf8('BP');
		SETTLEMENTOBLIGATIONREPORT_0 = getBytesUtf8('BQ');
		TRADINGSESSIONLIST_0 = getBytesUtf8('BJ');
		SECURITYLISTUPDATEREPORT_0 = getBytesUtf8('BK');
		ADJUSTEDPOSITIONREPORT_0 = getBytesUtf8('BL');
		ALLOCATIONINSTRUCTIONALERT_0 = getBytesUtf8('BM');
		PARTYDETAILSLISTREPORT_0 = getBytesUtf8('CG');
		STREAMASSIGNMENTREPORTACK_0 = getBytesUtf8('CE');
		PARTYDETAILSLISTREQUEST_0 = getBytesUtf8('CF');
		STREAMASSIGNMENTREQUEST_0 = getBytesUtf8('CC');
		STREAMASSIGNMENTREPORT_0 = getBytesUtf8('CD');
	}

	function isValid_82(val) {
		$clinit_FixMessageInfo$MsgType();
		if (equals_12(REJECT_0, val)) return true;
		if (equals_12(RESENDREQUEST_0, val)) return true;
		if (equals_12(TESTREQUEST_0, val)) return true;
		if (equals_12(HEARTBEAT_0, val)) return true;
		if (equals_12(ADVERTISEMENT_0, val)) return true;
		if (equals_12(IOI_0, val)) return true;
		if (equals_12(LOGOUT_0, val)) return true;
		if (equals_12(SEQUENCERESET_0, val)) return true;
		if (equals_12(ORDERCANCELREJECT_0, val)) return true;
		if (equals_12(EXECUTIONREPORT_0, val)) return true;
		if (equals_12(NEWORDERSINGLE_0, val)) return true;
		if (equals_12(NEWORDERLIST_0, val)) return true;
		if (equals_12(ORDERCANCELREQUEST_0, val)) return true;
		if (equals_12(ORDERCANCELREPLACEREQUEST_0, val)) return true;
		if (equals_12(LOGON_0, val)) return true;
		if (equals_12(NEWS_0, val)) return true;
		if (equals_12(EMAIL_0, val)) return true;
		if (equals_12(LISTEXECUTE_0, val)) return true;
		if (equals_12(LISTSTATUSREQUEST_0, val)) return true;
		if (equals_12(LISTSTATUS_0, val)) return true;
		if (equals_12(ORDERSTATUSREQUEST_0, val)) return true;
		if (equals_12(ALLOCATIONINSTRUCTION_0, val)) return true;
		if (equals_12(LISTCANCELREQUEST_0, val)) return true;
		if (equals_12(SETTLEMENTINSTRUCTIONS_0, val)) return true;
		if (equals_12(MARKETDATASNAPSHOTFULLREFRESH_0, val)) return true;
		if (equals_12(MARKETDATAREQUEST_0, val)) return true;
		if (equals_12(DONTKNOWTRADEDK_0, val)) return true;
		if (equals_12(ALLOCATIONINSTRUCTIONACK_0, val)) return true;
		if (equals_12(QUOTE_0, val)) return true;
		if (equals_12(QUOTEREQUEST_0, val)) return true;
		if (equals_12(MARKETDATAREQUESTREJECT_0, val)) return true;
		if (equals_12(MARKETDATAINCREMENTALREFRESH_0, val)) return true;
		if (equals_12(QUOTECANCEL_0, val)) return true;
		if (equals_12(SECURITYSTATUS_0, val)) return true;
		if (equals_12(TRADINGSESSIONSTATUSREQUEST_0, val)) return true;
		if (equals_12(SECURITYDEFINITION_0, val)) return true;
		if (equals_12(SECURITYSTATUSREQUEST_0, val)) return true;
		if (equals_12(MASSQUOTEACKNOWLEDGEMENT_0, val)) return true;
		if (equals_12(SECURITYDEFINITIONREQUEST_0, val)) return true;
		if (equals_12(QUOTESTATUSREQUEST_0, val)) return true;
		if (equals_12(XML_NON_FIX, val)) return true;
		if (equals_12(REGISTRATIONINSTRUCTIONS_0, val)) return true;
		if (equals_12(BIDRESPONSE_0, val)) return true;
		if (equals_12(LISTSTRIKEPRICE_0, val)) return true;
		if (equals_12(BUSINESSMESSAGEREJECT_0, val)) return true;
		if (equals_12(BIDREQUEST_0, val)) return true;
		if (equals_12(TRADINGSESSIONSTATUS_0, val)) return true;
		if (equals_12(MASSQUOTE_0, val)) return true;
		if (equals_12(SECURITYTYPES_0, val)) return true;
		if (equals_12(SECURITYTYPEREQUEST_0, val)) return true;
		if (equals_12(CROSSORDERCANCELREQUEST_0, val)) return true;
		if (equals_12(CROSSORDERCANCELREPLACEREQUEST_0, val)) return true;
		if (equals_12(NEWORDERCROSS_0, val)) return true;
		if (equals_12(ORDERMASSCANCELREPORT_0, val)) return true;
		if (equals_12(ORDERMASSCANCELREQUEST_0, val)) return true;
		if (equals_12(REGISTRATIONINSTRUCTIONSRESPONSE_0, val)) return true;
		if (equals_12(DERIVATIVESECURITYLISTREQUEST_0, val)) return true;
		if (equals_12(SECURITYLIST_0, val)) return true;
		if (equals_12(SECURITYLISTREQUEST_0, val)) return true;
		if (equals_12(ALLOCATIONREPORTACK_0, val)) return true;
		if (equals_12(ALLOCATIONREPORT_0, val)) return true;
		if (equals_12(TRADECAPTUREREPORTACK_0, val)) return true;
		if (equals_12(TRADECAPTUREREPORTREQUESTACK_0, val)) return true;
		if (equals_12(COLLATERALREQUEST_0, val)) return true;
		if (equals_12(ASSIGNMENTREPORT_0, val)) return true;
		if (equals_12(SETTLEMENTINSTRUCTIONREQUEST_0, val)) return true;
		if (equals_12(CONFIRMATION_ACK_0, val)) return true;
		if (equals_12(COLLATERALRESPONSE_0, val)) return true;
		if (equals_12(COLLATERALASSIGNMENT_0, val)) return true;
		if (equals_12(COLLATERALREPORT_0, val)) return true;
		if (equals_12(MULTILEGORDERCANCELREPLACE_0, val)) return true;
		if (equals_12(TRADECAPTUREREPORTREQUEST_0, val)) return true;
		if (equals_12(DERIVATIVESECURITYLIST_0, val)) return true;
		if (equals_12(NEWORDERMULTILEG_0, val)) return true;
		if (equals_12(QUOTEREQUESTREJECT_0, val)) return true;
		if (equals_12(RFQREQUEST_0, val)) return true;
		if (equals_12(TRADECAPTUREREPORT_0, val)) return true;
		if (equals_12(ORDERMASSSTATUSREQUEST_0, val)) return true;
		if (equals_12(CONFIRMATION_0, val)) return true;
		if (equals_12(POSITIONMAINTENANCEREQUEST_0, val)) return true;
		if (equals_12(QUOTESTATUSREPORT_0, val)) return true;
		if (equals_12(QUOTERESPONSE_0, val)) return true;
		if (equals_12(REQUESTFORPOSITIONSACK_0, val)) return true;
		if (equals_12(POSITIONREPORT_0, val)) return true;
		if (equals_12(POSITIONMAINTENANCEREPORT_0, val)) return true;
		if (equals_12(REQUESTFORPOSITIONS_0, val)) return true;
		if (equals_12(APPLICATIONMESSAGEREQUEST_0, val)) return true;
		if (equals_12(MARKETDEFINITIONUPDATEREPORT_0, val)) return true;
		if (equals_12(APPLICATIONMESSAGEREPORT_0, val)) return true;
		if (equals_12(APPLICATIONMESSAGEREQUESTACK_0, val)) return true;
		if (equals_12(TRADINGSESSIONLISTUPDATEREPORT_0, val)) return true;
		if (equals_12(DERIVATIVESECURITYLISTUPDATEREPORT_0, val)) return true;
		if (equals_12(MARKETDEFINITION_0, val)) return true;
		if (equals_12(MARKETDEFINITIONREQUEST_0, val)) return true;
		if (equals_12(USERNOTIFICATION_0, val)) return true;
		if (equals_12(ORDERMASSACTIONREQUEST_0, val)) return true;
		if (equals_12(ORDERMASSACTIONREPORT_0, val)) return true;
		if (equals_12(USERRESPONSE_0, val)) return true;
		if (equals_12(COLLATERALINQUIRYACK_0, val)) return true;
		if (equals_12(CONFIRMATIONREQUEST_0, val)) return true;
		if (equals_12(TRADINGSESSIONLISTREQUEST_0, val)) return true;
		if (equals_12(COLLATERALINQUIRY_0, val)) return true;
		if (equals_12(NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST_0, val)) return true;
		if (equals_12(NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE_0, val)) return true;
		if (equals_12(USERREQUEST_0, val)) return true;
		if (equals_12(EXECUTIONACKNOWLEDGEMENT_0, val)) return true;
		if (equals_12(CONTRARYINTENTIONREPORT_0, val)) return true;
		if (equals_12(SECURITYDEFINITIONUPDATEREPORT_0, val)) return true;
		if (equals_12(SETTLEMENTOBLIGATIONREPORT_0, val)) return true;
		if (equals_12(TRADINGSESSIONLIST_0, val)) return true;
		if (equals_12(SECURITYLISTUPDATEREPORT_0, val)) return true;
		if (equals_12(ADJUSTEDPOSITIONREPORT_0, val)) return true;
		if (equals_12(ALLOCATIONINSTRUCTIONALERT_0, val)) return true;
		if (equals_12(PARTYDETAILSLISTREPORT_0, val)) return true;
		if (equals_12(STREAMASSIGNMENTREPORTACK_0, val)) return true;
		if (equals_12(PARTYDETAILSLISTREQUEST_0, val)) return true;
		if (equals_12(STREAMASSIGNMENTREQUEST_0, val)) return true;
		if (equals_12(STREAMASSIGNMENTREPORT_0, val)) return true;
		return false;
	}

	var ADJUSTEDPOSITIONREPORT_0, ADVERTISEMENT_0, ALLOCATIONINSTRUCTION_0, ALLOCATIONINSTRUCTIONACK_0, ALLOCATIONINSTRUCTIONALERT_0, ALLOCATIONREPORT_0, ALLOCATIONREPORTACK_0, APPLICATIONMESSAGEREPORT_0, APPLICATIONMESSAGEREQUEST_0, APPLICATIONMESSAGEREQUESTACK_0, ASSIGNMENTREPORT_0, BIDREQUEST_0, BIDRESPONSE_0, BUSINESSMESSAGEREJECT_0, COLLATERALASSIGNMENT_0, COLLATERALINQUIRY_0, COLLATERALINQUIRYACK_0, COLLATERALREPORT_0, COLLATERALREQUEST_0, COLLATERALRESPONSE_0, CONFIRMATION_0, CONFIRMATIONREQUEST_0, CONFIRMATION_ACK_0, CONTRARYINTENTIONREPORT_0, CROSSORDERCANCELREPLACEREQUEST_0, CROSSORDERCANCELREQUEST_0, DERIVATIVESECURITYLIST_0, DERIVATIVESECURITYLISTREQUEST_0, DERIVATIVESECURITYLISTUPDATEREPORT_0, DONTKNOWTRADEDK_0, EMAIL_0, EXECUTIONACKNOWLEDGEMENT_0, EXECUTIONREPORT_0, HEARTBEAT_0, IOI_0, LISTCANCELREQUEST_0, LISTEXECUTE_0, LISTSTATUS_0, LISTSTATUSREQUEST_0, LISTSTRIKEPRICE_0, LOGON_0, LOGOUT_0, MARKETDATAINCREMENTALREFRESH_0, MARKETDATAREQUEST_0, MARKETDATAREQUESTREJECT_0, MARKETDATASNAPSHOTFULLREFRESH_0, MARKETDEFINITION_0, MARKETDEFINITIONREQUEST_0, MARKETDEFINITIONUPDATEREPORT_0, MASSQUOTE_0, MASSQUOTEACKNOWLEDGEMENT_0, MULTILEGORDERCANCELREPLACE_0, NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST_0, NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE_0, NEWORDERCROSS_0, NEWORDERLIST_0, NEWORDERMULTILEG_0, NEWORDERSINGLE_0, NEWS_0, ORDERCANCELREJECT_0, ORDERCANCELREPLACEREQUEST_0, ORDERCANCELREQUEST_0, ORDERMASSACTIONREPORT_0, ORDERMASSACTIONREQUEST_0, ORDERMASSCANCELREPORT_0, ORDERMASSCANCELREQUEST_0, ORDERMASSSTATUSREQUEST_0, ORDERSTATUSREQUEST_0, PARTYDETAILSLISTREPORT_0, PARTYDETAILSLISTREQUEST_0, POSITIONMAINTENANCEREPORT_0, POSITIONMAINTENANCEREQUEST_0, POSITIONREPORT_0, QUOTE_0, QUOTECANCEL_0, QUOTEREQUEST_0, QUOTEREQUESTREJECT_0, QUOTERESPONSE_0, QUOTESTATUSREPORT_0, QUOTESTATUSREQUEST_0, REGISTRATIONINSTRUCTIONS_0, REGISTRATIONINSTRUCTIONSRESPONSE_0, REJECT_0, REQUESTFORPOSITIONS_0, REQUESTFORPOSITIONSACK_0, RESENDREQUEST_0, RFQREQUEST_0, SECURITYDEFINITION_0, SECURITYDEFINITIONREQUEST_0, SECURITYDEFINITIONUPDATEREPORT_0, SECURITYLIST_0, SECURITYLISTREQUEST_0, SECURITYLISTUPDATEREPORT_0, SECURITYSTATUS_0, SECURITYSTATUSREQUEST_0, SECURITYTYPEREQUEST_0, SECURITYTYPES_0, SEQUENCERESET_0, SETTLEMENTINSTRUCTIONREQUEST_0, SETTLEMENTINSTRUCTIONS_0, SETTLEMENTOBLIGATIONREPORT_0, STREAMASSIGNMENTREPORT_0, STREAMASSIGNMENTREPORTACK_0, STREAMASSIGNMENTREQUEST_0, TESTREQUEST_0, TRADECAPTUREREPORT_0, TRADECAPTUREREPORTACK_0, TRADECAPTUREREPORTREQUEST_0, TRADECAPTUREREPORTREQUESTACK_0, TRADINGSESSIONLIST_0, TRADINGSESSIONLISTREQUEST_0, TRADINGSESSIONLISTUPDATEREPORT_0, TRADINGSESSIONSTATUS_0, TRADINGSESSIONSTATUSREQUEST_0, USERNOTIFICATION_0, USERREQUEST_0, USERRESPONSE_0, XML_NON_FIX;

	function $clinit_FixMessageInfo$MsgTypes() {
		$clinit_FixMessageInfo$MsgTypes = nullMethod;
		getBytesUtf8('U0');
		HEARTBEAT_1 = getBytesUtf8('0');
		TESTREQUEST_1 = getBytesUtf8('1');
		RESENDREQUEST_1 = getBytesUtf8('2');
		getBytesUtf8('3');
		SEQUENCERESET_1 = getBytesUtf8('4');
		LOGOUT_1 = getBytesUtf8('5');
		getBytesUtf8('6');
		getBytesUtf8('7');
		EXECUTIONREPORT_1 = getBytesUtf8('8');
		ORDERCANCELREJECT_1 = getBytesUtf8('9');
		LOGON_1 = getBytesUtf8('A');
		getBytesUtf8('B');
		getBytesUtf8('C');
		NEWORDERSINGLE_1 = getBytesUtf8('D');
		getBytesUtf8('E');
		ORDERCANCELREQUEST_1 = getBytesUtf8('F');
		getBytesUtf8('G');
		ORDERSTATUSREQUEST_1 = getBytesUtf8('H');
		getBytesUtf8('J');
		getBytesUtf8('K');
		getBytesUtf8('L');
		getBytesUtf8('M');
		getBytesUtf8('N');
		getBytesUtf8('P');
		getBytesUtf8('Q');
		QUOTEREQUEST_1 = getBytesUtf8('R');
		QUOTE_1 = getBytesUtf8('S');
		getBytesUtf8('T');
		getBytesUtf8('V');
		getBytesUtf8('W');
		getBytesUtf8('X');
		getBytesUtf8('Y');
		getBytesUtf8('Z');
		getBytesUtf8('a');
		getBytesUtf8('b');
		getBytesUtf8('c');
		getBytesUtf8('d');
		getBytesUtf8('e');
		getBytesUtf8('f');
		getBytesUtf8('g');
		getBytesUtf8('h');
		getBytesUtf8('i');
		getBytesUtf8('j');
		getBytesUtf8('k');
		getBytesUtf8('l');
		getBytesUtf8('m');
		getBytesUtf8('o');
		getBytesUtf8('p');
		getBytesUtf8('q');
		getBytesUtf8('r');
		getBytesUtf8('s');
		getBytesUtf8('t');
		getBytesUtf8('u');
		getBytesUtf8('v');
		getBytesUtf8('w');
		SECURITYLISTREQUEST_1 = getBytesUtf8('x');
		SECURITYLIST_1 = getBytesUtf8('y');
		getBytesUtf8('z');
		getBytesUtf8('AA');
		getBytesUtf8('AB');
		getBytesUtf8('AC');
		TRADECAPTUREREPORTREQUEST_1 = getBytesUtf8('AD');
		getBytesUtf8('AE');
		ORDERMASSSTATUSREQUEST_1 = getBytesUtf8('AF');
		getBytesUtf8('AG');
		getBytesUtf8('AH');
		getBytesUtf8('AI');
		getBytesUtf8('AJ');
		getBytesUtf8('AK');
		POSITIONMAINTENANCEREQUEST_1 = getBytesUtf8('AL');
		POSITIONMAINTENANCEREPORT_1 = getBytesUtf8('AM');
		REQUESTFORPOSITIONS_1 = getBytesUtf8('AN');
		REQUESTFORPOSITIONSACK_1 = getBytesUtf8('AO');
		getBytesUtf8('AP');
		TRADECAPTUREREPORTREQUESTACK_1 = getBytesUtf8('AQ');
		getBytesUtf8('AR');
		getBytesUtf8('AS');
		getBytesUtf8('AT');
		getBytesUtf8('AU');
		getBytesUtf8('AV');
		getBytesUtf8('AW');
		getBytesUtf8('AX');
		COLLATERALASSIGNMENT_1 = getBytesUtf8('AY');
		COLLATERALRESPONSE_1 = getBytesUtf8('AZ');
		getBytesUtf8('BA');
		getBytesUtf8('BB');
		getBytesUtf8('BC');
		getBytesUtf8('BD');
		USERREQUEST_1 = getBytesUtf8('BE');
		USERRESPONSE_1 = getBytesUtf8('BF');
		getBytesUtf8('BG');
		getBytesUtf8('BH');
		getBytesUtf8('BO');
		getBytesUtf8('BP');
		getBytesUtf8('BK');
		getBytesUtf8('BL');
		getBytesUtf8('BM');
		EXECUTIONACKNOWLEDGEMENT_1 = getBytesUtf8('BN');
		getBytesUtf8('BJ');
		getBytesUtf8('BI');
		getBytesUtf8('BQ');
		getBytesUtf8('BR');
		getBytesUtf8('BS');
		getBytesUtf8('BT');
		getBytesUtf8('BU');
		getBytesUtf8('BV');
		getBytesUtf8('CB');
		getBytesUtf8('BZ');
		getBytesUtf8('CA');
		getBytesUtf8('BW');
		getBytesUtf8('BX');
		getBytesUtf8('BY');
		getBytesUtf8('CC');
		getBytesUtf8('CD');
		getBytesUtf8('CE');
		getBytesUtf8('CF');
		getBytesUtf8('CG');
	}

	var COLLATERALASSIGNMENT_1, COLLATERALRESPONSE_1, EXECUTIONACKNOWLEDGEMENT_1, EXECUTIONREPORT_1, HEARTBEAT_1, LOGON_1, LOGOUT_1, NEWORDERSINGLE_1, ORDERCANCELREJECT_1, ORDERCANCELREQUEST_1, ORDERMASSSTATUSREQUEST_1, ORDERSTATUSREQUEST_1, POSITIONMAINTENANCEREPORT_1, POSITIONMAINTENANCEREQUEST_1, QUOTE_1, QUOTEREQUEST_1, REQUESTFORPOSITIONS_1, REQUESTFORPOSITIONSACK_1, RESENDREQUEST_1, SECURITYLIST_1, SECURITYLISTREQUEST_1, SEQUENCERESET_1, TESTREQUEST_1, TRADECAPTUREREPORTREQUEST_1, TRADECAPTUREREPORTREQUESTACK_1, USERREQUEST_1, USERRESPONSE_1;

	function isValid_83(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function isValid_84(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_85(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_86(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_87(val) {
		if (eq(P12_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_88(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (65 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		return false;
	}

	function isValid_89(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (70 == val) return true;
		if (71 == val) return true;
		if (65 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (76 == val) return true;
		if (77 == val) return true;
		if (72 == val) return true;
		if (73 == val) return true;
		if (74 == val) return true;
		if (75 == val) return true;
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (81 == val) return true;
		if (55 == val) return true;
		if (80 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		return false;
	}

	function isValid_90(val) {
		if (87 == val) return true;
		if (71 == val) return true;
		if (80 == val) return true;
		if (65 == val) return true;
		if (82 == val) return true;
		if (73 == val) return true;
		return false;
	}

	function isValid_91(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		return false;
	}

	function isValid_92(val) {
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$OrderRestrictions() {
		$clinit_FixMessageInfo$OrderRestrictions = nullMethod;
		NONALGORITHMIC = getBytesUtf8('D');
		ALGORITHMIC = getBytesUtf8('E');
		CROSS = getBytesUtf8('F');
		RISKLESS_ARBITRAGE = getBytesUtf8('A');
		ISSUER_HOLDING = getBytesUtf8('B');
		ISSUE_PRICE_STABILIZATION = getBytesUtf8('C');
		NONINDEX_ARBITRAGE = getBytesUtf8('3');
		INDEX_ARBITRAGE = getBytesUtf8('2');
		PROGRAM_TRADE = getBytesUtf8('1');
		FOREIGN_ENTITY_OF_FOREIGN_GOVERNMENT_OR_REGULATORY_JURISDICTION = getBytesUtf8('7');
		ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_ = getBytesUtf8('6');
		ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITY = getBytesUtf8('5');
		COMPETING_MARKET_MAKER = getBytesUtf8('4');
		EXTERNAL_INTERCONNECTED_MARKET_LINKAGE = getBytesUtf8('9');
		EXTERNAL_MARKET_PARTICIPANT = getBytesUtf8('8');
	}

	function isValid_93(val) {
		$clinit_FixMessageInfo$OrderRestrictions();
		if (equals_12(NONALGORITHMIC, val)) return true;
		if (equals_12(ALGORITHMIC, val)) return true;
		if (equals_12(CROSS, val)) return true;
		if (equals_12(RISKLESS_ARBITRAGE, val)) return true;
		if (equals_12(ISSUER_HOLDING, val)) return true;
		if (equals_12(ISSUE_PRICE_STABILIZATION, val)) return true;
		if (equals_12(NONINDEX_ARBITRAGE, val)) return true;
		if (equals_12(INDEX_ARBITRAGE, val)) return true;
		if (equals_12(PROGRAM_TRADE, val)) return true;
		if (equals_12(FOREIGN_ENTITY_OF_FOREIGN_GOVERNMENT_OR_REGULATORY_JURISDICTION, val)) return true;
		if (equals_12(ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_, val)) return true;
		if (equals_12(ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITY, val)) return true;
		if (equals_12(COMPETING_MARKET_MAKER, val)) return true;
		if (equals_12(EXTERNAL_INTERCONNECTED_MARKET_LINKAGE, val)) return true;
		if (equals_12(EXTERNAL_MARKET_PARTICIPANT, val)) return true;
		return false;
	}

	var ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITY, ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_, ALGORITHMIC, COMPETING_MARKET_MAKER, CROSS, EXTERNAL_INTERCONNECTED_MARKET_LINKAGE, EXTERNAL_MARKET_PARTICIPANT, FOREIGN_ENTITY_OF_FOREIGN_GOVERNMENT_OR_REGULATORY_JURISDICTION, INDEX_ARBITRAGE, ISSUER_HOLDING, ISSUE_PRICE_STABILIZATION, NONALGORITHMIC, NONINDEX_ARBITRAGE, PROGRAM_TRADE, RISKLESS_ARBITRAGE;

	function isValid_94(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (70 == val) return true;
		if (71 == val) return true;
		if (65 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (72 == val) return true;
		if (73 == val) return true;
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function isValid_95(val) {
		if (eq(P4f_longLit, val)) return true;
		if (eq(P4e_longLit, val)) return true;
		if (eq(P4d_longLit, val)) return true;
		if (eq(P23_longLit, val)) return true;
		if (eq(P24_longLit, val)) return true;
		if (eq(P21_longLit, val)) return true;
		if (eq(P22_longLit, val)) return true;
		if (eq(P27_longLit, val)) return true;
		if (eq(P25_longLit, val)) return true;
		if (eq(P26_longLit, val)) return true;
		if (eq(P2b_longLit, val)) return true;
		if (eq(P2a_longLit, val)) return true;
		if (eq(P29_longLit, val)) return true;
		if (eq(P28_longLit, val)) return true;
		if (eq(P52_longLit, val)) return true;
		if (eq(P53_longLit, val)) return true;
		if (eq(P50_longLit, val)) return true;
		if (eq(P51_longLit, val)) return true;
		if (eq(P54_longLit, val)) return true;
		if (eq(P55_longLit, val)) return true;
		if (eq(P43_longLit, val)) return true;
		if (eq(P42_longLit, val)) return true;
		if (eq(P45_longLit, val)) return true;
		if (eq(P44_longLit, val)) return true;
		if (eq(P16_longLit, val)) return true;
		if (eq(P18_longLit, val)) return true;
		if (eq(P19_longLit, val)) return true;
		if (eq(P1a_longLit, val)) return true;
		if (eq(P1b_longLit, val)) return true;
		if (eq(P1c_longLit, val)) return true;
		if (eq(P1d_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P1e_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P20_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P1f_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P46_longLit, val)) return true;
		if (eq(P47_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P48_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P49_longLit, val)) return true;
		if (eq(P4a_longLit, val)) return true;
		if (eq(P4b_longLit, val)) return true;
		if (eq(P4c_longLit, val)) return true;
		if (eq(P3b_longLit, val)) return true;
		if (eq(P3a_longLit, val)) return true;
		if (eq(P39_longLit, val)) return true;
		if (eq(P38_longLit, val)) return true;
		if (eq(P13_longLit, val)) return true;
		if (eq(P37_longLit, val)) return true;
		if (eq(P11_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P15_longLit, val)) return true;
		if (eq(P14_longLit, val)) return true;
		if (eq(P40_longLit, val)) return true;
		if (eq(P41_longLit, val)) return true;
		if (eq(P3e_longLit, val)) return true;
		if (eq(P3f_longLit, val)) return true;
		if (eq(P3c_longLit, val)) return true;
		if (eq(P3d_longLit, val)) return true;
		if (eq(P31_longLit, val)) return true;
		if (eq(P30_longLit, val)) return true;
		if (eq(P2d_longLit, val)) return true;
		if (eq(P2c_longLit, val)) return true;
		if (eq(P2f_longLit, val)) return true;
		if (eq(P2e_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P33_longLit, val)) return true;
		if (eq(P34_longLit, val)) return true;
		if (eq(P35_longLit, val)) return true;
		if (eq(P36_longLit, val)) return true;
		if (eq(P32_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_96(val) {
		if (eq(P13_longLit, val)) return true;
		if (eq(P11_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(P21_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P15_longLit, val)) return true;
		if (eq(P14_longLit, val)) return true;
		if (eq(P16_longLit, val)) return true;
		if (eq(P17_longLit, val)) return true;
		if (eq(P18_longLit, val)) return true;
		if (eq(P19_longLit, val)) return true;
		if (eq(P1a_longLit, val)) return true;
		if (eq(P1b_longLit, val)) return true;
		if (eq(P1c_longLit, val)) return true;
		if (eq(P1d_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P1e_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P20_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P1f_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_97(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_98(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_99(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_100(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_101(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_102(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$PosAmtType() {
		$clinit_FixMessageInfo$PosAmtType = nullMethod;
		INCREMENTAL_MARKTOMARKET_AMOUNT = getBytesUtf8('IMTM');
		INCREMENTAL_ACCRUED_COUPON = getBytesUtf8('IACPN');
		COMPENSATION_AMOUNT = getBytesUtf8('DLV');
		COLLATERALIZED_MARK_TO_MARKET = getBytesUtf8('CMTM');
		TOTAL_COLLATERALIZED_AMOUNT = getBytesUtf8('COLAT');
		COUPON_AMOUNT = getBytesUtf8('CPN');
		INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET = getBytesUtf8('ICMTM');
		PREMIUM_AMOUNT = getBytesUtf8('PREM');
		FINAL_MARKTOMARKET_AMOUNT = getBytesUtf8('FMTM');
		CASH_AMOUNT_CORPORATE_EVENT = getBytesUtf8('CASH');
		CASH_RESIDUAL_AMOUNT = getBytesUtf8('CRES');
		ACCRUED_COUPON_AMOUNT = getBytesUtf8('ACPN');
		TOTAL_BANKED_AMOUNT = getBytesUtf8('BANK');
		VALUE_ADJUSTED_AMOUNT = getBytesUtf8('VADJ');
		TRADE_VARIATION_AMOUNT = getBytesUtf8('TVAR');
		SETTLEMENT_VALUE = getBytesUtf8('SETL');
		STARTOFDAY_MARKTOMARKET_AMOUNT = getBytesUtf8('SMTM');
		INITIAL_TRADE_COUPON_AMOUNT = getBytesUtf8('ICPN');
	}

	function isValid_103(val) {
		$clinit_FixMessageInfo$PosAmtType();
		if (equals_12(INCREMENTAL_MARKTOMARKET_AMOUNT, val)) return true;
		if (equals_12(INCREMENTAL_ACCRUED_COUPON, val)) return true;
		if (equals_12(COMPENSATION_AMOUNT, val)) return true;
		if (equals_12(COLLATERALIZED_MARK_TO_MARKET, val)) return true;
		if (equals_12(TOTAL_COLLATERALIZED_AMOUNT, val)) return true;
		if (equals_12(COUPON_AMOUNT, val)) return true;
		if (equals_12(INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET, val)) return true;
		if (equals_12(PREMIUM_AMOUNT, val)) return true;
		if (equals_12(FINAL_MARKTOMARKET_AMOUNT, val)) return true;
		if (equals_12(CASH_AMOUNT_CORPORATE_EVENT, val)) return true;
		if (equals_12(CASH_RESIDUAL_AMOUNT, val)) return true;
		if (equals_12(ACCRUED_COUPON_AMOUNT, val)) return true;
		if (equals_12(TOTAL_BANKED_AMOUNT, val)) return true;
		if (equals_12(VALUE_ADJUSTED_AMOUNT, val)) return true;
		if (equals_12(TRADE_VARIATION_AMOUNT, val)) return true;
		if (equals_12(SETTLEMENT_VALUE, val)) return true;
		if (equals_12(STARTOFDAY_MARKTOMARKET_AMOUNT, val)) return true;
		if (equals_12(INITIAL_TRADE_COUPON_AMOUNT, val)) return true;
		return false;
	}

	var ACCRUED_COUPON_AMOUNT, CASH_AMOUNT_CORPORATE_EVENT, CASH_RESIDUAL_AMOUNT, COLLATERALIZED_MARK_TO_MARKET, COMPENSATION_AMOUNT, COUPON_AMOUNT, FINAL_MARKTOMARKET_AMOUNT, INCREMENTAL_ACCRUED_COUPON, INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET, INCREMENTAL_MARKTOMARKET_AMOUNT, INITIAL_TRADE_COUPON_AMOUNT, PREMIUM_AMOUNT, SETTLEMENT_VALUE, STARTOFDAY_MARKTOMARKET_AMOUNT, TOTAL_BANKED_AMOUNT, TOTAL_COLLATERALIZED_AMOUNT, TRADE_VARIATION_AMOUNT, VALUE_ADJUSTED_AMOUNT;

	function isValid_104(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_105(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_106(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_107(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_108(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_109(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_110(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_111(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$PosType() {
		$clinit_FixMessageInfo$PosType = nullMethod;
		NET_DELTA_QTY = getBytesUtf8('DLT');
		INTEGRAL_SPLIT = getBytesUtf8('SPL');
		DELIVERY_QTY = getBytesUtf8('DLV');
		ASOF_TRADE_QTY = getBytesUtf8('ASF');
		CREDIT_EVENT_ADJUSTMENT = getBytesUtf8('CEA');
		TRANSACTION_QUANTITY = getBytesUtf8('TQ');
		TRANSFER_TRADE_QTY = getBytesUtf8('TRF');
		CROSS_MARGIN_QTY = getBytesUtf8('XM');
		CORPORATE_ACTION_ADJUSTMENT = getBytesUtf8('CAA');
		ELECTRONIC_TRADE_QTY = getBytesUtf8('ETR');
		DELIVERY_NOTICE_QTY = getBytesUtf8('DN');
		PIT_TRADE_QTY = getBytesUtf8('PIT');
		PRIVATELY_NEGOTIATED_TRADE_QTY_NONREGULATED = getBytesUtf8('PNTN');
		ALLOCATION_TRADE_QTY = getBytesUtf8('ALC');
		ENDOFDAY_QTY = getBytesUtf8('FIN');
		TRANSACTION_FROM_ASSIGNMENT = getBytesUtf8('TA');
		OPTION_ASSIGNMENT = getBytesUtf8('AS');
		STARTOFDAY_QTY = getBytesUtf8('SOD');
		OPTION_EXERCISE_QTY = getBytesUtf8('EX');
		RECEIVE_QUANTITY = getBytesUtf8('RCV');
		EXCHANGE_FOR_PHYSICAL_QTY = getBytesUtf8('EP');
		TOTAL_TRANSACTION_QTY = getBytesUtf8('TOT');
		SUCCESSION_EVENT_ADJUSTMENT = getBytesUtf8('SEA');
		INTERSPREAD_QTY = getBytesUtf8('IES');
		TRANSACTION_FROM_EXERCISE = getBytesUtf8('TX');
		INTRASPREAD_QTY = getBytesUtf8('IAS');
		ADJUSTMENT_QTY = getBytesUtf8('PA');
	}

	function isValid_112(val) {
		$clinit_FixMessageInfo$PosType();
		if (equals_12(NET_DELTA_QTY, val)) return true;
		if (equals_12(INTEGRAL_SPLIT, val)) return true;
		if (equals_12(DELIVERY_QTY, val)) return true;
		if (equals_12(ASOF_TRADE_QTY, val)) return true;
		if (equals_12(CREDIT_EVENT_ADJUSTMENT, val)) return true;
		if (equals_12(TRANSACTION_QUANTITY, val)) return true;
		if (equals_12(TRANSFER_TRADE_QTY, val)) return true;
		if (equals_12(CROSS_MARGIN_QTY, val)) return true;
		if (equals_12(CORPORATE_ACTION_ADJUSTMENT, val)) return true;
		if (equals_12(ELECTRONIC_TRADE_QTY, val)) return true;
		if (equals_12(DELIVERY_NOTICE_QTY, val)) return true;
		if (equals_12(PIT_TRADE_QTY, val)) return true;
		if (equals_12(PRIVATELY_NEGOTIATED_TRADE_QTY_NONREGULATED, val)) return true;
		if (equals_12(ALLOCATION_TRADE_QTY, val)) return true;
		if (equals_12(ENDOFDAY_QTY, val)) return true;
		if (equals_12(TRANSACTION_FROM_ASSIGNMENT, val)) return true;
		if (equals_12(OPTION_ASSIGNMENT, val)) return true;
		if (equals_12(STARTOFDAY_QTY, val)) return true;
		if (equals_12(OPTION_EXERCISE_QTY, val)) return true;
		if (equals_12(RECEIVE_QUANTITY, val)) return true;
		if (equals_12(EXCHANGE_FOR_PHYSICAL_QTY, val)) return true;
		if (equals_12(TOTAL_TRANSACTION_QTY, val)) return true;
		if (equals_12(SUCCESSION_EVENT_ADJUSTMENT, val)) return true;
		if (equals_12(INTERSPREAD_QTY, val)) return true;
		if (equals_12(TRANSACTION_FROM_EXERCISE, val)) return true;
		if (equals_12(INTRASPREAD_QTY, val)) return true;
		if (equals_12(ADJUSTMENT_QTY, val)) return true;
		return false;
	}

	var ADJUSTMENT_QTY, ALLOCATION_TRADE_QTY, ASOF_TRADE_QTY, CORPORATE_ACTION_ADJUSTMENT, CREDIT_EVENT_ADJUSTMENT, CROSS_MARGIN_QTY, DELIVERY_NOTICE_QTY, DELIVERY_QTY, ELECTRONIC_TRADE_QTY, ENDOFDAY_QTY, EXCHANGE_FOR_PHYSICAL_QTY, INTEGRAL_SPLIT, INTERSPREAD_QTY, INTRASPREAD_QTY, NET_DELTA_QTY, OPTION_ASSIGNMENT, OPTION_EXERCISE_QTY, PIT_TRADE_QTY, PRIVATELY_NEGOTIATED_TRADE_QTY_NONREGULATED, RECEIVE_QUANTITY, STARTOFDAY_QTY, SUCCESSION_EVENT_ADJUSTMENT, TOTAL_TRANSACTION_QTY, TRANSACTION_FROM_ASSIGNMENT, TRANSACTION_FROM_EXERCISE, TRANSACTION_QUANTITY, TRANSFER_TRADE_QTY;

	function isValid_113(val) {
		if (68 == val) return true;
		if (70 == val) return true;
		if (82 == val) return true;
		if (67 == val) return true;
		if (78 == val) return true;
		if (79 == val) return true;
		return false;
	}

	function isValid_114(val) {
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function isValid_115(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_116(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$PriceQuoteMethod() {
		$clinit_FixMessageInfo$PriceQuoteMethod = nullMethod;
		PERCENT_OF_PAR = getBytesUtf8('PCTPAR');
		STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL = getBytesUtf8('STD');
		INTEREST_RATE_INDEX = getBytesUtf8('INT');
		INDEX = getBytesUtf8('INX');
	}

	function isValid_117(val) {
		$clinit_FixMessageInfo$PriceQuoteMethod();
		if (equals_12(PERCENT_OF_PAR, val)) return true;
		if (equals_12(STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL, val)) return true;
		if (equals_12(INTEREST_RATE_INDEX, val)) return true;
		if (equals_12(INDEX, val)) return true;
		return false;
	}

	var INDEX, INTEREST_RATE_INDEX, PERCENT_OF_PAR, STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL;

	function isValid_118(val) {
		if (eq(P13_longLit, val)) return true;
		if (eq(P11_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_119(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_120(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_121(val) {
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_122(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_123(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_124(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_125(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_126(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_127(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_128(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_129(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_130(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_131(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_132(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_133(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_134(val) {
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$RestructuringType() {
		$clinit_FixMessageInfo$RestructuringType = nullMethod;
		NO_RESTRUCTURING_SPECIFIED = getBytesUtf8('XR');
		FULL_RESTRUCTURING = getBytesUtf8('FR');
		MODIFIED_MOD_RESTRUCTURING = getBytesUtf8('MM');
		MODIFIED_RESTRUCTURING = getBytesUtf8('MR');
	}

	function isValid_135(val) {
		$clinit_FixMessageInfo$RestructuringType();
		if (equals_12(NO_RESTRUCTURING_SPECIFIED, val)) return true;
		if (equals_12(FULL_RESTRUCTURING, val)) return true;
		if (equals_12(MODIFIED_MOD_RESTRUCTURING, val)) return true;
		if (equals_12(MODIFIED_RESTRUCTURING, val)) return true;
		return false;
	}

	var FULL_RESTRUCTURING, MODIFIED_MOD_RESTRUCTURING, MODIFIED_RESTRUCTURING, NO_RESTRUCTURING_SPECIFIED;

	function isValid_136(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$SecurityIDSource() {
		$clinit_FixMessageInfo$SecurityIDSource = nullMethod;
		VALOREN = getBytesUtf8('D');
		SICOVAM = getBytesUtf8('E');
		BELGIAN = getBytesUtf8('F');
		COMMON_CLEARSTREAM_AND_EUROCLEAR = getBytesUtf8('G');
		BLOOMBERG_SYMBOL = getBytesUtf8('A');
		WERTPAPIER = getBytesUtf8('B');
		DUTCH = getBytesUtf8('C');
		LETTER_OF_CREDIT = getBytesUtf8('L');
		MARKETPLACEASSIGNED_IDENTIFIER = getBytesUtf8('M');
		CLEARING_HOUSE__CLEARING_ORGANIZATION = getBytesUtf8('H');
		ISDAFPML_PRODUCT_SPECIFICATION_XML_IN_ENCODEDSECURITYDESC = getBytesUtf8('I');
		OPTION_PRICE_REPORTING_AUTHORITY = getBytesUtf8('J');
		ISDAFPML_PRODUCT_URL_URL_IN_SECURITYID = getBytesUtf8('K');
		QUIK = getBytesUtf8('3');
		SEDOL = getBytesUtf8('2');
		CUSIP = getBytesUtf8('1');
		FORQUERY = getBytesUtf8('0');
		ISO_COUNTRY_CODE = getBytesUtf8('7');
		ISO_CURRENCY_CODE = getBytesUtf8('6');
		RIC_CODE = getBytesUtf8('5');
		ISIN_NUMBER = getBytesUtf8('4');
		CONSOLIDATED_TAPE_ASSOCIATION_CTA_SYMBOL_SIAC_CTSCQS_LINE_FORMAT = getBytesUtf8('9');
		EXCHANGE_SYMBOL = getBytesUtf8('8');
	}

	function isValid_137(val) {
		$clinit_FixMessageInfo$SecurityIDSource();
		if (equals_12(VALOREN, val)) return true;
		if (equals_12(SICOVAM, val)) return true;
		if (equals_12(BELGIAN, val)) return true;
		if (equals_12(COMMON_CLEARSTREAM_AND_EUROCLEAR, val)) return true;
		if (equals_12(BLOOMBERG_SYMBOL, val)) return true;
		if (equals_12(WERTPAPIER, val)) return true;
		if (equals_12(DUTCH, val)) return true;
		if (equals_12(LETTER_OF_CREDIT, val)) return true;
		if (equals_12(MARKETPLACEASSIGNED_IDENTIFIER, val)) return true;
		if (equals_12(CLEARING_HOUSE__CLEARING_ORGANIZATION, val)) return true;
		if (equals_12(ISDAFPML_PRODUCT_SPECIFICATION_XML_IN_ENCODEDSECURITYDESC, val)) return true;
		if (equals_12(OPTION_PRICE_REPORTING_AUTHORITY, val)) return true;
		if (equals_12(ISDAFPML_PRODUCT_URL_URL_IN_SECURITYID, val)) return true;
		if (equals_12(QUIK, val)) return true;
		if (equals_12(SEDOL, val)) return true;
		if (equals_12(CUSIP, val)) return true;
		if (equals_12(ISO_COUNTRY_CODE, val)) return true;
		if (equals_12(ISO_CURRENCY_CODE, val)) return true;
		if (equals_12(RIC_CODE, val)) return true;
		if (equals_12(ISIN_NUMBER, val)) return true;
		if (equals_12(CONSOLIDATED_TAPE_ASSOCIATION_CTA_SYMBOL_SIAC_CTSCQS_LINE_FORMAT, val)) return true;
		if (equals_12(EXCHANGE_SYMBOL, val)) return true;
		if (equals_12(FORQUERY, val)) return true;
		return false;
	}

	var BELGIAN, BLOOMBERG_SYMBOL, CLEARING_HOUSE__CLEARING_ORGANIZATION, COMMON_CLEARSTREAM_AND_EUROCLEAR, CONSOLIDATED_TAPE_ASSOCIATION_CTA_SYMBOL_SIAC_CTSCQS_LINE_FORMAT, CUSIP, DUTCH, EXCHANGE_SYMBOL, FORQUERY, ISDAFPML_PRODUCT_SPECIFICATION_XML_IN_ENCODEDSECURITYDESC, ISDAFPML_PRODUCT_URL_URL_IN_SECURITYID, ISIN_NUMBER, ISO_COUNTRY_CODE, ISO_CURRENCY_CODE, LETTER_OF_CREDIT, MARKETPLACEASSIGNED_IDENTIFIER, OPTION_PRICE_REPORTING_AUTHORITY, QUIK, RIC_CODE, SEDOL, SICOVAM, VALOREN, WERTPAPIER;

	function isValid_138(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_139(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_140(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_141(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$SecurityStatus() {
		$clinit_FixMessageInfo$SecurityStatus = nullMethod;
		INACTIVE = getBytesUtf8('2');
		ACTIVE = getBytesUtf8('1');
	}

	function isValid_142(val) {
		$clinit_FixMessageInfo$SecurityStatus();
		if (equals_12(INACTIVE, val)) return true;
		if (equals_12(ACTIVE, val)) return true;
		return false;
	}

	var ACTIVE, INACTIVE;

	function $clinit_FixMessageInfo$SecurityType() {
		$clinit_FixMessageInfo$SecurityType = nullMethod;
		CORP_MORTGAGEBACKED_SECURITIES = getBytesUtf8('CMBS');
		VARIABLE_RATE_DEMAND_NOTE = getBytesUtf8('VRDN');
		TERM_LIQUIDITY_NOTE = getBytesUtf8('TLQN');
		PFANDBRIEFE_ = getBytesUtf8('PFAND');
		FEDERAL_AGENCY_COUPON = getBytesUtf8('FAC');
		CASH = getBytesUtf8('CASH');
		TAX_EXEMPT_COMMERCIAL_PAPER = getBytesUtf8('TECP');
		MUTUAL_FUND = getBytesUtf8('MF');
		DEPOSIT_NOTES = getBytesUtf8('DN');
		EURO_CORPORATE_FLOATING_RATE_NOTES = getBytesUtf8('EUFRN');
		TAX_REVENUE_ANTICIPATION_NOTE = getBytesUtf8('TRAN');
		REVOLVERTERM_LOAN = getBytesUtf8('RVLVTRM');
		US_CORPORATE_FLOATING_RATE_NOTES = getBytesUtf8('FRN');
		REVENUE_BONDS = getBytesUtf8('REV');
		OPTIONS_ON_PHYSICAL__USE_NOT_RECOMMENDED = getBytesUtf8('OOP');
		REVENUE_ANTICIPATION_NOTE = getBytesUtf8('RAN');
		EURO_CERTIFICATE_OF_DEPOSIT = getBytesUtf8('EUCD');
		WITHDRAWN = getBytesUtf8('WITHDRN');
		EURO_COMMERCIAL_PAPER = getBytesUtf8('EUCP');
		TAX_ANTICIPATION_NOTE = getBytesUtf8('TAN');
		FX_SWAP = getBytesUtf8('FXSWAP');
		MANDATORY_TENDER = getBytesUtf8('MT');
		BUY_SELLBACK = getBytesUtf8('BUYSELL');
		OPTIONS_ON_COMBO = getBytesUtf8('OOC');
		FX_SPOT = getBytesUtf8('FXSPOT');
		OPTIONS_ON_FUTURES = getBytesUtf8('OOF');
		IOETTE_MORTGAGE = getBytesUtf8('IET');
		TO_BE_ANNOUNCED = getBytesUtf8('TBA');
		WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = getBytesUtf8('?');
		LETTER_OF_CREDIT_0 = getBytesUtf8('LOFC');
		DUAL_CURRENCY = getBytesUtf8('DUAL');
		US_TREASURY_BILL_DEPRECATED_VALUE_USE_TBILL = getBytesUtf8('USTB');
		FUTURE = getBytesUtf8('FUT');
		LIQUIDITY_NOTE = getBytesUtf8('LQN');
		NONDELIVERABLE_FORWARD = getBytesUtf8('FXNDF');
		BRIDGE_LOAN = getBytesUtf8('BRIDGE');
		TREASURY_INFLATION_PROTECTED_SECURITIES = getBytesUtf8('TIPS');
		CREDIT_DEFAULT_SWAP = getBytesUtf8('CDS');
		US_TREASURY_NOTE = getBytesUtf8('TNOTE');
		US_TREASURY_BILL = getBytesUtf8('TBILL');
		CANADIAN_MORTGAGE_BONDS = getBytesUtf8('CMB');
		CANADIAN_MONEY_MARKETS = getBytesUtf8('CAMM');
		USD_SUPRANATIONAL_COUPONS_ = getBytesUtf8('SUPRA');
		BANK_DEPOSITORY_NOTE = getBytesUtf8('BDN');
		EXTENDED_COMM_NOTE = getBytesUtf8('XCN');
		ASSETBACKED_SECURITIES = getBytesUtf8('ABS');
		RETIRED = getBytesUtf8('RETIRED');
		SECURITIES_LOAN = getBytesUtf8('SECLOAN');
		US_TREASURY_NOTE_DEPRECATED_VALUE_USE_TNOTE = getBytesUtf8('UST');
		DEFAULTED = getBytesUtf8('DEFLTED');
		COLLATERALIZED_MORTGAGE_OBLIGATION = getBytesUtf8('CMO');
		NO_SECURITY_TYPE = getBytesUtf8('NONE');
		SPECIAL_ASSESSMENT = getBytesUtf8('SPCLA');
		PROMISSORY_NOTE = getBytesUtf8('PN');
		FX_FORWARD = getBytesUtf8('FXFWD');
		GENERAL_OBLIGATION_BONDS = getBytesUtf8('GO');
		CORPORATE_BOND = getBytesUtf8('CORP');
		MEDIUM_TERM_NOTES = getBytesUtf8('MTN');
		DEBTOR_IN_POSSESSION = getBytesUtf8('DINP');
		PRINCIPAL_STRIP_FROM_A_NONCALLABLE_BOND_OR_NOTE = getBytesUtf8('TPRN');
		TERM_LOAN = getBytesUtf8('TERM');
		FORWARD = getBytesUtf8('FORWARD');
		MORTGAGEBACKED_SECURITIES = getBytesUtf8('MBS');
		SPECIAL_TAX = getBytesUtf8('SPCLT');
		SECURITIES_PLEDGE = getBytesUtf8('SECPLEDGE');
		SPECIAL_OBLIGATION = getBytesUtf8('SPCLO');
		REVOLVER_LOAN = getBytesUtf8('RVLV');
		FOREIGN_EXCHANGE_CONTRACT = getBytesUtf8('FOR');
		CANADIAN_PROVINCIAL_BONDS = getBytesUtf8('PROV');
		INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = getBytesUtf8('TINT');
		CANADIAN_TREASURY_NOTES = getBytesUtf8('CAN');
		SECURED_LIQUIDITY_NOTE = getBytesUtf8('SLQN');
		BILL_OF_EXCHANGES = getBytesUtf8('BOX');
		YANKEE_CERTIFICATE_OF_DEPOSIT = getBytesUtf8('YCD');
		INTEREST_RATE_SWAP = getBytesUtf8('IRS');
		REPURCHASE = getBytesUtf8('REPO');
		BANKERS_ACCEPTANCE = getBytesUtf8('BA');
		REPLACED = getBytesUtf8('REPLACD');
		WARRANT = getBytesUtf8('WAR');
		MATURED = getBytesUtf8('MATURED');
		CANADIAN_TREASURY_BILLS = getBytesUtf8('CTB');
		YANKEE_CORPORATE_BOND = getBytesUtf8('YANK');
		PREFERRED_STOCK = getBytesUtf8('PS');
		SHORT_TERM_LOAN_NOTE = getBytesUtf8('STN');
		OTHER_ANTICIPATION_NOTES_BAN_GAN_ETC = getBytesUtf8('AN');
		PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = getBytesUtf8('TCAL');
		CORPORATE_PRIVATE_PLACEMENT = getBytesUtf8('CPP');
		PLAZOS_FIJOS = getBytesUtf8('PZFJ');
		TIME_DEPOSIT = getBytesUtf8('TD');
		MULTILEG_INSTRUMENT = getBytesUtf8('MLEG');
		PRIVATE_EXPORT_FUNDING_ = getBytesUtf8('PEF');
		TAXABLE_MUNICIPAL_CP = getBytesUtf8('TMCP');
		CONVERTIBLE_BOND = getBytesUtf8('CB');
		BRADY_BOND = getBytesUtf8('BRADY');
		OPTION = getBytesUtf8('OPT');
		AMENDED__RESTATED = getBytesUtf8('AMENDED');
		OVERNIGHT = getBytesUtf8('ONITE');
		STRUCTURED_NOTES = getBytesUtf8('STRUCT');
		EURO_CORPORATE_BOND = getBytesUtf8('EUCORP');
		MORTGAGE_INTEREST_ONLY = getBytesUtf8('MIO');
		BANK_NOTES = getBytesUtf8('BN');
		FEDERAL_AGENCY_DISCOUNT_NOTE = getBytesUtf8('FADN');
		TREASURY_BILL__NON_US = getBytesUtf8('TB');
		US_TREASURY_BOND = getBytesUtf8('TBOND');
		EURO_SUPRANATIONAL_COUPONS_ = getBytesUtf8('EUSUPRA');
		MISCELLANEOUS_PASSTHROUGH = getBytesUtf8('MPT');
		EURO_SOVEREIGNS_ = getBytesUtf8('EUSOV');
		COMMON_STOCK = getBytesUtf8('CS');
		INDEXED_LINKED = getBytesUtf8('XLINKD');
		CERTIFICATE_OF_DEPOSIT = getBytesUtf8('CD');
		MORTGAGE_PRIVATE_PLACEMENT = getBytesUtf8('MPP');
		SWING_LINE_FACILITY = getBytesUtf8('SWING');
		TAX_ALLOCATION = getBytesUtf8('TAXA');
		MORTGAGE_PRINCIPAL_ONLY = getBytesUtf8('MPO');
		COMMERCIAL_PAPER = getBytesUtf8('CP');
		CERTIFICATE_OF_OBLIGATION = getBytesUtf8('COFO');
		CERTIFICATE_OF_PARTICIPATION = getBytesUtf8('COFP');
		CALL_LOANS = getBytesUtf8('CL');
	}

	function isValid_143(val) {
		$clinit_FixMessageInfo$SecurityType();
		if (equals_12(CORP_MORTGAGEBACKED_SECURITIES, val)) return true;
		if (equals_12(VARIABLE_RATE_DEMAND_NOTE, val)) return true;
		if (equals_12(TERM_LIQUIDITY_NOTE, val)) return true;
		if (equals_12(PFANDBRIEFE_, val)) return true;
		if (equals_12(FEDERAL_AGENCY_COUPON, val)) return true;
		if (equals_12(CASH, val)) return true;
		if (equals_12(TAX_EXEMPT_COMMERCIAL_PAPER, val)) return true;
		if (equals_12(MUTUAL_FUND, val)) return true;
		if (equals_12(DEPOSIT_NOTES, val)) return true;
		if (equals_12(EURO_CORPORATE_FLOATING_RATE_NOTES, val)) return true;
		if (equals_12(TAX_REVENUE_ANTICIPATION_NOTE, val)) return true;
		if (equals_12(REVOLVERTERM_LOAN, val)) return true;
		if (equals_12(US_CORPORATE_FLOATING_RATE_NOTES, val)) return true;
		if (equals_12(REVENUE_BONDS, val)) return true;
		if (equals_12(OPTIONS_ON_PHYSICAL__USE_NOT_RECOMMENDED, val)) return true;
		if (equals_12(REVENUE_ANTICIPATION_NOTE, val)) return true;
		if (equals_12(EURO_CERTIFICATE_OF_DEPOSIT, val)) return true;
		if (equals_12(WITHDRAWN, val)) return true;
		if (equals_12(EURO_COMMERCIAL_PAPER, val)) return true;
		if (equals_12(TAX_ANTICIPATION_NOTE, val)) return true;
		if (equals_12(FX_SWAP, val)) return true;
		if (equals_12(MANDATORY_TENDER, val)) return true;
		if (equals_12(BUY_SELLBACK, val)) return true;
		if (equals_12(OPTIONS_ON_COMBO, val)) return true;
		if (equals_12(FX_SPOT, val)) return true;
		if (equals_12(OPTIONS_ON_FUTURES, val)) return true;
		if (equals_12(IOETTE_MORTGAGE, val)) return true;
		if (equals_12(TO_BE_ANNOUNCED, val)) return true;
		if (equals_12(WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST, val)) return true;
		if (equals_12(LETTER_OF_CREDIT_0, val)) return true;
		if (equals_12(DUAL_CURRENCY, val)) return true;
		if (equals_12(US_TREASURY_BILL_DEPRECATED_VALUE_USE_TBILL, val)) return true;
		if (equals_12(FUTURE, val)) return true;
		if (equals_12(LIQUIDITY_NOTE, val)) return true;
		if (equals_12(NONDELIVERABLE_FORWARD, val)) return true;
		if (equals_12(BRIDGE_LOAN, val)) return true;
		if (equals_12(TREASURY_INFLATION_PROTECTED_SECURITIES, val)) return true;
		if (equals_12(CREDIT_DEFAULT_SWAP, val)) return true;
		if (equals_12(US_TREASURY_NOTE, val)) return true;
		if (equals_12(US_TREASURY_BILL, val)) return true;
		if (equals_12(CANADIAN_MORTGAGE_BONDS, val)) return true;
		if (equals_12(CANADIAN_MONEY_MARKETS, val)) return true;
		if (equals_12(USD_SUPRANATIONAL_COUPONS_, val)) return true;
		if (equals_12(BANK_DEPOSITORY_NOTE, val)) return true;
		if (equals_12(EXTENDED_COMM_NOTE, val)) return true;
		if (equals_12(ASSETBACKED_SECURITIES, val)) return true;
		if (equals_12(RETIRED, val)) return true;
		if (equals_12(SECURITIES_LOAN, val)) return true;
		if (equals_12(US_TREASURY_NOTE_DEPRECATED_VALUE_USE_TNOTE, val)) return true;
		if (equals_12(DEFAULTED, val)) return true;
		if (equals_12(COLLATERALIZED_MORTGAGE_OBLIGATION, val)) return true;
		if (equals_12(NO_SECURITY_TYPE, val)) return true;
		if (equals_12(SPECIAL_ASSESSMENT, val)) return true;
		if (equals_12(PROMISSORY_NOTE, val)) return true;
		if (equals_12(FX_FORWARD, val)) return true;
		if (equals_12(GENERAL_OBLIGATION_BONDS, val)) return true;
		if (equals_12(CORPORATE_BOND, val)) return true;
		if (equals_12(MEDIUM_TERM_NOTES, val)) return true;
		if (equals_12(DEBTOR_IN_POSSESSION, val)) return true;
		if (equals_12(PRINCIPAL_STRIP_FROM_A_NONCALLABLE_BOND_OR_NOTE, val)) return true;
		if (equals_12(TERM_LOAN, val)) return true;
		if (equals_12(FORWARD, val)) return true;
		if (equals_12(MORTGAGEBACKED_SECURITIES, val)) return true;
		if (equals_12(SPECIAL_TAX, val)) return true;
		if (equals_12(SECURITIES_PLEDGE, val)) return true;
		if (equals_12(SPECIAL_OBLIGATION, val)) return true;
		if (equals_12(REVOLVER_LOAN, val)) return true;
		if (equals_12(FOREIGN_EXCHANGE_CONTRACT, val)) return true;
		if (equals_12(CANADIAN_PROVINCIAL_BONDS, val)) return true;
		if (equals_12(INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE, val)) return true;
		if (equals_12(CANADIAN_TREASURY_NOTES, val)) return true;
		if (equals_12(SECURED_LIQUIDITY_NOTE, val)) return true;
		if (equals_12(BILL_OF_EXCHANGES, val)) return true;
		if (equals_12(YANKEE_CERTIFICATE_OF_DEPOSIT, val)) return true;
		if (equals_12(INTEREST_RATE_SWAP, val)) return true;
		if (equals_12(REPURCHASE, val)) return true;
		if (equals_12(BANKERS_ACCEPTANCE, val)) return true;
		if (equals_12(REPLACED, val)) return true;
		if (equals_12(WARRANT, val)) return true;
		if (equals_12(MATURED, val)) return true;
		if (equals_12(CANADIAN_TREASURY_BILLS, val)) return true;
		if (equals_12(YANKEE_CORPORATE_BOND, val)) return true;
		if (equals_12(PREFERRED_STOCK, val)) return true;
		if (equals_12(SHORT_TERM_LOAN_NOTE, val)) return true;
		if (equals_12(OTHER_ANTICIPATION_NOTES_BAN_GAN_ETC, val)) return true;
		if (equals_12(PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE, val)) return true;
		if (equals_12(CORPORATE_PRIVATE_PLACEMENT, val)) return true;
		if (equals_12(PLAZOS_FIJOS, val)) return true;
		if (equals_12(TIME_DEPOSIT, val)) return true;
		if (equals_12(MULTILEG_INSTRUMENT, val)) return true;
		if (equals_12(PRIVATE_EXPORT_FUNDING_, val)) return true;
		if (equals_12(TAXABLE_MUNICIPAL_CP, val)) return true;
		if (equals_12(CONVERTIBLE_BOND, val)) return true;
		if (equals_12(BRADY_BOND, val)) return true;
		if (equals_12(OPTION, val)) return true;
		if (equals_12(AMENDED__RESTATED, val)) return true;
		if (equals_12(OVERNIGHT, val)) return true;
		if (equals_12(STRUCTURED_NOTES, val)) return true;
		if (equals_12(EURO_CORPORATE_BOND, val)) return true;
		if (equals_12(MORTGAGE_INTEREST_ONLY, val)) return true;
		if (equals_12(BANK_NOTES, val)) return true;
		if (equals_12(FEDERAL_AGENCY_DISCOUNT_NOTE, val)) return true;
		if (equals_12(TREASURY_BILL__NON_US, val)) return true;
		if (equals_12(US_TREASURY_BOND, val)) return true;
		if (equals_12(EURO_SUPRANATIONAL_COUPONS_, val)) return true;
		if (equals_12(MISCELLANEOUS_PASSTHROUGH, val)) return true;
		if (equals_12(EURO_SOVEREIGNS_, val)) return true;
		if (equals_12(COMMON_STOCK, val)) return true;
		if (equals_12(INDEXED_LINKED, val)) return true;
		if (equals_12(CERTIFICATE_OF_DEPOSIT, val)) return true;
		if (equals_12(MORTGAGE_PRIVATE_PLACEMENT, val)) return true;
		if (equals_12(SWING_LINE_FACILITY, val)) return true;
		if (equals_12(TAX_ALLOCATION, val)) return true;
		if (equals_12(MORTGAGE_PRINCIPAL_ONLY, val)) return true;
		if (equals_12(COMMERCIAL_PAPER, val)) return true;
		if (equals_12(CERTIFICATE_OF_OBLIGATION, val)) return true;
		if (equals_12(CERTIFICATE_OF_PARTICIPATION, val)) return true;
		if (equals_12(CALL_LOANS, val)) return true;
		return false;
	}

	var AMENDED__RESTATED, ASSETBACKED_SECURITIES, BANKERS_ACCEPTANCE, BANK_DEPOSITORY_NOTE, BANK_NOTES, BILL_OF_EXCHANGES, BRADY_BOND, BRIDGE_LOAN, BUY_SELLBACK, CALL_LOANS, CANADIAN_MONEY_MARKETS, CANADIAN_MORTGAGE_BONDS, CANADIAN_PROVINCIAL_BONDS, CANADIAN_TREASURY_BILLS, CANADIAN_TREASURY_NOTES, CASH, CERTIFICATE_OF_DEPOSIT, CERTIFICATE_OF_OBLIGATION, CERTIFICATE_OF_PARTICIPATION, COLLATERALIZED_MORTGAGE_OBLIGATION, COMMERCIAL_PAPER, COMMON_STOCK, CONVERTIBLE_BOND, CORPORATE_BOND, CORPORATE_PRIVATE_PLACEMENT, CORP_MORTGAGEBACKED_SECURITIES, CREDIT_DEFAULT_SWAP, DEBTOR_IN_POSSESSION, DEFAULTED, DEPOSIT_NOTES, DUAL_CURRENCY, EURO_CERTIFICATE_OF_DEPOSIT, EURO_COMMERCIAL_PAPER, EURO_CORPORATE_BOND, EURO_CORPORATE_FLOATING_RATE_NOTES, EURO_SOVEREIGNS_, EURO_SUPRANATIONAL_COUPONS_, EXTENDED_COMM_NOTE, FEDERAL_AGENCY_COUPON, FEDERAL_AGENCY_DISCOUNT_NOTE, FOREIGN_EXCHANGE_CONTRACT, FORWARD, FUTURE, FX_FORWARD, FX_SPOT, FX_SWAP, GENERAL_OBLIGATION_BONDS, INDEXED_LINKED, INTEREST_RATE_SWAP, INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE, IOETTE_MORTGAGE, LETTER_OF_CREDIT_0, LIQUIDITY_NOTE, MANDATORY_TENDER, MATURED, MEDIUM_TERM_NOTES, MISCELLANEOUS_PASSTHROUGH, MORTGAGEBACKED_SECURITIES, MORTGAGE_INTEREST_ONLY, MORTGAGE_PRINCIPAL_ONLY, MORTGAGE_PRIVATE_PLACEMENT, MULTILEG_INSTRUMENT, MUTUAL_FUND, NONDELIVERABLE_FORWARD, NO_SECURITY_TYPE, OPTION, OPTIONS_ON_COMBO, OPTIONS_ON_FUTURES, OPTIONS_ON_PHYSICAL__USE_NOT_RECOMMENDED, OTHER_ANTICIPATION_NOTES_BAN_GAN_ETC, OVERNIGHT, PFANDBRIEFE_, PLAZOS_FIJOS, PREFERRED_STOCK, PRINCIPAL_STRIP_FROM_A_NONCALLABLE_BOND_OR_NOTE, PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE, PRIVATE_EXPORT_FUNDING_, PROMISSORY_NOTE, REPLACED, REPURCHASE, RETIRED, REVENUE_ANTICIPATION_NOTE, REVENUE_BONDS, REVOLVERTERM_LOAN, REVOLVER_LOAN, SECURED_LIQUIDITY_NOTE, SECURITIES_LOAN, SECURITIES_PLEDGE, SHORT_TERM_LOAN_NOTE, SPECIAL_ASSESSMENT, SPECIAL_OBLIGATION, SPECIAL_TAX, STRUCTURED_NOTES, SWING_LINE_FACILITY, TAXABLE_MUNICIPAL_CP, TAX_ALLOCATION, TAX_ANTICIPATION_NOTE, TAX_EXEMPT_COMMERCIAL_PAPER, TAX_REVENUE_ANTICIPATION_NOTE, TERM_LIQUIDITY_NOTE, TERM_LOAN, TIME_DEPOSIT, TO_BE_ANNOUNCED, TREASURY_BILL__NON_US, TREASURY_INFLATION_PROTECTED_SECURITIES, USD_SUPRANATIONAL_COUPONS_, US_CORPORATE_FLOATING_RATE_NOTES, US_TREASURY_BILL, US_TREASURY_BILL_DEPRECATED_VALUE_USE_TBILL, US_TREASURY_BOND, US_TREASURY_NOTE, US_TREASURY_NOTE_DEPRECATED_VALUE_USE_TNOTE, VARIABLE_RATE_DEMAND_NOTE, WARRANT, WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST, WITHDRAWN, YANKEE_CERTIFICATE_OF_DEPOSIT, YANKEE_CORPORATE_BOND;

	function $clinit_FixMessageInfo$Seniority() {
		$clinit_FixMessageInfo$Seniority = nullMethod;
		SENIOR_SECURED = getBytesUtf8('SD');
		SENIOR = getBytesUtf8('SR');
		SUBORDINATED = getBytesUtf8('SB');
	}

	function isValid_144(val) {
		$clinit_FixMessageInfo$Seniority();
		if (equals_12(SENIOR_SECURED, val)) return true;
		if (equals_12(SENIOR, val)) return true;
		if (equals_12(SUBORDINATED, val)) return true;
		return false;
	}

	var SENIOR, SENIOR_SECURED, SUBORDINATED;

	function isValid_145(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_146(val) {
		if (68 == val) return true;
		if (77 == val) return true;
		return false;
	}

	function isValid_147(val) {
		if (80 == val) return true;
		if (67 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$SettlSessID() {
		$clinit_FixMessageInfo$SettlSessID = nullMethod;
		ELECTRONIC_TRADING_HOURS = getBytesUtf8('ETH');
		INTRADAY = getBytesUtf8('ITD');
		REGULAR_TRADING_HOURS = getBytesUtf8('RTH');
		END_OF_DAY = getBytesUtf8('EOD');
	}

	function isValid_148(val) {
		$clinit_FixMessageInfo$SettlSessID();
		if (equals_12(ELECTRONIC_TRADING_HOURS, val)) return true;
		if (equals_12(INTRADAY, val)) return true;
		if (equals_12(REGULAR_TRADING_HOURS, val)) return true;
		if (equals_12(END_OF_DAY, val)) return true;
		return false;
	}

	var ELECTRONIC_TRADING_HOURS, END_OF_DAY, INTRADAY, REGULAR_TRADING_HOURS;

	function $clinit_FixMessageInfo$SettlType() {
		$clinit_FixMessageInfo$SettlType = nullMethod;
		T2 = getBytesUtf8('3');
		NEXT_DAY_TOM__T1 = getBytesUtf8('2');
		CASH_TOD__T0 = getBytesUtf8('1');
		REGULAR__FX_SPOT_SETTLEMENT_T1_OR_T2_DEPENDING_ON_CURRENCY = getBytesUtf8('0');
		WHEN_AND_IF_ISSUED = getBytesUtf8('7');
		FUTURE_0 = getBytesUtf8('6');
		BROKEN_DATE__FOR_FX_EXPRESSING_NONSTANDARD_TENOR_SETTLDATE_64_MU = getBytesUtf8('B');
		T4 = getBytesUtf8('5');
		FX_SPOT_NEXT_SETTLEMENT_SPOT1_AKA_NEXT_DAY = getBytesUtf8('C');
		T3 = getBytesUtf8('4');
		T5 = getBytesUtf8('9');
		SELLERS_OPTION = getBytesUtf8('8');
	}

	function isValid_149(val) {
		$clinit_FixMessageInfo$SettlType();
		if (equals_12(T2, val)) return true;
		if (equals_12(NEXT_DAY_TOM__T1, val)) return true;
		if (equals_12(CASH_TOD__T0, val)) return true;
		if (equals_12(REGULAR__FX_SPOT_SETTLEMENT_T1_OR_T2_DEPENDING_ON_CURRENCY, val)) return true;
		if (equals_12(WHEN_AND_IF_ISSUED, val)) return true;
		if (equals_12(FUTURE_0, val)) return true;
		if (equals_12(BROKEN_DATE__FOR_FX_EXPRESSING_NONSTANDARD_TENOR_SETTLDATE_64_MU, val)) return true;
		if (equals_12(T4, val)) return true;
		if (equals_12(FX_SPOT_NEXT_SETTLEMENT_SPOT1_AKA_NEXT_DAY, val)) return true;
		if (equals_12(T3, val)) return true;
		if (equals_12(T5, val)) return true;
		if (equals_12(SELLERS_OPTION, val)) return true;
		return false;
	}

	var BROKEN_DATE__FOR_FX_EXPRESSING_NONSTANDARD_TENOR_SETTLDATE_64_MU, CASH_TOD__T0, FUTURE_0, FX_SPOT_NEXT_SETTLEMENT_SPOT1_AKA_NEXT_DAY, NEXT_DAY_TOM__T1, REGULAR__FX_SPOT_SETTLEMENT_T1_OR_T2_DEPENDING_ON_CURRENCY, SELLERS_OPTION, T2, T3, T4, T5, WHEN_AND_IF_ISSUED;

	function isValid_150(val) {
		if (68 == val) return true;
		if (69 == val) return true;
		if (70 == val) return true;
		if (71 == val) return true;
		if (65 == val) return true;
		if (66 == val) return true;
		if (67 == val) return true;
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		return false;
	}

	function isValid_151(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$StipulationType() {
		$clinit_FixMessageInfo$StipulationType = nullMethod;
		YEAR_OR_YEARMONTH_OF_ISSUE_EX_234200209 = getBytesUtf8('ISSUE');
		ALTERNATIVE_MINIMUM_TAX_YN = getBytesUtf8('AMT');
		MARKET_SECTOR = getBytesUtf8('SECTOR');
		THE_MINIMUM_RESIDUAL_OFFER_QUANTITY = getBytesUtf8('LEAVEQTY');
		INSURED_YN = getBytesUtf8('INSURED');
		PAYMENT_FREQUENCY_CALENDAR = getBytesUtf8('PAYFREQ');
		PERCENT_OF_BMA_PREPAYMENT_CURVE = getBytesUtf8('PSA');
		SUBSTITUTIONS_LEFT_REPO = getBytesUtf8('SUBSLEFT');
		WEIGHTED_AVERAGE_LOAN_AGE__VALUE_IN_MONTHS_EXACT_OR_RANGE = getBytesUtf8('WALA');
		GEOGRAPHICS_AND__RANGE_EX_234CA_080_MINIMUM_OF_80_CALIFORNIA_ASS = getBytesUtf8('GEOG');
		PRICING_FREQUENCY = getBytesUtf8('PRICEFREQ');
		LOT_VARIANCE_VALUE_IN_PERCENT_MAXIMUM_OVER_OR_UNDERALLOCATION_AL = getBytesUtf8('LOTVAR');
		MATURITY_YEAR_AND_MONTH = getBytesUtf8('MAT');
		PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADE = getBytesUtf8('REFPRIN');
		EXPLICIT_LOT_IDENTIFIER = getBytesUtf8('LOT');
		AVERAGE_FICO_SCORE = getBytesUtf8('AVFICO');
		FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE = getBytesUtf8('HEP');
		MAXIMUM_ORDER_SIZE = getBytesUtf8('MAXORDQTY');
		MAXIMUM_SUBSTITUTIONS_REPO = getBytesUtf8('MAXSUBS');
		ORDER_QUANTITY_INCREMENT = getBytesUtf8('ORDRINCR');
		WEIGHTED_AVERAGE_LIFE_COUPON__VALUE_IN_PERCENT_EXACT_OR_RANGE = getBytesUtf8('WAL');
		WEIGHTED_AVERAGE_MATURITY__VALUE_IN_MONTHS_EXACT_OR_RANGE = getBytesUtf8('WAM');
		MINIMUM_INCREMENT = getBytesUtf8('MININCR');
		LOOKBACK_DAYS = getBytesUtf8('LOOKBACK');
		PRODUCTION_YEAR = getBytesUtf8('PROD');
		YIELD_RANGE = getBytesUtf8('YIELD');
		TYPE_OF_REDEMPTION__VALUES_ARE_NONCALLABLE_PREFUNDED_ESCROWEDTOM = getBytesUtf8('REDEMPTION');
		REFERENCE_TO_ROLLING_OR_CLOSING_TRADE = getBytesUtf8('REFTRADE');
		TRADERS_CREDIT = getBytesUtf8('TRADERCREDIT');
		TRADE_VARIANCE_VALUE_IN_PERCENT_MAXIMUM_OVER_OR_UNDERALLOCATION_ = getBytesUtf8('TRDVAR');
		CALL_PROTECTION = getBytesUtf8('PROTECT');
		SECURITY_TYPE_INCLUDED_OR_EXCLUDED = getBytesUtf8('SECTYPE');
		SINGLE_MONTHLY_MORTALITY = getBytesUtf8('SMM');
		AVERAGE_LOAN_SIZE = getBytesUtf8('AVSIZE');
		COUPON_RANGE = getBytesUtf8('COUPON');
		RATING_SOURCE_AND_RANGE = getBytesUtf8('RATING');
		YIELD_TO_MATURITY_WHEN_YIELDTYPE235_AND_YIELD236_SHOW_A_DIFFEREN = getBytesUtf8('YTM');
		INTEREST_OF_ROLLING_OR_CLOSING_TRADE = getBytesUtf8('REFINT');
		AUTO_REINVESTMENT_AT_RATE_OR_BETTER = getBytesUtf8('AUTOREINV');
		CONSTANT_PREPAYMENT_PENALTY = getBytesUtf8('CPP');
		PRICE_RANGE = getBytesUtf8('PRICE');
		VALUATION_DISCOUNT = getBytesUtf8('HAIRCUT');
		POOL_IDENTIFIER = getBytesUtf8('POOL');
		CONSTANT_PREPAYMENT_RATE = getBytesUtf8('CPR');
		MINIMUM_DENOMINATION = getBytesUtf8('MINDNOM');
		CONSTANT_PREPAYMENT_YIELD = getBytesUtf8('CPY');
		POOLS_PER_TRADE = getBytesUtf8('PPT');
		PURPOSE = getBytesUtf8('PURPOSE');
		ISSUE_SIZE_RANGE = getBytesUtf8('ISSUESIZE');
		BANK_QUALIFIED_YN = getBytesUtf8('BANKQUAL');
		OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS = getBytesUtf8('INTERNALQTY');
		RESTRICTED_YN = getBytesUtf8('RESTRICTED');
		STRUCTURE = getBytesUtf8('STRUCT');
		BROKER_SALES_CREDIT_OVERRIDE = getBytesUtf8('SALESCREDITOVR');
		PRIMARY_OR_SECONDARY_MARKET_INDICATOR = getBytesUtf8('PRIMARY');
		BROKERS_SALES_CREDIT = getBytesUtf8('BROKERCREDIT');
		POOLS_PER_LOT = getBytesUtf8('PPL');
		FREEFORM_TEXT = getBytesUtf8('TEXT');
		POOLS_PER_MILLION = getBytesUtf8('PPM');
		SUBSTITUTIONS_FREQUENCY_REPO = getBytesUtf8('SUBSFREQ');
		NUMBER_OF_PIECES = getBytesUtf8('PIECES');
		PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE = getBytesUtf8('PPC');
		WEIGHTED_AVERAGE_COUPON__VALUE_IN_PERCENT_EXACT_OR_RANGE_PLUS_GR = getBytesUtf8('WAC');
		TYPE_OF_ROLL_TRADE = getBytesUtf8('ROLLTYPE');
		DISCOUNT_RATE_WHEN_PRICE_IS_DENOMINATED_IN_PERCENT_OF_PAR = getBytesUtf8('DISCOUNT');
		WHOLE_POOL_YN = getBytesUtf8('WHOLE');
		ISSUERS_TICKER = getBytesUtf8('ISSUER');
		ABSOLUTE_PREPAYMENT_SPEED = getBytesUtf8('ABS');
		CUSTOM_STARTEND_DATE = getBytesUtf8('CUSTOMDATE');
		AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET = getBytesUtf8('AVAILQTY');
		BENCHMARK_PRICE_SOURCE = getBytesUtf8('PXSOURCE');
		MAXIMUM_LOAN_BALANCE = getBytesUtf8('MAXBAL');
		BARGAIN_CONDITIONS_SEE_STIPULATIONVALUE_234_FOR_VALUES = getBytesUtf8('BGNCON');
		POOLS_MAXIMUM = getBytesUtf8('PMAX');
		PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE = getBytesUtf8('MHP');
		ISO_CURRENCY_CODE_0 = getBytesUtf8('CURRENCY');
		MATURITY_RANGE = getBytesUtf8('MATURITY');
		MINIMUM_QUANTITY_1 = getBytesUtf8('MINQTY');
		MONTHLY_PREPAYMENT_RATE = getBytesUtf8('MPR');
		OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS = getBytesUtf8('INTERNALPX');
	}

	function isValid_152(val) {
		$clinit_FixMessageInfo$StipulationType();
		if (equals_12(YEAR_OR_YEARMONTH_OF_ISSUE_EX_234200209, val)) return true;
		if (equals_12(ALTERNATIVE_MINIMUM_TAX_YN, val)) return true;
		if (equals_12(MARKET_SECTOR, val)) return true;
		if (equals_12(THE_MINIMUM_RESIDUAL_OFFER_QUANTITY, val)) return true;
		if (equals_12(INSURED_YN, val)) return true;
		if (equals_12(PAYMENT_FREQUENCY_CALENDAR, val)) return true;
		if (equals_12(PERCENT_OF_BMA_PREPAYMENT_CURVE, val)) return true;
		if (equals_12(SUBSTITUTIONS_LEFT_REPO, val)) return true;
		if (equals_12(WEIGHTED_AVERAGE_LOAN_AGE__VALUE_IN_MONTHS_EXACT_OR_RANGE, val)) return true;
		if (equals_12(GEOGRAPHICS_AND__RANGE_EX_234CA_080_MINIMUM_OF_80_CALIFORNIA_ASS, val)) return true;
		if (equals_12(PRICING_FREQUENCY, val)) return true;
		if (equals_12(LOT_VARIANCE_VALUE_IN_PERCENT_MAXIMUM_OVER_OR_UNDERALLOCATION_AL, val)) return true;
		if (equals_12(MATURITY_YEAR_AND_MONTH, val)) return true;
		if (equals_12(PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADE, val)) return true;
		if (equals_12(EXPLICIT_LOT_IDENTIFIER, val)) return true;
		if (equals_12(AVERAGE_FICO_SCORE, val)) return true;
		if (equals_12(FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE, val)) return true;
		if (equals_12(MAXIMUM_ORDER_SIZE, val)) return true;
		if (equals_12(MAXIMUM_SUBSTITUTIONS_REPO, val)) return true;
		if (equals_12(ORDER_QUANTITY_INCREMENT, val)) return true;
		if (equals_12(WEIGHTED_AVERAGE_LIFE_COUPON__VALUE_IN_PERCENT_EXACT_OR_RANGE, val)) return true;
		if (equals_12(WEIGHTED_AVERAGE_MATURITY__VALUE_IN_MONTHS_EXACT_OR_RANGE, val)) return true;
		if (equals_12(MINIMUM_INCREMENT, val)) return true;
		if (equals_12(LOOKBACK_DAYS, val)) return true;
		if (equals_12(PRODUCTION_YEAR, val)) return true;
		if (equals_12(YIELD_RANGE, val)) return true;
		if (equals_12(TYPE_OF_REDEMPTION__VALUES_ARE_NONCALLABLE_PREFUNDED_ESCROWEDTOM, val)) return true;
		if (equals_12(REFERENCE_TO_ROLLING_OR_CLOSING_TRADE, val)) return true;
		if (equals_12(TRADERS_CREDIT, val)) return true;
		if (equals_12(TRADE_VARIANCE_VALUE_IN_PERCENT_MAXIMUM_OVER_OR_UNDERALLOCATION_, val)) return true;
		if (equals_12(CALL_PROTECTION, val)) return true;
		if (equals_12(SECURITY_TYPE_INCLUDED_OR_EXCLUDED, val)) return true;
		if (equals_12(SINGLE_MONTHLY_MORTALITY, val)) return true;
		if (equals_12(AVERAGE_LOAN_SIZE, val)) return true;
		if (equals_12(COUPON_RANGE, val)) return true;
		if (equals_12(RATING_SOURCE_AND_RANGE, val)) return true;
		if (equals_12(YIELD_TO_MATURITY_WHEN_YIELDTYPE235_AND_YIELD236_SHOW_A_DIFFEREN, val)) return true;
		if (equals_12(INTEREST_OF_ROLLING_OR_CLOSING_TRADE, val)) return true;
		if (equals_12(AUTO_REINVESTMENT_AT_RATE_OR_BETTER, val)) return true;
		if (equals_12(CONSTANT_PREPAYMENT_PENALTY, val)) return true;
		if (equals_12(PRICE_RANGE, val)) return true;
		if (equals_12(VALUATION_DISCOUNT, val)) return true;
		if (equals_12(POOL_IDENTIFIER, val)) return true;
		if (equals_12(CONSTANT_PREPAYMENT_RATE, val)) return true;
		if (equals_12(MINIMUM_DENOMINATION, val)) return true;
		if (equals_12(CONSTANT_PREPAYMENT_YIELD, val)) return true;
		if (equals_12(POOLS_PER_TRADE, val)) return true;
		if (equals_12(PURPOSE, val)) return true;
		if (equals_12(ISSUE_SIZE_RANGE, val)) return true;
		if (equals_12(BANK_QUALIFIED_YN, val)) return true;
		if (equals_12(OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS, val)) return true;
		if (equals_12(RESTRICTED_YN, val)) return true;
		if (equals_12(STRUCTURE, val)) return true;
		if (equals_12(BROKER_SALES_CREDIT_OVERRIDE, val)) return true;
		if (equals_12(PRIMARY_OR_SECONDARY_MARKET_INDICATOR, val)) return true;
		if (equals_12(BROKERS_SALES_CREDIT, val)) return true;
		if (equals_12(POOLS_PER_LOT, val)) return true;
		if (equals_12(FREEFORM_TEXT, val)) return true;
		if (equals_12(POOLS_PER_MILLION, val)) return true;
		if (equals_12(SUBSTITUTIONS_FREQUENCY_REPO, val)) return true;
		if (equals_12(NUMBER_OF_PIECES, val)) return true;
		if (equals_12(PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE, val)) return true;
		if (equals_12(WEIGHTED_AVERAGE_COUPON__VALUE_IN_PERCENT_EXACT_OR_RANGE_PLUS_GR, val)) return true;
		if (equals_12(TYPE_OF_ROLL_TRADE, val)) return true;
		if (equals_12(DISCOUNT_RATE_WHEN_PRICE_IS_DENOMINATED_IN_PERCENT_OF_PAR, val)) return true;
		if (equals_12(WHOLE_POOL_YN, val)) return true;
		if (equals_12(ISSUERS_TICKER, val)) return true;
		if (equals_12(ABSOLUTE_PREPAYMENT_SPEED, val)) return true;
		if (equals_12(CUSTOM_STARTEND_DATE, val)) return true;
		if (equals_12(AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET, val)) return true;
		if (equals_12(BENCHMARK_PRICE_SOURCE, val)) return true;
		if (equals_12(MAXIMUM_LOAN_BALANCE, val)) return true;
		if (equals_12(BARGAIN_CONDITIONS_SEE_STIPULATIONVALUE_234_FOR_VALUES, val)) return true;
		if (equals_12(POOLS_MAXIMUM, val)) return true;
		if (equals_12(PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE, val)) return true;
		if (equals_12(ISO_CURRENCY_CODE_0, val)) return true;
		if (equals_12(MATURITY_RANGE, val)) return true;
		if (equals_12(MINIMUM_QUANTITY_1, val)) return true;
		if (equals_12(MONTHLY_PREPAYMENT_RATE, val)) return true;
		if (equals_12(OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS, val)) return true;
		return false;
	}

	var ABSOLUTE_PREPAYMENT_SPEED, ALTERNATIVE_MINIMUM_TAX_YN, AUTO_REINVESTMENT_AT_RATE_OR_BETTER, AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET, AVERAGE_FICO_SCORE, AVERAGE_LOAN_SIZE, BANK_QUALIFIED_YN, BARGAIN_CONDITIONS_SEE_STIPULATIONVALUE_234_FOR_VALUES, BENCHMARK_PRICE_SOURCE, BROKERS_SALES_CREDIT, BROKER_SALES_CREDIT_OVERRIDE, CALL_PROTECTION, CONSTANT_PREPAYMENT_PENALTY, CONSTANT_PREPAYMENT_RATE, CONSTANT_PREPAYMENT_YIELD, COUPON_RANGE, CUSTOM_STARTEND_DATE, DISCOUNT_RATE_WHEN_PRICE_IS_DENOMINATED_IN_PERCENT_OF_PAR, EXPLICIT_LOT_IDENTIFIER, FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE, FREEFORM_TEXT, GEOGRAPHICS_AND__RANGE_EX_234CA_080_MINIMUM_OF_80_CALIFORNIA_ASS, INSURED_YN, INTEREST_OF_ROLLING_OR_CLOSING_TRADE, ISO_CURRENCY_CODE_0, ISSUERS_TICKER, ISSUE_SIZE_RANGE, LOOKBACK_DAYS, LOT_VARIANCE_VALUE_IN_PERCENT_MAXIMUM_OVER_OR_UNDERALLOCATION_AL, MARKET_SECTOR, MATURITY_RANGE, MATURITY_YEAR_AND_MONTH, MAXIMUM_LOAN_BALANCE, MAXIMUM_ORDER_SIZE, MAXIMUM_SUBSTITUTIONS_REPO, MINIMUM_DENOMINATION, MINIMUM_INCREMENT, MINIMUM_QUANTITY_1, MONTHLY_PREPAYMENT_RATE, NUMBER_OF_PIECES, OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS, OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS, ORDER_QUANTITY_INCREMENT, PAYMENT_FREQUENCY_CALENDAR, PERCENT_OF_BMA_PREPAYMENT_CURVE, PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE, PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE, POOLS_MAXIMUM, POOLS_PER_LOT, POOLS_PER_MILLION, POOLS_PER_TRADE, POOL_IDENTIFIER, PRICE_RANGE, PRICING_FREQUENCY, PRIMARY_OR_SECONDARY_MARKET_INDICATOR, PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADE, PRODUCTION_YEAR, PURPOSE, RATING_SOURCE_AND_RANGE, REFERENCE_TO_ROLLING_OR_CLOSING_TRADE, RESTRICTED_YN, SECURITY_TYPE_INCLUDED_OR_EXCLUDED, SINGLE_MONTHLY_MORTALITY, STRUCTURE, SUBSTITUTIONS_FREQUENCY_REPO, SUBSTITUTIONS_LEFT_REPO, THE_MINIMUM_RESIDUAL_OFFER_QUANTITY, TRADERS_CREDIT, TRADE_VARIANCE_VALUE_IN_PERCENT_MAXIMUM_OVER_OR_UNDERALLOCATION_, TYPE_OF_REDEMPTION__VALUES_ARE_NONCALLABLE_PREFUNDED_ESCROWEDTOM, TYPE_OF_ROLL_TRADE, VALUATION_DISCOUNT, WEIGHTED_AVERAGE_COUPON__VALUE_IN_PERCENT_EXACT_OR_RANGE_PLUS_GR, WEIGHTED_AVERAGE_LIFE_COUPON__VALUE_IN_PERCENT_EXACT_OR_RANGE, WEIGHTED_AVERAGE_LOAN_AGE__VALUE_IN_MONTHS_EXACT_OR_RANGE, WEIGHTED_AVERAGE_MATURITY__VALUE_IN_MONTHS_EXACT_OR_RANGE, WHOLE_POOL_YN, YEAR_OR_YEARMONTH_OF_ISSUE_EX_234200209, YIELD_RANGE, YIELD_TO_MATURITY_WHEN_YIELDTYPE235_AND_YIELD236_SHOW_A_DIFFEREN;

	function isValid_153(val) {
		if (eq(P13_longLit, val)) return true;
		if (eq(P11_longLit, val)) return true;
		if (eq(P12_longLit, val)) return true;
		if (eq(Pf_longLit, val)) return true;
		if (eq(P10_longLit, val)) return true;
		if (eq(Pd_longLit, val)) return true;
		if (eq(Pe_longLit, val)) return true;
		if (eq(Pb_longLit, val)) return true;
		if (eq(Pc_longLit, val)) return true;
		if (eq(P15_longLit, val)) return true;
		if (eq(P14_longLit, val)) return true;
		if (eq(P16_longLit, val)) return true;
		if (eq(P17_longLit, val)) return true;
		if (eq(P18_longLit, val)) return true;
		if (eq(P19_longLit, val)) return true;
		if (eq(P1a_longLit, val)) return true;
		if (eq(P1b_longLit, val)) return true;
		if (eq(P1c_longLit, val)) return true;
		if (eq(P1d_longLit, val)) return true;
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(Pa_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function isValid_154(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_155(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_156(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$SymbolSfx() {
		$clinit_FixMessageInfo$SymbolSfx = nullMethod;
		EUCP_WITH_LUMPSUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE = getBytesUtf8('CD');
		WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ = getBytesUtf8('WI');
	}

	function isValid_157(val) {
		$clinit_FixMessageInfo$SymbolSfx();
		if (equals_12(EUCP_WITH_LUMPSUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE, val)) return true;
		if (equals_12(WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_, val)) return true;
		return false;
	}

	var EUCP_WITH_LUMPSUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE, WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_;

	function isValid_158(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		return false;
	}

	function isValid_159(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_160(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_161(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_162(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		if (55 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		if (57 == val) return true;
		if (56 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$TimeUnit() {
		$clinit_FixMessageInfo$TimeUnit = nullMethod;
		DAY = getBytesUtf8('D');
		SECOND = getBytesUtf8('S');
		YEAR = getBytesUtf8('Yr');
		HOUR = getBytesUtf8('H');
		MONTH = getBytesUtf8('Mo');
		WEEK = getBytesUtf8('Wk');
		MINUTE = getBytesUtf8('Min');
	}

	function isValid_163(val) {
		$clinit_FixMessageInfo$TimeUnit();
		if (equals_12(DAY, val)) return true;
		if (equals_12(SECOND, val)) return true;
		if (equals_12(YEAR, val)) return true;
		if (equals_12(HOUR, val)) return true;
		if (equals_12(MONTH, val)) return true;
		if (equals_12(WEEK, val)) return true;
		if (equals_12(MINUTE, val)) return true;
		return false;
	}

	var DAY, HOUR, MINUTE, MONTH, SECOND, WEEK, YEAR;

	function isValid_164(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P9_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		if (eq(P63_longLit, val)) return true;
		return false;
	}

	function isValid_165(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		return false;
	}

	function isValid_166(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P0_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_167(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$TradingSessionID() {
		$clinit_FixMessageInfo$TradingSessionID = nullMethod;
		MORNING = getBytesUtf8('3');
		HALFDAY = getBytesUtf8('2');
		DAY_0 = getBytesUtf8('1');
		AFTERHOURS = getBytesUtf8('6');
		EVENING = getBytesUtf8('5');
		AFTERNOON = getBytesUtf8('4');
	}

	function isValid_168(val) {
		$clinit_FixMessageInfo$TradingSessionID();
		if (equals_12(MORNING, val)) return true;
		if (equals_12(HALFDAY, val)) return true;
		if (equals_12(DAY_0, val)) return true;
		if (equals_12(AFTERHOURS, val)) return true;
		if (equals_12(EVENING, val)) return true;
		if (equals_12(AFTERNOON, val)) return true;
		return false;
	}

	var AFTERHOURS, AFTERNOON, DAY_0, EVENING, HALFDAY, MORNING;

	function $clinit_FixMessageInfo$TradingSessionSubID() {
		$clinit_FixMessageInfo$TradingSessionSubID = nullMethod;
		CONTINUOUS_TRADING = getBytesUtf8('3');
		OPENING_OR_OPENING_AUCTION = getBytesUtf8('2');
		PRETRADING = getBytesUtf8('1');
		QUIESCENT = getBytesUtf8('7');
		INTRADAY_AUCTION = getBytesUtf8('6');
		POSTTRADING = getBytesUtf8('5');
		CLOSING_OR_CLOSING_AUCTION = getBytesUtf8('4');
	}

	function isValid_169(val) {
		$clinit_FixMessageInfo$TradingSessionSubID();
		if (equals_12(CONTINUOUS_TRADING, val)) return true;
		if (equals_12(OPENING_OR_OPENING_AUCTION, val)) return true;
		if (equals_12(PRETRADING, val)) return true;
		if (equals_12(QUIESCENT, val)) return true;
		if (equals_12(INTRADAY_AUCTION, val)) return true;
		if (equals_12(POSTTRADING, val)) return true;
		if (equals_12(CLOSING_OR_CLOSING_AUCTION, val)) return true;
		return false;
	}

	var CLOSING_OR_CLOSING_AUCTION, CONTINUOUS_TRADING, INTRADAY_AUCTION, OPENING_OR_OPENING_AUCTION, POSTTRADING, PRETRADING, QUIESCENT;

	function isValid_170(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_171(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function isValid_172(val) {
		if (50 == val) return true;
		if (49 == val) return true;
		return false;
	}

	function isValid_173(val) {
		if (68 == val) return true;
		if (85 == val) return true;
		return false;
	}

	function isValid_174(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (54 == val) return true;
		if (53 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function isValid_175(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (48 == val) return true;
		return false;
	}

	function isValid_176(val) {
		if (51 == val) return true;
		if (50 == val) return true;
		if (49 == val) return true;
		if (52 == val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$UnderlyingCashType() {
		$clinit_FixMessageInfo$UnderlyingCashType = nullMethod;
		DIFF = getBytesUtf8('DIFF');
		FIXED = getBytesUtf8('FIXED');
	}

	function isValid_177(val) {
		$clinit_FixMessageInfo$UnderlyingCashType();
		if (equals_12(DIFF, val)) return true;
		if (equals_12(FIXED, val)) return true;
		return false;
	}

	var DIFF, FIXED;

	function isValid_178(val) {
		if (68 == val) return true;
		if (77 == val) return true;
		return false;
	}

	function isValid_179(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function isValid_180(val) {
		if (eq(P2_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$UnitOfMeasure() {
		$clinit_FixMessageInfo$UnitOfMeasure = nullMethod;
		TONS_US = getBytesUtf8('tn');
		GALLONS = getBytesUtf8('Gal');
		BUSHELS = getBytesUtf8('Bu');
		MEGAWATT_HOURS = getBytesUtf8('MWh');
		ONE_MILLION_BTU = getBytesUtf8('MMBtu');
		ALLOWANCES = getBytesUtf8('Alw');
		MILLION_BARRELS = getBytesUtf8('MMbbl');
		METRIC_TONS_AKA_TONNE = getBytesUtf8('t');
		BARRELS = getBytesUtf8('Bbl');
		US_DOLLARS = getBytesUtf8('USD');
		TROY_OUNCES = getBytesUtf8('oz_tr');
		POUNDS = getBytesUtf8('lbs');
		BILLION_CUBIC_FEET = getBytesUtf8('Bcf');
	}

	function isValid_181(val) {
		$clinit_FixMessageInfo$UnitOfMeasure();
		if (equals_12(TONS_US, val)) return true;
		if (equals_12(GALLONS, val)) return true;
		if (equals_12(BUSHELS, val)) return true;
		if (equals_12(MEGAWATT_HOURS, val)) return true;
		if (equals_12(ONE_MILLION_BTU, val)) return true;
		if (equals_12(ALLOWANCES, val)) return true;
		if (equals_12(MILLION_BARRELS, val)) return true;
		if (equals_12(METRIC_TONS_AKA_TONNE, val)) return true;
		if (equals_12(BARRELS, val)) return true;
		if (equals_12(US_DOLLARS, val)) return true;
		if (equals_12(TROY_OUNCES, val)) return true;
		if (equals_12(POUNDS, val)) return true;
		if (equals_12(BILLION_CUBIC_FEET, val)) return true;
		return false;
	}

	var ALLOWANCES, BARRELS, BILLION_CUBIC_FEET, BUSHELS, GALLONS, MEGAWATT_HOURS, METRIC_TONS_AKA_TONNE, MILLION_BARRELS, ONE_MILLION_BTU, POUNDS, TONS_US, TROY_OUNCES, US_DOLLARS;

	function isValid_182(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function isValid_183(val) {
		if (eq(P3_longLit, val)) return true;
		if (eq(P2_longLit, val)) return true;
		if (eq(P1_longLit, val)) return true;
		if (eq(P7_longLit, val)) return true;
		if (eq(P6_longLit, val)) return true;
		if (eq(P5_longLit, val)) return true;
		if (eq(P4_longLit, val)) return true;
		if (eq(P8_longLit, val)) return true;
		return false;
	}

	function $clinit_FixMessageInfo$ValuationMethod() {
		$clinit_FixMessageInfo$ValuationMethod = nullMethod;
		FUTURES_STYLE_MARKTOMARKET = getBytesUtf8('FUT');
		FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = getBytesUtf8('FUTDA');
		CDS_IN_DELIVERY__USE_RECOVERY_RATE_TO_CALCULATE_OBLIGATION = getBytesUtf8('CDSD');
		CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON = getBytesUtf8('CDS');
		PREMIUM_STYLE = getBytesUtf8('EQTY');
	}

	function isValid_184(val) {
		$clinit_FixMessageInfo$ValuationMethod();
		if (equals_12(FUTURES_STYLE_MARKTOMARKET, val)) return true;
		if (equals_12(FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT, val)) return true;
		if (equals_12(CDS_IN_DELIVERY__USE_RECOVERY_RATE_TO_CALCULATE_OBLIGATION, val)) return true;
		if (equals_12(CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON, val)) return true;
		if (equals_12(PREMIUM_STYLE, val)) return true;
		return false;
	}

	var CDS_IN_DELIVERY__USE_RECOVERY_RATE_TO_CALCULATE_OBLIGATION, CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON, FUTURES_STYLE_MARKTOMARKET, FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT, PREMIUM_STYLE;

	function isValid_185(val) {
		if (!val) return true;
		if (val) return true;
		return false;
	}

	function $clinit_FixMessageInfo$YieldType() {
		$clinit_FixMessageInfo$YieldType = nullMethod;
		TAX_EQUIVALENT_YIELD = getBytesUtf8('TAXEQUIV');
		CLOSING_YIELD_MOST_RECENT_MONTH = getBytesUtf8('LASTMONTH');
		MARK_TO_MARKET_YIELD = getBytesUtf8('MARK');
		SEMIANNUAL_YIELD = getBytesUtf8('SEMIANNUAL');
		CLOSING_YIELD_MOST_RECENT_QUARTER = getBytesUtf8('LASTQUARTER');
		YIELD_TO_NEXT_REFUND_SINKING_FUND_BONDS = getBytesUtf8('NEXTREFUND');
		BOOK_YIELD = getBytesUtf8('BOOK');
		YIELD_TO_TENDER_DATE = getBytesUtf8('TENDER');
		CLOSING_YIELD_MOST_RECENT_YEAR = getBytesUtf8('LASTYEAR');
		YIELD_TO_LONGEST_AVERAGE_LIFE = getBytesUtf8('LONGAVGLIFE');
		PREVIOUS_CLOSE_YIELD = getBytesUtf8('PREVCLOSE');
		TRUE_YIELD = getBytesUtf8('TRUE');
		YIELD_TO_WORST = getBytesUtf8('WORST');
		CURRENT_YIELD = getBytesUtf8('CURRENT');
		COMPOUND_YIELD = getBytesUtf8('COMPOUND');
		YIELD_CHANGE_SINCE_CLOSE = getBytesUtf8('CHANGE');
		AFTER_TAX_YIELD_MUNICIPALS = getBytesUtf8('AFTERTAX');
		TRUE_GROSS_YIELD = getBytesUtf8('GROSS');
		ANNUAL_YIELD = getBytesUtf8('ANNUAL');
		OPEN_AVERAGE_YIELD = getBytesUtf8('OPENAVG');
		PROCEEDS_YIELD = getBytesUtf8('PROCEEDS');
		YIELD_TO_SHORTEST_AVERAGE_LIFE = getBytesUtf8('SHORTAVGLIFE');
		MOST_RECENT_CLOSING_YIELD = getBytesUtf8('LASTCLOSE');
		CLOSING_YIELD = getBytesUtf8('CLOSE');
		YIELD_TO_AVG_MATURITY = getBytesUtf8('AVGMATURITY');
		YIELD_AT_ISSUE_MUNICIPALS = getBytesUtf8('ATISSUE');
		YIELD_VALUE_OF_132 = getBytesUtf8('VALUE1_32');
		GVNT_EQUIVALENT_YIELD = getBytesUtf8('GOVTEQUIV');
		YIELD_TO_NEXT_CALL = getBytesUtf8('CALL');
		YIELD_TO_MATURITY = getBytesUtf8('MATURITY');
		YIELD_WITH_INFLATION_ASSUMPTION = getBytesUtf8('INFLATION');
		INVERSE_FLOATER_BOND_YIELD = getBytesUtf8('INVERSEFLOATER');
		SIMPLE_YIELD = getBytesUtf8('SIMPLE');
		YIELD_TO_NEXT_PUT = getBytesUtf8('PUT');
	}

	function isValid_186(val) {
		$clinit_FixMessageInfo$YieldType();
		if (equals_12(TAX_EQUIVALENT_YIELD, val)) return true;
		if (equals_12(CLOSING_YIELD_MOST_RECENT_MONTH, val)) return true;
		if (equals_12(MARK_TO_MARKET_YIELD, val)) return true;
		if (equals_12(SEMIANNUAL_YIELD, val)) return true;
		if (equals_12(CLOSING_YIELD_MOST_RECENT_QUARTER, val)) return true;
		if (equals_12(YIELD_TO_NEXT_REFUND_SINKING_FUND_BONDS, val)) return true;
		if (equals_12(BOOK_YIELD, val)) return true;
		if (equals_12(YIELD_TO_TENDER_DATE, val)) return true;
		if (equals_12(CLOSING_YIELD_MOST_RECENT_YEAR, val)) return true;
		if (equals_12(YIELD_TO_LONGEST_AVERAGE_LIFE, val)) return true;
		if (equals_12(PREVIOUS_CLOSE_YIELD, val)) return true;
		if (equals_12(TRUE_YIELD, val)) return true;
		if (equals_12(YIELD_TO_WORST, val)) return true;
		if (equals_12(CURRENT_YIELD, val)) return true;
		if (equals_12(COMPOUND_YIELD, val)) return true;
		if (equals_12(YIELD_CHANGE_SINCE_CLOSE, val)) return true;
		if (equals_12(AFTER_TAX_YIELD_MUNICIPALS, val)) return true;
		if (equals_12(TRUE_GROSS_YIELD, val)) return true;
		if (equals_12(ANNUAL_YIELD, val)) return true;
		if (equals_12(OPEN_AVERAGE_YIELD, val)) return true;
		if (equals_12(PROCEEDS_YIELD, val)) return true;
		if (equals_12(YIELD_TO_SHORTEST_AVERAGE_LIFE, val)) return true;
		if (equals_12(MOST_RECENT_CLOSING_YIELD, val)) return true;
		if (equals_12(CLOSING_YIELD, val)) return true;
		if (equals_12(YIELD_TO_AVG_MATURITY, val)) return true;
		if (equals_12(YIELD_AT_ISSUE_MUNICIPALS, val)) return true;
		if (equals_12(YIELD_VALUE_OF_132, val)) return true;
		if (equals_12(GVNT_EQUIVALENT_YIELD, val)) return true;
		if (equals_12(YIELD_TO_NEXT_CALL, val)) return true;
		if (equals_12(YIELD_TO_MATURITY, val)) return true;
		if (equals_12(YIELD_WITH_INFLATION_ASSUMPTION, val)) return true;
		if (equals_12(INVERSE_FLOATER_BOND_YIELD, val)) return true;
		if (equals_12(SIMPLE_YIELD, val)) return true;
		if (equals_12(YIELD_TO_NEXT_PUT, val)) return true;
		return false;
	}

	var AFTER_TAX_YIELD_MUNICIPALS, ANNUAL_YIELD, BOOK_YIELD, CLOSING_YIELD, CLOSING_YIELD_MOST_RECENT_MONTH, CLOSING_YIELD_MOST_RECENT_QUARTER, CLOSING_YIELD_MOST_RECENT_YEAR, COMPOUND_YIELD, CURRENT_YIELD, GVNT_EQUIVALENT_YIELD, INVERSE_FLOATER_BOND_YIELD, MARK_TO_MARKET_YIELD, MOST_RECENT_CLOSING_YIELD, OPEN_AVERAGE_YIELD, PREVIOUS_CLOSE_YIELD, PROCEEDS_YIELD, SEMIANNUAL_YIELD, SIMPLE_YIELD, TAX_EQUIVALENT_YIELD, TRUE_GROSS_YIELD, TRUE_YIELD, YIELD_AT_ISSUE_MUNICIPALS, YIELD_CHANGE_SINCE_CLOSE, YIELD_TO_AVG_MATURITY, YIELD_TO_LONGEST_AVERAGE_LIFE, YIELD_TO_MATURITY, YIELD_TO_NEXT_CALL, YIELD_TO_NEXT_PUT, YIELD_TO_NEXT_REFUND_SINKING_FUND_BONDS, YIELD_TO_SHORTEST_AVERAGE_LIFE, YIELD_TO_TENDER_DATE, YIELD_TO_WORST, YIELD_VALUE_OF_132, YIELD_WITH_INFLATION_ASSUMPTION;

	function $parse(this$static, buf, l_0) {
		var msgTypeInt;
		msgTypeInt = crackMsgType(buf);
		if (msgTypeInt < 0) return null;
		!l_0 && (l_0 = new FixMessageListenerImpl_0);
		switch (msgTypeInt) {
		case 48:
			this$static.fixHeartbeat = new FixHeartbeat_0;
			$setBuffer(this$static.fixHeartbeat, buf);
			$getAll_3(this$static.fixHeartbeat);
			return this$static.fixHeartbeat;
		case 49:
			this$static.fixTestRequest = new FixTestRequest_0;
			$setBuffer(this$static.fixTestRequest, buf);
			$getAll_18(this$static.fixTestRequest);
			return this$static.fixTestRequest;
		case 50:
			this$static.fixResendRequest = new FixResendRequest_0;
			$setBuffer(this$static.fixResendRequest, buf);
			$getAll_14(this$static.fixResendRequest);
			return this$static.fixResendRequest;
		case 52:
			this$static.fixSequenceReset = new FixSequenceReset_0;
			$setBuffer(this$static.fixSequenceReset, buf);
			$getAll_17(this$static.fixSequenceReset);
			return this$static.fixSequenceReset;
		case 53:
			this$static.fixLogout = new FixLogout_0;
			$setBuffer(this$static.fixLogout, buf);
			$getAll_5(this$static.fixLogout);
			return this$static.fixLogout;
		case 56:
			this$static.fixExecutionReport = new FixExecutionReport_0;
			$setBuffer(this$static.fixExecutionReport, buf);
			$getAll_2(this$static.fixExecutionReport);
			return this$static.fixExecutionReport;
		case 57:
			this$static.fixOrderCancelReject = new FixOrderCancelReject_0;
			$setBuffer(this$static.fixOrderCancelReject, buf);
			$getAll_7(this$static.fixOrderCancelReject);
			return this$static.fixOrderCancelReject;
		case 16717:
			this$static.fixPositionMaintenanceReport = new FixPositionMaintenanceReport_0;
			$setBuffer(this$static.fixPositionMaintenanceReport, buf);
			$getAll_10(this$static.fixPositionMaintenanceReport);
			return this$static.fixPositionMaintenanceReport;
		case 16730:
			this$static.fixCollateralResponse = new FixCollateralResponse_0;
			$setBuffer(this$static.fixCollateralResponse, buf);
			$getAll_0(this$static.fixCollateralResponse);
			return this$static.fixCollateralResponse;
		case 65:
			this$static.fixLogon = new FixLogon_0;
			$setBuffer(this$static.fixLogon, buf);
			$getAll_4(this$static.fixLogon);
			l_0.onFixLogon(this$static.fixLogon);
			return this$static.fixLogon;
		case 68:
			this$static.fixNewOrderSingle = new FixNewOrderSingle_0;
			$setBuffer(this$static.fixNewOrderSingle, buf);
			$getAll_6(this$static.fixNewOrderSingle);
			return this$static.fixNewOrderSingle;
		case 70:
			this$static.fixOrderCancelRequest = new FixOrderCancelRequest_0;
			$setBuffer(this$static.fixOrderCancelRequest, buf);
			$getAll_8(this$static.fixOrderCancelRequest);
			return this$static.fixOrderCancelRequest;
		case 72:
			this$static.fixOrderStatusRequest = new FixOrderStatusRequest_0;
			$setBuffer(this$static.fixOrderStatusRequest, buf);
			$getAll_9(this$static.fixOrderStatusRequest);
			return this$static.fixOrderStatusRequest;
		case 82:
			this$static.fixQuoteRequest = new FixQuoteRequest_0;
			$setBuffer(this$static.fixQuoteRequest, buf);
			$getAll_12(this$static.fixQuoteRequest);
			return this$static.fixQuoteRequest;
		case 83:
			this$static.fixQuote = new FixQuote_0;
			$setBuffer(this$static.fixQuote, buf);
			$getAll_11(this$static.fixQuote);
			return this$static.fixQuote;
		case 120:
			this$static.fixSecurityListRequest = new FixSecurityListRequest_0;
			$setBuffer(this$static.fixSecurityListRequest, buf);
			$getAll_16(this$static.fixSecurityListRequest);
			return this$static.fixSecurityListRequest;
		case 121:
			this$static.fixSecurityList = new FixSecurityList_0;
			$setBuffer(this$static.fixSecurityList, buf);
			$getAll_15(this$static.fixSecurityList);
			return this$static.fixSecurityList;
		case 16719:
			this$static.fixRequestForPositionsAck = new FixRequestForPositionsAck_0;
			$setBuffer(this$static.fixRequestForPositionsAck, buf);
			$getAll_13(this$static.fixRequestForPositionsAck);
			return this$static.fixRequestForPositionsAck;
		case 16721:
			this$static.fixTradeCaptureReportRequestAck = new FixTradeCaptureReportRequestAck_0;
			$setBuffer(this$static.fixTradeCaptureReportRequestAck, buf);
			$getAll_19(this$static.fixTradeCaptureReportRequestAck);
			return this$static.fixTradeCaptureReportRequestAck;
		case 16966:
			this$static.fixUserResponse = new FixUserResponse_0;
			$setBuffer(this$static.fixUserResponse, buf);
			$getAll_20(this$static.fixUserResponse);
			return this$static.fixUserResponse;
		case 16974:
			this$static.fixExecutionAcknowledgement = new FixExecutionAcknowledgement_0;
			$setBuffer(this$static.fixExecutionAcknowledgement, buf);
			$getAll_1(this$static.fixExecutionAcknowledgement);
			return this$static.fixExecutionAcknowledgement;
		default:
			$setBuffer(this$static.fixMessage, buf);
			$getAll(this$static.fixMessage);
			findEndOfMessage(buf);
			return this$static.fixMessage;
		}
	}

	function FixMessageParser_0() {
		this.fixMessage = new FixMessageParser$2_0;
	}

	defineSeed(518, 1, {}, FixMessageParser_0);
	_.fixCollateralResponse = null;
	_.fixExecutionAcknowledgement = null;
	_.fixExecutionReport = null;
	_.fixHeartbeat = null;
	_.fixLogon = null;
	_.fixLogout = null;
	_.fixNewOrderSingle = null;
	_.fixOrderCancelReject = null;
	_.fixOrderCancelRequest = null;
	_.fixOrderStatusRequest = null;
	_.fixPositionMaintenanceReport = null;
	_.fixQuote = null;
	_.fixQuoteRequest = null;
	_.fixRequestForPositionsAck = null;
	_.fixResendRequest = null;
	_.fixSecurityList = null;
	_.fixSecurityListRequest = null;
	_.fixSequenceReset = null;
	_.fixTestRequest = null;
	_.fixTradeCaptureReportRequestAck = null;
	_.fixUserResponse = null;

	function FixMessageParser$2_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
	}

	defineSeed(519, 322, makeCastMap([Q$FixMessage]), FixMessageParser$2_0);
	_.toString$ = function toString_9() {
		return null;
	};

	function $$init_6(this$static) {
		this$static.acctIDSource = P0_longLit;
		this$static.accountType = P0_longLit;
		this$static.dayBookingInst = 32;
		this$static.bookingUnit = 32;
		this$static.preallocMethod = 32;
		this$static.cashMargin = 32;
		this$static.handlInst = 32;
		this$static.minQty = P0_longLit;
		this$static.matchIncrement = P0_longLit;
		this$static.maxPriceLevels = P0_longLit;
		this$static.maxFloor = P0_longLit;
		this$static.exDestinationIDSource = 32;
		this$static.processCode = 32;
		this$static.prevClosePx = P0_longLit;
		this$static.side = 32;
		this$static.locateReqd = false;
		this$static.qtyType = P0_longLit;
		this$static.ordType = 32;
		this$static.priceType = P0_longLit;
		this$static.price = P0_longLit;
		this$static.priceProtectionScope = 32;
		this$static.stopPx = P0_longLit;
		this$static.solicitedFlag = false;
		this$static.timeInForce = 32;
		this$static.gTBookingInst = P0_longLit;
		this$static.orderCapacity = 32;
		this$static.preTradeAnonymity = false;
		this$static.custOrderCapacity = P0_longLit;
		this$static.forexReq = false;
		this$static.bookingType = P0_longLit;
		this$static.encodedTextLen = P0_longLit;
		this$static.orderQty2 = P0_longLit;
		this$static.price2 = P0_longLit;
		this$static.positionEffect = 32;
		this$static.coveredOrUncovered = P0_longLit;
		this$static.maxShow = P0_longLit;
		this$static.targetStrategy = P0_longLit;
		this$static.participationRate = P0_longLit;
		this$static.cancellationRights = 32;
		this$static.moneyLaunderingStatus = 32;
		this$static.manualOrderIndicator = false;
		this$static.custDirectedOrder = false;
		this$static.orderHandlingInstSource = P0_longLit;
		this$static.refOrderIDSource = 32;
	}

	function $checkRequiredTags_3(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.clOrdID[0] == 0) return 11;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $clear_3(this$static) {
		$clinit_Utils();
		this$static.clOrdID[0] = 0;
		this$static.secondaryClOrdID[0] = 0;
		this$static.clOrdLinkID[0] = 0;
		this$static.tradeOriginationDate[0] = 0;
		this$static.tradeDate[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.dayBookingInst = 127;
		this$static.bookingUnit = 127;
		this$static.preallocMethod = 127;
		this$static.allocID[0] = 0;
		this$static.settlType[0] = 0;
		this$static.settlDate[0] = 0;
		this$static.cashMargin = 127;
		this$static.clearingFeeIndicator[0] = 0;
		this$static.handlInst = 127;
		this$static.execInst[0] = 0;
		this$static.minQty = P7fffffffffffffff_longLit;
		this$static.matchIncrement = P7fffffffffffffff_longLit;
		this$static.maxPriceLevels = P7fffffffffffffff_longLit;
		this$static.maxFloor = P7fffffffffffffff_longLit;
		this$static.exDestination[0] = 0;
		this$static.exDestinationIDSource = 127;
		this$static.processCode = 127;
		this$static.prevClosePx = P7fffffffffffffff_longLit;
		this$static.side = 127;
		this$static.locateReqd = false;
		this$static.transactTime[0] = 0;
		this$static.qtyType = P7fffffffffffffff_longLit;
		this$static.ordType = 127;
		this$static.priceType = P7fffffffffffffff_longLit;
		this$static.price = P7fffffffffffffff_longLit;
		this$static.priceProtectionScope = 127;
		this$static.stopPx = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.complianceID[0] = 0;
		this$static.solicitedFlag = false;
		this$static.iOIID[0] = 0;
		this$static.quoteID[0] = 0;
		this$static.timeInForce = 127;
		this$static.effectiveTime[0] = 0;
		this$static.expireDate[0] = 0;
		this$static.expireTime[0] = 0;
		this$static.gTBookingInst = P7fffffffffffffff_longLit;
		this$static.orderCapacity = 127;
		this$static.orderRestrictions[0] = 0;
		this$static.preTradeAnonymity = false;
		this$static.custOrderCapacity = P7fffffffffffffff_longLit;
		this$static.forexReq = false;
		this$static.settlCurrency[0] = 0;
		this$static.bookingType = P7fffffffffffffff_longLit;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		this$static.settlDate2[0] = 0;
		this$static.orderQty2 = P7fffffffffffffff_longLit;
		this$static.price2 = P7fffffffffffffff_longLit;
		this$static.positionEffect = 127;
		this$static.coveredOrUncovered = P7fffffffffffffff_longLit;
		this$static.maxShow = P7fffffffffffffff_longLit;
		this$static.targetStrategy = P7fffffffffffffff_longLit;
		this$static.targetStrategyParameters[0] = 0;
		this$static.participationRate = P7fffffffffffffff_longLit;
		this$static.cancellationRights = 127;
		this$static.moneyLaunderingStatus = 127;
		this$static.registID[0] = 0;
		this$static.designation[0] = 0;
		this$static.manualOrderIndicator = false;
		this$static.custDirectedOrder = false;
		this$static.receivedDeptID[0] = 0;
		this$static.custOrderHandlingInst[0] = 0;
		this$static.orderHandlingInstSource = P7fffffffffffffff_longLit;
		this$static.refOrderID[0] = 0;
		this$static.refOrderIDSource = 127;
		$clear_88(this$static.parties);
		$clear_95(this$static.preAllocGrp);
		$clear_26(this$static.displayInstruction);
		$clear_137(this$static.trdgSesGrp);
		$clear_40(this$static.instrument);
		$clear_34(this$static.financingDetails);
		$clear_142(this$static.undInstrmtGrp);
		$clear_119(this$static.stipulations);
		$clear_87(this$static.orderQtyData);
		$clear_139(this$static.triggeringInstruction);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_152(this$static.yieldData);
		$clear_14(this$static.commissionData);
		$clear_90(this$static.pegInstructions);
		$clear_25(this$static.discretionInstructions);
		$clear_121(this$static.strategyParametersGrp);
		$clear_135(this$static.trdRegTimestamps);
	}

	function $encode_1(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		this$static.senderCompID[0] != 0 && putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		this$static.targetCompID[0] != 0 && putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 11, this$static.clOrdID, lastIndexTrim(this$static.clOrdID));
		this$static.secondaryClOrdID[0] != 0 && putFixTag_2(out, 526, this$static.secondaryClOrdID, lastIndexTrim(this$static.secondaryClOrdID));
		this$static.clOrdLinkID[0] != 0 && putFixTag_2(out, 583, this$static.clOrdLinkID, lastIndexTrim(this$static.clOrdLinkID));
		neq(fromInt(this$static.parties.noPartyIDs), P7fffffffffffffff_longLit) && $encode_52(this$static.parties, out);
		this$static.tradeOriginationDate[0] != 0 && putFixTag_1(out, 229, this$static.tradeOriginationDate);
		this$static.tradeDate[0] != 0 && putFixTag_1(out, 75, this$static.tradeDate);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		neq(this$static.accountType, P7fffffffffffffff_longLit) && putFixTag_0(out, 581, this$static.accountType);
		this$static.dayBookingInst != 127 && putFixTag(out, 589, this$static.dayBookingInst);
		this$static.bookingUnit != 127 && putFixTag(out, 590, this$static.bookingUnit);
		this$static.preallocMethod != 127 && putFixTag(out, 591, this$static.preallocMethod);
		this$static.allocID[0] != 0 && putFixTag_2(out, 70, this$static.allocID, lastIndexTrim(this$static.allocID));
		neq(fromInt(this$static.preAllocGrp.noAllocs), P7fffffffffffffff_longLit) && $encode_59(this$static.preAllocGrp, out);
		this$static.settlType[0] != 0 && putFixTag_2(out, 63, this$static.settlType, lastIndexTrim(this$static.settlType));
		this$static.settlDate[0] != 0 && putFixTag_1(out, 64, this$static.settlDate);
		this$static.cashMargin != 127 && putFixTag(out, 544, this$static.cashMargin);
		this$static.clearingFeeIndicator[0] != 0 && putFixTag_2(out, 635, this$static.clearingFeeIndicator, lastIndexTrim(this$static.clearingFeeIndicator));
		this$static.handlInst != 127 && putFixTag(out, 21, this$static.handlInst);
		this$static.execInst[0] != 0 && putFixTag_2(out, 18, this$static.execInst, lastIndexTrim(this$static.execInst));
		neq(this$static.minQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 110, this$static.minQty);
		neq(this$static.matchIncrement, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1089, this$static.matchIncrement);
		neq(this$static.maxPriceLevels, P7fffffffffffffff_longLit) && putFixTag_0(out, 1090, this$static.maxPriceLevels);
		neq(this$static.displayInstruction.displayQty, P7fffffffffffffff_longLit) && $encode_21(this$static.displayInstruction, out);
		neq(this$static.maxFloor, P7fffffffffffffff_longLit) && putFixFloatTag(out, 111, this$static.maxFloor);
		this$static.exDestination[0] != 0 && putFixTag_2(out, 100, this$static.exDestination, lastIndexTrim(this$static.exDestination));
		this$static.exDestinationIDSource != 127 && putFixTag(out, 1133, this$static.exDestinationIDSource);
		neq(fromInt(this$static.trdgSesGrp.noTradingSessions), P7fffffffffffffff_longLit) && $encode_90(this$static.trdgSesGrp, out);
		this$static.processCode != 127 && putFixTag(out, 81, this$static.processCode);
		$isSet_1(this$static.instrument) && $encode_31(this$static.instrument, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		neq(this$static.prevClosePx, P7fffffffffffffff_longLit) && putFixFloatTag(out, 140, this$static.prevClosePx);
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		this$static.locateReqd && putFixTag(out, 114, this$static.locateReqd ? 89 : 78);
		this$static.transactTime[0] != 0 && putFixTag_1(out, 60, this$static.transactTime);
		neq(fromInt(this$static.stipulations.noStipulations), P7fffffffffffffff_longLit) && $encode_80(this$static.stipulations, out);
		neq(this$static.qtyType, P7fffffffffffffff_longLit) && putFixTag_0(out, 854, this$static.qtyType);
		neq(this$static.orderQtyData.orderQty, P7fffffffffffffff_longLit) && $encode_51(this$static.orderQtyData, out);
		this$static.ordType != 127 && putFixTag(out, 40, this$static.ordType);
		neq(this$static.priceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 423, this$static.priceType);
		neq(this$static.price, P7fffffffffffffff_longLit) && putFixFloatTag(out, 44, this$static.price);
		this$static.priceProtectionScope != 127 && putFixTag(out, 1092, this$static.priceProtectionScope);
		neq(this$static.stopPx, P7fffffffffffffff_longLit) && putFixFloatTag(out, 99, this$static.stopPx);
		this$static.triggeringInstruction.triggerType != 127 && $encode_92(this$static.triggeringInstruction, out);
		neq(this$static.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && $encode_79(this$static.spreadOrBenchmarkCurveData, out);
		this$static.yieldData.yieldType[0] != 0 && $encode_106(this$static.yieldData, out);
		this$static.currency[0] != 0 && putFixTag_2(out, 15, this$static.currency, lastIndexTrim(this$static.currency));
		this$static.complianceID[0] != 0 && putFixTag_2(out, 376, this$static.complianceID, lastIndexTrim(this$static.complianceID));
		this$static.solicitedFlag && putFixTag(out, 377, this$static.solicitedFlag ? 89 : 78);
		this$static.iOIID[0] != 0 && putFixTag_2(out, 23, this$static.iOIID, lastIndexTrim(this$static.iOIID));
		this$static.quoteID[0] != 0 && putFixTag_2(out, 117, this$static.quoteID, lastIndexTrim(this$static.quoteID));
		this$static.timeInForce != 127 && putFixTag(out, 59, this$static.timeInForce);
		this$static.effectiveTime[0] != 0 && putFixTag_1(out, 168, this$static.effectiveTime);
		this$static.expireDate[0] != 0 && putFixTag_1(out, 432, this$static.expireDate);
		this$static.expireTime[0] != 0 && putFixTag_1(out, 126, this$static.expireTime);
		neq(this$static.gTBookingInst, P7fffffffffffffff_longLit) && putFixTag_0(out, 427, this$static.gTBookingInst);
		neq(this$static.commissionData.commission, P7fffffffffffffff_longLit) && $encode_13(this$static.commissionData, out);
		this$static.orderCapacity != 127 && putFixTag(out, 528, this$static.orderCapacity);
		this$static.orderRestrictions[0] != 0 && putFixTag_2(out, 529, this$static.orderRestrictions, lastIndexTrim(this$static.orderRestrictions));
		this$static.preTradeAnonymity && putFixTag(out, 1091, this$static.preTradeAnonymity ? 89 : 78);
		neq(this$static.custOrderCapacity, P7fffffffffffffff_longLit) && putFixTag_0(out, 582, this$static.custOrderCapacity);
		this$static.forexReq && putFixTag(out, 121, this$static.forexReq ? 89 : 78);
		this$static.settlCurrency[0] != 0 && putFixTag_2(out, 120, this$static.settlCurrency, lastIndexTrim(this$static.settlCurrency));
		neq(this$static.bookingType, P7fffffffffffffff_longLit) && putFixTag_0(out, 775, this$static.bookingType);
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		this$static.settlDate2[0] != 0 && putFixTag_1(out, 193, this$static.settlDate2);
		neq(this$static.orderQty2, P7fffffffffffffff_longLit) && putFixFloatTag(out, 192, this$static.orderQty2);
		neq(this$static.price2, P7fffffffffffffff_longLit) && putFixFloatTag(out, 640, this$static.price2);
		this$static.positionEffect != 127 && putFixTag(out, 77, this$static.positionEffect);
		neq(this$static.coveredOrUncovered, P7fffffffffffffff_longLit) && putFixTag_0(out, 203, this$static.coveredOrUncovered);
		neq(this$static.maxShow, P7fffffffffffffff_longLit) && putFixFloatTag(out, 210, this$static.maxShow);
		neq(this$static.pegInstructions.pegOffsetValue, P7fffffffffffffff_longLit) && $encode_54(this$static.pegInstructions, out);
		this$static.discretionInstructions.discretionInst != 127 && $encode_20(this$static.discretionInstructions, out);
		neq(this$static.targetStrategy, P7fffffffffffffff_longLit) && putFixTag_0(out, 847, this$static.targetStrategy);
		neq(fromInt(this$static.strategyParametersGrp.noStrategyParameters), P7fffffffffffffff_longLit) && $encode_82(this$static.strategyParametersGrp, out);
		this$static.targetStrategyParameters[0] != 0 && putFixTag_2(out, 848, this$static.targetStrategyParameters, lastIndexTrim(this$static.targetStrategyParameters));
		neq(this$static.participationRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 849, this$static.participationRate);
		this$static.cancellationRights != 127 && putFixTag(out, 480, this$static.cancellationRights);
		this$static.moneyLaunderingStatus != 127 && putFixTag(out, 481, this$static.moneyLaunderingStatus);
		this$static.registID[0] != 0 && putFixTag_2(out, 513, this$static.registID, lastIndexTrim(this$static.registID));
		this$static.designation[0] != 0 && putFixTag_2(out, 494, this$static.designation, lastIndexTrim(this$static.designation));
		this$static.manualOrderIndicator && putFixTag(out, 1028, this$static.manualOrderIndicator ? 89 : 78);
		this$static.custDirectedOrder && putFixTag(out, 1029, this$static.custDirectedOrder ? 89 : 78);
		this$static.receivedDeptID[0] != 0 && putFixTag_2(out, 1030, this$static.receivedDeptID, lastIndexTrim(this$static.receivedDeptID));
		this$static.custOrderHandlingInst[0] != 0 && putFixTag_2(out, 1031, this$static.custOrderHandlingInst, lastIndexTrim(this$static.custOrderHandlingInst));
		neq(this$static.orderHandlingInstSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 1032, this$static.orderHandlingInstSource);
		this$static.refOrderID[0] != 0 && putFixTag_2(out, 1080, this$static.refOrderID, lastIndexTrim(this$static.refOrderID));
		this$static.refOrderIDSource != 127 && putFixTag(out, 1081, this$static.refOrderIDSource);
		neq(fromInt(this$static.trdRegTimestamps.noTrdRegTimestamps), P7fffffffffffffff_longLit) && $encode_88(this$static.trdRegTimestamps, out);
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function $getAll_6(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 11, value_0, this$static.clOrdID);
				break;
			case 526:
				this$static.secondaryClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 526, value_0, this$static.secondaryClOrdID);
				break;
			case 583:
				this$static.clOrdLinkID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 583, value_0, this$static.clOrdLinkID);
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 229:
				this$static.tradeOriginationDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 229, value_0, this$static.tradeOriginationDate);
				break;
			case 75:
				this$static.tradeDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 75, value_0, this$static.tradeDate);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 589:
				this$static.dayBookingInst = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 589, value_0);
				if (!isValid_32(this$static.dayBookingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.dayBookingInst + ') for tag'), P24d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 590:
				this$static.bookingUnit = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 590, value_0);
				if (!isValid_7(this$static.bookingUnit)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.bookingUnit + ') for tag'), P24e_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 591:
				this$static.preallocMethod = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 591, value_0);
				if (!isValid_114(this$static.preallocMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.preallocMethod + ') for tag'), P24f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 70:
				this$static.allocID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 70, value_0, this$static.allocID);
				break;
			case 78:
				this$static.preAllocGrp.noAllocs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 78, value_0);
				$getAll_71(this$static.preAllocGrp, this$static.preAllocGrp.noAllocs, value_0);
				break;
			case 63:
				this$static.settlType = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 63, value_0, this$static.settlType);
				if (!isValid_149(this$static.settlType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlType + ') for tag'), P3f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 64:
				this$static.settlDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 64, value_0, this$static.settlDate);
				break;
			case 544:
				this$static.cashMargin = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 544, value_0);
				if (!isValid_10(this$static.cashMargin)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.cashMargin + ') for tag'), P220_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 635:
				this$static.clearingFeeIndicator = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 635, value_0, this$static.clearingFeeIndicator);
				if (!isValid_11(this$static.clearingFeeIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.clearingFeeIndicator + ') for tag'), P27b_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 21:
				this$static.handlInst = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 21, value_0);
				if (!isValid_62(this$static.handlInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.handlInst + ') for tag'), P15_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 18:
				this$static.execInst = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 18, value_0, this$static.execInst);
				if (!isValid_50(this$static.execInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.execInst + ') for tag'), P12_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 110:
				this$static.minQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 110, value_0);
				break;
			case 1089:
				this$static.matchIncrement = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1089, value_0);
				break;
			case 1090:
				this$static.maxPriceLevels = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1090, value_0));
				break;
			case 1138:
				$getAll_31(this$static.displayInstruction, 1138, value_0);
				break;
			case 111:
				this$static.maxFloor = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 111, value_0);
				break;
			case 100:
				this$static.exDestination = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 100, value_0, this$static.exDestination);
				break;
			case 1133:
				this$static.exDestinationIDSource = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1133, value_0);
				if (!isValid_48(this$static.exDestinationIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.exDestinationIDSource + ') for tag'), P46d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 386:
				this$static.trdgSesGrp.noTradingSessions = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 386, value_0);
				$getAll_94(this$static.trdgSesGrp, this$static.trdgSesGrp.noTradingSessions, value_0);
				break;
			case 81:
				this$static.processCode = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 81, value_0);
				if (!isValid_120(this$static.processCode)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.processCode + ') for tag'), P51_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 167:
				$getAll_40(this$static.instrument, 167, value_0);
				break;
			case 22:
				$getAll_40(this$static.instrument, 22, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 140:
				this$static.prevClosePx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 140, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 114:
				this$static.locateReqd = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 114, value_0);
				if (!isValid_71(this$static.locateReqd)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.locateReqd + ') for tag'), P72_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 60, value_0, this$static.transactTime);
				break;
			case 232:
				this$static.stipulations.noStipulations = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 232, value_0);
				$getAll_85(this$static.stipulations, this$static.stipulations.noStipulations, value_0);
				break;
			case 854:
				this$static.qtyType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 854, value_0));
				if (!isValid_123(this$static.qtyType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.qtyType) + ') for tag'), P356_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 38:
				$getAll_66(this$static.orderQtyData, 38, value_0);
				break;
			case 40:
				this$static.ordType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 40, value_0);
				if (!isValid_89(this$static.ordType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordType + ') for tag'), P28_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 423:
				this$static.priceType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 423, value_0));
				if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 44:
				this$static.price = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 44, value_0);
				break;
			case 1092:
				this$static.priceProtectionScope = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1092, value_0);
				if (!isValid_116(this$static.priceProtectionScope)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.priceProtectionScope + ') for tag'), P444_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 99:
				this$static.stopPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 99, value_0);
				break;
			case 1100:
				$getAll_95(this$static.triggeringInstruction, 1100, value_0);
				break;
			case 218:
				$getAll_84(this$static.spreadOrBenchmarkCurveData, 218, value_0);
				break;
			case 235:
				$getAll_103(this$static.yieldData, 235, value_0);
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 15, value_0, this$static.currency);
				break;
			case 376:
				this$static.complianceID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 376, value_0, this$static.complianceID);
				break;
			case 377:
				this$static.solicitedFlag = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 377, value_0);
				if (!isValid_151(this$static.solicitedFlag)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.solicitedFlag + ') for tag'), P179_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 23:
				this$static.iOIID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 23, value_0, this$static.iOIID);
				break;
			case 117:
				this$static.quoteID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 117, value_0, this$static.quoteID);
				break;
			case 59:
				this$static.timeInForce = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 59, value_0);
				if (!isValid_162(this$static.timeInForce)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.timeInForce + ') for tag'), P3b_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 168:
				this$static.effectiveTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 168, value_0, this$static.effectiveTime);
				break;
			case 432:
				this$static.expireDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 432, value_0, this$static.expireDate);
				break;
			case 126:
				this$static.expireTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 126, value_0, this$static.expireTime);
				break;
			case 427:
				this$static.gTBookingInst = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 427, value_0));
				if (!isValid_60(this$static.gTBookingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.gTBookingInst) + ') for tag'), P1ab_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 12:
				$getAll_24(this$static.commissionData, 12, value_0);
				break;
			case 528:
				this$static.orderCapacity = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 528, value_0);
				if (!isValid_90(this$static.orderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderCapacity + ') for tag'), P210_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 529:
				this$static.orderRestrictions = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 529, value_0, this$static.orderRestrictions);
				if (!isValid_93(this$static.orderRestrictions)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderRestrictions + ') for tag'), P211_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1091:
				this$static.preTradeAnonymity = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1091, value_0);
				break;
			case 582:
				this$static.custOrderCapacity = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 582, value_0));
				if (!isValid_27(this$static.custOrderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.custOrderCapacity) + ') for tag'), P246_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 121:
				this$static.forexReq = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 121, value_0);
				if (!isValid_58(this$static.forexReq)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.forexReq + ') for tag'), P79_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 120:
				this$static.settlCurrency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 120, value_0, this$static.settlCurrency);
				break;
			case 775:
				this$static.bookingType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 775, value_0));
				if (!isValid_6(this$static.bookingType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.bookingType) + ') for tag'), P307_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 355, value_0, this$static.encodedText);
				break;
			case 193:
				this$static.settlDate2 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 193, value_0, this$static.settlDate2);
				break;
			case 192:
				this$static.orderQty2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 192, value_0);
				break;
			case 640:
				this$static.price2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 640, value_0);
				break;
			case 77:
				this$static.positionEffect = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 77, value_0);
				if (!isValid_113(this$static.positionEffect)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.positionEffect + ') for tag'), P4d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 203:
				this$static.coveredOrUncovered = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 203, value_0));
				if (!isValid_25(this$static.coveredOrUncovered)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.coveredOrUncovered) + ') for tag'), Pcb_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 210:
				this$static.maxShow = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 210, value_0);
				break;
			case 211:
				$getAll_68(this$static.pegInstructions, 211, value_0);
				break;
			case 388:
				$getAll_30(this$static.discretionInstructions, 388, value_0);
				break;
			case 847:
				this$static.targetStrategy = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 847, value_0));
				if (!isValid_158(this$static.targetStrategy)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.targetStrategy) + ') for tag'), P34f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 957:
				this$static.strategyParametersGrp.noStrategyParameters = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 957, value_0);
				$getAll_86(this$static.strategyParametersGrp, this$static.strategyParametersGrp.noStrategyParameters, value_0);
				break;
			case 848:
				this$static.targetStrategyParameters = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 848, value_0, this$static.targetStrategyParameters);
				break;
			case 849:
				this$static.participationRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 849, value_0);
				break;
			case 480:
				this$static.cancellationRights = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 480, value_0);
				if (!isValid_9(this$static.cancellationRights)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.cancellationRights + ') for tag'), P1e0_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 481:
				this$static.moneyLaunderingStatus = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 481, value_0);
				if (!isValid_80(this$static.moneyLaunderingStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.moneyLaunderingStatus + ') for tag'), P1e1_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 513:
				this$static.registID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 513, value_0, this$static.registID);
				break;
			case 494:
				this$static.designation = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 494, value_0, this$static.designation);
				break;
			case 1028:
				this$static.manualOrderIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1028, value_0);
				break;
			case 1029:
				this$static.custDirectedOrder = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1029, value_0);
				break;
			case 1030:
				this$static.receivedDeptID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1030, value_0, this$static.receivedDeptID);
				break;
			case 1031:
				this$static.custOrderHandlingInst = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1031, value_0, this$static.custOrderHandlingInst);
				if (!isValid_28(this$static.custOrderHandlingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.custOrderHandlingInst + ') for tag'), P407_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1032:
				this$static.orderHandlingInstSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1032, value_0));
				if (!isValid_92(this$static.orderHandlingInstSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.orderHandlingInstSource) + ') for tag'), P408_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1080:
				this$static.refOrderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1080, value_0, this$static.refOrderID);
				break;
			case 1081:
				this$static.refOrderIDSource = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 1081, value_0);
				if (!isValid_130(this$static.refOrderIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.refOrderIDSource + ') for tag'), P439_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 768:
				this$static.trdRegTimestamps.noTrdRegTimestamps = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 768, value_0);
				$getAll_93(this$static.trdRegTimestamps, this$static.trdRegTimestamps.noTrdRegTimestamps, value_0);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1), 10, value_0));
				id_0 = $checkRequiredTags_3(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixNewOrderSingle_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		$$init_6(this);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdLinkID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.tradeOriginationDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.allocID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.preAllocGrp = new FixPreAllocGrp_0;
		this.settlType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingFeeIndicator = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execInst = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.displayInstruction = new FixDisplayInstruction_0;
		this.exDestination = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.trdgSesGrp = new FixTrdgSesGrp_0;
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.stipulations = new FixStipulations_0;
		this.orderQtyData = new FixOrderQtyData_0;
		this.triggeringInstruction = new FixTriggeringInstruction_0;
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.yieldData = new FixYieldData_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.complianceID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.iOIID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quoteID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.effectiveTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.expireDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.expireTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.commissionData = new FixCommissionData_0;
		this.orderRestrictions = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.settlDate2 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.pegInstructions = new FixPegInstructions_0;
		this.discretionInstructions = new FixDiscretionInstructions_0;
		this.strategyParametersGrp = new FixStrategyParametersGrp_0;
		this.targetStrategyParameters = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.registID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.designation = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.receivedDeptID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.custOrderHandlingInst = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.refOrderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.trdRegTimestamps = new FixTrdRegTimestamps_0;
		$clear_3(this);
		this.msgTypeInt = 68;
	}

	defineSeed(520, 322, makeCastMap([Q$FixMessage, Q$FixNewOrderSingle]), FixNewOrderSingle_0);
	_.equals$ = function equals_21(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNewOrderSingle)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		equals_12(this.clOrdLinkID, msg.clOrdLinkID) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		if (this.dayBookingInst != msg.dayBookingInst) {
			ret = false;
			$print((valueOf(this.dayBookingInst), valueOf(msg.dayBookingInst)));
		}
		if (this.bookingUnit != msg.bookingUnit) {
			ret = false;
			$print((valueOf(this.bookingUnit), valueOf(msg.bookingUnit)));
		}
		if (this.preallocMethod != msg.preallocMethod) {
			ret = false;
			$print((valueOf(this.preallocMethod), valueOf(msg.preallocMethod)));
		}
		equals_12(this.allocID, msg.allocID) || (ret = false);
		$equals_90(this.preAllocGrp, msg.preAllocGrp) || (ret = false);
		equals_12(this.settlType, msg.settlType) || (ret = false);
		if (this.cashMargin != msg.cashMargin) {
			ret = false;
			$print((valueOf(this.cashMargin), valueOf(msg.cashMargin)));
		}
		equals_12(this.clearingFeeIndicator, msg.clearingFeeIndicator) || (ret = false);
		if (this.handlInst != msg.handlInst) {
			ret = false;
			$print((valueOf(this.handlInst), valueOf(msg.handlInst)));
		}
		equals_12(this.execInst, msg.execInst) || (ret = false);
		if (neq(this.minQty, msg.minQty)) {
			ret = false;
			$print((valueOf_1(this.minQty), valueOf_1(msg.minQty)));
		}
		if (neq(this.matchIncrement, msg.matchIncrement)) {
			ret = false;
			$print((valueOf_1(this.matchIncrement), valueOf_1(msg.matchIncrement)));
		}
		if (neq(this.maxPriceLevels, msg.maxPriceLevels)) {
			ret = false;
			$print((valueOf_1(this.maxPriceLevels), valueOf_1(msg.maxPriceLevels)));
		}
		$equals_16(this.displayInstruction, msg.displayInstruction) || (ret = false);
		if (neq(this.maxFloor, msg.maxFloor)) {
			ret = false;
			$print((valueOf_1(this.maxFloor), valueOf_1(msg.maxFloor)));
		}
		equals_12(this.exDestination, msg.exDestination) || (ret = false);
		if (this.exDestinationIDSource != msg.exDestinationIDSource) {
			ret = false;
			$print((valueOf(this.exDestinationIDSource), valueOf(msg.exDestinationIDSource)));
		}
		$equals_134(this.trdgSesGrp, msg.trdgSesGrp) || (ret = false);
		if (this.processCode != msg.processCode) {
			ret = false;
			$print((valueOf(this.processCode), valueOf(msg.processCode)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (neq(this.prevClosePx, msg.prevClosePx)) {
			ret = false;
			$print((valueOf_1(this.prevClosePx), valueOf_1(msg.prevClosePx)));
		}
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		if (this.locateReqd != msg.locateReqd) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_115(this.stipulations, msg.stipulations) || (ret = false);
		if (neq(this.qtyType, msg.qtyType)) {
			ret = false;
			$print((valueOf_1(this.qtyType), valueOf_1(msg.qtyType)));
		}
		$equals_82(this.orderQtyData, msg.orderQtyData) || (ret = false);
		if (this.ordType != msg.ordType) {
			ret = false;
			$print((valueOf(this.ordType), valueOf(msg.ordType)));
		}
		if (neq(this.priceType, msg.priceType)) {
			ret = false;
			$print((valueOf_1(this.priceType), valueOf_1(msg.priceType)));
		}
		if (neq(this.price, msg.price)) {
			ret = false;
			$print((valueOf_1(this.price), valueOf_1(msg.price)));
		}
		if (this.priceProtectionScope != msg.priceProtectionScope) {
			ret = false;
			$print((valueOf(this.priceProtectionScope), valueOf(msg.priceProtectionScope)));
		}
		if (neq(this.stopPx, msg.stopPx)) {
			ret = false;
			$print((valueOf_1(this.stopPx), valueOf_1(msg.stopPx)));
		}
		$equals_136(this.triggeringInstruction, msg.triggeringInstruction) || (ret = false);
		$equals_114(this.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		$equals_150(this.yieldData, msg.yieldData) || (ret = false);
		equals_12(this.currency, msg.currency) || (ret = false);
		equals_12(this.complianceID, msg.complianceID) || (ret = false);
		if (this.solicitedFlag != msg.solicitedFlag) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.iOIID, msg.iOIID) || (ret = false);
		equals_12(this.quoteID, msg.quoteID) || (ret = false);
		if (this.timeInForce != msg.timeInForce) {
			ret = false;
			$print((valueOf(this.timeInForce), valueOf(msg.timeInForce)));
		}
		if (neq(this.gTBookingInst, msg.gTBookingInst)) {
			ret = false;
			$print((valueOf_1(this.gTBookingInst), valueOf_1(msg.gTBookingInst)));
		}
		$equals_4(this.commissionData, msg.commissionData) || (ret = false);
		if (this.orderCapacity != msg.orderCapacity) {
			ret = false;
			$print((valueOf(this.orderCapacity), valueOf(msg.orderCapacity)));
		}
		equals_12(this.orderRestrictions, msg.orderRestrictions) || (ret = false);
		if (this.preTradeAnonymity != msg.preTradeAnonymity) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.custOrderCapacity, msg.custOrderCapacity)) {
			ret = false;
			$print((valueOf_1(this.custOrderCapacity), valueOf_1(msg.custOrderCapacity)));
		}
		if (this.forexReq != msg.forexReq) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		if (neq(this.bookingType, msg.bookingType)) {
			ret = false;
			$print((valueOf_1(this.bookingType), valueOf_1(msg.bookingType)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		if (neq(this.orderQty2, msg.orderQty2)) {
			ret = false;
			$print((valueOf_1(this.orderQty2), valueOf_1(msg.orderQty2)));
		}
		if (neq(this.price2, msg.price2)) {
			ret = false;
			$print((valueOf_1(this.price2), valueOf_1(msg.price2)));
		}
		if (this.positionEffect != msg.positionEffect) {
			ret = false;
			$print((valueOf(this.positionEffect), valueOf(msg.positionEffect)));
		}
		if (neq(this.coveredOrUncovered, msg.coveredOrUncovered)) {
			ret = false;
			$print((valueOf_1(this.coveredOrUncovered), valueOf_1(msg.coveredOrUncovered)));
		}
		if (neq(this.maxShow, msg.maxShow)) {
			ret = false;
			$print((valueOf_1(this.maxShow), valueOf_1(msg.maxShow)));
		}
		$equals_85(this.pegInstructions, msg.pegInstructions) || (ret = false);
		$equals_15(this.discretionInstructions, msg.discretionInstructions) || (ret = false);
		if (neq(this.targetStrategy, msg.targetStrategy)) {
			ret = false;
			$print((valueOf_1(this.targetStrategy), valueOf_1(msg.targetStrategy)));
		}
		$equals_117(this.strategyParametersGrp, msg.strategyParametersGrp) || (ret = false);
		equals_12(this.targetStrategyParameters, msg.targetStrategyParameters) || (ret = false);
		if (neq(this.participationRate, msg.participationRate)) {
			ret = false;
			$print((valueOf_1(this.participationRate), valueOf_1(msg.participationRate)));
		}
		if (this.cancellationRights != msg.cancellationRights) {
			ret = false;
			$print((valueOf(this.cancellationRights), valueOf(msg.cancellationRights)));
		}
		if (this.moneyLaunderingStatus != msg.moneyLaunderingStatus) {
			ret = false;
			$print((valueOf(this.moneyLaunderingStatus), valueOf(msg.moneyLaunderingStatus)));
		}
		equals_12(this.registID, msg.registID) || (ret = false);
		equals_12(this.designation, msg.designation) || (ret = false);
		if (this.manualOrderIndicator != msg.manualOrderIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.custDirectedOrder != msg.custDirectedOrder) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.receivedDeptID, msg.receivedDeptID) || (ret = false);
		equals_12(this.custOrderHandlingInst, msg.custOrderHandlingInst) || (ret = false);
		if (neq(this.orderHandlingInstSource, msg.orderHandlingInstSource)) {
			ret = false;
			$print((valueOf_1(this.orderHandlingInstSource), valueOf_1(msg.orderHandlingInstSource)));
		}
		equals_12(this.refOrderID, msg.refOrderID) || (ret = false);
		if (this.refOrderIDSource != msg.refOrderIDSource) {
			ret = false;
			$print((valueOf(this.refOrderIDSource), valueOf(msg.refOrderIDSource)));
		}
		$equals_132(this.trdRegTimestamps, msg.trdRegTimestamps) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_10() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'NewOrderSingle' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), NEWORDERSINGLE_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			this.senderCompID[0] != 0 && (s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep));
			this.targetCompID[0] != 0 && (s += 'TargetCompID(56)=' + charToString(sep));
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			neq(this.msgSeqNum, P7fffffffffffffff_longLit) && (s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep));
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			this.sendingTime[0] != 0 && (s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep));
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep);
			this.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this.secondaryClOrdID)) + charToString(sep));
			this.clOrdLinkID[0] != 0 && (s += 'ClOrdLinkID(583)=' + $trim(_String(this.clOrdLinkID)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.tradeOriginationDate[0] != 0 && (s += 'TradeOriginationDate(229)=' + $trim(_String(this.tradeOriginationDate)) + charToString(sep));
			this.tradeDate[0] != 0 && (s += 'TradeDate(75)=' + $trim(_String(this.tradeDate)) + charToString(sep));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.dayBookingInst != 127 && (s += 'DayBookingInst(589)=' + $trim('' + this.dayBookingInst) + charToString(sep));
			this.bookingUnit != 127 && (s += 'BookingUnit(590)=' + $trim('' + this.bookingUnit) + charToString(sep));
			this.preallocMethod != 127 && (s += 'PreallocMethod(591)=' + $trim('' + this.preallocMethod) + charToString(sep));
			this.allocID[0] != 0 && (s += 'AllocID(70)=' + $trim(_String(this.allocID)) + charToString(sep));
			neq(fromInt(this.preAllocGrp.noAllocs), P7fffffffffffffff_longLit) && (s += $trim($toString_91(this.preAllocGrp)));
			this.settlType[0] != 0 && (s += 'SettlType(63)=' + $trim(_String(this.settlType)) + charToString(sep));
			this.settlDate[0] != 0 && (s += 'SettlDate(64)=' + $trim(_String(this.settlDate)) + charToString(sep));
			this.cashMargin != 127 && (s += 'CashMargin(544)=' + $trim('' + this.cashMargin) + charToString(sep));
			this.clearingFeeIndicator[0] != 0 && (s += 'ClearingFeeIndicator(635)=' + $trim(_String(this.clearingFeeIndicator)) + charToString(sep));
			this.handlInst != 127 && (s += 'HandlInst(21)=' + $trim('' + this.handlInst) + charToString(sep));
			this.execInst[0] != 0 && (s += 'ExecInst(18)=' + $trim(_String(this.execInst)) + charToString(sep));
			neq(this.minQty, P7fffffffffffffff_longLit) && (s += 'MinQty(110)=' + $trim('' + toString_183(this.minQty)) + charToString(sep));
			neq(this.matchIncrement, P7fffffffffffffff_longLit) && (s += 'MatchIncrement(1089)=' + $trim('' + toString_183(this.matchIncrement)) + charToString(sep));
			neq(this.maxPriceLevels, P7fffffffffffffff_longLit) && (s += 'MaxPriceLevels(1090)=' + $trim('' + toString_183(this.maxPriceLevels)) + charToString(sep));
			neq(this.displayInstruction.displayQty, P7fffffffffffffff_longLit) && (s += $trim($toString_17(this.displayInstruction)));
			neq(this.maxFloor, P7fffffffffffffff_longLit) && (s += 'MaxFloor(111)=' + $trim('' + toString_183(this.maxFloor)) + charToString(sep));
			this.exDestination[0] != 0 && (s += 'ExDestination(100)=' + $trim(_String(this.exDestination)) + charToString(sep));
			this.exDestinationIDSource != 127 && (s += 'ExDestinationIDSource(1133)=' + $trim('' + this.exDestinationIDSource) + charToString(sep));
			neq(fromInt(this.trdgSesGrp.noTradingSessions), P7fffffffffffffff_longLit) && (s += $trim($toString_135(this.trdgSesGrp)));
			this.processCode != 127 && (s += 'ProcessCode(81)=' + $trim('' + this.processCode) + charToString(sep));
			this.instrument.securityID[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			neq(this.prevClosePx, P7fffffffffffffff_longLit) && (s += 'PrevClosePx(140)=' + $trim('' + toString_183(this.prevClosePx)) + charToString(sep));
			s += 'Side(54)=' + $trim('' + this.side) + charToString(sep);
			this.locateReqd && (s += 'LocateReqd(114)=' + $trim('' + this.locateReqd) + charToString(sep));
			s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep);
			neq(fromInt(this.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this.stipulations)));
			neq(this.qtyType, P7fffffffffffffff_longLit) && (s += 'QtyType(854)=' + $trim('' + toString_183(this.qtyType)) + charToString(sep));
			neq(this.orderQtyData.orderQty, P7fffffffffffffff_longLit) && (s += $trim($toString_83(this.orderQtyData)));
			s += 'OrdType(40)=' + $trim('' + this.ordType) + charToString(sep);
			neq(this.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this.priceType)) + charToString(sep));
			neq(this.price, P7fffffffffffffff_longLit) && (s += 'Price(44)=' + $trim('' + toString_183(this.price)) + charToString(sep));
			this.priceProtectionScope != 127 && (s += 'PriceProtectionScope(1092)=' + $trim('' + this.priceProtectionScope) + charToString(sep));
			neq(this.stopPx, P7fffffffffffffff_longLit) && (s += 'StopPx(99)=' + $trim('' + toString_183(this.stopPx)) + charToString(sep));
			this.triggeringInstruction.triggerType != 127 && (s += $trim($toString_137(this.triggeringInstruction)));
			neq(this.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this.spreadOrBenchmarkCurveData)));
			this.yieldData.yieldType[0] != 0 && (s += $trim($toString_151(this.yieldData)));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			this.complianceID[0] != 0 && (s += 'ComplianceID(376)=' + $trim(_String(this.complianceID)) + charToString(sep));
			this.solicitedFlag && (s += 'SolicitedFlag(377)=' + $trim('' + this.solicitedFlag) + charToString(sep));
			this.iOIID[0] != 0 && (s += 'IOIID(23)=' + $trim(_String(this.iOIID)) + charToString(sep));
			this.quoteID[0] != 0 && (s += 'QuoteID(117)=' + $trim(_String(this.quoteID)) + charToString(sep));
			this.timeInForce != 127 && (s += 'TimeInForce(59)=' + $trim('' + this.timeInForce) + charToString(sep));
			this.effectiveTime[0] != 0 && (s += 'EffectiveTime(168)=' + $trim(_String(this.effectiveTime)) + charToString(sep));
			this.expireDate[0] != 0 && (s += 'ExpireDate(432)=' + $trim(_String(this.expireDate)) + charToString(sep));
			this.expireTime[0] != 0 && (s += 'ExpireTime(126)=' + $trim(_String(this.expireTime)) + charToString(sep));
			neq(this.gTBookingInst, P7fffffffffffffff_longLit) && (s += 'GTBookingInst(427)=' + $trim('' + toString_183(this.gTBookingInst)) + charToString(sep));
			neq(this.commissionData.commission, P7fffffffffffffff_longLit) && (s += $trim($toString_5(this.commissionData)));
			this.orderCapacity != 127 && (s += 'OrderCapacity(528)=' + $trim('' + this.orderCapacity) + charToString(sep));
			this.orderRestrictions[0] != 0 && (s += 'OrderRestrictions(529)=' + $trim(_String(this.orderRestrictions)) + charToString(sep));
			this.preTradeAnonymity && (s += 'PreTradeAnonymity(1091)=' + $trim('' + this.preTradeAnonymity) + charToString(sep));
			neq(this.custOrderCapacity, P7fffffffffffffff_longLit) && (s += 'CustOrderCapacity(582)=' + $trim('' + toString_183(this.custOrderCapacity)) + charToString(sep));
			this.forexReq && (s += 'ForexReq(121)=' + $trim('' + this.forexReq) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			neq(this.bookingType, P7fffffffffffffff_longLit) && (s += 'BookingType(775)=' + $trim('' + toString_183(this.bookingType)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			this.settlDate2[0] != 0 && (s += 'SettlDate2(193)=' + $trim(_String(this.settlDate2)) + charToString(sep));
			neq(this.orderQty2, P7fffffffffffffff_longLit) && (s += 'OrderQty2(192)=' + $trim('' + toString_183(this.orderQty2)) + charToString(sep));
			neq(this.price2, P7fffffffffffffff_longLit) && (s += 'Price2(640)=' + $trim('' + toString_183(this.price2)) + charToString(sep));
			this.positionEffect != 127 && (s += 'PositionEffect(77)=' + $trim('' + this.positionEffect) + charToString(sep));
			neq(this.coveredOrUncovered, P7fffffffffffffff_longLit) && (s += 'CoveredOrUncovered(203)=' + $trim('' + toString_183(this.coveredOrUncovered)) + charToString(sep));
			neq(this.maxShow, P7fffffffffffffff_longLit) && (s += 'MaxShow(210)=' + $trim('' + toString_183(this.maxShow)) + charToString(sep));
			neq(this.pegInstructions.pegOffsetValue, P7fffffffffffffff_longLit) && (s += $trim($toString_86(this.pegInstructions)));
			this.discretionInstructions.discretionInst != 127 && (s += $trim($toString_16(this.discretionInstructions)));
			neq(this.targetStrategy, P7fffffffffffffff_longLit) && (s += 'TargetStrategy(847)=' + $trim('' + toString_183(this.targetStrategy)) + charToString(sep));
			neq(fromInt(this.strategyParametersGrp.noStrategyParameters), P7fffffffffffffff_longLit) && (s += $trim($toString_118(this.strategyParametersGrp)));
			this.targetStrategyParameters[0] != 0 && (s += 'TargetStrategyParameters(848)=' + $trim(_String(this.targetStrategyParameters)) + charToString(sep));
			neq(this.participationRate, P7fffffffffffffff_longLit) && (s += 'ParticipationRate(849)=' + $trim('' + toString_183(this.participationRate)) + charToString(sep));
			this.cancellationRights != 127 && (s += 'CancellationRights(480)=' + $trim('' + this.cancellationRights) + charToString(sep));
			this.moneyLaunderingStatus != 127 && (s += 'MoneyLaunderingStatus(481)=' + $trim('' + this.moneyLaunderingStatus) + charToString(sep));
			this.registID[0] != 0 && (s += 'RegistID(513)=' + $trim(_String(this.registID)) + charToString(sep));
			this.designation[0] != 0 && (s += 'Designation(494)=' + $trim(_String(this.designation)) + charToString(sep));
			this.manualOrderIndicator && (s += 'ManualOrderIndicator(1028)=' + $trim('' + this.manualOrderIndicator) + charToString(sep));
			this.custDirectedOrder && (s += 'CustDirectedOrder(1029)=' + $trim('' + this.custDirectedOrder) + charToString(sep));
			this.receivedDeptID[0] != 0 && (s += 'ReceivedDeptID(1030)=' + $trim(_String(this.receivedDeptID)) + charToString(sep));
			this.custOrderHandlingInst[0] != 0 && (s += 'CustOrderHandlingInst(1031)=' + $trim(_String(this.custOrderHandlingInst)) + charToString(sep));
			neq(this.orderHandlingInstSource, P7fffffffffffffff_longLit) && (s += 'OrderHandlingInstSource(1032)=' + $trim('' + toString_183(this.orderHandlingInstSource)) + charToString(sep));
			this.refOrderID[0] != 0 && (s += 'RefOrderID(1080)=' + $trim(_String(this.refOrderID)) + charToString(sep));
			this.refOrderIDSource != 127 && (s += 'RefOrderIDSource(1081)=' + $trim('' + this.refOrderIDSource) + charToString(sep));
			neq(fromInt(this.trdRegTimestamps.noTrdRegTimestamps), P7fffffffffffffff_longLit) && (s += $trim($toString_133(this.trdRegTimestamps)));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.bookingType = P0_longLit;
	_.bookingUnit = 0;
	_.cancellationRights = 0;
	_.cashMargin = 0;
	_.coveredOrUncovered = P0_longLit;
	_.custDirectedOrder = false;
	_.custOrderCapacity = P0_longLit;
	_.dayBookingInst = 0;
	_.encodedTextLen = P0_longLit;
	_.exDestinationIDSource = 0;
	_.forexReq = false;
	_.gTBookingInst = P0_longLit;
	_.handlInst = 0;
	_.locateReqd = false;
	_.manualOrderIndicator = false;
	_.matchIncrement = P0_longLit;
	_.maxFloor = P0_longLit;
	_.maxPriceLevels = P0_longLit;
	_.maxShow = P0_longLit;
	_.minQty = P0_longLit;
	_.moneyLaunderingStatus = 0;
	_.ordType = 0;
	_.orderCapacity = 0;
	_.orderHandlingInstSource = P0_longLit;
	_.orderQty2 = P0_longLit;
	_.participationRate = P0_longLit;
	_.positionEffect = 0;
	_.preTradeAnonymity = false;
	_.preallocMethod = 0;
	_.prevClosePx = P0_longLit;
	_.price = P0_longLit;
	_.price2 = P0_longLit;
	_.priceProtectionScope = 0;
	_.priceType = P0_longLit;
	_.processCode = 0;
	_.qtyType = P0_longLit;
	_.refOrderIDSource = 0;
	_.side = 0;
	_.solicitedFlag = false;
	_.stopPx = P0_longLit;
	_.targetStrategy = P0_longLit;
	_.timeInForce = 0;

	function $checkRequiredTags_4(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.orderID[0] == 0) return 37;
		if (this$static.clOrdID[0] == 0) return 11;
		if (this$static.origClOrdID[0] == 0) return 41;
		if (this$static.ordStatus == 127) return 39;
		if (this$static.cxlRejResponseTo == 127) return 434;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_7(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 37:
				this$static.orderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 37, value_0, this$static.orderID);
				break;
			case 198:
				this$static.secondaryOrderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 198, value_0, this$static.secondaryOrderID);
				break;
			case 526:
				this$static.secondaryClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 526, value_0, this$static.secondaryClOrdID);
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 11, value_0, this$static.clOrdID);
				break;
			case 583:
				this$static.clOrdLinkID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 583, value_0, this$static.clOrdLinkID);
				break;
			case 41:
				this$static.origClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 41, value_0, this$static.origClOrdID);
				break;
			case 39:
				this$static.ordStatus = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 39, value_0);
				if (!isValid_88(this$static.ordStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordStatus + ') for tag'), P27_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 636:
				this$static.workingIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 636, value_0);
				if (!isValid_185(this$static.workingIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.workingIndicator + ') for tag'), P27c_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 586:
				this$static.origOrdModTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 586, value_0, this$static.origOrdModTime);
				break;
			case 66:
				this$static.listID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 66, value_0, this$static.listID);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 229:
				this$static.tradeOriginationDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 229, value_0, this$static.tradeOriginationDate);
				break;
			case 75:
				this$static.tradeDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 75, value_0, this$static.tradeDate);
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 60, value_0, this$static.transactTime);
				break;
			case 434:
				this$static.cxlRejResponseTo = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 434, value_0);
				if (!isValid_30(this$static.cxlRejResponseTo)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.cxlRejResponseTo + ') for tag'), P1b2_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 102:
				this$static.cxlRejReason = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 102, value_0));
				if (!isValid_29(this$static.cxlRejReason)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.cxlRejReason) + ') for tag'), P66_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1), 10, value_0));
				id_0 = $checkRequiredTags_4(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixOrderCancelReject_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.ordStatus = 32;
		this.workingIndicator = false;
		this.acctIDSource = P0_longLit;
		this.accountType = P0_longLit;
		this.cxlRejResponseTo = 32;
		this.cxlRejReason = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryOrderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdLinkID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origOrdModTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.listID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeOriginationDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clinit_Utils();
		this.orderID[0] = 0;
		this.secondaryOrderID[0] = 0;
		this.secondaryClOrdID[0] = 0;
		this.clOrdID[0] = 0;
		this.clOrdLinkID[0] = 0;
		this.origClOrdID[0] = 0;
		this.ordStatus = 127;
		this.workingIndicator = false;
		this.origOrdModTime[0] = 0;
		this.listID[0] = 0;
		this.account[0] = 0;
		this.acctIDSource = P7fffffffffffffff_longLit;
		this.accountType = P7fffffffffffffff_longLit;
		this.tradeOriginationDate[0] = 0;
		this.tradeDate[0] = 0;
		this.transactTime[0] = 0;
		this.cxlRejResponseTo = 127;
		this.cxlRejReason = P7fffffffffffffff_longLit;
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		this.msgTypeInt = 57;
	}

	defineSeed(521, 322, makeCastMap([Q$FixMessage, Q$FixOrderCancelReject]), FixOrderCancelReject_0);
	_.equals$ = function equals_22(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixOrderCancelReject)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.secondaryOrderID, msg.secondaryOrderID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.clOrdLinkID, msg.clOrdLinkID) || (ret = false);
		equals_12(this.origClOrdID, msg.origClOrdID) || (ret = false);
		if (this.ordStatus != msg.ordStatus) {
			ret = false;
			$print((valueOf(this.ordStatus), valueOf(msg.ordStatus)));
		}
		if (this.workingIndicator != msg.workingIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.listID, msg.listID) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		if (this.cxlRejResponseTo != msg.cxlRejResponseTo) {
			ret = false;
			$print((valueOf(this.cxlRejResponseTo), valueOf(msg.cxlRejResponseTo)));
		}
		if (neq(this.cxlRejReason, msg.cxlRejReason)) {
			ret = false;
			$print((valueOf_1(this.cxlRejReason), valueOf_1(msg.cxlRejReason)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_11() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'OrderCancelReject' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREJECT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep);
			this.secondaryOrderID[0] != 0 && (s += 'SecondaryOrderID(198)=' + $trim(_String(this.secondaryOrderID)) + charToString(sep));
			this.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this.secondaryClOrdID)) + charToString(sep));
			s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep);
			this.clOrdLinkID[0] != 0 && (s += 'ClOrdLinkID(583)=' + $trim(_String(this.clOrdLinkID)) + charToString(sep));
			this.origClOrdID[0] != 0 && (s += 'OrigClOrdID(41)=' + $trim(_String(this.origClOrdID)) + charToString(sep));
			s += 'OrdStatus(39)=' + $trim('' + this.ordStatus) + charToString(sep);
			this.workingIndicator && (s += 'WorkingIndicator(636)=' + $trim('' + this.workingIndicator) + charToString(sep));
			this.origOrdModTime[0] != 0 && (s += 'OrigOrdModTime(586)=' + $trim(_String(this.origOrdModTime)) + charToString(sep));
			this.listID[0] != 0 && (s += 'ListID(66)=' + $trim(_String(this.listID)) + charToString(sep));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.tradeOriginationDate[0] != 0 && (s += 'TradeOriginationDate(229)=' + $trim(_String(this.tradeOriginationDate)) + charToString(sep));
			this.tradeDate[0] != 0 && (s += 'TradeDate(75)=' + $trim(_String(this.tradeDate)) + charToString(sep));
			this.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep));
			s += 'CxlRejResponseTo(434)=' + $trim('' + this.cxlRejResponseTo) + charToString(sep);
			neq(this.cxlRejReason, P7fffffffffffffff_longLit) && (s += 'CxlRejReason(102)=' + $trim('' + toString_183(this.cxlRejReason)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.cxlRejReason = P0_longLit;
	_.cxlRejResponseTo = 0;
	_.encodedTextLen = P0_longLit;
	_.ordStatus = 0;
	_.workingIndicator = false;

	function $checkRequiredTags_5(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.clOrdID[0] == 0) return 11;
		if (this$static.origClOrdID[0] == 0) return 41;
		if (this$static.instrument.securityType[0] == 0) return 167;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $encode_2(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 41, this$static.origClOrdID, lastIndexTrim(this$static.origClOrdID));
		this$static.orderID[0] != 0 && putFixTag_2(out, 37, this$static.orderID, lastIndexTrim(this$static.orderID));
		putFixTag_2(out, 11, this$static.clOrdID, lastIndexTrim(this$static.clOrdID));
		this$static.secondaryClOrdID[0] != 0 && putFixTag_2(out, 526, this$static.secondaryClOrdID, lastIndexTrim(this$static.secondaryClOrdID));
		this$static.clOrdLinkID[0] != 0 && putFixTag_2(out, 583, this$static.clOrdLinkID, lastIndexTrim(this$static.clOrdLinkID));
		this$static.listID[0] != 0 && putFixTag_2(out, 66, this$static.listID, lastIndexTrim(this$static.listID));
		this$static.origOrdModTime[0] != 0 && putFixTag_1(out, 586, this$static.origOrdModTime);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		neq(this$static.accountType, P7fffffffffffffff_longLit) && putFixTag_0(out, 581, this$static.accountType);
		neq(fromInt(this$static.parties.noPartyIDs), P7fffffffffffffff_longLit) && $encode_52(this$static.parties, out);
		$encode_31(this$static.instrument, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		this$static.transactTime[0] != 0 && putFixTag_1(out, 60, this$static.transactTime);
		neq(this$static.orderQtyData.orderQty, P7fffffffffffffff_longLit) && $encode_51(this$static.orderQtyData, out);
		this$static.complianceID[0] != 0 && putFixTag_2(out, 376, this$static.complianceID, lastIndexTrim(this$static.complianceID));
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function $getAll_8(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 41:
				this$static.origClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 41, value_0, this$static.origClOrdID);
				break;
			case 37:
				this$static.orderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 37, value_0, this$static.orderID);
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 11, value_0, this$static.clOrdID);
				break;
			case 526:
				this$static.secondaryClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 526, value_0, this$static.secondaryClOrdID);
				break;
			case 583:
				this$static.clOrdLinkID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 583, value_0, this$static.clOrdLinkID);
				break;
			case 66:
				this$static.listID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 66, value_0, this$static.listID);
				break;
			case 586:
				this$static.origOrdModTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 586, value_0, this$static.origOrdModTime);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 167:
				$getAll_40(this$static.instrument, 167, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 60, value_0, this$static.transactTime);
				break;
			case 38:
				$getAll_66(this$static.orderQtyData, 38, value_0);
				break;
			case 376:
				this$static.complianceID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 376, value_0, this$static.complianceID);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1), 10, value_0));
				id_0 = $checkRequiredTags_5(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function $toString_0(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'OrderCancelRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this$static.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), ORDERCANCELREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this$static.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this$static.applVerID)) + charToString(sep));
			this$static.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this$static.cstmApplVerID)) + charToString(sep));
			neq(this$static.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this$static.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this$static.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this$static.targetCompID)) + charToString(sep);
			this$static.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this$static.onBehalfOfCompID)) + charToString(sep));
			this$static.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this$static.deliverToCompID)) + charToString(sep));
			neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this$static.secureDataLen)) + charToString(sep));
			this$static.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this$static.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this$static.msgSeqNum)) + charToString(sep);
			this$static.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this$static.senderSubID)) + charToString(sep));
			this$static.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this$static.senderLocationID)) + charToString(sep));
			this$static.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this$static.targetSubID)) + charToString(sep));
			this$static.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this$static.targetLocationID)) + charToString(sep));
			this$static.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this$static.onBehalfOfSubID)) + charToString(sep));
			this$static.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this$static.onBehalfOfLocationID)) + charToString(sep));
			this$static.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this$static.deliverToSubID)) + charToString(sep));
			this$static.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this$static.deliverToLocationID)) + charToString(sep));
			this$static.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this$static.possDupFlag) + charToString(sep));
			this$static.possResend && (s += 'PossResend(97)=' + $trim('' + this$static.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this$static.sendingTime)) + charToString(sep);
			this$static.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this$static.origSendingTime)) + charToString(sep));
			neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this$static.xmlDataLen)) + charToString(sep));
			this$static.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this$static.xmlData)) + charToString(sep));
			this$static.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this$static.messageEncoding)) + charToString(sep));
			neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this$static.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this$static.hopGrp)));
			this$static.origClOrdID[0] != 0 && (s += 'OrigClOrdID(41)=' + $trim(_String(this$static.origClOrdID)) + charToString(sep));
			this$static.orderID[0] != 0 && (s += 'OrderID(37)=' + $trim(_String(this$static.orderID)) + charToString(sep));
			s += 'ClOrdID(11)=' + $trim(_String(this$static.clOrdID)) + charToString(sep);
			this$static.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this$static.secondaryClOrdID)) + charToString(sep));
			this$static.clOrdLinkID[0] != 0 && (s += 'ClOrdLinkID(583)=' + $trim(_String(this$static.clOrdLinkID)) + charToString(sep));
			this$static.listID[0] != 0 && (s += 'ListID(66)=' + $trim(_String(this$static.listID)) + charToString(sep));
			this$static.origOrdModTime[0] != 0 && (s += 'OrigOrdModTime(586)=' + $trim(_String(this$static.origOrdModTime)) + charToString(sep));
			this$static.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this$static.account)) + charToString(sep));
			neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this$static.acctIDSource)) + charToString(sep));
			neq(this$static.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this$static.accountType)) + charToString(sep));
			neq(fromInt(this$static.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this$static.parties)));
			this$static.instrument.symbol[0] != 0 && (s += $trim($toString_35(this$static.instrument)));
			this$static.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this$static.financingDetails)));
			neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this$static.undInstrmtGrp)));
			s += 'Side(54)=' + $trim('' + this$static.side) + charToString(sep);
			s += 'TransactTime(60)=' + $trim(_String(this$static.transactTime)) + charToString(sep);
			neq(this$static.orderQtyData.orderQty, P7fffffffffffffff_longLit) && (s += $trim($toString_83(this$static.orderQtyData)));
			this$static.complianceID[0] != 0 && (s += 'ComplianceID(376)=' + $trim(_String(this$static.complianceID)) + charToString(sep));
			this$static.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this$static.text_0)) + charToString(sep));
			neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this$static.encodedTextLen)) + charToString(sep));
			this$static.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this$static.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this$static.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	}

	function FixOrderCancelRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.acctIDSource = P0_longLit;
		this.accountType = P0_longLit;
		this.side = 32;
		this.encodedTextLen = P0_longLit;
		this.origClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdLinkID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.listID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origOrdModTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.orderQtyData = new FixOrderQtyData_0;
		this.complianceID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clinit_Utils();
		this.origClOrdID[0] = 0;
		this.orderID[0] = 0;
		this.clOrdID[0] = 0;
		this.secondaryClOrdID[0] = 0;
		this.clOrdLinkID[0] = 0;
		this.listID[0] = 0;
		this.origOrdModTime[0] = 0;
		this.account[0] = 0;
		this.acctIDSource = P7fffffffffffffff_longLit;
		this.accountType = P7fffffffffffffff_longLit;
		this.side = 127;
		this.transactTime[0] = 0;
		this.complianceID[0] = 0;
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		$clear_88(this.parties);
		$clear_40(this.instrument);
		$clear_34(this.financingDetails);
		$clear_142(this.undInstrmtGrp);
		$clear_87(this.orderQtyData);
		this.msgTypeInt = 70;
	}

	defineSeed(522, 322, makeCastMap([Q$FixMessage, Q$FixOrderCancelRequest]), FixOrderCancelRequest_0);
	_.equals$ = function equals_23(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixOrderCancelRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.origClOrdID, msg.origClOrdID) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		equals_12(this.clOrdLinkID, msg.clOrdLinkID) || (ret = false);
		equals_12(this.listID, msg.listID) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		$equals_83(this.parties, msg.parties) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		$equals_82(this.orderQtyData, msg.orderQtyData) || (ret = false);
		equals_12(this.complianceID, msg.complianceID) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_12() {
		return $toString_0(this);
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.side = 0;

	function $encode_3(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), ORDERMASSSTATUSREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 584, this$static.massStatusReqID, lastIndexTrim(this$static.massStatusReqID));
		putFixTag_0(out, 585, this$static.massStatusReqType);
		this$static.parties.noPartyIDs != 0 && $isSet_5(this$static.parties) && $encode_52(this$static.parties, out);
		neq(fromInt(this$static.targetParties.noTargetPartyIDs), P7fffffffffffffff_longLit) && $encode_84(this$static.targetParties);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		this$static.tradingSessionID[0] != 0 && putFixTag_2(out, 336, this$static.tradingSessionID, lastIndexTrim(this$static.tradingSessionID));
		this$static.tradingSessionSubID[0] != 0 && putFixTag_2(out, 625, this$static.tradingSessionSubID, lastIndexTrim(this$static.tradingSessionSubID));
		$encode_31(this$static.instrument, out);
		this$static.underlyingInstrument.underlyingSymbol[0] != 0 && $encode_99(this$static.underlyingInstrument, out);
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function FixOrderMassStatusRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.massStatusReqType = P0_longLit;
		this.acctIDSource = P0_longLit;
		this.side = 32;
		this.massStatusReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.targetParties = new FixTargetParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.underlyingInstrument = new FixUnderlyingInstrument_0;
		$clinit_Utils();
		this.massStatusReqID[0] = 0;
		this.massStatusReqType = P7fffffffffffffff_longLit;
		this.account[0] = 0;
		this.acctIDSource = P7fffffffffffffff_longLit;
		this.tradingSessionID[0] = 0;
		this.tradingSessionSubID[0] = 0;
		this.side = 127;
		$clear_88(this.parties);
		$clear_125(this.targetParties);
		$clear_40(this.instrument);
		$clear_145(this.underlyingInstrument);
		this.msgTypeInt = 16710;
	}

	defineSeed(523, 322, makeCastMap([Q$FixMessage, Q$FixOrderMassStatusRequest]), FixOrderMassStatusRequest_0);
	_.equals$ = function equals_24(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixOrderMassStatusRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.massStatusReqID, msg.massStatusReqID) || (ret = false);
		if (neq(this.massStatusReqType, msg.massStatusReqType)) {
			ret = false;
			$print((valueOf_1(this.massStatusReqType), valueOf_1(msg.massStatusReqType)));
		}
		$equals_83(this.parties, msg.parties) || (ret = false);
		$equals_121(this.targetParties, msg.targetParties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		equals_12(this.tradingSessionID, msg.tradingSessionID) || (ret = false);
		equals_12(this.tradingSessionSubID, msg.tradingSessionSubID) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_143(this.underlyingInstrument, msg.underlyingInstrument) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		return ret;
	};
	_.toString$ = function toString_13() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'OrderMassStatusRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), ORDERMASSSTATUSREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'MassStatusReqID(584)=' + $trim(_String(this.massStatusReqID)) + charToString(sep);
			s += 'MassStatusReqType(585)=' + $trim('' + toString_183(this.massStatusReqType)) + charToString(sep);
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			neq(fromInt(this.targetParties.noTargetPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_122(this.targetParties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			this.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this.tradingSessionID)) + charToString(sep));
			this.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this.tradingSessionSubID)) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.underlyingInstrument.underlyingSymbol[0] != 0 && (s += $trim($toString_144(this.underlyingInstrument)));
			this.side != 127 && (s += 'Side(54)=' + $trim('' + this.side) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.acctIDSource = P0_longLit;
	_.massStatusReqType = P0_longLit;
	_.side = 0;

	function $checkRequiredTags_6(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $encode_4(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		this$static.orderID[0] != 0 && putFixTag_2(out, 37, this$static.orderID, lastIndexTrim(this$static.orderID));
		this$static.clOrdID[0] != 0 && putFixTag_2(out, 11, this$static.clOrdID, lastIndexTrim(this$static.clOrdID));
		this$static.secondaryClOrdID[0] != 0 && putFixTag_2(out, 526, this$static.secondaryClOrdID, lastIndexTrim(this$static.secondaryClOrdID));
		this$static.clOrdLinkID[0] != 0 && putFixTag_2(out, 583, this$static.clOrdLinkID, lastIndexTrim(this$static.clOrdLinkID));
		neq(fromInt(this$static.parties.noPartyIDs), P7fffffffffffffff_longLit) && $encode_52(this$static.parties, out);
		this$static.ordStatusReqID[0] != 0 && putFixTag_2(out, 790, this$static.ordStatusReqID, lastIndexTrim(this$static.ordStatusReqID));
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		$isSet_1(this$static.instrument) && $encode_31(this$static.instrument, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function $getAll_9(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 37:
				this$static.orderID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 37, value_0, this$static.orderID);
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 11, value_0, this$static.clOrdID);
				break;
			case 526:
				this$static.secondaryClOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 526, value_0, this$static.secondaryClOrdID);
				break;
			case 583:
				this$static.clOrdLinkID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 583, value_0, this$static.clOrdLinkID);
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 790:
				this$static.ordStatusReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 790, value_0, this$static.ordStatusReqID);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 207:
				$getAll_40(this$static.instrument, 207, value_0);
				break;
			case 22:
				$getAll_40(this$static.instrument, 22, value_0);
				break;
			case 762:
				$getAll_40(this$static.instrument, 762, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1), 10, value_0));
				id_0 = $checkRequiredTags_6(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixOrderStatusRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.acctIDSource = P0_longLit;
		this.side = 32;
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryClOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdLinkID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.ordStatusReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		$clinit_Utils();
		this.orderID[0] = 0;
		this.clOrdID[0] = 0;
		this.secondaryClOrdID[0] = 0;
		this.clOrdLinkID[0] = 0;
		this.ordStatusReqID[0] = 0;
		this.account[0] = 0;
		this.acctIDSource = P7fffffffffffffff_longLit;
		this.side = 127;
		$clear_88(this.parties);
		$clear_40(this.instrument);
		$clear_34(this.financingDetails);
		$clear_142(this.undInstrmtGrp);
		this.msgTypeInt = 72;
	}

	defineSeed(524, 322, makeCastMap([Q$FixMessage, Q$FixOrderStatusRequest]), FixOrderStatusRequest_0);
	_.equals$ = function equals_25(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixOrderStatusRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		equals_12(this.secondaryClOrdID, msg.secondaryClOrdID) || (ret = false);
		equals_12(this.clOrdLinkID, msg.clOrdLinkID) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.ordStatusReqID, msg.ordStatusReqID) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		return ret;
	};
	_.toString$ = function toString_14() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'OrderStatusRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), ORDERSTATUSREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			neq(this.msgSeqNum, P7fffffffffffffff_longLit) && (s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep));
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			this.sendingTime[0] != 0 && (s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep));
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			this.orderID[0] != 0 && (s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			this.secondaryClOrdID[0] != 0 && (s += 'SecondaryClOrdID(526)=' + $trim(_String(this.secondaryClOrdID)) + charToString(sep));
			this.clOrdLinkID[0] != 0 && (s += 'ClOrdLinkID(583)=' + $trim(_String(this.clOrdLinkID)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.ordStatusReqID[0] != 0 && (s += 'OrdStatusReqID(790)=' + $trim(_String(this.ordStatusReqID)) + charToString(sep));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			this.side != 127 && (s += 'Side(54)=' + $trim('' + this.side) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.acctIDSource = P0_longLit;
	_.side = 0;

	function $checkRequiredTags_7(this$static) {
		$clinit_FixUtils();
		if (this$static.posMaintRptID[0] == 0) return 721;
		if (this$static.posReqID[0] == 0) return 710;
		if (eq(this$static.posMaintStatus, P7fffffffffffffff_longLit)) return 722;
		if (eq(this$static.posMaintResult, P7fffffffffffffff_longLit)) return 723;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $clear_4(this$static) {
		$clinit_Utils();
		this$static.posMaintRptID[0] = 0;
		this$static.posTransType = P7fffffffffffffff_longLit;
		this$static.posReqID[0] = 0;
		this$static.posMaintAction = P7fffffffffffffff_longLit;
		this$static.origPosReqRefID[0] = 0;
		this$static.posMaintStatus = P7fffffffffffffff_longLit;
		this$static.posMaintResult = P7fffffffffffffff_longLit;
		this$static.clearingBusinessDate[0] = 0;
		this$static.settlSessID[0] = 0;
		this$static.settlSessSubID[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.posMaintRptRefID[0] = 0;
		this$static.currency[0] = 0;
		this$static.settlCurrency[0] = 0;
		this$static.contraryInstructionIndicator = false;
		this$static.priorSpreadIndicator = false;
		this$static.transactTime[0] = 0;
		this$static.adjustmentType = P7fffffffffffffff_longLit;
		this$static.thresholdAmount = P7fffffffffffffff_longLit;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_88(this$static.parties);
		$clear_40(this$static.instrument);
		$clear_37(this$static.instrmtLegGrp);
		$clear_142(this$static.undInstrmtGrp);
		$clear_137(this$static.trdgSesGrp);
		$clear_93(this$static.positionQty);
		$clear_91(this$static.positionAmountData);
	}

	function $getAll_10(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 721:
				this$static.posMaintRptID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 721, value_0, this$static.posMaintRptID);
				break;
			case 709:
				this$static.posTransType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 709, value_0));
				if (!isValid_111(this$static.posTransType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posTransType) + ') for tag'), P2c5_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 710:
				this$static.posReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 710, value_0, this$static.posReqID);
				break;
			case 712:
				this$static.posMaintAction = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 712, value_0));
				if (!isValid_104(this$static.posMaintAction)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posMaintAction) + ') for tag'), P2c8_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 713:
				this$static.origPosReqRefID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 713, value_0, this$static.origPosReqRefID);
				break;
			case 722:
				this$static.posMaintStatus = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 722, value_0));
				if (!isValid_106(this$static.posMaintStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posMaintStatus) + ') for tag'), P2d2_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 723:
				this$static.posMaintResult = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 723, value_0));
				if (!isValid_105(this$static.posMaintResult)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posMaintResult) + ') for tag'), P2d3_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 715:
				this$static.clearingBusinessDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 715, value_0, this$static.clearingBusinessDate);
				break;
			case 716:
				this$static.settlSessID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 716, value_0, this$static.settlSessID);
				if (!isValid_148(this$static.settlSessID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlSessID + ') for tag'), P2cc_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 717:
				this$static.settlSessSubID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 717, value_0, this$static.settlSessSubID);
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 714:
				this$static.posMaintRptRefID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 714, value_0, this$static.posMaintRptRefID);
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 15, value_0, this$static.currency);
				break;
			case 120:
				this$static.settlCurrency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 120, value_0, this$static.settlCurrency);
				break;
			case 719:
				this$static.contraryInstructionIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 719, value_0);
				break;
			case 720:
				this$static.priorSpreadIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 720, value_0);
				break;
			case 555:
				this$static.instrmtLegGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 555, value_0);
				$getAll_38(this$static.instrmtLegGrp, this$static.instrmtLegGrp.noLegs, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 386:
				this$static.trdgSesGrp.noTradingSessions = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 386, value_0);
				$getAll_94(this$static.trdgSesGrp, this$static.trdgSesGrp.noTradingSessions, value_0);
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 60, value_0, this$static.transactTime);
				break;
			case 702:
				this$static.positionQty.noPositions = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 702, value_0);
				$getAll_70(this$static.positionQty, this$static.positionQty.noPositions, value_0);
				break;
			case 753:
				this$static.positionAmountData.noPosAmt = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 753, value_0);
				$getAll_69(this$static.positionAmountData, this$static.positionAmountData.noPosAmt, value_0);
				break;
			case 718:
				this$static.adjustmentType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 718, value_0));
				if (!isValid_2(this$static.adjustmentType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.adjustmentType) + ') for tag'), P2ce_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 834:
				this$static.thresholdAmount = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 834, value_0);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1), 10, value_0));
				id_0 = $checkRequiredTags_7(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixPositionMaintenanceReport_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.posTransType = P0_longLit;
		this.posMaintAction = P0_longLit;
		this.posMaintStatus = P0_longLit;
		this.posMaintResult = P0_longLit;
		this.acctIDSource = P0_longLit;
		this.accountType = P0_longLit;
		this.contraryInstructionIndicator = false;
		this.priorSpreadIndicator = false;
		this.adjustmentType = P0_longLit;
		this.thresholdAmount = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.posMaintRptID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.posReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origPosReqRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.posMaintRptRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.trdgSesGrp = new FixTrdgSesGrp_0;
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.positionQty = new FixPositionQty_0;
		this.positionAmountData = new FixPositionAmountData_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_4(this);
		this.msgTypeInt = 16717;
	}

	defineSeed(525, 322, makeCastMap([Q$FixMessage, Q$FixPositionMaintenanceReport]), FixPositionMaintenanceReport_0);
	_.equals$ = function equals_26(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPositionMaintenanceReport)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.posMaintRptID, msg.posMaintRptID) || (ret = false);
		if (neq(this.posTransType, msg.posTransType)) {
			ret = false;
			$print((valueOf_1(this.posTransType), valueOf_1(msg.posTransType)));
		}
		equals_12(this.posReqID, msg.posReqID) || (ret = false);
		if (neq(this.posMaintAction, msg.posMaintAction)) {
			ret = false;
			$print((valueOf_1(this.posMaintAction), valueOf_1(msg.posMaintAction)));
		}
		equals_12(this.origPosReqRefID, msg.origPosReqRefID) || (ret = false);
		if (neq(this.posMaintStatus, msg.posMaintStatus)) {
			ret = false;
			$print((valueOf_1(this.posMaintStatus), valueOf_1(msg.posMaintStatus)));
		}
		if (neq(this.posMaintResult, msg.posMaintResult)) {
			ret = false;
			$print((valueOf_1(this.posMaintResult), valueOf_1(msg.posMaintResult)));
		}
		equals_12(this.settlSessID, msg.settlSessID) || (ret = false);
		equals_12(this.settlSessSubID, msg.settlSessSubID) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		equals_12(this.posMaintRptRefID, msg.posMaintRptRefID) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		equals_12(this.currency, msg.currency) || (ret = false);
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		if (this.contraryInstructionIndicator != msg.contraryInstructionIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.priorSpreadIndicator != msg.priorSpreadIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		$equals_134(this.trdgSesGrp, msg.trdgSesGrp) || (ret = false);
		$equals_88(this.positionQty, msg.positionQty) || (ret = false);
		$equals_86(this.positionAmountData, msg.positionAmountData) || (ret = false);
		if (neq(this.adjustmentType, msg.adjustmentType)) {
			ret = false;
			$print((valueOf_1(this.adjustmentType), valueOf_1(msg.adjustmentType)));
		}
		if (neq(this.thresholdAmount, msg.thresholdAmount)) {
			ret = false;
			$print((valueOf_1(this.thresholdAmount), valueOf_1(msg.thresholdAmount)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_15() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'PositionMaintenanceReport' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREPORT_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'PosMaintRptID(721)=' + $trim(_String(this.posMaintRptID)) + charToString(sep);
			s += 'PosTransType(709)=' + $trim('' + toString_183(this.posTransType)) + charToString(sep);
			this.posReqID[0] != 0 && (s += 'PosReqID(710)=' + $trim(_String(this.posReqID)) + charToString(sep));
			s += 'PosMaintAction(712)=' + $trim('' + toString_183(this.posMaintAction)) + charToString(sep);
			this.origPosReqRefID[0] != 0 && (s += 'OrigPosReqRefID(713)=' + $trim(_String(this.origPosReqRefID)) + charToString(sep));
			s += 'PosMaintStatus(722)=' + $trim('' + toString_183(this.posMaintStatus)) + charToString(sep);
			neq(this.posMaintResult, P7fffffffffffffff_longLit) && (s += 'PosMaintResult(723)=' + $trim('' + toString_183(this.posMaintResult)) + charToString(sep));
			s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep);
			this.settlSessID[0] != 0 && (s += 'SettlSessID(716)=' + $trim(_String(this.settlSessID)) + charToString(sep));
			this.settlSessSubID[0] != 0 && (s += 'SettlSessSubID(717)=' + $trim(_String(this.settlSessSubID)) + charToString(sep));
			this.parties.noPartyIDs != 0 && (s += $trim($toString_84(this.parties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.posMaintRptRefID[0] != 0 && (s += 'PosMaintRptRefID(714)=' + $trim(_String(this.posMaintRptRefID)) + charToString(sep));
			this.instrument.securityID[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			this.contraryInstructionIndicator && (s += 'ContraryInstructionIndicator(719)=' + $trim('' + this.contraryInstructionIndicator) + charToString(sep));
			this.priorSpreadIndicator && (s += 'PriorSpreadIndicator(720)=' + $trim('' + this.priorSpreadIndicator) + charToString(sep));
			this.instrmtLegGrp.noLegs != 0 && (s += $trim($toString_31(this.instrmtLegGrp)));
			this.undInstrmtGrp.noUnderlyings != 0 && (s += $trim($toString_140(this.undInstrmtGrp)));
			this.trdgSesGrp.noTradingSessions != 0 && (s += $trim($toString_135(this.trdgSesGrp)));
			this.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep));
			this.positionQty.noPositions != 0 && (s += $trim($toString_89(this.positionQty)));
			this.positionAmountData.noPosAmt != 0 && (s += $trim($toString_87(this.positionAmountData)));
			neq(this.adjustmentType, P7fffffffffffffff_longLit) && (s += 'AdjustmentType(718)=' + $trim('' + toString_183(this.adjustmentType)) + charToString(sep));
			neq(this.thresholdAmount, P7fffffffffffffff_longLit) && (s += 'ThresholdAmount(834)=' + $trim('' + toString_183(this.thresholdAmount)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.adjustmentType = P0_longLit;
	_.contraryInstructionIndicator = false;
	_.encodedTextLen = P0_longLit;
	_.posMaintAction = P0_longLit;
	_.posMaintResult = P0_longLit;
	_.posMaintStatus = P0_longLit;
	_.posTransType = P0_longLit;
	_.priorSpreadIndicator = false;
	_.thresholdAmount = P0_longLit;

	function $clear_5(this$static) {
		$clinit_Utils();
		this$static.posReqID[0] = 0;
		this$static.posTransType = P7fffffffffffffff_longLit;
		this$static.posMaintAction = P7fffffffffffffff_longLit;
		this$static.origPosReqRefID[0] = 0;
		this$static.posMaintRptRefID[0] = 0;
		this$static.clearingBusinessDate[0] = 0;
		this$static.settlSessID[0] = 0;
		this$static.settlSessSubID[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.transactTime[0] = 0;
		this$static.adjustmentType = P7fffffffffffffff_longLit;
		this$static.contraryInstructionIndicator = false;
		this$static.priorSpreadIndicator = false;
		this$static.thresholdAmount = P7fffffffffffffff_longLit;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		this$static.settlCurrency[0] = 0;
		$clear_88(this$static.parties);
		$clear_40(this$static.instrument);
		$clear_37(this$static.instrmtLegGrp);
		$clear_142(this$static.undInstrmtGrp);
		$clear_137(this$static.trdgSesGrp);
		$clear_93(this$static.positionQty);
		$clear_91(this$static.positionAmountData);
	}

	function $encode_5(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 710, this$static.posReqID, lastIndexTrim(this$static.posReqID));
		putFixTag_0(out, 709, this$static.posTransType);
		putFixTag_0(out, 712, this$static.posMaintAction);
		this$static.origPosReqRefID[0] != 0 && putFixTag_2(out, 713, this$static.origPosReqRefID, lastIndexTrim(this$static.origPosReqRefID));
		this$static.posMaintRptRefID[0] != 0 && putFixTag_2(out, 714, this$static.posMaintRptRefID, lastIndexTrim(this$static.posMaintRptRefID));
		this$static.clearingBusinessDate[0] != 0 && putFixTag_1(out, 715, this$static.clearingBusinessDate);
		this$static.settlSessID[0] != 0 && putFixTag_2(out, 716, this$static.settlSessID, lastIndexTrim(this$static.settlSessID));
		this$static.settlSessSubID[0] != 0 && putFixTag_2(out, 717, this$static.settlSessSubID, lastIndexTrim(this$static.settlSessSubID));
		this$static.parties.noPartyIDs != 0 && $isSet_5(this$static.parties) && $encode_52(this$static.parties, out);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		neq(this$static.accountType, P7fffffffffffffff_longLit) && putFixTag_0(out, 581, this$static.accountType);
		$isSet_1(this$static.instrument) && $encode_31(this$static.instrument, out);
		this$static.currency[0] != 0 && putFixTag_2(out, 15, this$static.currency, lastIndexTrim(this$static.currency));
		this$static.instrmtLegGrp.noLegs != 0 && $isSet(this$static.instrmtLegGrp) && $encode_29(this$static.instrmtLegGrp, out);
		this$static.undInstrmtGrp.noUnderlyings != 0 && $isSet_15(this$static.undInstrmtGrp) && $encode_95(this$static.undInstrmtGrp, out);
		this$static.trdgSesGrp.noTradingSessions != 0 && $isSet_13(this$static.trdgSesGrp) && $encode_90(this$static.trdgSesGrp, out);
		this$static.transactTime[0] != 0 && putFixTag_1(out, 60, this$static.transactTime);
		this$static.positionQty.noPositions != 0 && $isSet_9(this$static.positionQty) && $encode_57(this$static.positionQty, out);
		this$static.positionAmountData.noPosAmt != 0 && $isSet_7(this$static.positionAmountData) && $encode_55(this$static.positionAmountData, out);
		neq(this$static.adjustmentType, P7fffffffffffffff_longLit) && putFixTag_0(out, 718, this$static.adjustmentType);
		this$static.contraryInstructionIndicator && putFixTag(out, 719, this$static.contraryInstructionIndicator ? 89 : 78);
		this$static.priorSpreadIndicator && putFixTag(out, 720, this$static.priorSpreadIndicator ? 89 : 78);
		neq(this$static.thresholdAmount, P7fffffffffffffff_longLit) && putFixFloatTag(out, 834, this$static.thresholdAmount);
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		this$static.settlCurrency[0] != 0 && putFixTag_2(out, 120, this$static.settlCurrency, lastIndexTrim(this$static.settlCurrency));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function FixPositionMaintenanceRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.posTransType = P0_longLit;
		this.posMaintAction = P0_longLit;
		this.acctIDSource = P0_longLit;
		this.accountType = P0_longLit;
		this.adjustmentType = P0_longLit;
		this.contraryInstructionIndicator = false;
		this.priorSpreadIndicator = false;
		this.thresholdAmount = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.posReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.origPosReqRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.posMaintRptRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.trdgSesGrp = new FixTrdgSesGrp_0;
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.positionQty = new FixPositionQty_0;
		this.positionAmountData = new FixPositionAmountData_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		$clear_5(this);
		this.msgTypeInt = 16716;
	}

	defineSeed(526, 322, makeCastMap([Q$FixMessage, Q$FixPositionMaintenanceRequest]), FixPositionMaintenanceRequest_0);
	_.equals$ = function equals_27(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPositionMaintenanceRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.posReqID, msg.posReqID) || (ret = false);
		if (neq(this.posTransType, msg.posTransType)) {
			ret = false;
			$print((valueOf_1(this.posTransType), valueOf_1(msg.posTransType)));
		}
		if (neq(this.posMaintAction, msg.posMaintAction)) {
			ret = false;
			$print((valueOf_1(this.posMaintAction), valueOf_1(msg.posMaintAction)));
		}
		equals_12(this.origPosReqRefID, msg.origPosReqRefID) || (ret = false);
		equals_12(this.posMaintRptRefID, msg.posMaintRptRefID) || (ret = false);
		equals_12(this.settlSessID, msg.settlSessID) || (ret = false);
		equals_12(this.settlSessSubID, msg.settlSessSubID) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		equals_12(this.currency, msg.currency) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		$equals_134(this.trdgSesGrp, msg.trdgSesGrp) || (ret = false);
		$equals_88(this.positionQty, msg.positionQty) || (ret = false);
		$equals_86(this.positionAmountData, msg.positionAmountData) || (ret = false);
		if (neq(this.adjustmentType, msg.adjustmentType)) {
			ret = false;
			$print((valueOf_1(this.adjustmentType), valueOf_1(msg.adjustmentType)));
		}
		if (this.contraryInstructionIndicator != msg.contraryInstructionIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (this.priorSpreadIndicator != msg.priorSpreadIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.thresholdAmount, msg.thresholdAmount)) {
			ret = false;
			$print((valueOf_1(this.thresholdAmount), valueOf_1(msg.thresholdAmount)));
		}
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_16() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'PositionMaintenanceRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), POSITIONMAINTENANCEREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			this.posReqID[0] != 0 && (s += 'PosReqID(710)=' + $trim(_String(this.posReqID)) + charToString(sep));
			s += 'PosTransType(709)=' + $trim('' + toString_183(this.posTransType)) + charToString(sep);
			s += 'PosMaintAction(712)=' + $trim('' + toString_183(this.posMaintAction)) + charToString(sep);
			this.origPosReqRefID[0] != 0 && (s += 'OrigPosReqRefID(713)=' + $trim(_String(this.origPosReqRefID)) + charToString(sep));
			this.posMaintRptRefID[0] != 0 && (s += 'PosMaintRptRefID(714)=' + $trim(_String(this.posMaintRptRefID)) + charToString(sep));
			s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep);
			this.settlSessID[0] != 0 && (s += 'SettlSessID(716)=' + $trim(_String(this.settlSessID)) + charToString(sep));
			this.settlSessSubID[0] != 0 && (s += 'SettlSessSubID(717)=' + $trim(_String(this.settlSessSubID)) + charToString(sep));
			this.parties.noPartyIDs != 0 && (s += $trim($toString_84(this.parties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.instrument.securityID[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			this.instrmtLegGrp.noLegs != 0 && (s += $trim($toString_31(this.instrmtLegGrp)));
			this.undInstrmtGrp.noUnderlyings != 0 && (s += $trim($toString_140(this.undInstrmtGrp)));
			this.trdgSesGrp.noTradingSessions != 0 && (s += $trim($toString_135(this.trdgSesGrp)));
			this.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep));
			this.positionQty.noPositions != 0 && (s += $trim($toString_89(this.positionQty)));
			this.positionAmountData.noPosAmt != 0 && (s += $trim($toString_87(this.positionAmountData)));
			neq(this.adjustmentType, P7fffffffffffffff_longLit) && (s += 'AdjustmentType(718)=' + $trim('' + toString_183(this.adjustmentType)) + charToString(sep));
			this.contraryInstructionIndicator && (s += 'ContraryInstructionIndicator(719)=' + $trim('' + this.contraryInstructionIndicator) + charToString(sep));
			this.priorSpreadIndicator && (s += 'PriorSpreadIndicator(720)=' + $trim('' + this.priorSpreadIndicator) + charToString(sep));
			neq(this.thresholdAmount, P7fffffffffffffff_longLit) && (s += 'ThresholdAmount(834)=' + $trim('' + toString_183(this.thresholdAmount)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.adjustmentType = P0_longLit;
	_.contraryInstructionIndicator = false;
	_.encodedTextLen = P0_longLit;
	_.posMaintAction = P0_longLit;
	_.posTransType = P0_longLit;
	_.priorSpreadIndicator = false;
	_.thresholdAmount = P0_longLit;

	function $$init_7(this$static) {
		this$static.quoteType = P0_longLit;
		this$static.privateQuote = false;
		this$static.quoteResponseLevel = P0_longLit;
		this$static.side = 32;
		this$static.orderQty2 = P0_longLit;
		this$static.acctIDSource = P0_longLit;
		this$static.accountType = P0_longLit;
		this$static.bidPx = P0_longLit;
		this$static.offerPx = P0_longLit;
		this$static.mktBidPx = P0_longLit;
		this$static.mktOfferPx = P0_longLit;
		this$static.minBidSize = P0_longLit;
		this$static.bidSize = P0_longLit;
		this$static.minOfferSize = P0_longLit;
		this$static.offerSize = P0_longLit;
		this$static.minQty = P0_longLit;
		this$static.bidSpotRate = P0_longLit;
		this$static.offerSpotRate = P0_longLit;
		this$static.bidForwardPoints = P0_longLit;
		this$static.offerForwardPoints = P0_longLit;
		this$static.bidSwapPoints = P0_longLit;
		this$static.offerSwapPoints = P0_longLit;
		this$static.midPx = P0_longLit;
		this$static.bidYield = P0_longLit;
		this$static.midYield = P0_longLit;
		this$static.offerYield = P0_longLit;
		this$static.ordType = 32;
		this$static.bidForwardPoints2 = P0_longLit;
		this$static.offerForwardPoints2 = P0_longLit;
		this$static.settlCurrBidFxRate = P0_longLit;
		this$static.settlCurrOfferFxRate = P0_longLit;
		this$static.settlCurrFxRateCalc = 32;
		this$static.commType = 32;
		this$static.commission = P0_longLit;
		this$static.custOrderCapacity = P0_longLit;
		this$static.exDestinationIDSource = 32;
		this$static.bookingType = P0_longLit;
		this$static.orderCapacity = 32;
		this$static.priceType = P0_longLit;
		this$static.encodedTextLen = P0_longLit;
	}

	function $checkRequiredTags_8(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.quoteID[0] == 0) return 117;
		if (this$static.quoteReqID[0] == 0) return 131;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $clear_6(this$static) {
		$clinit_Utils();
		this$static.quoteReqID[0] = 0;
		this$static.quoteID[0] = 0;
		this$static.quoteMsgID[0] = 0;
		this$static.quoteRespID[0] = 0;
		this$static.quoteType = P7fffffffffffffff_longLit;
		this$static.privateQuote = false;
		this$static.quoteResponseLevel = P7fffffffffffffff_longLit;
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
		this$static.side = 127;
		this$static.settlType[0] = 0;
		this$static.settlDate[0] = 0;
		this$static.settlDate2[0] = 0;
		this$static.orderQty2 = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.settlCurrency[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.bidPx = P7fffffffffffffff_longLit;
		this$static.offerPx = P7fffffffffffffff_longLit;
		this$static.mktBidPx = P7fffffffffffffff_longLit;
		this$static.mktOfferPx = P7fffffffffffffff_longLit;
		this$static.minBidSize = P7fffffffffffffff_longLit;
		this$static.bidSize = P7fffffffffffffff_longLit;
		this$static.minOfferSize = P7fffffffffffffff_longLit;
		this$static.offerSize = P7fffffffffffffff_longLit;
		this$static.minQty = P7fffffffffffffff_longLit;
		this$static.validUntilTime[0] = 0;
		this$static.bidSpotRate = P7fffffffffffffff_longLit;
		this$static.offerSpotRate = P7fffffffffffffff_longLit;
		this$static.bidForwardPoints = P7fffffffffffffff_longLit;
		this$static.offerForwardPoints = P7fffffffffffffff_longLit;
		this$static.bidSwapPoints = P7fffffffffffffff_longLit;
		this$static.offerSwapPoints = P7fffffffffffffff_longLit;
		this$static.midPx = P7fffffffffffffff_longLit;
		this$static.bidYield = P7fffffffffffffff_longLit;
		this$static.midYield = P7fffffffffffffff_longLit;
		this$static.offerYield = P7fffffffffffffff_longLit;
		this$static.transactTime[0] = 0;
		this$static.ordType = 127;
		this$static.bidForwardPoints2 = P7fffffffffffffff_longLit;
		this$static.offerForwardPoints2 = P7fffffffffffffff_longLit;
		this$static.settlCurrBidFxRate = P7fffffffffffffff_longLit;
		this$static.settlCurrOfferFxRate = P7fffffffffffffff_longLit;
		this$static.settlCurrFxRateCalc = 127;
		this$static.commType = 127;
		this$static.commission = P7fffffffffffffff_longLit;
		this$static.custOrderCapacity = P7fffffffffffffff_longLit;
		this$static.exDestination[0] = 0;
		this$static.exDestinationIDSource = 127;
		this$static.bookingType = P7fffffffffffffff_longLit;
		this$static.orderCapacity = 127;
		this$static.orderRestrictions[0] = 0;
		this$static.priceType = P7fffffffffffffff_longLit;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_100(this$static.quotQualGrp);
		$clear_88(this$static.parties);
		$clear_40(this$static.instrument);
		$clear_34(this$static.financingDetails);
		$clear_142(this$static.undInstrmtGrp);
		$clear_87(this$static.orderQtyData);
		$clear_105(this$static.rateSource);
		$clear_119(this$static.stipulations);
		$clear_50(this$static.legQuotGrp);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_152(this$static.yieldData);
	}

	function $getAll_11(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 131:
				this$static.quoteReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 131, value_0, this$static.quoteReqID);
				break;
			case 117:
				this$static.quoteID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 117, value_0, this$static.quoteID);
				break;
			case 1166:
				this$static.quoteMsgID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1166, value_0, this$static.quoteMsgID);
				break;
			case 693:
				this$static.quoteRespID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 693, value_0, this$static.quoteRespID);
				break;
			case 537:
				this$static.quoteType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 537, value_0));
				if (!isValid_127(this$static.quoteType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.quoteType) + ') for tag'), P219_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1171:
				this$static.privateQuote = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1171, value_0);
				break;
			case 735:
				this$static.quotQualGrp.noQuoteQualifiers = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 735, value_0);
				$getAll_74(this$static.quotQualGrp, this$static.quotQualGrp.noQuoteQualifiers, value_0);
				break;
			case 301:
				this$static.quoteResponseLevel = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 301, value_0));
				if (!isValid_126(this$static.quoteResponseLevel)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.quoteResponseLevel) + ') for tag'), P12d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 336:
				this$static.tradingSessionID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 336, value_0, this$static.tradingSessionID);
				if (!isValid_168(this$static.tradingSessionID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionID + ') for tag'), P150_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 625:
				this$static.tradingSessionSubID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 625, value_0, this$static.tradingSessionSubID);
				if (!isValid_169(this$static.tradingSessionSubID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionSubID + ') for tag'), P271_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 54:
				this$static.side = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 54, value_0);
				if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 38:
				$getAll_66(this$static.orderQtyData, 38, value_0);
				break;
			case 63:
				this$static.settlType = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 63, value_0, this$static.settlType);
				if (!isValid_149(this$static.settlType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlType + ') for tag'), P3f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 64:
				this$static.settlDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 64, value_0, this$static.settlDate);
				break;
			case 193:
				this$static.settlDate2 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 193, value_0, this$static.settlDate2);
				break;
			case 192:
				this$static.orderQty2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 192, value_0);
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 15, value_0, this$static.currency);
				break;
			case 120:
				this$static.settlCurrency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 120, value_0, this$static.settlCurrency);
				break;
			case 1445:
				this$static.rateSource.noRateSources = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1445, value_0);
				$getAll_77(this$static.rateSource, this$static.rateSource.noRateSources, value_0);
				break;
			case 232:
				this$static.stipulations.noStipulations = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 232, value_0);
				$getAll_85(this$static.stipulations, this$static.stipulations.noStipulations, value_0);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 555:
				this$static.legQuotGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 555, value_0);
				$getAll_47(this$static.legQuotGrp, this$static.legQuotGrp.noLegs, value_0);
				break;
			case 132:
				this$static.bidPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 132, value_0);
				break;
			case 133:
				this$static.offerPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 133, value_0);
				break;
			case 645:
				this$static.mktBidPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 645, value_0);
				break;
			case 646:
				this$static.mktOfferPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 646, value_0);
				break;
			case 647:
				this$static.minBidSize = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 647, value_0);
				break;
			case 134:
				this$static.bidSize = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 134, value_0);
				break;
			case 648:
				this$static.minOfferSize = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 648, value_0);
				break;
			case 135:
				this$static.offerSize = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 135, value_0);
				break;
			case 110:
				this$static.minQty = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 110, value_0);
				break;
			case 62:
				this$static.validUntilTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 62, value_0, this$static.validUntilTime);
				break;
			case 188:
				this$static.bidSpotRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 188, value_0);
				break;
			case 190:
				this$static.offerSpotRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 190, value_0);
				break;
			case 189:
				this$static.bidForwardPoints = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 189, value_0);
				break;
			case 191:
				this$static.offerForwardPoints = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 191, value_0);
				break;
			case 1065:
				this$static.bidSwapPoints = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1065, value_0);
				break;
			case 1066:
				this$static.offerSwapPoints = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1066, value_0);
				break;
			case 631:
				this$static.midPx = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 631, value_0);
				break;
			case 632:
				this$static.bidYield = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 632, value_0);
				break;
			case 633:
				this$static.midYield = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 633, value_0);
				break;
			case 634:
				this$static.offerYield = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 634, value_0);
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 60, value_0, this$static.transactTime);
				break;
			case 40:
				this$static.ordType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 40, value_0);
				if (!isValid_89(this$static.ordType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordType + ') for tag'), P28_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 642:
				this$static.bidForwardPoints2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 642, value_0);
				break;
			case 643:
				this$static.offerForwardPoints2 = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 643, value_0);
				break;
			case 656:
				this$static.settlCurrBidFxRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 656, value_0);
				break;
			case 657:
				this$static.settlCurrOfferFxRate = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 657, value_0);
				break;
			case 156:
				this$static.settlCurrFxRateCalc = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 156, value_0);
				if (!isValid_146(this$static.settlCurrFxRateCalc)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlCurrFxRateCalc + ') for tag'), P9c_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 13:
				this$static.commType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 13, value_0);
				if (!isValid_18(this$static.commType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.commType + ') for tag'), Pd_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 12:
				this$static.commission = getTagFloatValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 12, value_0);
				break;
			case 582:
				this$static.custOrderCapacity = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 582, value_0));
				if (!isValid_27(this$static.custOrderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.custOrderCapacity) + ') for tag'), P246_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 100:
				this$static.exDestination = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 100, value_0, this$static.exDestination);
				break;
			case 1133:
				this$static.exDestinationIDSource = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 1133, value_0);
				if (!isValid_48(this$static.exDestinationIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.exDestinationIDSource + ') for tag'), P46d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 775:
				this$static.bookingType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 775, value_0));
				if (!isValid_6(this$static.bookingType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.bookingType) + ') for tag'), P307_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 528:
				this$static.orderCapacity = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 528, value_0);
				if (!isValid_90(this$static.orderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderCapacity + ') for tag'), P210_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 529:
				this$static.orderRestrictions = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 529, value_0, this$static.orderRestrictions);
				if (!isValid_93(this$static.orderRestrictions)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderRestrictions + ') for tag'), P211_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 423:
				this$static.priceType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 423, value_0));
				if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 218:
				$getAll_84(this$static.spreadOrBenchmarkCurveData, 218, value_0);
				break;
			case 235:
				$getAll_103(this$static.yieldData, 235, value_0);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1), 10, value_0));
				id_0 = $checkRequiredTags_8(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixQuote_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		$$init_7(this);
		this.quoteReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quoteID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quoteMsgID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quoteRespID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quotQualGrp = new FixQuotQualGrp_0;
		this.parties = new FixParties_0;
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.orderQtyData = new FixOrderQtyData_0;
		this.settlType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlDate2 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.rateSource = new FixRateSource_0;
		this.stipulations = new FixStipulations_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legQuotGrp = new FixLegQuotGrp_0;
		this.validUntilTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.exDestination = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderRestrictions = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.yieldData = new FixYieldData_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_6(this);
		this.msgTypeInt = 83;
	}

	defineSeed(527, 322, makeCastMap([Q$FixMessage, Q$FixQuote]), FixQuote_0);
	_.equals$ = function equals_28(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixQuote)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.quoteReqID, msg.quoteReqID) || (ret = false);
		equals_12(this.quoteID, msg.quoteID) || (ret = false);
		equals_12(this.quoteMsgID, msg.quoteMsgID) || (ret = false);
		equals_12(this.quoteRespID, msg.quoteRespID) || (ret = false);
		if (neq(this.quoteType, msg.quoteType)) {
			ret = false;
			$print((valueOf_1(this.quoteType), valueOf_1(msg.quoteType)));
		}
		if (this.privateQuote != msg.privateQuote) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_95(this.quotQualGrp, msg.quotQualGrp) || (ret = false);
		if (neq(this.quoteResponseLevel, msg.quoteResponseLevel)) {
			ret = false;
			$print((valueOf_1(this.quoteResponseLevel), valueOf_1(msg.quoteResponseLevel)));
		}
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.tradingSessionID, msg.tradingSessionID) || (ret = false);
		equals_12(this.tradingSessionSubID, msg.tradingSessionSubID) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		$equals_82(this.orderQtyData, msg.orderQtyData) || (ret = false);
		equals_12(this.settlType, msg.settlType) || (ret = false);
		if (neq(this.orderQty2, msg.orderQty2)) {
			ret = false;
			$print((valueOf_1(this.orderQty2), valueOf_1(msg.orderQty2)));
		}
		equals_12(this.currency, msg.currency) || (ret = false);
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		$equals_101(this.rateSource, msg.rateSource) || (ret = false);
		$equals_115(this.stipulations, msg.stipulations) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		$equals_44(this.legQuotGrp, msg.legQuotGrp) || (ret = false);
		if (neq(this.bidPx, msg.bidPx)) {
			ret = false;
			$print((valueOf_1(this.bidPx), valueOf_1(msg.bidPx)));
		}
		if (neq(this.offerPx, msg.offerPx)) {
			ret = false;
			$print((valueOf_1(this.offerPx), valueOf_1(msg.offerPx)));
		}
		if (neq(this.mktBidPx, msg.mktBidPx)) {
			ret = false;
			$print((valueOf_1(this.mktBidPx), valueOf_1(msg.mktBidPx)));
		}
		if (neq(this.mktOfferPx, msg.mktOfferPx)) {
			ret = false;
			$print((valueOf_1(this.mktOfferPx), valueOf_1(msg.mktOfferPx)));
		}
		if (neq(this.minBidSize, msg.minBidSize)) {
			ret = false;
			$print((valueOf_1(this.minBidSize), valueOf_1(msg.minBidSize)));
		}
		if (neq(this.bidSize, msg.bidSize)) {
			ret = false;
			$print((valueOf_1(this.bidSize), valueOf_1(msg.bidSize)));
		}
		if (neq(this.minOfferSize, msg.minOfferSize)) {
			ret = false;
			$print((valueOf_1(this.minOfferSize), valueOf_1(msg.minOfferSize)));
		}
		if (neq(this.offerSize, msg.offerSize)) {
			ret = false;
			$print((valueOf_1(this.offerSize), valueOf_1(msg.offerSize)));
		}
		if (neq(this.minQty, msg.minQty)) {
			ret = false;
			$print((valueOf_1(this.minQty), valueOf_1(msg.minQty)));
		}
		if (neq(this.bidSpotRate, msg.bidSpotRate)) {
			ret = false;
			$print((valueOf_1(this.bidSpotRate), valueOf_1(msg.bidSpotRate)));
		}
		if (neq(this.offerSpotRate, msg.offerSpotRate)) {
			ret = false;
			$print((valueOf_1(this.offerSpotRate), valueOf_1(msg.offerSpotRate)));
		}
		if (neq(this.bidForwardPoints, msg.bidForwardPoints)) {
			ret = false;
			$print((valueOf_1(this.bidForwardPoints), valueOf_1(msg.bidForwardPoints)));
		}
		if (neq(this.offerForwardPoints, msg.offerForwardPoints)) {
			ret = false;
			$print((valueOf_1(this.offerForwardPoints), valueOf_1(msg.offerForwardPoints)));
		}
		if (neq(this.bidSwapPoints, msg.bidSwapPoints)) {
			ret = false;
			$print((valueOf_1(this.bidSwapPoints), valueOf_1(msg.bidSwapPoints)));
		}
		if (neq(this.offerSwapPoints, msg.offerSwapPoints)) {
			ret = false;
			$print((valueOf_1(this.offerSwapPoints), valueOf_1(msg.offerSwapPoints)));
		}
		if (neq(this.midPx, msg.midPx)) {
			ret = false;
			$print((valueOf_1(this.midPx), valueOf_1(msg.midPx)));
		}
		if (neq(this.bidYield, msg.bidYield)) {
			ret = false;
			$print((valueOf_1(this.bidYield), valueOf_1(msg.bidYield)));
		}
		if (neq(this.midYield, msg.midYield)) {
			ret = false;
			$print((valueOf_1(this.midYield), valueOf_1(msg.midYield)));
		}
		if (neq(this.offerYield, msg.offerYield)) {
			ret = false;
			$print((valueOf_1(this.offerYield), valueOf_1(msg.offerYield)));
		}
		if (this.ordType != msg.ordType) {
			ret = false;
			$print((valueOf(this.ordType), valueOf(msg.ordType)));
		}
		if (neq(this.bidForwardPoints2, msg.bidForwardPoints2)) {
			ret = false;
			$print((valueOf_1(this.bidForwardPoints2), valueOf_1(msg.bidForwardPoints2)));
		}
		if (neq(this.offerForwardPoints2, msg.offerForwardPoints2)) {
			ret = false;
			$print((valueOf_1(this.offerForwardPoints2), valueOf_1(msg.offerForwardPoints2)));
		}
		if (neq(this.settlCurrBidFxRate, msg.settlCurrBidFxRate)) {
			ret = false;
			$print((valueOf_1(this.settlCurrBidFxRate), valueOf_1(msg.settlCurrBidFxRate)));
		}
		if (neq(this.settlCurrOfferFxRate, msg.settlCurrOfferFxRate)) {
			ret = false;
			$print((valueOf_1(this.settlCurrOfferFxRate), valueOf_1(msg.settlCurrOfferFxRate)));
		}
		if (this.settlCurrFxRateCalc != msg.settlCurrFxRateCalc) {
			ret = false;
			$print((valueOf(this.settlCurrFxRateCalc), valueOf(msg.settlCurrFxRateCalc)));
		}
		if (this.commType != msg.commType) {
			ret = false;
			$print((valueOf(this.commType), valueOf(msg.commType)));
		}
		if (neq(this.commission, msg.commission)) {
			ret = false;
			$print((valueOf_1(this.commission), valueOf_1(msg.commission)));
		}
		if (neq(this.custOrderCapacity, msg.custOrderCapacity)) {
			ret = false;
			$print((valueOf_1(this.custOrderCapacity), valueOf_1(msg.custOrderCapacity)));
		}
		equals_12(this.exDestination, msg.exDestination) || (ret = false);
		if (this.exDestinationIDSource != msg.exDestinationIDSource) {
			ret = false;
			$print((valueOf(this.exDestinationIDSource), valueOf(msg.exDestinationIDSource)));
		}
		if (neq(this.bookingType, msg.bookingType)) {
			ret = false;
			$print((valueOf_1(this.bookingType), valueOf_1(msg.bookingType)));
		}
		if (this.orderCapacity != msg.orderCapacity) {
			ret = false;
			$print((valueOf(this.orderCapacity), valueOf(msg.orderCapacity)));
		}
		equals_12(this.orderRestrictions, msg.orderRestrictions) || (ret = false);
		if (neq(this.priceType, msg.priceType)) {
			ret = false;
			$print((valueOf_1(this.priceType), valueOf_1(msg.priceType)));
		}
		$equals_114(this.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		$equals_150(this.yieldData, msg.yieldData) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_17() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'Quote' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), QUOTE_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			this.quoteReqID[0] != 0 && (s += 'QuoteReqID(131)=' + $trim(_String(this.quoteReqID)) + charToString(sep));
			s += 'QuoteID(117)=' + $trim(_String(this.quoteID)) + charToString(sep);
			this.quoteMsgID[0] != 0 && (s += 'QuoteMsgID(1166)=' + $trim(_String(this.quoteMsgID)) + charToString(sep));
			this.quoteRespID[0] != 0 && (s += 'QuoteRespID(693)=' + $trim(_String(this.quoteRespID)) + charToString(sep));
			neq(this.quoteType, P7fffffffffffffff_longLit) && (s += 'QuoteType(537)=' + $trim('' + toString_183(this.quoteType)) + charToString(sep));
			this.privateQuote && (s += 'PrivateQuote(1171)=' + $trim('' + this.privateQuote) + charToString(sep));
			neq(fromInt(this.quotQualGrp.noQuoteQualifiers), P7fffffffffffffff_longLit) && (s += $trim($toString_96(this.quotQualGrp)));
			neq(this.quoteResponseLevel, P7fffffffffffffff_longLit) && (s += 'QuoteResponseLevel(301)=' + $trim('' + toString_183(this.quoteResponseLevel)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this.tradingSessionID)) + charToString(sep));
			this.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this.tradingSessionSubID)) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			this.side != 127 && (s += 'Side(54)=' + $trim('' + this.side) + charToString(sep));
			neq(this.orderQtyData.orderQty, P7fffffffffffffff_longLit) && (s += $trim($toString_83(this.orderQtyData)));
			this.settlType[0] != 0 && (s += 'SettlType(63)=' + $trim(_String(this.settlType)) + charToString(sep));
			this.settlDate[0] != 0 && (s += 'SettlDate(64)=' + $trim(_String(this.settlDate)) + charToString(sep));
			this.settlDate2[0] != 0 && (s += 'SettlDate2(193)=' + $trim(_String(this.settlDate2)) + charToString(sep));
			neq(this.orderQty2, P7fffffffffffffff_longLit) && (s += 'OrderQty2(192)=' + $trim('' + toString_183(this.orderQty2)) + charToString(sep));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			neq(fromInt(this.rateSource.noRateSources), P7fffffffffffffff_longLit) && (s += $trim($toString_102(this.rateSource)));
			neq(fromInt(this.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this.stipulations)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			neq(fromInt(this.legQuotGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_45(this.legQuotGrp)));
			neq(this.bidPx, P7fffffffffffffff_longLit) && (s += 'BidPx(132)=' + $trim('' + toString_183(this.bidPx)) + charToString(sep));
			neq(this.offerPx, P7fffffffffffffff_longLit) && (s += 'OfferPx(133)=' + $trim('' + toString_183(this.offerPx)) + charToString(sep));
			neq(this.mktBidPx, P7fffffffffffffff_longLit) && (s += 'MktBidPx(645)=' + $trim('' + toString_183(this.mktBidPx)) + charToString(sep));
			neq(this.mktOfferPx, P7fffffffffffffff_longLit) && (s += 'MktOfferPx(646)=' + $trim('' + toString_183(this.mktOfferPx)) + charToString(sep));
			neq(this.minBidSize, P7fffffffffffffff_longLit) && (s += 'MinBidSize(647)=' + $trim('' + toString_183(this.minBidSize)) + charToString(sep));
			neq(this.bidSize, P7fffffffffffffff_longLit) && (s += 'BidSize(134)=' + $trim('' + toString_183(this.bidSize)) + charToString(sep));
			neq(this.minOfferSize, P7fffffffffffffff_longLit) && (s += 'MinOfferSize(648)=' + $trim('' + toString_183(this.minOfferSize)) + charToString(sep));
			neq(this.offerSize, P7fffffffffffffff_longLit) && (s += 'OfferSize(135)=' + $trim('' + toString_183(this.offerSize)) + charToString(sep));
			neq(this.minQty, P7fffffffffffffff_longLit) && (s += 'MinQty(110)=' + $trim('' + toString_183(this.minQty)) + charToString(sep));
			this.validUntilTime[0] != 0 && (s += 'ValidUntilTime(62)=' + $trim(_String(this.validUntilTime)) + charToString(sep));
			neq(this.bidSpotRate, P7fffffffffffffff_longLit) && (s += 'BidSpotRate(188)=' + $trim('' + toString_183(this.bidSpotRate)) + charToString(sep));
			neq(this.offerSpotRate, P7fffffffffffffff_longLit) && (s += 'OfferSpotRate(190)=' + $trim('' + toString_183(this.offerSpotRate)) + charToString(sep));
			neq(this.bidForwardPoints, P7fffffffffffffff_longLit) && (s += 'BidForwardPoints(189)=' + $trim('' + toString_183(this.bidForwardPoints)) + charToString(sep));
			neq(this.offerForwardPoints, P7fffffffffffffff_longLit) && (s += 'OfferForwardPoints(191)=' + $trim('' + toString_183(this.offerForwardPoints)) + charToString(sep));
			neq(this.bidSwapPoints, P7fffffffffffffff_longLit) && (s += 'BidSwapPoints(1065)=' + $trim('' + toString_183(this.bidSwapPoints)) + charToString(sep));
			neq(this.offerSwapPoints, P7fffffffffffffff_longLit) && (s += 'OfferSwapPoints(1066)=' + $trim('' + toString_183(this.offerSwapPoints)) + charToString(sep));
			neq(this.midPx, P7fffffffffffffff_longLit) && (s += 'MidPx(631)=' + $trim('' + toString_183(this.midPx)) + charToString(sep));
			neq(this.bidYield, P7fffffffffffffff_longLit) && (s += 'BidYield(632)=' + $trim('' + toString_183(this.bidYield)) + charToString(sep));
			neq(this.midYield, P7fffffffffffffff_longLit) && (s += 'MidYield(633)=' + $trim('' + toString_183(this.midYield)) + charToString(sep));
			neq(this.offerYield, P7fffffffffffffff_longLit) && (s += 'OfferYield(634)=' + $trim('' + toString_183(this.offerYield)) + charToString(sep));
			this.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep));
			this.ordType != 127 && (s += 'OrdType(40)=' + $trim('' + this.ordType) + charToString(sep));
			neq(this.bidForwardPoints2, P7fffffffffffffff_longLit) && (s += 'BidForwardPoints2(642)=' + $trim('' + toString_183(this.bidForwardPoints2)) + charToString(sep));
			neq(this.offerForwardPoints2, P7fffffffffffffff_longLit) && (s += 'OfferForwardPoints2(643)=' + $trim('' + toString_183(this.offerForwardPoints2)) + charToString(sep));
			neq(this.settlCurrBidFxRate, P7fffffffffffffff_longLit) && (s += 'SettlCurrBidFxRate(656)=' + $trim('' + toString_183(this.settlCurrBidFxRate)) + charToString(sep));
			neq(this.settlCurrOfferFxRate, P7fffffffffffffff_longLit) && (s += 'SettlCurrOfferFxRate(657)=' + $trim('' + toString_183(this.settlCurrOfferFxRate)) + charToString(sep));
			this.settlCurrFxRateCalc != 127 && (s += 'SettlCurrFxRateCalc(156)=' + $trim('' + this.settlCurrFxRateCalc) + charToString(sep));
			this.commType != 127 && (s += 'CommType(13)=' + $trim('' + this.commType) + charToString(sep));
			neq(this.commission, P7fffffffffffffff_longLit) && (s += 'Commission(12)=' + $trim('' + toString_183(this.commission)) + charToString(sep));
			neq(this.custOrderCapacity, P7fffffffffffffff_longLit) && (s += 'CustOrderCapacity(582)=' + $trim('' + toString_183(this.custOrderCapacity)) + charToString(sep));
			this.exDestination[0] != 0 && (s += 'ExDestination(100)=' + $trim(_String(this.exDestination)) + charToString(sep));
			this.exDestinationIDSource != 127 && (s += 'ExDestinationIDSource(1133)=' + $trim('' + this.exDestinationIDSource) + charToString(sep));
			neq(this.bookingType, P7fffffffffffffff_longLit) && (s += 'BookingType(775)=' + $trim('' + toString_183(this.bookingType)) + charToString(sep));
			this.orderCapacity != 127 && (s += 'OrderCapacity(528)=' + $trim('' + this.orderCapacity) + charToString(sep));
			this.orderRestrictions[0] != 0 && (s += 'OrderRestrictions(529)=' + $trim(_String(this.orderRestrictions)) + charToString(sep));
			neq(this.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this.priceType)) + charToString(sep));
			neq(this.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this.spreadOrBenchmarkCurveData)));
			this.yieldData.yieldType[0] != 0 && (s += $trim($toString_151(this.yieldData)));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.bidForwardPoints = P0_longLit;
	_.bidForwardPoints2 = P0_longLit;
	_.bidPx = P0_longLit;
	_.bidSize = P0_longLit;
	_.bidSpotRate = P0_longLit;
	_.bidSwapPoints = P0_longLit;
	_.bidYield = P0_longLit;
	_.bookingType = P0_longLit;
	_.commType = 0;
	_.commission = P0_longLit;
	_.custOrderCapacity = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.exDestinationIDSource = 0;
	_.midPx = P0_longLit;
	_.midYield = P0_longLit;
	_.minBidSize = P0_longLit;
	_.minOfferSize = P0_longLit;
	_.minQty = P0_longLit;
	_.mktBidPx = P0_longLit;
	_.mktOfferPx = P0_longLit;
	_.offerForwardPoints = P0_longLit;
	_.offerForwardPoints2 = P0_longLit;
	_.offerPx = P0_longLit;
	_.offerSize = P0_longLit;
	_.offerSpotRate = P0_longLit;
	_.offerSwapPoints = P0_longLit;
	_.offerYield = P0_longLit;
	_.ordType = 0;
	_.orderCapacity = 0;
	_.orderQty2 = P0_longLit;
	_.priceType = P0_longLit;
	_.privateQuote = false;
	_.quoteResponseLevel = P0_longLit;
	_.quoteType = P0_longLit;
	_.settlCurrBidFxRate = P0_longLit;
	_.settlCurrFxRateCalc = 0;
	_.settlCurrOfferFxRate = P0_longLit;
	_.side = 0;

	function $checkRequiredTags_9(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.quoteReqID[0] == 0) return 131;
		if (!$isSet_11(this$static.quotReqGrp)) return 146;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $encode_6(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 131, this$static.quoteReqID, lastIndexTrim(this$static.quoteReqID));
		this$static.rFQReqID[0] != 0 && putFixTag_2(out, 644, this$static.rFQReqID, lastIndexTrim(this$static.rFQReqID));
		this$static.clOrdID[0] != 0 && putFixTag_2(out, 11, this$static.clOrdID, lastIndexTrim(this$static.clOrdID));
		neq(this$static.bookingType, P7fffffffffffffff_longLit) && putFixTag_0(out, 775, this$static.bookingType);
		this$static.orderCapacity != 127 && putFixTag(out, 528, this$static.orderCapacity);
		this$static.privateQuote && putFixTag(out, 1171, this$static.privateQuote ? 89 : 78);
		neq(this$static.respondentType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1172, this$static.respondentType);
		this$static.preTradeAnonymity && putFixTag(out, 1091, this$static.preTradeAnonymity ? 89 : 78);
		this$static.orderRestrictions[0] != 0 && putFixTag_2(out, 529, this$static.orderRestrictions, lastIndexTrim(this$static.orderRestrictions));
		neq(fromInt(this$static.rootParties.noRootPartyIDs), P7fffffffffffffff_longLit) && $encode_71(this$static.rootParties, out);
		this$static.quotReqGrp.noRelatedSym != 0 && $isSet_11(this$static.quotReqGrp) && $encode_65(this$static.quotReqGrp, out);
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function $getAll_12(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 131:
				this$static.quoteReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 131, value_0, this$static.quoteReqID);
				break;
			case 644:
				this$static.rFQReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 644, value_0, this$static.rFQReqID);
				break;
			case 11:
				this$static.clOrdID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 11, value_0, this$static.clOrdID);
				break;
			case 775:
				this$static.bookingType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 775, value_0));
				if (!isValid_6(this$static.bookingType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.bookingType) + ') for tag'), P307_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 528:
				this$static.orderCapacity = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 528, value_0);
				if (!isValid_90(this$static.orderCapacity)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderCapacity + ') for tag'), P210_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1171:
				this$static.privateQuote = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 1171, value_0);
				break;
			case 1172:
				this$static.respondentType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 1172, value_0));
				if (!isValid_133(this$static.respondentType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.respondentType) + ') for tag'), P494_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1091:
				this$static.preTradeAnonymity = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 1091, value_0);
				break;
			case 529:
				this$static.orderRestrictions = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 529, value_0, this$static.orderRestrictions);
				if (!isValid_93(this$static.orderRestrictions)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.orderRestrictions + ') for tag'), P211_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1116:
				this$static.rootParties.noRootPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 1116, value_0);
				$getAll_78(this$static.rootParties, this$static.rootParties.noRootPartyIDs, value_0);
				break;
			case 146:
				this$static.quotReqGrp.noRelatedSym = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 146, value_0);
				$getAll_75(this$static.quotReqGrp, this$static.quotReqGrp.noRelatedSym, value_0);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1), 10, value_0));
				id_0 = $checkRequiredTags_9(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixQuoteRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.bookingType = P0_longLit;
		this.orderCapacity = 32;
		this.privateQuote = false;
		this.respondentType = P0_longLit;
		this.preTradeAnonymity = false;
		this.encodedTextLen = P0_longLit;
		this.quoteReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.rFQReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderRestrictions = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.rootParties = new FixRootParties_0;
		this.quotReqGrp = new FixQuotReqGrp_0;
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clinit_Utils();
		this.quoteReqID[0] = 0;
		this.rFQReqID[0] = 0;
		this.clOrdID[0] = 0;
		this.bookingType = P7fffffffffffffff_longLit;
		this.orderCapacity = 127;
		this.privateQuote = false;
		this.respondentType = P7fffffffffffffff_longLit;
		this.preTradeAnonymity = false;
		this.orderRestrictions[0] = 0;
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		$clear_107(this.rootParties);
		$clear_101(this.quotReqGrp);
		this.msgTypeInt = 82;
	}

	defineSeed(528, 322, makeCastMap([Q$FixMessage, Q$FixQuoteRequest]), FixQuoteRequest_0);
	_.equals$ = function equals_29(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixQuoteRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.quoteReqID, msg.quoteReqID) || (ret = false);
		equals_12(this.rFQReqID, msg.rFQReqID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		if (neq(this.bookingType, msg.bookingType)) {
			ret = false;
			$print((valueOf_1(this.bookingType), valueOf_1(msg.bookingType)));
		}
		if (this.orderCapacity != msg.orderCapacity) {
			ret = false;
			$print((valueOf(this.orderCapacity), valueOf(msg.orderCapacity)));
		}
		if (this.privateQuote != msg.privateQuote) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.respondentType, msg.respondentType)) {
			ret = false;
			$print((valueOf_1(this.respondentType), valueOf_1(msg.respondentType)));
		}
		if (this.preTradeAnonymity != msg.preTradeAnonymity) {
			ret = false;
			$print($clinit_Boolean());
		}
		equals_12(this.orderRestrictions, msg.orderRestrictions) || (ret = false);
		$equals_103(this.rootParties, msg.rootParties) || (ret = false);
		$equals_97(this.quotReqGrp, msg.quotReqGrp) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_18() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'QuoteRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), QUOTEREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'QuoteReqID(131)=' + $trim(_String(this.quoteReqID)) + charToString(sep);
			this.rFQReqID[0] != 0 && (s += 'RFQReqID(644)=' + $trim(_String(this.rFQReqID)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			neq(this.bookingType, P7fffffffffffffff_longLit) && (s += 'BookingType(775)=' + $trim('' + toString_183(this.bookingType)) + charToString(sep));
			this.orderCapacity != 127 && (s += 'OrderCapacity(528)=' + $trim('' + this.orderCapacity) + charToString(sep));
			this.privateQuote && (s += 'PrivateQuote(1171)=' + $trim('' + this.privateQuote) + charToString(sep));
			neq(this.respondentType, P7fffffffffffffff_longLit) && (s += 'RespondentType(1172)=' + $trim('' + toString_183(this.respondentType)) + charToString(sep));
			this.preTradeAnonymity && (s += 'PreTradeAnonymity(1091)=' + $trim('' + this.preTradeAnonymity) + charToString(sep));
			this.orderRestrictions[0] != 0 && (s += 'OrderRestrictions(529)=' + $trim(_String(this.orderRestrictions)) + charToString(sep));
			neq(fromInt(this.rootParties.noRootPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_104(this.rootParties)));
			neq(fromInt(this.quotReqGrp.noRelatedSym), P7fffffffffffffff_longLit) && (s += $trim($toString_98(this.quotReqGrp)));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.bookingType = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.orderCapacity = 0;
	_.preTradeAnonymity = false;
	_.privateQuote = false;
	_.respondentType = P0_longLit;

	function $clear_7(this$static) {
		$clinit_Utils();
		this$static.posReqID[0] = 0;
		this$static.posReqType = P7fffffffffffffff_longLit;
		this$static.matchStatus = 127;
		this$static.subscriptionRequestType = 127;
		this$static.settlCurrency[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.clearingBusinessDate[0] = 0;
		this$static.settlSessID[0] = 0;
		this$static.settlSessSubID[0] = 0;
		this$static.transactTime[0] = 0;
		this$static.responseTransportType = P7fffffffffffffff_longLit;
		this$static.responseDestination[0] = 0;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_88(this$static.parties);
		$clear_40(this$static.instrument);
		$clear_37(this$static.instrmtLegGrp);
		$clear_142(this$static.undInstrmtGrp);
		$clear_137(this$static.trdgSesGrp);
	}

	function $encode_7(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONS_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 710, this$static.posReqID, lastIndexTrim(this$static.posReqID));
		putFixTag_0(out, 724, this$static.posReqType);
		this$static.matchStatus != 127 && putFixTag(out, 573, this$static.matchStatus);
		this$static.subscriptionRequestType != 127 && putFixTag(out, 263, this$static.subscriptionRequestType);
		this$static.settlCurrency[0] != 0 && putFixTag_2(out, 120, this$static.settlCurrency, lastIndexTrim(this$static.settlCurrency));
		this$static.parties.noPartyIDs != 0 && $isSet_5(this$static.parties) && $encode_52(this$static.parties, out);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		neq(this$static.accountType, P7fffffffffffffff_longLit) && putFixTag_0(out, 581, this$static.accountType);
		$isSet_1(this$static.instrument) && $encode_31(this$static.instrument, out);
		this$static.currency[0] != 0 && putFixTag_2(out, 15, this$static.currency, lastIndexTrim(this$static.currency));
		neq(fromInt(this$static.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && $encode_29(this$static.instrmtLegGrp, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		this$static.clearingBusinessDate[0] != 0 && putFixTag_1(out, 715, this$static.clearingBusinessDate);
		this$static.settlSessID[0] != 0 && putFixTag_2(out, 716, this$static.settlSessID, lastIndexTrim(this$static.settlSessID));
		this$static.settlSessSubID[0] != 0 && putFixTag_2(out, 717, this$static.settlSessSubID, lastIndexTrim(this$static.settlSessSubID));
		neq(fromInt(this$static.trdgSesGrp.noTradingSessions), P7fffffffffffffff_longLit) && $encode_90(this$static.trdgSesGrp, out);
		this$static.transactTime[0] != 0 && putFixTag_1(out, 60, this$static.transactTime);
		neq(this$static.responseTransportType, P7fffffffffffffff_longLit) && putFixTag_0(out, 725, this$static.responseTransportType);
		this$static.responseDestination[0] != 0 && putFixTag_2(out, 726, this$static.responseDestination, lastIndexTrim(this$static.responseDestination));
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function FixRequestForPositions_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.posReqType = P0_longLit;
		this.matchStatus = 32;
		this.subscriptionRequestType = 32;
		this.acctIDSource = P0_longLit;
		this.accountType = P0_longLit;
		this.responseTransportType = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.posReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.parties = new FixParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.trdgSesGrp = new FixTrdgSesGrp_0;
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.responseDestination = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_7(this);
		this.msgTypeInt = 16718;
	}

	defineSeed(529, 322, makeCastMap([Q$FixMessage, Q$FixRequestForPositions]), FixRequestForPositions_0);
	_.equals$ = function equals_30(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixRequestForPositions)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.posReqID, msg.posReqID) || (ret = false);
		if (neq(this.posReqType, msg.posReqType)) {
			ret = false;
			$print((valueOf_1(this.posReqType), valueOf_1(msg.posReqType)));
		}
		if (this.matchStatus != msg.matchStatus) {
			ret = false;
			$print((valueOf(this.matchStatus), valueOf(msg.matchStatus)));
		}
		if (this.subscriptionRequestType != msg.subscriptionRequestType) {
			ret = false;
			$print((valueOf(this.subscriptionRequestType), valueOf(msg.subscriptionRequestType)));
		}
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		equals_12(this.currency, msg.currency) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		equals_12(this.settlSessID, msg.settlSessID) || (ret = false);
		equals_12(this.settlSessSubID, msg.settlSessSubID) || (ret = false);
		$equals_134(this.trdgSesGrp, msg.trdgSesGrp) || (ret = false);
		if (neq(this.responseTransportType, msg.responseTransportType)) {
			ret = false;
			$print((valueOf_1(this.responseTransportType), valueOf_1(msg.responseTransportType)));
		}
		equals_12(this.responseDestination, msg.responseDestination) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_19() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'RequestForPositions' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONS_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'PosReqID(710)=' + $trim(_String(this.posReqID)) + charToString(sep);
			s += 'PosReqType(724)=' + $trim('' + toString_183(this.posReqType)) + charToString(sep);
			this.matchStatus != 127 && (s += 'MatchStatus(573)=' + $trim('' + this.matchStatus) + charToString(sep));
			this.subscriptionRequestType != 127 && (s += 'SubscriptionRequestType(263)=' + $trim('' + this.subscriptionRequestType) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep);
			this.settlSessID[0] != 0 && (s += 'SettlSessID(716)=' + $trim(_String(this.settlSessID)) + charToString(sep));
			this.settlSessSubID[0] != 0 && (s += 'SettlSessSubID(717)=' + $trim(_String(this.settlSessSubID)) + charToString(sep));
			neq(fromInt(this.trdgSesGrp.noTradingSessions), P7fffffffffffffff_longLit) && (s += $trim($toString_135(this.trdgSesGrp)));
			s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep);
			neq(this.responseTransportType, P7fffffffffffffff_longLit) && (s += 'ResponseTransportType(725)=' + $trim('' + toString_183(this.responseTransportType)) + charToString(sep));
			this.responseDestination[0] != 0 && (s += 'ResponseDestination(726)=' + $trim(_String(this.responseDestination)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.matchStatus = 0;
	_.posReqType = P0_longLit;
	_.responseTransportType = P0_longLit;
	_.subscriptionRequestType = 0;

	function $checkRequiredTags_10(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.posMaintRptID[0] == 0) return 721;
		if (eq(this$static.posReqResult, P7fffffffffffffff_longLit)) return 728;
		if (eq(this$static.posReqStatus, P7fffffffffffffff_longLit)) return 729;
		if (this$static.posReqID[0] == 0) return 710;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $clear_8(this$static) {
		$clinit_Utils();
		this$static.posMaintRptID[0] = 0;
		this$static.posReqID[0] = 0;
		this$static.totalNumPosReports = P7fffffffffffffff_longLit;
		this$static.unsolicitedIndicator = false;
		this$static.posReqResult = P7fffffffffffffff_longLit;
		this$static.posReqStatus = P7fffffffffffffff_longLit;
		this$static.posReqType = P7fffffffffffffff_longLit;
		this$static.matchStatus = 127;
		this$static.clearingBusinessDate[0] = 0;
		this$static.subscriptionRequestType = 127;
		this$static.settlSessID[0] = 0;
		this$static.settlSessSubID[0] = 0;
		this$static.settlCurrency[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.responseTransportType = P7fffffffffffffff_longLit;
		this$static.responseDestination[0] = 0;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_88(this$static.parties);
		$clear_40(this$static.instrument);
		$clear_37(this$static.instrmtLegGrp);
		$clear_142(this$static.undInstrmtGrp);
	}

	function $getAll_13(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 721:
				this$static.posMaintRptID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 721, value_0, this$static.posMaintRptID);
				break;
			case 710:
				this$static.posReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 710, value_0, this$static.posReqID);
				break;
			case 727:
				this$static.totalNumPosReports = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 727, value_0));
				break;
			case 325:
				this$static.unsolicitedIndicator = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 325, value_0);
				if (!isValid_182(this$static.unsolicitedIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.unsolicitedIndicator + ') for tag'), P145_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 728:
				this$static.posReqResult = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 728, value_0));
				if (!isValid_108(this$static.posReqResult)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posReqResult) + ') for tag'), P2d8_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 729:
				this$static.posReqStatus = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 729, value_0));
				if (!isValid_109(this$static.posReqStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posReqStatus) + ') for tag'), P2d9_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 724:
				this$static.posReqType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 724, value_0));
				if (!isValid_110(this$static.posReqType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posReqType) + ') for tag'), P2d4_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 573:
				this$static.matchStatus = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 573, value_0);
				if (!isValid_74(this$static.matchStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.matchStatus + ') for tag'), P23d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 715:
				this$static.clearingBusinessDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 715, value_0, this$static.clearingBusinessDate);
				break;
			case 263:
				this$static.subscriptionRequestType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 263, value_0);
				if (!isValid_156(this$static.subscriptionRequestType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.subscriptionRequestType + ') for tag'), P107_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 716:
				this$static.settlSessID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 716, value_0, this$static.settlSessID);
				if (!isValid_148(this$static.settlSessID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlSessID + ') for tag'), P2cc_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 717:
				this$static.settlSessSubID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 717, value_0, this$static.settlSessSubID);
				break;
			case 120:
				this$static.settlCurrency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 120, value_0, this$static.settlCurrency);
				break;
			case 453:
				this$static.parties.noPartyIDs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 453, value_0);
				$getAll_67(this$static.parties, this$static.parties.noPartyIDs, value_0);
				break;
			case 1:
				this$static.account = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 1, value_0, this$static.account);
				break;
			case 660:
				this$static.acctIDSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 660, value_0));
				if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 581:
				this$static.accountType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 581, value_0));
				if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 15, value_0, this$static.currency);
				break;
			case 555:
				this$static.instrmtLegGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 555, value_0);
				$getAll_38(this$static.instrmtLegGrp, this$static.instrmtLegGrp.noLegs, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 725:
				this$static.responseTransportType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 725, value_0));
				if (!isValid_134(this$static.responseTransportType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.responseTransportType) + ') for tag'), P2d5_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 726:
				this$static.responseDestination = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 726, value_0, this$static.responseDestination);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 355, value_0, this$static.encodedText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1), 10, value_0));
				id_0 = $checkRequiredTags_10(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixRequestForPositionsAck_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.totalNumPosReports = P0_longLit;
		this.unsolicitedIndicator = false;
		this.posReqResult = P0_longLit;
		this.posReqStatus = P0_longLit;
		this.posReqType = P0_longLit;
		this.matchStatus = 32;
		this.subscriptionRequestType = 32;
		this.acctIDSource = P0_longLit;
		this.accountType = P0_longLit;
		this.responseTransportType = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.posMaintRptID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.posReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlSessSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.parties = new FixParties_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.responseDestination = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_8(this);
		this.msgTypeInt = 16719;
	}

	defineSeed(530, 322, makeCastMap([Q$FixMessage, Q$FixRequestForPositionsAck]), FixRequestForPositionsAck_0);
	_.equals$ = function equals_31(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixRequestForPositionsAck)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.posMaintRptID, msg.posMaintRptID) || (ret = false);
		equals_12(this.posReqID, msg.posReqID) || (ret = false);
		if (neq(this.totalNumPosReports, msg.totalNumPosReports)) {
			ret = false;
			$print((valueOf_1(this.totalNumPosReports), valueOf_1(msg.totalNumPosReports)));
		}
		if (this.unsolicitedIndicator != msg.unsolicitedIndicator) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.posReqResult, msg.posReqResult)) {
			ret = false;
			$print((valueOf_1(this.posReqResult), valueOf_1(msg.posReqResult)));
		}
		if (neq(this.posReqStatus, msg.posReqStatus)) {
			ret = false;
			$print((valueOf_1(this.posReqStatus), valueOf_1(msg.posReqStatus)));
		}
		if (neq(this.posReqType, msg.posReqType)) {
			ret = false;
			$print((valueOf_1(this.posReqType), valueOf_1(msg.posReqType)));
		}
		if (this.matchStatus != msg.matchStatus) {
			ret = false;
			$print((valueOf(this.matchStatus), valueOf(msg.matchStatus)));
		}
		if (this.subscriptionRequestType != msg.subscriptionRequestType) {
			ret = false;
			$print((valueOf(this.subscriptionRequestType), valueOf(msg.subscriptionRequestType)));
		}
		equals_12(this.settlSessID, msg.settlSessID) || (ret = false);
		equals_12(this.settlSessSubID, msg.settlSessSubID) || (ret = false);
		equals_12(this.settlCurrency, msg.settlCurrency) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		equals_12(this.account, msg.account) || (ret = false);
		if (neq(this.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print((valueOf_1(this.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this.accountType, msg.accountType)) {
			ret = false;
			$print((valueOf_1(this.accountType), valueOf_1(msg.accountType)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		equals_12(this.currency, msg.currency) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (neq(this.responseTransportType, msg.responseTransportType)) {
			ret = false;
			$print((valueOf_1(this.responseTransportType), valueOf_1(msg.responseTransportType)));
		}
		equals_12(this.responseDestination, msg.responseDestination) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_20() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'RequestForPositionsAck' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), REQUESTFORPOSITIONSACK_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'PosMaintRptID(721)=' + $trim(_String(this.posMaintRptID)) + charToString(sep);
			this.posReqID[0] != 0 && (s += 'PosReqID(710)=' + $trim(_String(this.posReqID)) + charToString(sep));
			neq(this.totalNumPosReports, P7fffffffffffffff_longLit) && (s += 'TotalNumPosReports(727)=' + $trim('' + toString_183(this.totalNumPosReports)) + charToString(sep));
			this.unsolicitedIndicator && (s += 'UnsolicitedIndicator(325)=' + $trim('' + this.unsolicitedIndicator) + charToString(sep));
			s += 'PosReqResult(728)=' + $trim('' + toString_183(this.posReqResult)) + charToString(sep);
			s += 'PosReqStatus(729)=' + $trim('' + toString_183(this.posReqStatus)) + charToString(sep);
			neq(this.posReqType, P7fffffffffffffff_longLit) && (s += 'PosReqType(724)=' + $trim('' + toString_183(this.posReqType)) + charToString(sep));
			this.matchStatus != 127 && (s += 'MatchStatus(573)=' + $trim('' + this.matchStatus) + charToString(sep));
			this.clearingBusinessDate[0] != 0 && (s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep));
			this.subscriptionRequestType != 127 && (s += 'SubscriptionRequestType(263)=' + $trim('' + this.subscriptionRequestType) + charToString(sep));
			this.settlSessID[0] != 0 && (s += 'SettlSessID(716)=' + $trim(_String(this.settlSessID)) + charToString(sep));
			this.settlSessSubID[0] != 0 && (s += 'SettlSessSubID(717)=' + $trim(_String(this.settlSessSubID)) + charToString(sep));
			this.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this.settlCurrency)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this.account)) + charToString(sep));
			neq(this.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this.acctIDSource)) + charToString(sep));
			neq(this.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this.accountType)) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			neq(this.responseTransportType, P7fffffffffffffff_longLit) && (s += 'ResponseTransportType(725)=' + $trim('' + toString_183(this.responseTransportType)) + charToString(sep));
			this.responseDestination[0] != 0 && (s += 'ResponseDestination(726)=' + $trim(_String(this.responseDestination)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.encodedTextLen = P0_longLit;
	_.matchStatus = 0;
	_.posReqResult = P0_longLit;
	_.posReqStatus = P0_longLit;
	_.posReqType = P0_longLit;
	_.responseTransportType = P0_longLit;
	_.subscriptionRequestType = 0;
	_.totalNumPosReports = P0_longLit;
	_.unsolicitedIndicator = false;

	function $checkRequiredTags_11(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.msgSeqNum, P7fffffffffffffff_longLit)) return 34;
		if (this$static.sendingTime[0] == 0) return 52;
		if (eq(this$static.beginSeqNo, P7fffffffffffffff_longLit)) return 7;
		if (eq(this$static.endSeqNo, P7fffffffffffffff_longLit)) return 16;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_14(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 7:
				this$static.beginSeqNo = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), RESENDREQUEST_1), 7, value_0));
				break;
			case 16:
				this$static.endSeqNo = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), RESENDREQUEST_1), 16, value_0));
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), RESENDREQUEST_1), 10, value_0));
				id_0 = $checkRequiredTags_11(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixResendRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.beginSeqNo = P0_longLit;
		this.endSeqNo = P0_longLit;
		this.beginSeqNo = P7fffffffffffffff_longLit;
		this.endSeqNo = P7fffffffffffffff_longLit;
		this.msgTypeInt = 50;
	}

	defineSeed(531, 322, makeCastMap([Q$FixMessage, Q$FixResendRequest]), FixResendRequest_0);
	_.equals$ = function equals_32(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixResendRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		if (neq(this.beginSeqNo, msg.beginSeqNo)) {
			ret = false;
			$print((valueOf_1(this.beginSeqNo), valueOf_1(msg.beginSeqNo)));
		}
		if (neq(this.endSeqNo, msg.endSeqNo)) {
			ret = false;
			$print((valueOf_1(this.endSeqNo), valueOf_1(msg.endSeqNo)));
		}
		return ret;
	};
	_.toString$ = function toString_21() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'ResendRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), RESENDREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'BeginSeqNo(7)=' + $trim('' + toString_183(this.beginSeqNo)) + charToString(sep);
			s += 'EndSeqNo(16)=' + $trim('' + toString_183(this.endSeqNo)) + charToString(sep);
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.beginSeqNo = P0_longLit;
	_.endSeqNo = P0_longLit;

	function $checkRequiredTags_12(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.securityReqID[0] == 0) return 320;
		if (this$static.securityResponseID[0] == 0) return 322;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_15(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 964:
				this$static.securityReportID = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 964, value_0));
				break;
			case 715:
				this$static.clearingBusinessDate = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 715, value_0, this$static.clearingBusinessDate);
				break;
			case 1465:
				this$static.securityListID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1465, value_0, this$static.securityListID);
				break;
			case 1466:
				this$static.securityListRefID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1466, value_0, this$static.securityListRefID);
				break;
			case 1467:
				this$static.securityListDesc = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1467, value_0, this$static.securityListDesc);
				break;
			case 1468:
				this$static.encodedSecurityListDescLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1468, value_0));
				break;
			case 1469:
				this$static.encodedSecurityListDesc = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1469, value_0, this$static.encodedSecurityListDesc);
				break;
			case 1470:
				this$static.securityListType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1470, value_0));
				if (!isValid_139(this$static.securityListType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.securityListType) + ') for tag'), P5be_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1471:
				this$static.securityListTypeSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1471, value_0));
				if (!isValid_140(this$static.securityListTypeSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.securityListTypeSource) + ') for tag'), P5bf_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1180:
				$getAll_21(this$static.applicationSequenceControl, 1180, value_0);
				break;
			case 320:
				this$static.securityReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 320, value_0, this$static.securityReqID);
				break;
			case 322:
				this$static.securityResponseID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 322, value_0, this$static.securityResponseID);
				break;
			case 560:
				this$static.securityRequestResult = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 560, value_0));
				if (!isValid_141(this$static.securityRequestResult)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.securityRequestResult) + ') for tag'), P230_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 60:
				this$static.transactTime = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 60, value_0, this$static.transactTime);
				break;
			case 393:
				this$static.totNoRelatedSym = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 393, value_0));
				break;
			case 1301:
				this$static.marketID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1301, value_0, this$static.marketID);
				break;
			case 1300:
				this$static.marketSegmentID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 1300, value_0, this$static.marketSegmentID);
				break;
			case 893:
				this$static.lastFragment = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 893, value_0);
				if (!isValid_66(this$static.lastFragment)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.lastFragment + ') for tag'), P37d_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 146:
				this$static.secListGrp.noRelatedSym = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 146, value_0);
				$getAll_81(this$static.secListGrp, this$static.secListGrp.noRelatedSym, value_0);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1), 10, value_0));
				id_0 = $checkRequiredTags_12(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixSecurityList_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.securityReportID = P0_longLit;
		this.encodedSecurityListDescLen = P0_longLit;
		this.securityListType = P0_longLit;
		this.securityListTypeSource = P0_longLit;
		this.securityRequestResult = P0_longLit;
		this.totNoRelatedSym = P0_longLit;
		this.lastFragment = false;
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityListID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityListRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityListDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedSecurityListDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.applicationSequenceControl = new FixApplicationSequenceControl_0;
		this.securityReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityResponseID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.marketID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.marketSegmentID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secListGrp = new FixSecListGrp_0;
		this.securityReportID = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this.clearingBusinessDate[0] = 0;
		this.securityListID[0] = 0;
		this.securityListRefID[0] = 0;
		this.securityListDesc[0] = 0;
		this.encodedSecurityListDescLen = P7fffffffffffffff_longLit;
		this.encodedSecurityListDesc[0] = 0;
		this.securityListType = P7fffffffffffffff_longLit;
		this.securityListTypeSource = P7fffffffffffffff_longLit;
		this.securityReqID[0] = 0;
		this.securityResponseID[0] = 0;
		this.securityRequestResult = P7fffffffffffffff_longLit;
		this.transactTime[0] = 0;
		this.totNoRelatedSym = P7fffffffffffffff_longLit;
		this.marketID[0] = 0;
		this.marketSegmentID[0] = 0;
		this.lastFragment = false;
		$clear_10(this.applicationSequenceControl);
		$clear_113(this.secListGrp);
		this.msgTypeInt = 121;
	}

	defineSeed(532, 322, makeCastMap([Q$FixMessage, Q$FixSecurityList]), FixSecurityList_0);
	_.equals$ = function equals_33(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSecurityList)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		if (neq(this.securityReportID, msg.securityReportID)) {
			ret = false;
			$print((valueOf_1(this.securityReportID), valueOf_1(msg.securityReportID)));
		}
		equals_12(this.securityListID, msg.securityListID) || (ret = false);
		equals_12(this.securityListRefID, msg.securityListRefID) || (ret = false);
		equals_12(this.securityListDesc, msg.securityListDesc) || (ret = false);
		if (neq(this.encodedSecurityListDescLen, msg.encodedSecurityListDescLen)) {
			ret = false;
			$print((valueOf_1(this.encodedSecurityListDescLen), valueOf_1(msg.encodedSecurityListDescLen)));
		}
		equals_12(this.encodedSecurityListDesc, msg.encodedSecurityListDesc) || (ret = false);
		if (neq(this.securityListType, msg.securityListType)) {
			ret = false;
			$print((valueOf_1(this.securityListType), valueOf_1(msg.securityListType)));
		}
		if (neq(this.securityListTypeSource, msg.securityListTypeSource)) {
			ret = false;
			$print((valueOf_1(this.securityListTypeSource), valueOf_1(msg.securityListTypeSource)));
		}
		$equals_0(this.applicationSequenceControl, msg.applicationSequenceControl) || (ret = false);
		equals_12(this.securityReqID, msg.securityReqID) || (ret = false);
		equals_12(this.securityResponseID, msg.securityResponseID) || (ret = false);
		if (neq(this.securityRequestResult, msg.securityRequestResult)) {
			ret = false;
			$print((valueOf_1(this.securityRequestResult), valueOf_1(msg.securityRequestResult)));
		}
		if (neq(this.totNoRelatedSym, msg.totNoRelatedSym)) {
			ret = false;
			$print((valueOf_1(this.totNoRelatedSym), valueOf_1(msg.totNoRelatedSym)));
		}
		equals_12(this.marketID, msg.marketID) || (ret = false);
		equals_12(this.marketSegmentID, msg.marketSegmentID) || (ret = false);
		if (this.lastFragment != msg.lastFragment) {
			ret = false;
			$print($clinit_Boolean());
		}
		$equals_109(this.secListGrp, msg.secListGrp) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_22() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'SecurityList' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), SECURITYLIST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			neq(this.securityReportID, P7fffffffffffffff_longLit) && (s += 'SecurityReportID(964)=' + $trim('' + toString_183(this.securityReportID)) + charToString(sep));
			this.clearingBusinessDate[0] != 0 && (s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep));
			this.securityListID[0] != 0 && (s += 'SecurityListID(1465)=' + $trim(_String(this.securityListID)) + charToString(sep));
			this.securityListRefID[0] != 0 && (s += 'SecurityListRefID(1466)=' + $trim(_String(this.securityListRefID)) + charToString(sep));
			this.securityListDesc[0] != 0 && (s += 'SecurityListDesc(1467)=' + $trim(_String(this.securityListDesc)) + charToString(sep));
			neq(this.encodedSecurityListDescLen, P7fffffffffffffff_longLit) && (s += 'EncodedSecurityListDescLen(1468)=' + $trim('' + toString_183(this.encodedSecurityListDescLen)) + charToString(sep));
			this.encodedSecurityListDesc[0] != 0 && (s += 'EncodedSecurityListDesc(1469)=' + $trim(_String(this.encodedSecurityListDesc)) + charToString(sep));
			neq(this.securityListType, P7fffffffffffffff_longLit) && (s += 'SecurityListType(1470)=' + $trim('' + toString_183(this.securityListType)) + charToString(sep));
			neq(this.securityListTypeSource, P7fffffffffffffff_longLit) && (s += 'SecurityListTypeSource(1471)=' + $trim('' + toString_183(this.securityListTypeSource)) + charToString(sep));
			this.applicationSequenceControl.applID[0] != 0 && (s += $trim($toString_1(this.applicationSequenceControl)));
			this.securityReqID[0] != 0 && (s += 'SecurityReqID(320)=' + $trim(_String(this.securityReqID)) + charToString(sep));
			this.securityResponseID[0] != 0 && (s += 'SecurityResponseID(322)=' + $trim(_String(this.securityResponseID)) + charToString(sep));
			neq(this.securityRequestResult, P7fffffffffffffff_longLit) && (s += 'SecurityRequestResult(560)=' + $trim('' + toString_183(this.securityRequestResult)) + charToString(sep));
			this.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this.transactTime)) + charToString(sep));
			neq(this.totNoRelatedSym, P7fffffffffffffff_longLit) && (s += 'TotNoRelatedSym(393)=' + $trim('' + toString_183(this.totNoRelatedSym)) + charToString(sep));
			this.marketID[0] != 0 && (s += 'MarketID(1301)=' + $trim(_String(this.marketID)) + charToString(sep));
			this.marketSegmentID[0] != 0 && (s += 'MarketSegmentID(1300)=' + $trim(_String(this.marketSegmentID)) + charToString(sep));
			this.lastFragment && (s += 'LastFragment(893)=' + $trim('' + this.lastFragment) + charToString(sep));
			neq(fromInt(this.secListGrp.noRelatedSym), P7fffffffffffffff_longLit) && (s += $trim($toString_110(this.secListGrp)));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.encodedSecurityListDescLen = P0_longLit;
	_.lastFragment = false;
	_.securityListType = P0_longLit;
	_.securityListTypeSource = P0_longLit;
	_.securityReportID = P0_longLit;
	_.securityRequestResult = P0_longLit;
	_.totNoRelatedSym = P0_longLit;

	function $checkRequiredTags_13(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.securityReqID[0] == 0) return 320;
		if (eq(this$static.securityListRequestType, P7fffffffffffffff_longLit)) return 559;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $encode_8(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 320, this$static.securityReqID, lastIndexTrim(this$static.securityReqID));
		putFixTag_0(out, 559, this$static.securityListRequestType);
		this$static.marketID[0] != 0 && putFixTag_2(out, 1301, this$static.marketID, lastIndexTrim(this$static.marketID));
		this$static.marketSegmentID[0] != 0 && putFixTag_2(out, 1300, this$static.marketSegmentID, lastIndexTrim(this$static.marketSegmentID));
		this$static.securityListID[0] != 0 && putFixTag_2(out, 1465, this$static.securityListID, lastIndexTrim(this$static.securityListID));
		neq(this$static.securityListType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1470, this$static.securityListType);
		neq(this$static.securityListTypeSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 1471, this$static.securityListTypeSource);
		$isSet_1(this$static.instrument) && $encode_31(this$static.instrument, out);
		neq(this$static.instrumentExtension.deliveryForm, P7fffffffffffffff_longLit) && $encode_32(this$static.instrumentExtension, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		neq(fromInt(this$static.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && $encode_29(this$static.instrmtLegGrp, out);
		this$static.currency[0] != 0 && putFixTag_2(out, 15, this$static.currency, lastIndexTrim(this$static.currency));
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		this$static.tradingSessionID[0] != 0 && putFixTag_2(out, 336, this$static.tradingSessionID, lastIndexTrim(this$static.tradingSessionID));
		this$static.tradingSessionSubID[0] != 0 && putFixTag_2(out, 625, this$static.tradingSessionSubID, lastIndexTrim(this$static.tradingSessionSubID));
		this$static.subscriptionRequestType != 127 && putFixTag(out, 263, this$static.subscriptionRequestType);
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function $getAll_16(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 320:
				this$static.securityReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 320, value_0, this$static.securityReqID);
				break;
			case 559:
				this$static.securityListRequestType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 559, value_0));
				if (!isValid_138(this$static.securityListRequestType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.securityListRequestType) + ') for tag'), P22f_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1301:
				this$static.marketID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 1301, value_0, this$static.marketID);
				break;
			case 1300:
				this$static.marketSegmentID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 1300, value_0, this$static.marketSegmentID);
				break;
			case 1465:
				this$static.securityListID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 1465, value_0, this$static.securityListID);
				break;
			case 1470:
				this$static.securityListType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 1470, value_0));
				if (!isValid_139(this$static.securityListType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.securityListType) + ') for tag'), P5be_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 1471:
				this$static.securityListTypeSource = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 1471, value_0));
				if (!isValid_140(this$static.securityListTypeSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.securityListTypeSource) + ') for tag'), P5bf_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 48:
				$getAll_40(this$static.instrument, 48, value_0);
				break;
			case 207:
				$getAll_40(this$static.instrument, 207, value_0);
				break;
			case 167:
				$getAll_40(this$static.instrument, 167, value_0);
				break;
			case 668:
				$getAll_41(this$static.instrumentExtension, 668, value_0);
				break;
			case 913:
				$getAll_36(this$static.financingDetails, 913, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 555:
				this$static.instrmtLegGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 555, value_0);
				$getAll_38(this$static.instrmtLegGrp, this$static.instrmtLegGrp.noLegs, value_0);
				break;
			case 15:
				this$static.currency = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 15, value_0, this$static.currency);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 355, value_0, this$static.encodedText);
				break;
			case 336:
				this$static.tradingSessionID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 336, value_0, this$static.tradingSessionID);
				if (!isValid_168(this$static.tradingSessionID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionID + ') for tag'), P150_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 625:
				this$static.tradingSessionSubID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 625, value_0, this$static.tradingSessionSubID);
				if (!isValid_169(this$static.tradingSessionSubID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionSubID + ') for tag'), P271_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 263:
				this$static.subscriptionRequestType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 263, value_0);
				if (!isValid_156(this$static.subscriptionRequestType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.subscriptionRequestType + ') for tag'), P107_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1), 10, value_0));
				id_0 = $checkRequiredTags_13(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixSecurityListRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.securityListRequestType = P0_longLit;
		this.securityListType = P0_longLit;
		this.securityListTypeSource = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.subscriptionRequestType = 32;
		this.securityReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.marketID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.marketSegmentID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityListID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.instrumentExtension = new FixInstrumentExtension_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.securityReqID[0] = 0;
		this.securityListRequestType = P7fffffffffffffff_longLit;
		this.marketID[0] = 0;
		this.marketSegmentID[0] = 0;
		this.securityListID[0] = 0;
		this.securityListType = P7fffffffffffffff_longLit;
		this.securityListTypeSource = P7fffffffffffffff_longLit;
		this.currency[0] = 0;
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		this.tradingSessionID[0] = 0;
		this.tradingSessionSubID[0] = 0;
		this.subscriptionRequestType = 127;
		$clear_40(this.instrument);
		$clear_41(this.instrumentExtension);
		$clear_34(this.financingDetails);
		$clear_142(this.undInstrmtGrp);
		$clear_37(this.instrmtLegGrp);
		this.msgTypeInt = 120;
	}

	defineSeed(533, 322, makeCastMap([Q$FixMessage, Q$FixSecurityListRequest]), FixSecurityListRequest_0);
	_.equals$ = function equals_34(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSecurityListRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.securityReqID, msg.securityReqID) || (ret = false);
		if (neq(this.securityListRequestType, msg.securityListRequestType)) {
			ret = false;
			$print((valueOf_1(this.securityListRequestType), valueOf_1(msg.securityListRequestType)));
		}
		equals_12(this.marketID, msg.marketID) || (ret = false);
		equals_12(this.marketSegmentID, msg.marketSegmentID) || (ret = false);
		equals_12(this.securityListID, msg.securityListID) || (ret = false);
		if (neq(this.securityListType, msg.securityListType)) {
			ret = false;
			$print((valueOf_1(this.securityListType), valueOf_1(msg.securityListType)));
		}
		if (neq(this.securityListTypeSource, msg.securityListTypeSource)) {
			ret = false;
			$print((valueOf_1(this.securityListTypeSource), valueOf_1(msg.securityListTypeSource)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_35(this.instrumentExtension, msg.instrumentExtension) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		equals_12(this.currency, msg.currency) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		equals_12(this.tradingSessionID, msg.tradingSessionID) || (ret = false);
		equals_12(this.tradingSessionSubID, msg.tradingSessionSubID) || (ret = false);
		if (this.subscriptionRequestType != msg.subscriptionRequestType) {
			ret = false;
			$print((valueOf(this.subscriptionRequestType), valueOf(msg.subscriptionRequestType)));
		}
		return ret;
	};
	_.toString$ = function toString_23() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'SecurityListRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), SECURITYLISTREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'SecurityReqID(320)=' + $trim(_String(this.securityReqID)) + charToString(sep);
			s += 'SecurityListRequestType(559)=' + $trim('' + toString_183(this.securityListRequestType)) + charToString(sep);
			this.marketID[0] != 0 && (s += 'MarketID(1301)=' + $trim(_String(this.marketID)) + charToString(sep));
			this.marketSegmentID[0] != 0 && (s += 'MarketSegmentID(1300)=' + $trim(_String(this.marketSegmentID)) + charToString(sep));
			this.securityListID[0] != 0 && (s += 'SecurityListID(1465)=' + $trim(_String(this.securityListID)) + charToString(sep));
			neq(this.securityListType, P7fffffffffffffff_longLit) && (s += 'SecurityListType(1470)=' + $trim('' + toString_183(this.securityListType)) + charToString(sep));
			neq(this.securityListTypeSource, P7fffffffffffffff_longLit) && (s += 'SecurityListTypeSource(1471)=' + $trim('' + toString_183(this.securityListTypeSource)) + charToString(sep));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			neq(this.instrumentExtension.deliveryForm, P7fffffffffffffff_longLit) && (s += $trim($toString_36(this.instrumentExtension)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			this.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this.currency)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			this.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this.tradingSessionID)) + charToString(sep));
			this.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this.tradingSessionSubID)) + charToString(sep));
			this.subscriptionRequestType != 127 && (s += 'SubscriptionRequestType(263)=' + $trim('' + this.subscriptionRequestType) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.encodedTextLen = P0_longLit;
	_.securityListRequestType = P0_longLit;
	_.securityListType = P0_longLit;
	_.securityListTypeSource = P0_longLit;
	_.subscriptionRequestType = 0;

	function $checkRequiredTags_14(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.msgSeqNum, P7fffffffffffffff_longLit)) return 34;
		if (this$static.sendingTime[0] == 0) return 52;
		if (eq(this$static.newSeqNo, P7fffffffffffffff_longLit)) return 36;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_17(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 123:
				this$static.gapFillFlag = getTagBooleanValue(($clinit_FixMessageInfo$MsgTypes(), SEQUENCERESET_1), 123, value_0);
				if (!isValid_61(this$static.gapFillFlag)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.gapFillFlag + ') for tag'), P7b_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 36:
				this$static.newSeqNo = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SEQUENCERESET_1), 36, value_0));
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), SEQUENCERESET_1), 10, value_0));
				id_0 = $checkRequiredTags_14(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixSequenceReset_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.gapFillFlag = false;
		this.newSeqNo = P0_longLit;
		this.gapFillFlag = false;
		this.newSeqNo = P7fffffffffffffff_longLit;
		this.msgTypeInt = 52;
	}

	defineSeed(534, 322, makeCastMap([Q$FixMessage, Q$FixSequenceReset]), FixSequenceReset_0);
	_.equals$ = function equals_35(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSequenceReset)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		if (this.gapFillFlag != msg.gapFillFlag) {
			ret = false;
			$print($clinit_Boolean());
		}
		if (neq(this.newSeqNo, msg.newSeqNo)) {
			ret = false;
			$print((valueOf_1(this.newSeqNo), valueOf_1(msg.newSeqNo)));
		}
		return ret;
	};
	_.toString$ = function toString_24() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'SequenceReset' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), SEQUENCERESET_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			this.gapFillFlag && (s += 'GapFillFlag(123)=' + $trim('' + this.gapFillFlag) + charToString(sep));
			s += 'NewSeqNo(36)=' + $trim('' + toString_183(this.newSeqNo)) + charToString(sep);
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.gapFillFlag = false;
	_.newSeqNo = P0_longLit;

	function $checkRequiredTags_15(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (eq(this$static.msgSeqNum, P7fffffffffffffff_longLit)) return 34;
		if (this$static.sendingTime[0] == 0) return 52;
		if (this$static.testReqID[0] == 0) return 112;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_18(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 112:
				this$static.testReqID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TESTREQUEST_1), 112, value_0, this$static.testReqID);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TESTREQUEST_1), 10, value_0));
				id_0 = $checkRequiredTags_15(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixTestRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.testReqID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 64, 1);
		$clinit_Utils();
		this.testReqID[0] = 0;
		this.msgTypeInt = 49;
	}

	defineSeed(535, 322, makeCastMap([Q$FixMessage, Q$FixTestRequest]), FixTestRequest_0);
	_.equals$ = function equals_36(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTestRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.testReqID, msg.testReqID) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_25() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'TestRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), TESTREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'TestReqID(112)=' + $trim(_String(this.testReqID)) + charToString(sep);
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};

	function $clear_9(this$static) {
		$clinit_Utils();
		this$static.tradeRequestID[0] = 0;
		this$static.tradeID[0] = 0;
		this$static.secondaryTradeID[0] = 0;
		this$static.firmTradeID[0] = 0;
		this$static.secondaryFirmTradeID[0] = 0;
		this$static.tradeRequestType = P7fffffffffffffff_longLit;
		this$static.subscriptionRequestType = 127;
		this$static.tradeReportID[0] = 0;
		this$static.secondaryTradeReportID[0] = 0;
		this$static.execID[0] = 0;
		this$static.execType = 127;
		this$static.orderID[0] = 0;
		this$static.clOrdID[0] = 0;
		this$static.matchStatus = 127;
		this$static.trdType = P7fffffffffffffff_longLit;
		this$static.trdSubType = P7fffffffffffffff_longLit;
		this$static.tradeHandlingInstr = 127;
		this$static.transferReason[0] = 0;
		this$static.secondaryTrdType = P7fffffffffffffff_longLit;
		this$static.tradeLinkID[0] = 0;
		this$static.trdMatchID[0] = 0;
		this$static.clearingBusinessDate[0] = 0;
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
		this$static.timeBracket[0] = 0;
		this$static.side = 127;
		this$static.multiLegReportingType = 127;
		this$static.tradeInputSource[0] = 0;
		this$static.tradeInputDevice[0] = 0;
		this$static.responseTransportType = P7fffffffffffffff_longLit;
		this$static.responseDestination[0] = 0;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		this$static.messageEventSource[0] = 0;
		$clear_88(this$static.parties);
		$clear_40(this$static.instrument);
		$clear_41(this$static.instrumentExtension);
		$clear_34(this$static.financingDetails);
		$clear_142(this$static.undInstrmtGrp);
		$clear_37(this$static.instrmtLegGrp);
		$clear_132(this$static.trdCapDtGrp);
	}

	function $encode_9(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 568, this$static.tradeRequestID, lastIndexTrim(this$static.tradeRequestID));
		this$static.tradeID[0] != 0 && putFixTag_2(out, 1003, this$static.tradeID, lastIndexTrim(this$static.tradeID));
		this$static.secondaryTradeID[0] != 0 && putFixTag_2(out, 1040, this$static.secondaryTradeID, lastIndexTrim(this$static.secondaryTradeID));
		this$static.firmTradeID[0] != 0 && putFixTag_2(out, 1041, this$static.firmTradeID, lastIndexTrim(this$static.firmTradeID));
		this$static.secondaryFirmTradeID[0] != 0 && putFixTag_2(out, 1042, this$static.secondaryFirmTradeID, lastIndexTrim(this$static.secondaryFirmTradeID));
		putFixTag_0(out, 569, this$static.tradeRequestType);
		this$static.subscriptionRequestType != 127 && putFixTag(out, 263, this$static.subscriptionRequestType);
		this$static.tradeReportID[0] != 0 && putFixTag_2(out, 571, this$static.tradeReportID, lastIndexTrim(this$static.tradeReportID));
		this$static.secondaryTradeReportID[0] != 0 && putFixTag_2(out, 818, this$static.secondaryTradeReportID, lastIndexTrim(this$static.secondaryTradeReportID));
		this$static.execID[0] != 0 && putFixTag_2(out, 17, this$static.execID, lastIndexTrim(this$static.execID));
		this$static.execType != 127 && putFixTag(out, 150, this$static.execType);
		this$static.orderID[0] != 0 && putFixTag_2(out, 37, this$static.orderID, lastIndexTrim(this$static.orderID));
		this$static.clOrdID[0] != 0 && putFixTag_2(out, 11, this$static.clOrdID, lastIndexTrim(this$static.clOrdID));
		this$static.matchStatus != 127 && putFixTag(out, 573, this$static.matchStatus);
		neq(this$static.trdType, P7fffffffffffffff_longLit) && putFixTag_0(out, 828, this$static.trdType);
		neq(this$static.trdSubType, P7fffffffffffffff_longLit) && putFixTag_0(out, 829, this$static.trdSubType);
		this$static.tradeHandlingInstr != 127 && putFixTag(out, 1123, this$static.tradeHandlingInstr);
		this$static.transferReason[0] != 0 && putFixTag_2(out, 830, this$static.transferReason, lastIndexTrim(this$static.transferReason));
		neq(this$static.secondaryTrdType, P7fffffffffffffff_longLit) && putFixTag_0(out, 855, this$static.secondaryTrdType);
		this$static.tradeLinkID[0] != 0 && putFixTag_2(out, 820, this$static.tradeLinkID, lastIndexTrim(this$static.tradeLinkID));
		this$static.trdMatchID[0] != 0 && putFixTag_2(out, 880, this$static.trdMatchID, lastIndexTrim(this$static.trdMatchID));
		this$static.parties.noPartyIDs != 0 && $isSet_5(this$static.parties) && $encode_52(this$static.parties, out);
		$encode_31(this$static.instrument, out);
		neq(this$static.instrumentExtension.deliveryForm, P7fffffffffffffff_longLit) && $encode_32(this$static.instrumentExtension, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		neq(fromInt(this$static.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && $encode_29(this$static.instrmtLegGrp, out);
		neq(fromInt(this$static.trdCapDtGrp.noDates), P7fffffffffffffff_longLit) && $encode_85(this$static.trdCapDtGrp);
		this$static.clearingBusinessDate[0] != 0 && putFixTag_1(out, 715, this$static.clearingBusinessDate);
		this$static.tradingSessionID[0] != 0 && putFixTag_2(out, 336, this$static.tradingSessionID, lastIndexTrim(this$static.tradingSessionID));
		this$static.tradingSessionSubID[0] != 0 && putFixTag_2(out, 625, this$static.tradingSessionSubID, lastIndexTrim(this$static.tradingSessionSubID));
		this$static.timeBracket[0] != 0 && putFixTag_2(out, 943, this$static.timeBracket, lastIndexTrim(this$static.timeBracket));
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		this$static.multiLegReportingType != 127 && putFixTag(out, 442, this$static.multiLegReportingType);
		this$static.tradeInputSource[0] != 0 && putFixTag_2(out, 578, this$static.tradeInputSource, lastIndexTrim(this$static.tradeInputSource));
		this$static.tradeInputDevice[0] != 0 && putFixTag_2(out, 579, this$static.tradeInputDevice, lastIndexTrim(this$static.tradeInputDevice));
		neq(this$static.responseTransportType, P7fffffffffffffff_longLit) && putFixTag_0(out, 725, this$static.responseTransportType);
		this$static.responseDestination[0] != 0 && putFixTag_2(out, 726, this$static.responseDestination, lastIndexTrim(this$static.responseDestination));
		this$static.text_0[0] != 0 && putFixTag_2(out, 58, this$static.text_0, lastIndexTrim(this$static.text_0));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 354, this$static.encodedTextLen);
		this$static.encodedText[0] != 0 && putFixTag_2(out, 355, this$static.encodedText, lastIndexTrim(this$static.encodedText));
		this$static.messageEventSource[0] != 0 && putFixTag_2(out, 1011, this$static.messageEventSource, lastIndexTrim(this$static.messageEventSource));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function FixTradeCaptureReportRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.tradeRequestType = P0_longLit;
		this.subscriptionRequestType = 32;
		this.execType = 32;
		this.matchStatus = 32;
		this.trdType = P0_longLit;
		this.trdSubType = P0_longLit;
		this.tradeHandlingInstr = 32;
		this.secondaryTrdType = P0_longLit;
		this.side = 32;
		this.multiLegReportingType = 32;
		this.responseTransportType = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.tradeRequestID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryTradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.firmTradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryFirmTradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeReportID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryTradeReportID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.execID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.clOrdID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.transferReason = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeLinkID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.trdMatchID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.parties = new FixParties_0;
		this.instrument = new FixInstrument_0;
		this.instrumentExtension = new FixInstrumentExtension_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.trdCapDtGrp = new FixTrdCapDtGrp_0;
		this.clearingBusinessDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.timeBracket = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeInputSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeInputDevice = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.responseDestination = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.messageEventSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_9(this);
		this.msgTypeInt = 16708;
	}

	defineSeed(536, 322, makeCastMap([Q$FixMessage, Q$FixTradeCaptureReportRequest]), FixTradeCaptureReportRequest_0);
	_.equals$ = function equals_37(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTradeCaptureReportRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.tradeRequestID, msg.tradeRequestID) || (ret = false);
		equals_12(this.tradeID, msg.tradeID) || (ret = false);
		equals_12(this.secondaryTradeID, msg.secondaryTradeID) || (ret = false);
		equals_12(this.firmTradeID, msg.firmTradeID) || (ret = false);
		equals_12(this.secondaryFirmTradeID, msg.secondaryFirmTradeID) || (ret = false);
		if (neq(this.tradeRequestType, msg.tradeRequestType)) {
			ret = false;
			$print((valueOf_1(this.tradeRequestType), valueOf_1(msg.tradeRequestType)));
		}
		if (this.subscriptionRequestType != msg.subscriptionRequestType) {
			ret = false;
			$print((valueOf(this.subscriptionRequestType), valueOf(msg.subscriptionRequestType)));
		}
		equals_12(this.tradeReportID, msg.tradeReportID) || (ret = false);
		equals_12(this.secondaryTradeReportID, msg.secondaryTradeReportID) || (ret = false);
		equals_12(this.execID, msg.execID) || (ret = false);
		if (this.execType != msg.execType) {
			ret = false;
			$print((valueOf(this.execType), valueOf(msg.execType)));
		}
		equals_12(this.orderID, msg.orderID) || (ret = false);
		equals_12(this.clOrdID, msg.clOrdID) || (ret = false);
		if (this.matchStatus != msg.matchStatus) {
			ret = false;
			$print((valueOf(this.matchStatus), valueOf(msg.matchStatus)));
		}
		if (neq(this.trdType, msg.trdType)) {
			ret = false;
			$print((valueOf_1(this.trdType), valueOf_1(msg.trdType)));
		}
		if (neq(this.trdSubType, msg.trdSubType)) {
			ret = false;
			$print((valueOf_1(this.trdSubType), valueOf_1(msg.trdSubType)));
		}
		if (this.tradeHandlingInstr != msg.tradeHandlingInstr) {
			ret = false;
			$print((valueOf(this.tradeHandlingInstr), valueOf(msg.tradeHandlingInstr)));
		}
		equals_12(this.transferReason, msg.transferReason) || (ret = false);
		if (neq(this.secondaryTrdType, msg.secondaryTrdType)) {
			ret = false;
			$print((valueOf_1(this.secondaryTrdType), valueOf_1(msg.secondaryTrdType)));
		}
		equals_12(this.tradeLinkID, msg.tradeLinkID) || (ret = false);
		equals_12(this.trdMatchID, msg.trdMatchID) || (ret = false);
		$equals_83(this.parties, msg.parties) || (ret = false);
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_35(this.instrumentExtension, msg.instrumentExtension) || (ret = false);
		$equals_26(this.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		$equals_129(this.trdCapDtGrp, msg.trdCapDtGrp) || (ret = false);
		equals_12(this.tradingSessionID, msg.tradingSessionID) || (ret = false);
		equals_12(this.tradingSessionSubID, msg.tradingSessionSubID) || (ret = false);
		equals_12(this.timeBracket, msg.timeBracket) || (ret = false);
		if (this.side != msg.side) {
			ret = false;
			$print((valueOf(this.side), valueOf(msg.side)));
		}
		if (this.multiLegReportingType != msg.multiLegReportingType) {
			ret = false;
			$print((valueOf(this.multiLegReportingType), valueOf(msg.multiLegReportingType)));
		}
		equals_12(this.tradeInputSource, msg.tradeInputSource) || (ret = false);
		equals_12(this.tradeInputDevice, msg.tradeInputDevice) || (ret = false);
		if (neq(this.responseTransportType, msg.responseTransportType)) {
			ret = false;
			$print((valueOf_1(this.responseTransportType), valueOf_1(msg.responseTransportType)));
		}
		equals_12(this.responseDestination, msg.responseDestination) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		equals_12(this.messageEventSource, msg.messageEventSource) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_26() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'TradeCaptureReportRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'TradeRequestID(568)=' + $trim(_String(this.tradeRequestID)) + charToString(sep);
			this.tradeID[0] != 0 && (s += 'TradeID(1003)=' + $trim(_String(this.tradeID)) + charToString(sep));
			this.secondaryTradeID[0] != 0 && (s += 'SecondaryTradeID(1040)=' + $trim(_String(this.secondaryTradeID)) + charToString(sep));
			this.firmTradeID[0] != 0 && (s += 'FirmTradeID(1041)=' + $trim(_String(this.firmTradeID)) + charToString(sep));
			this.secondaryFirmTradeID[0] != 0 && (s += 'SecondaryFirmTradeID(1042)=' + $trim(_String(this.secondaryFirmTradeID)) + charToString(sep));
			s += 'TradeRequestType(569)=' + $trim('' + toString_183(this.tradeRequestType)) + charToString(sep);
			this.subscriptionRequestType != 127 && (s += 'SubscriptionRequestType(263)=' + $trim('' + this.subscriptionRequestType) + charToString(sep));
			this.tradeReportID[0] != 0 && (s += 'TradeReportID(571)=' + $trim(_String(this.tradeReportID)) + charToString(sep));
			this.secondaryTradeReportID[0] != 0 && (s += 'SecondaryTradeReportID(818)=' + $trim(_String(this.secondaryTradeReportID)) + charToString(sep));
			this.execID[0] != 0 && (s += 'ExecID(17)=' + $trim(_String(this.execID)) + charToString(sep));
			this.execType != 127 && (s += 'ExecType(150)=' + $trim('' + this.execType) + charToString(sep));
			this.orderID[0] != 0 && (s += 'OrderID(37)=' + $trim(_String(this.orderID)) + charToString(sep));
			this.clOrdID[0] != 0 && (s += 'ClOrdID(11)=' + $trim(_String(this.clOrdID)) + charToString(sep));
			this.matchStatus != 127 && (s += 'MatchStatus(573)=' + $trim('' + this.matchStatus) + charToString(sep));
			neq(this.trdType, P7fffffffffffffff_longLit) && (s += 'TrdType(828)=' + $trim('' + toString_183(this.trdType)) + charToString(sep));
			neq(this.trdSubType, P7fffffffffffffff_longLit) && (s += 'TrdSubType(829)=' + $trim('' + toString_183(this.trdSubType)) + charToString(sep));
			this.tradeHandlingInstr != 127 && (s += 'TradeHandlingInstr(1123)=' + $trim('' + this.tradeHandlingInstr) + charToString(sep));
			this.transferReason[0] != 0 && (s += 'TransferReason(830)=' + $trim(_String(this.transferReason)) + charToString(sep));
			neq(this.secondaryTrdType, P7fffffffffffffff_longLit) && (s += 'SecondaryTrdType(855)=' + $trim('' + toString_183(this.secondaryTrdType)) + charToString(sep));
			this.tradeLinkID[0] != 0 && (s += 'TradeLinkID(820)=' + $trim(_String(this.tradeLinkID)) + charToString(sep));
			this.trdMatchID[0] != 0 && (s += 'TrdMatchID(880)=' + $trim(_String(this.trdMatchID)) + charToString(sep));
			neq(fromInt(this.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this.parties)));
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			neq(this.instrumentExtension.deliveryForm, P7fffffffffffffff_longLit) && (s += $trim($toString_36(this.instrumentExtension)));
			this.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this.financingDetails)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			neq(fromInt(this.trdCapDtGrp.noDates), P7fffffffffffffff_longLit) && (s += $trim($toString_130(this.trdCapDtGrp)));
			this.clearingBusinessDate[0] != 0 && (s += 'ClearingBusinessDate(715)=' + $trim(_String(this.clearingBusinessDate)) + charToString(sep));
			this.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this.tradingSessionID)) + charToString(sep));
			this.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this.tradingSessionSubID)) + charToString(sep));
			this.timeBracket[0] != 0 && (s += 'TimeBracket(943)=' + $trim(_String(this.timeBracket)) + charToString(sep));
			this.side != 127 && (s += 'Side(54)=' + $trim('' + this.side) + charToString(sep));
			this.multiLegReportingType != 127 && (s += 'MultiLegReportingType(442)=' + $trim('' + this.multiLegReportingType) + charToString(sep));
			this.tradeInputSource[0] != 0 && (s += 'TradeInputSource(578)=' + $trim(_String(this.tradeInputSource)) + charToString(sep));
			this.tradeInputDevice[0] != 0 && (s += 'TradeInputDevice(579)=' + $trim(_String(this.tradeInputDevice)) + charToString(sep));
			neq(this.responseTransportType, P7fffffffffffffff_longLit) && (s += 'ResponseTransportType(725)=' + $trim('' + toString_183(this.responseTransportType)) + charToString(sep));
			this.responseDestination[0] != 0 && (s += 'ResponseDestination(726)=' + $trim(_String(this.responseDestination)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			this.messageEventSource[0] != 0 && (s += 'MessageEventSource(1011)=' + $trim(_String(this.messageEventSource)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.encodedTextLen = P0_longLit;
	_.execType = 0;
	_.matchStatus = 0;
	_.multiLegReportingType = 0;
	_.responseTransportType = P0_longLit;
	_.secondaryTrdType = P0_longLit;
	_.side = 0;
	_.subscriptionRequestType = 0;
	_.tradeHandlingInstr = 0;
	_.tradeRequestType = P0_longLit;
	_.trdSubType = P0_longLit;
	_.trdType = P0_longLit;

	function $checkRequiredTags_16(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.tradeRequestID[0] == 0) return 568;
		if (eq(this$static.tradeRequestType, P7fffffffffffffff_longLit)) return 569;
		if (eq(this$static.tradeRequestResult, P7fffffffffffffff_longLit)) return 749;
		if (eq(this$static.tradeRequestStatus, P7fffffffffffffff_longLit)) return 750;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_19(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 568:
				this$static.tradeRequestID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 568, value_0, this$static.tradeRequestID);
				break;
			case 1003:
				this$static.tradeID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 1003, value_0, this$static.tradeID);
				break;
			case 1040:
				this$static.secondaryTradeID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 1040, value_0, this$static.secondaryTradeID);
				break;
			case 1041:
				this$static.firmTradeID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 1041, value_0, this$static.firmTradeID);
				break;
			case 1042:
				this$static.secondaryFirmTradeID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 1042, value_0, this$static.secondaryFirmTradeID);
				break;
			case 569:
				this$static.tradeRequestType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 569, value_0));
				if (!isValid_166(this$static.tradeRequestType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.tradeRequestType) + ') for tag'), P239_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 263:
				this$static.subscriptionRequestType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 263, value_0);
				if (!isValid_156(this$static.subscriptionRequestType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.subscriptionRequestType + ') for tag'), P107_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 748:
				this$static.totNumTradeReports = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 748, value_0));
				break;
			case 749:
				this$static.tradeRequestResult = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 749, value_0));
				if (!isValid_164(this$static.tradeRequestResult)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.tradeRequestResult) + ') for tag'), P2ed_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 750:
				this$static.tradeRequestStatus = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 750, value_0));
				if (!isValid_165(this$static.tradeRequestStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.tradeRequestStatus) + ') for tag'), P2ee_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 55:
				$getAll_40(this$static.instrument, 55, value_0);
				break;
			case 711:
				this$static.undInstrmtGrp.noUnderlyings = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 711, value_0);
				$getAll_97(this$static.undInstrmtGrp, this$static.undInstrmtGrp.noUnderlyings, value_0);
				break;
			case 555:
				this$static.instrmtLegGrp.noLegs = getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 555, value_0);
				$getAll_38(this$static.instrmtLegGrp, this$static.instrmtLegGrp.noLegs, value_0);
				break;
			case 442:
				this$static.multiLegReportingType = getTagCharValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 442, value_0);
				if (!isValid_83(this$static.multiLegReportingType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.multiLegReportingType + ') for tag'), P1ba_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 725:
				this$static.responseTransportType = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 725, value_0));
				if (!isValid_134(this$static.responseTransportType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.responseTransportType) + ') for tag'), P2d5_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 726:
				this$static.responseDestination = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 726, value_0, this$static.responseDestination);
				break;
			case 58:
				this$static.text_0 = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 58, value_0, this$static.text_0);
				break;
			case 354:
				this$static.encodedTextLen = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 354, value_0));
				break;
			case 355:
				this$static.encodedText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 355, value_0, this$static.encodedText);
				break;
			case 1011:
				this$static.messageEventSource = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 1011, value_0, this$static.messageEventSource);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1), 10, value_0));
				id_0 = $checkRequiredTags_16(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixTradeCaptureReportRequestAck_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.tradeRequestType = P0_longLit;
		this.subscriptionRequestType = 32;
		this.totNumTradeReports = P0_longLit;
		this.tradeRequestResult = P0_longLit;
		this.tradeRequestStatus = P0_longLit;
		this.multiLegReportingType = 32;
		this.responseTransportType = P0_longLit;
		this.encodedTextLen = P0_longLit;
		this.tradeRequestID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryTradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.firmTradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryFirmTradeID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrument = new FixInstrument_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.instrmtLegGrp = new FixInstrmtLegGrp_0;
		this.responseDestination = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.messageEventSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.tradeRequestID[0] = 0;
		this.tradeID[0] = 0;
		this.secondaryTradeID[0] = 0;
		this.firmTradeID[0] = 0;
		this.secondaryFirmTradeID[0] = 0;
		this.tradeRequestType = P7fffffffffffffff_longLit;
		this.subscriptionRequestType = 127;
		this.totNumTradeReports = P7fffffffffffffff_longLit;
		this.tradeRequestResult = P7fffffffffffffff_longLit;
		this.tradeRequestStatus = P7fffffffffffffff_longLit;
		this.multiLegReportingType = 127;
		this.responseTransportType = P7fffffffffffffff_longLit;
		this.responseDestination[0] = 0;
		this.text_0[0] = 0;
		this.encodedTextLen = P7fffffffffffffff_longLit;
		this.encodedText[0] = 0;
		this.messageEventSource[0] = 0;
		$clear_40(this.instrument);
		$clear_142(this.undInstrmtGrp);
		$clear_37(this.instrmtLegGrp);
		this.msgTypeInt = 16721;
	}

	defineSeed(537, 322, makeCastMap([Q$FixMessage, Q$FixTradeCaptureReportRequestAck]), FixTradeCaptureReportRequestAck_0);
	_.equals$ = function equals_38(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTradeCaptureReportRequestAck)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.tradeRequestID, msg.tradeRequestID) || (ret = false);
		equals_12(this.tradeID, msg.tradeID) || (ret = false);
		equals_12(this.secondaryTradeID, msg.secondaryTradeID) || (ret = false);
		equals_12(this.firmTradeID, msg.firmTradeID) || (ret = false);
		equals_12(this.secondaryFirmTradeID, msg.secondaryFirmTradeID) || (ret = false);
		if (neq(this.tradeRequestType, msg.tradeRequestType)) {
			ret = false;
			$print((valueOf_1(this.tradeRequestType), valueOf_1(msg.tradeRequestType)));
		}
		if (this.subscriptionRequestType != msg.subscriptionRequestType) {
			ret = false;
			$print((valueOf(this.subscriptionRequestType), valueOf(msg.subscriptionRequestType)));
		}
		if (neq(this.totNumTradeReports, msg.totNumTradeReports)) {
			ret = false;
			$print((valueOf_1(this.totNumTradeReports), valueOf_1(msg.totNumTradeReports)));
		}
		if (neq(this.tradeRequestResult, msg.tradeRequestResult)) {
			ret = false;
			$print((valueOf_1(this.tradeRequestResult), valueOf_1(msg.tradeRequestResult)));
		}
		if (neq(this.tradeRequestStatus, msg.tradeRequestStatus)) {
			ret = false;
			$print((valueOf_1(this.tradeRequestStatus), valueOf_1(msg.tradeRequestStatus)));
		}
		$equals_34(this.instrument, msg.instrument) || (ret = false);
		$equals_139(this.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		$equals_30(this.instrmtLegGrp, msg.instrmtLegGrp) || (ret = false);
		if (this.multiLegReportingType != msg.multiLegReportingType) {
			ret = false;
			$print((valueOf(this.multiLegReportingType), valueOf(msg.multiLegReportingType)));
		}
		if (neq(this.responseTransportType, msg.responseTransportType)) {
			ret = false;
			$print((valueOf_1(this.responseTransportType), valueOf_1(msg.responseTransportType)));
		}
		equals_12(this.responseDestination, msg.responseDestination) || (ret = false);
		equals_12(this.text_0, msg.text_0) || (ret = false);
		if (neq(this.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print((valueOf_1(this.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		equals_12(this.encodedText, msg.encodedText) || (ret = false);
		equals_12(this.messageEventSource, msg.messageEventSource) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_27() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'TradeCaptureReportRequestAck' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), TRADECAPTUREREPORTREQUESTACK_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'TradeRequestID(568)=' + $trim(_String(this.tradeRequestID)) + charToString(sep);
			this.tradeID[0] != 0 && (s += 'TradeID(1003)=' + $trim(_String(this.tradeID)) + charToString(sep));
			this.secondaryTradeID[0] != 0 && (s += 'SecondaryTradeID(1040)=' + $trim(_String(this.secondaryTradeID)) + charToString(sep));
			this.firmTradeID[0] != 0 && (s += 'FirmTradeID(1041)=' + $trim(_String(this.firmTradeID)) + charToString(sep));
			this.secondaryFirmTradeID[0] != 0 && (s += 'SecondaryFirmTradeID(1042)=' + $trim(_String(this.secondaryFirmTradeID)) + charToString(sep));
			s += 'TradeRequestType(569)=' + $trim('' + toString_183(this.tradeRequestType)) + charToString(sep);
			this.subscriptionRequestType != 127 && (s += 'SubscriptionRequestType(263)=' + $trim('' + this.subscriptionRequestType) + charToString(sep));
			neq(this.totNumTradeReports, P7fffffffffffffff_longLit) && (s += 'TotNumTradeReports(748)=' + $trim('' + toString_183(this.totNumTradeReports)) + charToString(sep));
			s += 'TradeRequestResult(749)=' + $trim('' + toString_183(this.tradeRequestResult)) + charToString(sep);
			s += 'TradeRequestStatus(750)=' + $trim('' + toString_183(this.tradeRequestStatus)) + charToString(sep);
			this.instrument.symbol[0] != 0 && (s += $trim($toString_35(this.instrument)));
			neq(fromInt(this.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this.undInstrmtGrp)));
			neq(fromInt(this.instrmtLegGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_31(this.instrmtLegGrp)));
			this.multiLegReportingType != 127 && (s += 'MultiLegReportingType(442)=' + $trim('' + this.multiLegReportingType) + charToString(sep));
			neq(this.responseTransportType, P7fffffffffffffff_longLit) && (s += 'ResponseTransportType(725)=' + $trim('' + toString_183(this.responseTransportType)) + charToString(sep));
			this.responseDestination[0] != 0 && (s += 'ResponseDestination(726)=' + $trim(_String(this.responseDestination)) + charToString(sep));
			this.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this.text_0)) + charToString(sep));
			neq(this.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this.encodedTextLen)) + charToString(sep));
			this.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this.encodedText)) + charToString(sep));
			this.messageEventSource[0] != 0 && (s += 'MessageEventSource(1011)=' + $trim(_String(this.messageEventSource)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.encodedTextLen = P0_longLit;
	_.multiLegReportingType = 0;
	_.responseTransportType = P0_longLit;
	_.subscriptionRequestType = 0;
	_.totNumTradeReports = P0_longLit;
	_.tradeRequestResult = P0_longLit;
	_.tradeRequestStatus = P0_longLit;
	_.tradeRequestType = P0_longLit;

	function $encode_10(this$static, out) {
		var checkSumStart, msgLengthValueStart, msgStart, msgTypeStart;
		msgStart = out.position;
		$put(out, ($clinit_FixMessageInfo(), BEGINSTRING_VALUE_WITH_TAG));
		msgLengthValueStart = out.position + 2;
		$clinit_FixUtils();
		putFixTag_0(out, 9, P2000_longLit);
		msgTypeStart = out.position;
		putFixTag_1(out, 35, ($clinit_FixMessageInfo$MsgTypes(), USERREQUEST_1));
		this$static.applVerID[0] != 0 && putFixTag_2(out, 1128, this$static.applVerID, lastIndexTrim(this$static.applVerID));
		this$static.cstmApplVerID[0] != 0 && putFixTag_2(out, 1129, this$static.cstmApplVerID, lastIndexTrim(this$static.cstmApplVerID));
		neq(this$static.applExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1156, this$static.applExtID);
		putFixTag_2(out, 49, this$static.senderCompID, lastIndexTrim(this$static.senderCompID));
		putFixTag_2(out, 56, this$static.targetCompID, lastIndexTrim(this$static.targetCompID));
		this$static.onBehalfOfCompID[0] != 0 && putFixTag_2(out, 115, this$static.onBehalfOfCompID, lastIndexTrim(this$static.onBehalfOfCompID));
		this$static.deliverToCompID[0] != 0 && putFixTag_2(out, 128, this$static.deliverToCompID, lastIndexTrim(this$static.deliverToCompID));
		neq(this$static.secureDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 90, this$static.secureDataLen);
		this$static.secureData[0] != 0 && putFixTag_2(out, 91, this$static.secureData, lastIndexTrim(this$static.secureData));
		neq(this$static.msgSeqNum, P7fffffffffffffff_longLit) && putFixTag_0(out, 34, this$static.msgSeqNum);
		this$static.senderSubID[0] != 0 && putFixTag_2(out, 50, this$static.senderSubID, lastIndexTrim(this$static.senderSubID));
		this$static.senderLocationID[0] != 0 && putFixTag_2(out, 142, this$static.senderLocationID, lastIndexTrim(this$static.senderLocationID));
		this$static.targetSubID[0] != 0 && putFixTag_2(out, 57, this$static.targetSubID, lastIndexTrim(this$static.targetSubID));
		this$static.targetLocationID[0] != 0 && putFixTag_2(out, 143, this$static.targetLocationID, lastIndexTrim(this$static.targetLocationID));
		this$static.onBehalfOfSubID[0] != 0 && putFixTag_2(out, 116, this$static.onBehalfOfSubID, lastIndexTrim(this$static.onBehalfOfSubID));
		this$static.onBehalfOfLocationID[0] != 0 && putFixTag_2(out, 144, this$static.onBehalfOfLocationID, lastIndexTrim(this$static.onBehalfOfLocationID));
		this$static.deliverToSubID[0] != 0 && putFixTag_2(out, 129, this$static.deliverToSubID, lastIndexTrim(this$static.deliverToSubID));
		this$static.deliverToLocationID[0] != 0 && putFixTag_2(out, 145, this$static.deliverToLocationID, lastIndexTrim(this$static.deliverToLocationID));
		this$static.possDupFlag && putFixTag(out, 43, this$static.possDupFlag ? 89 : 78);
		this$static.possResend && putFixTag(out, 97, this$static.possResend ? 89 : 78);
		this$static.sendingTime[0] != 0 && putFixTag_1(out, 52, this$static.sendingTime);
		this$static.origSendingTime[0] != 0 && putFixTag_1(out, 122, this$static.origSendingTime);
		neq(this$static.xmlDataLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 212, this$static.xmlDataLen);
		this$static.xmlData[0] != 0 && putFixTag_2(out, 213, this$static.xmlData, lastIndexTrim(this$static.xmlData));
		this$static.messageEncoding[0] != 0 && putFixTag_2(out, 347, this$static.messageEncoding, lastIndexTrim(this$static.messageEncoding));
		neq(this$static.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && putFixTag_0(out, 369, this$static.lastMsgSeqNumProcessed);
		neq(fromInt(this$static.hopGrp.noHops), P7fffffffffffffff_longLit) && $encode_28(this$static.hopGrp);
		putFixTag_2(out, 923, this$static.userRequestID, lastIndexTrim(this$static.userRequestID));
		putFixTag_0(out, 924, this$static.userRequestType);
		putFixTag_2(out, 553, this$static.username, lastIndexTrim(this$static.username));
		this$static.password[0] != 0 && putFixTag_2(out, 554, this$static.password, lastIndexTrim(this$static.password));
		this$static.newPassword[0] != 0 && putFixTag_2(out, 925, this$static.newPassword, lastIndexTrim(this$static.newPassword));
		neq(this$static.encryptedPasswordMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1400, this$static.encryptedPasswordMethod);
		neq(this$static.encryptedPasswordLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 1401, this$static.encryptedPasswordLen);
		this$static.encryptedPassword[0] != 0 && putFixTag_2(out, 1402, this$static.encryptedPassword, lastIndexTrim(this$static.encryptedPassword));
		neq(this$static.encryptedNewPasswordLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 1403, this$static.encryptedNewPasswordLen);
		this$static.encryptedNewPassword[0] != 0 && putFixTag_2(out, 1404, this$static.encryptedNewPassword, lastIndexTrim(this$static.encryptedNewPassword));
		neq(this$static.rawDataLength, P7fffffffffffffff_longLit) && putFixTag_0(out, 95, this$static.rawDataLength);
		this$static.rawData[0] != 0 && putFixTag_2(out, 96, this$static.rawData, lastIndexTrim(this$static.rawData));
		checkSumStart = out.position;
		$position(out, msgLengthValueStart);
		this$static.bodyLength = fromInt(checkSumStart - msgTypeStart);
		longToNumeric(out, this$static.bodyLength, digits_1(P2000_longLit));
		this$static.checkSum = fromInt(computeChecksum(out, msgStart, checkSumStart));
		$position(out, checkSumStart);
		putFixTag_0(out, 10, this$static.checkSum);
		$flip(out);
	}

	function FixUserRequest_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.userRequestType = P0_longLit;
		this.encryptedPasswordMethod = P0_longLit;
		this.encryptedPasswordLen = P0_longLit;
		this.encryptedNewPasswordLen = P0_longLit;
		this.rawDataLength = P0_longLit;
		this.userRequestID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.username = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.password = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.newPassword = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encryptedPassword = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encryptedNewPassword = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.rawData = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.userRequestID[0] = 0;
		this.userRequestType = P7fffffffffffffff_longLit;
		this.username[0] = 0;
		this.password[0] = 0;
		this.newPassword[0] = 0;
		this.encryptedPasswordMethod = P7fffffffffffffff_longLit;
		this.encryptedPasswordLen = P7fffffffffffffff_longLit;
		this.encryptedPassword[0] = 0;
		this.encryptedNewPasswordLen = P7fffffffffffffff_longLit;
		this.encryptedNewPassword[0] = 0;
		this.rawDataLength = P7fffffffffffffff_longLit;
		this.rawData[0] = 0;
		this.msgTypeInt = 16965;
	}

	defineSeed(538, 322, makeCastMap([Q$FixMessage, Q$FixUserRequest]), FixUserRequest_0);
	_.equals$ = function equals_39(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUserRequest)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.userRequestID, msg.userRequestID) || (ret = false);
		if (neq(this.userRequestType, msg.userRequestType)) {
			ret = false;
			$print((valueOf_1(this.userRequestType), valueOf_1(msg.userRequestType)));
		}
		equals_12(this.username, msg.username) || (ret = false);
		equals_12(this.password, msg.password) || (ret = false);
		equals_12(this.newPassword, msg.newPassword) || (ret = false);
		if (neq(this.encryptedPasswordMethod, msg.encryptedPasswordMethod)) {
			ret = false;
			$print((valueOf_1(this.encryptedPasswordMethod), valueOf_1(msg.encryptedPasswordMethod)));
		}
		if (neq(this.encryptedPasswordLen, msg.encryptedPasswordLen)) {
			ret = false;
			$print((valueOf_1(this.encryptedPasswordLen), valueOf_1(msg.encryptedPasswordLen)));
		}
		equals_12(this.encryptedPassword, msg.encryptedPassword) || (ret = false);
		if (neq(this.encryptedNewPasswordLen, msg.encryptedNewPasswordLen)) {
			ret = false;
			$print((valueOf_1(this.encryptedNewPasswordLen), valueOf_1(msg.encryptedNewPasswordLen)));
		}
		equals_12(this.encryptedNewPassword, msg.encryptedNewPassword) || (ret = false);
		if (neq(this.rawDataLength, msg.rawDataLength)) {
			ret = false;
			$print((valueOf_1(this.rawDataLength), valueOf_1(msg.rawDataLength)));
		}
		equals_12(this.rawData, msg.rawData) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_28() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'UserRequest' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), USERREQUEST_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'UserRequestID(923)=' + $trim(_String(this.userRequestID)) + charToString(sep);
			s += 'UserRequestType(924)=' + $trim('' + toString_183(this.userRequestType)) + charToString(sep);
			s += 'Username(553)=' + $trim(_String(this.username)) + charToString(sep);
			this.password[0] != 0 && (s += 'Password(554)=' + $trim(_String(this.password)) + charToString(sep));
			this.newPassword[0] != 0 && (s += 'NewPassword(925)=' + $trim(_String(this.newPassword)) + charToString(sep));
			neq(this.encryptedPasswordMethod, P7fffffffffffffff_longLit) && (s += 'EncryptedPasswordMethod(1400)=' + $trim('' + toString_183(this.encryptedPasswordMethod)) + charToString(sep));
			neq(this.encryptedPasswordLen, P7fffffffffffffff_longLit) && (s += 'EncryptedPasswordLen(1401)=' + $trim('' + toString_183(this.encryptedPasswordLen)) + charToString(sep));
			this.encryptedPassword[0] != 0 && (s += 'EncryptedPassword(1402)=' + $trim(_String(this.encryptedPassword)) + charToString(sep));
			neq(this.encryptedNewPasswordLen, P7fffffffffffffff_longLit) && (s += 'EncryptedNewPasswordLen(1403)=' + $trim('' + toString_183(this.encryptedNewPasswordLen)) + charToString(sep));
			this.encryptedNewPassword[0] != 0 && (s += 'EncryptedNewPassword(1404)=' + $trim(_String(this.encryptedNewPassword)) + charToString(sep));
			neq(this.rawDataLength, P7fffffffffffffff_longLit) && (s += 'RawDataLength(95)=' + $trim('' + toString_183(this.rawDataLength)) + charToString(sep));
			this.rawData[0] != 0 && (s += 'RawData(96)=' + $trim(_String(this.rawData)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.encryptedNewPasswordLen = P0_longLit;
	_.encryptedPasswordLen = P0_longLit;
	_.encryptedPasswordMethod = P0_longLit;
	_.rawDataLength = P0_longLit;
	_.userRequestType = P0_longLit;

	function $checkRequiredTags_17(this$static) {
		$clinit_FixUtils();
		if (this$static.senderCompID[0] == 0) return 49;
		if (this$static.targetCompID[0] == 0) return 56;
		if (this$static.userRequestID[0] == 0) return 923;
		if (eq(this$static.checkSum, P7fffffffffffffff_longLit)) return 10;
		return -1;
	}

	function $getAll_20(this$static) {
		var id_0, startTagPosition, value_0;
		startTagPosition = this$static.buf.position;
		$getAll(this$static);
		while ((id_0 = getTagId(this$static.buf)) >= 0) {
			value_0 = this$static.buf;
			switch (id_0) {
			case 923:
				this$static.userRequestID = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), USERRESPONSE_1), 923, value_0, this$static.userRequestID);
				break;
			case 553:
				this$static.username = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), USERRESPONSE_1), 553, value_0, this$static.username);
				break;
			case 926:
				this$static.userStatus = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), USERRESPONSE_1), 926, value_0));
				if (!isValid_183(this$static.userStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.userStatus) + ') for tag'), P39e_longLit, getMsgType_1(this$static.msgTypeInt));
				break;
			case 927:
				this$static.userStatusText = getTagStringValue(($clinit_FixMessageInfo$MsgTypes(), USERRESPONSE_1), 927, value_0, this$static.userStatusText);
				break;
			case 10:
				this$static.checkSum = fromInt(getTagIntValue(($clinit_FixMessageInfo$MsgTypes(), USERRESPONSE_1), 10, value_0));
				id_0 = $checkRequiredTags_17(this$static);
				if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
				return;
			default:
				throw new FixSessionException_0(P3_longLit, getBytesUtf8('Unknown tag'), fromInt(id_0), getMsgType_1(this$static.msgTypeInt));
			}
		}
		$position(this$static.buf, startTagPosition);
	}

	function FixUserResponse_0() {
		$clinit_FixMessage();
		FixMessage_0.call(this);
		this.userStatus = P0_longLit;
		this.userRequestID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.username = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.userStatusText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clinit_Utils();
		this.userRequestID[0] = 0;
		this.username[0] = 0;
		this.userStatus = P7fffffffffffffff_longLit;
		this.userStatusText[0] = 0;
		this.msgTypeInt = 16966;
	}

	defineSeed(539, 322, makeCastMap([Q$FixMessage, Q$FixUserResponse]), FixUserResponse_0);
	_.equals$ = function equals_40(o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUserResponse)) {
			$print(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals(this, msg) || (ret = false);
		equals_12(this.userRequestID, msg.userRequestID) || (ret = false);
		equals_12(this.username, msg.username) || (ret = false);
		if (neq(this.userStatus, msg.userStatus)) {
			ret = false;
			$print((valueOf_1(this.userStatus), valueOf_1(msg.userStatus)));
		}
		equals_12(this.userStatusText, msg.userStatusText) || (ret = false);
		return ret;
	};
	_.toString$ = function toString_29() {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = 'UserResponse' + charToString(sep);
		s += 'BeginString(8)=' + _String(($clinit_FixMessageInfo(), BEGINSTRING_VALUE)) + charToString(sep);
		s += 'BodyLength(9)=' + toString_183(this.bodyLength) + charToString(sep);
		s += 'MsgType(35)=' + _String(($clinit_FixMessageInfo$MsgTypes(), USERRESPONSE_1)) + charToString(sep);
		try {
			$clinit_FixUtils();
			this.applVerID[0] != 0 && (s += 'ApplVerID(1128)=' + $trim(_String(this.applVerID)) + charToString(sep));
			this.cstmApplVerID[0] != 0 && (s += 'CstmApplVerID(1129)=' + $trim(_String(this.cstmApplVerID)) + charToString(sep));
			neq(this.applExtID, P7fffffffffffffff_longLit) && (s += 'ApplExtID(1156)=' + $trim('' + toString_183(this.applExtID)) + charToString(sep));
			s += 'SenderCompID(49)=' + $trim(_String(this.senderCompID)) + charToString(sep);
			s += 'TargetCompID(56)=' + $trim(_String(this.targetCompID)) + charToString(sep);
			this.onBehalfOfCompID[0] != 0 && (s += 'OnBehalfOfCompID(115)=' + $trim(_String(this.onBehalfOfCompID)) + charToString(sep));
			this.deliverToCompID[0] != 0 && (s += 'DeliverToCompID(128)=' + $trim(_String(this.deliverToCompID)) + charToString(sep));
			neq(this.secureDataLen, P7fffffffffffffff_longLit) && (s += 'SecureDataLen(90)=' + $trim('' + toString_183(this.secureDataLen)) + charToString(sep));
			this.secureData[0] != 0 && (s += 'SecureData(91)=' + $trim(_String(this.secureData)) + charToString(sep));
			s += 'MsgSeqNum(34)=' + $trim('' + toString_183(this.msgSeqNum)) + charToString(sep);
			this.senderSubID[0] != 0 && (s += 'SenderSubID(50)=' + $trim(_String(this.senderSubID)) + charToString(sep));
			this.senderLocationID[0] != 0 && (s += 'SenderLocationID(142)=' + $trim(_String(this.senderLocationID)) + charToString(sep));
			this.targetSubID[0] != 0 && (s += 'TargetSubID(57)=' + $trim(_String(this.targetSubID)) + charToString(sep));
			this.targetLocationID[0] != 0 && (s += 'TargetLocationID(143)=' + $trim(_String(this.targetLocationID)) + charToString(sep));
			this.onBehalfOfSubID[0] != 0 && (s += 'OnBehalfOfSubID(116)=' + $trim(_String(this.onBehalfOfSubID)) + charToString(sep));
			this.onBehalfOfLocationID[0] != 0 && (s += 'OnBehalfOfLocationID(144)=' + $trim(_String(this.onBehalfOfLocationID)) + charToString(sep));
			this.deliverToSubID[0] != 0 && (s += 'DeliverToSubID(129)=' + $trim(_String(this.deliverToSubID)) + charToString(sep));
			this.deliverToLocationID[0] != 0 && (s += 'DeliverToLocationID(145)=' + $trim(_String(this.deliverToLocationID)) + charToString(sep));
			this.possDupFlag && (s += 'PossDupFlag(43)=' + $trim('' + this.possDupFlag) + charToString(sep));
			this.possResend && (s += 'PossResend(97)=' + $trim('' + this.possResend) + charToString(sep));
			s += 'SendingTime(52)=' + $trim(_String(this.sendingTime)) + charToString(sep);
			this.origSendingTime[0] != 0 && (s += 'OrigSendingTime(122)=' + $trim(_String(this.origSendingTime)) + charToString(sep));
			neq(this.xmlDataLen, P7fffffffffffffff_longLit) && (s += 'XmlDataLen(212)=' + $trim('' + toString_183(this.xmlDataLen)) + charToString(sep));
			this.xmlData[0] != 0 && (s += 'XmlData(213)=' + $trim(_String(this.xmlData)) + charToString(sep));
			this.messageEncoding[0] != 0 && (s += 'MessageEncoding(347)=' + $trim(_String(this.messageEncoding)) + charToString(sep));
			neq(this.lastMsgSeqNumProcessed, P7fffffffffffffff_longLit) && (s += 'LastMsgSeqNumProcessed(369)=' + $trim('' + toString_183(this.lastMsgSeqNumProcessed)) + charToString(sep));
			neq(fromInt(this.hopGrp.noHops), P7fffffffffffffff_longLit) && (s += $trim($toString_28(this.hopGrp)));
			s += 'UserRequestID(923)=' + $trim(_String(this.userRequestID)) + charToString(sep);
			s += 'Username(553)=' + $trim(_String(this.username)) + charToString(sep);
			neq(this.userStatus, P7fffffffffffffff_longLit) && (s += 'UserStatus(926)=' + $trim('' + toString_183(this.userStatus)) + charToString(sep));
			this.userStatusText[0] != 0 && (s += 'UserStatusText(927)=' + $trim(_String(this.userStatusText)) + charToString(sep));
			s += 'checkSum(10)=' + toString_183(this.checkSum) + charToString(sep);
		} catch ($e0) {
			$e0 = wrap($e0);
			if (!instanceOf($e0, Q$Exception)) throw unwrap($e0);
		}
		return s;
	};
	_.userStatus = P0_longLit;

	function $clear_10(this$static) {
		$clinit_Utils();
		this$static.applID[0] = 0;
		this$static.applSeqNum = P7fffffffffffffff_longLit;
		this$static.applLastSeqNum = P7fffffffffffffff_longLit;
		this$static.applResendFlag = false;
	}

	function $equals_0(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixApplicationSequenceControl)) {
			$print_0(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.applID, msg.applID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.applSeqNum, msg.applSeqNum)) {
			ret = false;
			$print_0((valueOf_1(this$static.applSeqNum), valueOf_1(msg.applSeqNum)));
		}
		if (neq(this$static.applLastSeqNum, msg.applLastSeqNum)) {
			ret = false;
			$print_0((valueOf_1(this$static.applLastSeqNum), valueOf_1(msg.applLastSeqNum)));
		}
		if (this$static.applResendFlag != msg.applResendFlag) {
			ret = false;
			$print_0($clinit_Boolean());
		}
		return ret;
	}

	function $getAll_21(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 1180:
				this$static.applID = getTagStringValue(null, 1180, buf, this$static.applID);
				break;
			case 1181:
				this$static.applSeqNum = fromInt(getTagIntValue(null, 1181, buf));
				break;
			case 1350:
				this$static.applLastSeqNum = fromInt(getTagIntValue(null, 1350, buf));
				break;
			case 1352:
				this$static.applResendFlag = getTagBooleanValue(null, 1352, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_0() {
		$clinit_FixMessage();
	}

	function $toString_1(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.applID[0] != 0 && (s += 'ApplID(1180)=' + $trim(_String(this$static.applID)) + charToString(sep));
		neq(this$static.applSeqNum, P7fffffffffffffff_longLit) && (s += 'ApplSeqNum(1181)=' + $trim('' + toString_183(this$static.applSeqNum)) + charToString(sep));
		neq(this$static.applLastSeqNum, P7fffffffffffffff_longLit) && (s += 'ApplLastSeqNum(1350)=' + $trim('' + toString_183(this$static.applLastSeqNum)) + charToString(sep));
		this$static.applResendFlag && (s += 'ApplResendFlag(1352)=' + $trim('' + this$static.applResendFlag) + charToString(sep));
		return s;
	}

	function FixApplicationSequenceControl_0() {
		this.applID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_10(this);
	}

	defineSeed(540, 1, makeCastMap([Q$FixApplicationSequenceControl, Q$FixComponent]), FixApplicationSequenceControl_0);
	_.equals$ = function equals_41(o) {
		return $equals_0(this, o);
	};
	_.toString$ = function toString_30() {
		return $toString_1(this);
	};
	_.applLastSeqNum = P0_longLit;
	_.applResendFlag = false;
	_.applSeqNum = P0_longLit;

	function $clear_11(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noInstrAttrib; i_0++)
		$clear_12(this$static.group[i_0]);
	}

	function $encode_11(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noInstrAttrib; i_0++)
		$encode_12(this$static.group[i_0], out);
	}

	function $equals_1(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixAttrbGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noInstrAttrib; i_0++)
		if (!$equals_2(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_22(this$static, noInstrAttrib, buf) {
		var i_0, i0;
		this$static.noInstrAttrib = noInstrAttrib;
		if (noInstrAttrib < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noInstrAttrib), P366_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noInstrAttrib) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixAttrbGrp$AttrbGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixAttrbGrp$AttrbGrp, noInstrAttrib, 0);
			for (i0 = 0; i0 < noInstrAttrib; i0++)
			this$static.group[i0] = new FixAttrbGrp$AttrbGrp_0;
		}
		for (i_0 = 0; i_0 < noInstrAttrib; i_0++)
		$getAllGroup(this$static.group[i_0], buf);
	}

	function $toString_2(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noInstrAttrib; i_0++)
		s += $toString_3(this$static.group[i_0]);
		return s;
	}

	function FixAttrbGrp_0() {}

	defineSeed(541, 1, makeCastMap([Q$FixAttrbGrp]), FixAttrbGrp_0);
	_.equals$ = function equals_42(o) {
		return $equals_1(this, o);
	};
	_.toString$ = function toString_31() {
		return $toString_2(this);
	};
	_.noInstrAttrib = 0;

	function $clear_12(this$static) {
		this$static.instrAttribType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.instrAttribValue[0] = 0;
	}

	function $encode_12(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.instrAttribType, P7fffffffffffffff_longLit) && putFixTag_0(out, 871, this$static.instrAttribType);
		this$static.instrAttribValue[0] != 0 && putFixTag_2(out, 872, this$static.instrAttribValue, lastIndexTrim(this$static.instrAttribValue));
	}

	function $equals_2(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixAttrbGrp$AttrbGrp)) {
			$print_1(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.instrAttribType, msg.instrAttribType)) {
			ret = false;
			$print_1((valueOf_1(this$static.instrAttribType), valueOf_1(msg.instrAttribType)));
		}
		if (!equals_12(this$static.instrAttribValue, msg.instrAttribValue)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 871) {
			this$static.instrAttribType = fromInt(getTagIntValue(null, 871, buf));
			if (!isValid_64(this$static.instrAttribType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.instrAttribType) + ') for tag'), P367_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 872) {
			this$static.instrAttribValue = getTagStringValue(null, 872, buf, this$static.instrAttribValue);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_1() {
		$clinit_FixMessage();
	}

	function $toString_3(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.instrAttribType, P7fffffffffffffff_longLit) && (s += 'InstrAttribType(871)=' + $trim('' + toString_183(this$static.instrAttribType)) + charToString(sep));
		this$static.instrAttribValue[0] != 0 && (s += 'InstrAttribValue(872)=' + $trim(_String(this$static.instrAttribValue)) + charToString(sep));
		return s;
	}

	function FixAttrbGrp$AttrbGrp_0() {
		this.instrAttribValue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrAttribType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this.instrAttribValue[0] = 0;
	}

	defineSeed(542, 1, makeCastMap([Q$FixAttrbGrp$AttrbGrp, Q$FixComponent]), FixAttrbGrp$AttrbGrp_0);
	_.equals$ = function equals_43(o) {
		return $equals_2(this, o);
	};
	_.toString$ = function toString_32() {
		return $toString_3(this);
	};
	_.instrAttribType = P0_longLit;

	function $clear_13(this$static) {
		this$static.expirationCycle = P7fffffffffffffff_longLit;
		this$static.minTradeVol = P7fffffffffffffff_longLit;
		this$static.maxTradeVol = P7fffffffffffffff_longLit;
		this$static.maxPriceVariation = P7fffffffffffffff_longLit;
		this$static.impliedMarketIndicator = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.tradingCurrency[0] = 0;
		this$static.roundLot = P7fffffffffffffff_longLit;
		this$static.multilegModel = P7fffffffffffffff_longLit;
		this$static.multilegPriceMethod = P7fffffffffffffff_longLit;
		this$static.priceType = P7fffffffffffffff_longLit;
		$clear_126(this$static.tickRules);
		$clear_56(this$static.lotTypeRules);
		$clear_97(this$static.priceLimits);
	}

	function $equals_3(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixBaseTradingRules)) {
			$print_2(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.expirationCycle, msg.expirationCycle)) {
			ret = false;
			$print_2((valueOf_1(this$static.expirationCycle), valueOf_1(msg.expirationCycle)));
		}
		if (neq(this$static.minTradeVol, msg.minTradeVol)) {
			ret = false;
			$print_2((valueOf_1(this$static.minTradeVol), valueOf_1(msg.minTradeVol)));
		}
		if (neq(this$static.maxTradeVol, msg.maxTradeVol)) {
			ret = false;
			$print_2((valueOf_1(this$static.maxTradeVol), valueOf_1(msg.maxTradeVol)));
		}
		if (neq(this$static.maxPriceVariation, msg.maxPriceVariation)) {
			ret = false;
			$print_2((valueOf_1(this$static.maxPriceVariation), valueOf_1(msg.maxPriceVariation)));
		}
		if (neq(this$static.impliedMarketIndicator, msg.impliedMarketIndicator)) {
			ret = false;
			$print_2((valueOf_1(this$static.impliedMarketIndicator), valueOf_1(msg.impliedMarketIndicator)));
		}
		if (!equals_12(this$static.tradingCurrency, msg.tradingCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_122(this$static.tickRules, msg.tickRules) || (ret = false);
		$equals_50(this$static.lotTypeRules, msg.lotTypeRules) || (ret = false);
		$equals_92(this$static.priceLimits, msg.priceLimits) || (ret = false);
		if (neq(this$static.roundLot, msg.roundLot)) {
			ret = false;
			$print_2((valueOf_1(this$static.roundLot), valueOf_1(msg.roundLot)));
		}
		if (neq(this$static.multilegModel, msg.multilegModel)) {
			ret = false;
			$print_2((valueOf_1(this$static.multilegModel), valueOf_1(msg.multilegModel)));
		}
		if (neq(this$static.multilegPriceMethod, msg.multilegPriceMethod)) {
			ret = false;
			$print_2((valueOf_1(this$static.multilegPriceMethod), valueOf_1(msg.multilegPriceMethod)));
		}
		if (neq(this$static.priceType, msg.priceType)) {
			ret = false;
			$print_2((valueOf_1(this$static.priceType), valueOf_1(msg.priceType)));
		}
		return ret;
	}

	function $getAll_23(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 827:
				this$static.expirationCycle = fromInt(getTagIntValue(null, 827, buf));
				if (!isValid_55(this$static.expirationCycle)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.expirationCycle) + ') for tag'), P33b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 562:
				this$static.minTradeVol = getTagFloatValue(null, 562, buf);
				break;
			case 1140:
				this$static.maxTradeVol = getTagFloatValue(null, 1140, buf);
				break;
			case 1143:
				this$static.maxPriceVariation = getTagFloatValue(null, 1143, buf);
				break;
			case 1144:
				this$static.impliedMarketIndicator = fromInt(getTagIntValue(null, 1144, buf));
				if (!isValid_63(this$static.impliedMarketIndicator)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.impliedMarketIndicator) + ') for tag'), P478_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1245:
				this$static.tradingCurrency = getTagStringValue(null, 1245, buf, this$static.tradingCurrency);
				break;
			case 1205:
				this$static.tickRules.noTickRules = getTagIntValue(null, 1205, buf);
				$getAll_88(this$static.tickRules, this$static.tickRules.noTickRules, buf);
				break;
			case 1234:
				this$static.lotTypeRules.noLotTypeRules = getTagIntValue(null, 1234, buf);
				$getAll_50(this$static.lotTypeRules, this$static.lotTypeRules.noLotTypeRules, buf);
				break;
			case 1306:
				$getAll_72(this$static.priceLimits, 1306, buf);
				break;
			case 561:
				this$static.roundLot = getTagFloatValue(null, 561, buf);
				break;
			case 1377:
				this$static.multilegModel = fromInt(getTagIntValue(null, 1377, buf));
				if (!isValid_84(this$static.multilegModel)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.multilegModel) + ') for tag'), P561_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1378:
				this$static.multilegPriceMethod = fromInt(getTagIntValue(null, 1378, buf));
				if (!isValid_85(this$static.multilegPriceMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.multilegPriceMethod) + ') for tag'), P562_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 423:
				this$static.priceType = fromInt(getTagIntValue(null, 423, buf));
				if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_2() {
		$clinit_FixMessage();
	}

	function $toString_4(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.expirationCycle, P7fffffffffffffff_longLit) && (s += 'ExpirationCycle(827)=' + $trim('' + toString_183(this$static.expirationCycle)) + charToString(sep));
		neq(this$static.minTradeVol, P7fffffffffffffff_longLit) && (s += 'MinTradeVol(562)=' + $trim('' + toString_183(this$static.minTradeVol)) + charToString(sep));
		neq(this$static.maxTradeVol, P7fffffffffffffff_longLit) && (s += 'MaxTradeVol(1140)=' + $trim('' + toString_183(this$static.maxTradeVol)) + charToString(sep));
		neq(this$static.maxPriceVariation, P7fffffffffffffff_longLit) && (s += 'MaxPriceVariation(1143)=' + $trim('' + toString_183(this$static.maxPriceVariation)) + charToString(sep));
		neq(this$static.impliedMarketIndicator, P7fffffffffffffff_longLit) && (s += 'ImpliedMarketIndicator(1144)=' + $trim('' + toString_183(this$static.impliedMarketIndicator)) + charToString(sep));
		this$static.tradingCurrency[0] != 0 && (s += 'TradingCurrency(1245)=' + $trim(_String(this$static.tradingCurrency)) + charToString(sep));
		neq(fromInt(this$static.tickRules.noTickRules), P7fffffffffffffff_longLit) && (s += $trim($toString_123(this$static.tickRules)));
		neq(fromInt(this$static.lotTypeRules.noLotTypeRules), P7fffffffffffffff_longLit) && (s += $trim($toString_51(this$static.lotTypeRules)));
		neq(this$static.priceLimits.priceLimitType, P7fffffffffffffff_longLit) && (s += $trim($toString_93(this$static.priceLimits)));
		neq(this$static.roundLot, P7fffffffffffffff_longLit) && (s += 'RoundLot(561)=' + $trim('' + toString_183(this$static.roundLot)) + charToString(sep));
		neq(this$static.multilegModel, P7fffffffffffffff_longLit) && (s += 'MultilegModel(1377)=' + $trim('' + toString_183(this$static.multilegModel)) + charToString(sep));
		neq(this$static.multilegPriceMethod, P7fffffffffffffff_longLit) && (s += 'MultilegPriceMethod(1378)=' + $trim('' + toString_183(this$static.multilegPriceMethod)) + charToString(sep));
		neq(this$static.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this$static.priceType)) + charToString(sep));
		return s;
	}

	function FixBaseTradingRules_0() {
		this.tradingCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.tickRules = new FixTickRules_0;
		this.lotTypeRules = new FixLotTypeRules_0;
		this.priceLimits = new FixPriceLimits_0;
		$clear_13(this);
	}

	defineSeed(543, 1, makeCastMap([Q$FixBaseTradingRules, Q$FixComponent]), FixBaseTradingRules_0);
	_.equals$ = function equals_44(o) {
		return $equals_3(this, o);
	};
	_.toString$ = function toString_33() {
		return $toString_4(this);
	};
	_.expirationCycle = P0_longLit;
	_.impliedMarketIndicator = P0_longLit;
	_.maxPriceVariation = P0_longLit;
	_.maxTradeVol = P0_longLit;
	_.minTradeVol = P0_longLit;
	_.multilegModel = P0_longLit;
	_.multilegPriceMethod = P0_longLit;
	_.priceType = P0_longLit;
	_.roundLot = P0_longLit;

	function $clear_14(this$static) {
		this$static.commission = P7fffffffffffffff_longLit;
		this$static.commType = 127;
		$clinit_Utils();
		this$static.commCurrency[0] = 0;
		this$static.fundRenewWaiv = 127;
	}

	function $encode_13(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.commission, P7fffffffffffffff_longLit) && putFixTag_0(out, 12, this$static.commission);
		this$static.commType != 127 && putFixTag(out, 13, this$static.commType);
		this$static.commCurrency[0] != 0 && putFixTag_2(out, 479, this$static.commCurrency, lastIndexTrim(this$static.commCurrency));
		this$static.fundRenewWaiv != 127 && putFixTag(out, 497, this$static.fundRenewWaiv);
	}

	function $equals_4(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixCommissionData)) {
			$print_3(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.commission, msg.commission)) {
			ret = false;
			$print_3((valueOf_1(this$static.commission), valueOf_1(msg.commission)));
		}
		if (this$static.commType != msg.commType) {
			ret = false;
			$print_3((valueOf(this$static.commType), valueOf(msg.commType)));
		}
		if (!equals_12(this$static.commCurrency, msg.commCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.fundRenewWaiv != msg.fundRenewWaiv) {
			ret = false;
			$print_3((valueOf(this$static.fundRenewWaiv), valueOf(msg.fundRenewWaiv)));
		}
		return ret;
	}

	function $getAll_24(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 12:
				this$static.commission = getTagFloatValue(null, 12, buf);
				break;
			case 13:
				this$static.commType = getTagCharValue(null, 13, buf);
				if (!isValid_18(this$static.commType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.commType + ') for tag'), Pd_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 479:
				this$static.commCurrency = getTagStringValue(null, 479, buf, this$static.commCurrency);
				break;
			case 497:
				this$static.fundRenewWaiv = getTagCharValue(null, 497, buf);
				if (!isValid_59(this$static.fundRenewWaiv)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.fundRenewWaiv + ') for tag'), P1f1_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_3() {
		$clinit_FixMessage();
	}

	function $toString_5(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.commission, P7fffffffffffffff_longLit) && (s += 'Commission(12)=' + $trim('' + toString_183(this$static.commission)) + charToString(sep));
		this$static.commType != 127 && (s += 'CommType(13)=' + $trim('' + this$static.commType) + charToString(sep));
		this$static.commCurrency[0] != 0 && (s += 'CommCurrency(479)=' + $trim(_String(this$static.commCurrency)) + charToString(sep));
		this$static.fundRenewWaiv != 127 && (s += 'FundRenewWaiv(497)=' + $trim('' + this$static.fundRenewWaiv) + charToString(sep));
		return s;
	}

	function FixCommissionData_0() {
		this.commCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		$clear_14(this);
	}

	defineSeed(544, 1, makeCastMap([Q$FixCommissionData, Q$FixComponent]), FixCommissionData_0);
	_.equals$ = function equals_45(o) {
		return $equals_4(this, o);
	};
	_.toString$ = function toString_34() {
		return $toString_5(this);
	};
	_.commType = 32;
	_.commission = P0_longLit;
	_.fundRenewWaiv = 32;

	function $clear_15(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noComplexEventDates; i_0++)
		$clear_16(this$static.group[i_0]);
	}

	function $encode_14(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noComplexEventDates; i_0++)
		$encode_15(this$static.group[i_0], out);
	}

	function $equals_5(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixComplexEventDates)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noComplexEventDates; i_0++)
		if (!$equals_6(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_25(this$static, noComplexEventDates, buf) {
		var i_0, i0;
		this$static.noComplexEventDates = noComplexEventDates;
		if (noComplexEventDates < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noComplexEventDates), P5d3_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noComplexEventDates) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventDates$ComplexEventDates_2_classLit, makeCastMap([Q$Serializable]), Q$FixComplexEventDates$ComplexEventDates, noComplexEventDates, 0);
			for (i0 = 0; i0 < noComplexEventDates; i0++)
			this$static.group[i0] = new FixComplexEventDates$ComplexEventDates_0;
		}
		for (i_0 = 0; i_0 < noComplexEventDates; i_0++)
		$getAllGroup_0(this$static.group[i_0], buf);
	}

	function $toString_6(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noComplexEventDates; i_0++)
		s += $toString_7(this$static.group[i_0]);
		return s;
	}

	function FixComplexEventDates_0() {}

	defineSeed(545, 1, makeCastMap([Q$FixComplexEventDates]), FixComplexEventDates_0);
	_.equals$ = function equals_46(o) {
		return $equals_5(this, o);
	};
	_.toString$ = function toString_35() {
		return $toString_6(this);
	};
	_.noComplexEventDates = 0;

	function $clear_16(this$static) {
		$clinit_Utils();
		this$static.complexEventStartDate[0] = 0;
		this$static.complexEventEndDate[0] = 0;
		$clear_17(this$static.complexEventTimes);
	}

	function $encode_15(this$static, out) {
		$clinit_FixUtils();
		this$static.complexEventStartDate[0] != 0 && putFixTag_1(out, 1492, this$static.complexEventStartDate);
		this$static.complexEventEndDate[0] != 0 && putFixTag_1(out, 1493, this$static.complexEventEndDate);
		neq(fromInt(this$static.complexEventTimes.noComplexEventTimes), P7fffffffffffffff_longLit) && $encode_16(this$static.complexEventTimes, out);
	}

	function $equals_6(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixComplexEventDates$ComplexEventDates)) {
			$print_4(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_7(this$static.complexEventTimes, msg.complexEventTimes) || (ret = false);
		return ret;
	}

	function $getAllGroup_0(this$static, buf) {
		var id_0, lastTagPosition, noComplexEventTimes;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1492) {
			this$static.complexEventStartDate = getTagStringValue(null, 1492, buf, this$static.complexEventStartDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1493) {
			this$static.complexEventEndDate = getTagStringValue(null, 1493, buf, this$static.complexEventEndDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1494) {
			noComplexEventTimes = getTagIntValue(null, 1494, buf);
			$getAll_26(this$static.complexEventTimes, noComplexEventTimes, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_4() {
		$clinit_FixMessage();
	}

	function $toString_7(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.complexEventStartDate[0] != 0 && (s += 'ComplexEventStartDate(1492)=' + $trim(_String(this$static.complexEventStartDate)) + charToString(sep));
		this$static.complexEventEndDate[0] != 0 && (s += 'ComplexEventEndDate(1493)=' + $trim(_String(this$static.complexEventEndDate)) + charToString(sep));
		neq(fromInt(this$static.complexEventTimes.noComplexEventTimes), P7fffffffffffffff_longLit) && (s += $trim($toString_8(this$static.complexEventTimes)));
		return s;
	}

	function FixComplexEventDates$ComplexEventDates_0() {
		this.complexEventStartDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.complexEventEndDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.complexEventTimes = new FixComplexEventTimes_0;
		$clear_16(this);
	}

	defineSeed(546, 1, makeCastMap([Q$FixComplexEventDates$ComplexEventDates, Q$FixComponent]), FixComplexEventDates$ComplexEventDates_0);
	_.equals$ = function equals_47(o) {
		return $equals_6(this, o);
	};
	_.toString$ = function toString_36() {
		return $toString_7(this);
	};

	function $clear_17(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noComplexEventTimes; i_0++)
		$clear_18(this$static.group[i_0]);
	}

	function $encode_16(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noComplexEventTimes; i_0++)
		$encode_17(this$static.group[i_0], out);
	}

	function $equals_7(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixComplexEventTimes)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noComplexEventTimes; i_0++)
		if (!$equals_8(msg.group[i_0])) return false;
		return true;
	}

	function $getAll_26(this$static, noComplexEventTimes, buf) {
		var i_0, i0;
		this$static.noComplexEventTimes = noComplexEventTimes;
		if (noComplexEventTimes < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noComplexEventTimes), P5d6_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noComplexEventTimes) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventTimes$ComplexEventTimes_2_classLit, makeCastMap([Q$Serializable]), Q$FixComplexEventTimes$ComplexEventTimes, noComplexEventTimes, 0);
			for (i0 = 0; i0 < noComplexEventTimes; i0++)
			this$static.group[i0] = new FixComplexEventTimes$ComplexEventTimes_0;
		}
		for (i_0 = 0; i_0 < noComplexEventTimes; i_0++)
		$getAllGroup_1(this$static.group[i_0], buf);
	}

	function $toString_8(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noComplexEventTimes; i_0++)
		s += $toString_9(this$static.group[i_0]);
		return s;
	}

	function FixComplexEventTimes_0() {}

	defineSeed(547, 1, makeCastMap([Q$FixComplexEventTimes]), FixComplexEventTimes_0);
	_.equals$ = function equals_48(o) {
		return $equals_7(this, o);
	};
	_.toString$ = function toString_37() {
		return $toString_8(this);
	};
	_.noComplexEventTimes = 0;

	function $clear_18(this$static) {
		$clinit_Utils();
		this$static.complexEventStartTime[0] = 0;
		this$static.complexEventEndTime[0] = 0;
	}

	function $encode_17(this$static, out) {
		$clinit_FixUtils();
		this$static.complexEventStartTime[0] != 0 && putFixTag_1(out, 1495, this$static.complexEventStartTime);
		this$static.complexEventEndTime[0] != 0 && putFixTag_1(out, 1496, this$static.complexEventEndTime);
	}

	function $equals_8(o) {
		if (!instanceOf(o, Q$FixComplexEventTimes$ComplexEventTimes)) {
			$print_5(getClass__devirtual$(o));
			return false;
		}
		return true;
	}

	function $getAllGroup_1(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1495) {
			this$static.complexEventStartTime = getTagStringValue(null, 1495, buf, this$static.complexEventStartTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1496) {
			this$static.complexEventEndTime = getTagStringValue(null, 1496, buf, this$static.complexEventEndTime);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_5() {
		$clinit_FixMessage();
	}

	function $toString_9(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.complexEventStartTime[0] != 0 && (s += 'ComplexEventStartTime(1495)=' + $trim(_String(this$static.complexEventStartTime)) + charToString(sep));
		this$static.complexEventEndTime[0] != 0 && (s += 'ComplexEventEndTime(1496)=' + $trim(_String(this$static.complexEventEndTime)) + charToString(sep));
		return s;
	}

	function FixComplexEventTimes$ComplexEventTimes_0() {
		this.complexEventStartTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.complexEventEndTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.complexEventStartTime[0] = 0;
		this.complexEventEndTime[0] = 0;
	}

	defineSeed(548, 1, makeCastMap([Q$FixComplexEventTimes$ComplexEventTimes, Q$FixComponent]), FixComplexEventTimes$ComplexEventTimes_0);
	_.equals$ = function equals_49(o) {
		return $equals_8(o);
	};
	_.toString$ = function toString_38() {
		return $toString_9(this);
	};

	function $clear_19(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noComplexEvents; i_0++)
		$clear_20(this$static.group[i_0]);
	}

	function $encode_18(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noComplexEvents; i_0++)
		$encode_19(this$static.group[i_0], out);
	}

	function $equals_9(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixComplexEvents)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noComplexEvents; i_0++)
		if (!$equals_10(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_27(this$static, noComplexEvents, buf) {
		var i_0, i0;
		this$static.noComplexEvents = noComplexEvents;
		if (noComplexEvents < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noComplexEvents), P5cb_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noComplexEvents) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEvents$ComplexEvents_2_classLit, makeCastMap([Q$Serializable]), Q$FixComplexEvents$ComplexEvents, noComplexEvents, 0);
			for (i0 = 0; i0 < noComplexEvents; i0++)
			this$static.group[i0] = new FixComplexEvents$ComplexEvents_0;
		}
		for (i_0 = 0; i_0 < noComplexEvents; i_0++)
		$getAllGroup_2(this$static.group[i_0], buf);
	}

	function $toString_10(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noComplexEvents; i_0++)
		s += $toString_11(this$static.group[i_0]);
		return s;
	}

	function FixComplexEvents_0() {}

	defineSeed(549, 1, makeCastMap([Q$FixComplexEvents]), FixComplexEvents_0);
	_.equals$ = function equals_50(o) {
		return $equals_9(this, o);
	};
	_.toString$ = function toString_39() {
		return $toString_10(this);
	};
	_.noComplexEvents = 0;

	function $clear_20(this$static) {
		this$static.complexEventType = P7fffffffffffffff_longLit;
		this$static.complexOptPayoutAmount = P7fffffffffffffff_longLit;
		this$static.complexEventPrice = P7fffffffffffffff_longLit;
		this$static.complexEventPriceBoundaryMethod = P7fffffffffffffff_longLit;
		this$static.complexEventPriceBoundaryPrecision = P7fffffffffffffff_longLit;
		this$static.complexEventPriceTimeType = P7fffffffffffffff_longLit;
		this$static.complexEventCondition = P7fffffffffffffff_longLit;
		$clear_15(this$static.complexEventDates);
	}

	function $encode_19(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.complexEventType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1484, this$static.complexEventType);
		neq(this$static.complexOptPayoutAmount, P7fffffffffffffff_longLit) && putFixTag_0(out, 1485, this$static.complexOptPayoutAmount);
		neq(this$static.complexEventPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1486, this$static.complexEventPrice);
		neq(this$static.complexEventPriceBoundaryMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1487, this$static.complexEventPriceBoundaryMethod);
		neq(this$static.complexEventPriceBoundaryPrecision, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1488, this$static.complexEventPriceBoundaryPrecision);
		neq(this$static.complexEventPriceTimeType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1489, this$static.complexEventPriceTimeType);
		neq(this$static.complexEventCondition, P7fffffffffffffff_longLit) && putFixTag_0(out, 1490, this$static.complexEventCondition);
		neq(fromInt(this$static.complexEventDates.noComplexEventDates), P7fffffffffffffff_longLit) && $encode_14(this$static.complexEventDates, out);
	}

	function $equals_10(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixComplexEvents$ComplexEvents)) {
			$print_6(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.complexEventType, msg.complexEventType)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexEventType), valueOf_1(msg.complexEventType)));
		}
		if (neq(this$static.complexOptPayoutAmount, msg.complexOptPayoutAmount)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexOptPayoutAmount), valueOf_1(msg.complexOptPayoutAmount)));
		}
		if (neq(this$static.complexEventPrice, msg.complexEventPrice)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexEventPrice), valueOf_1(msg.complexEventPrice)));
		}
		if (neq(this$static.complexEventPriceBoundaryMethod, msg.complexEventPriceBoundaryMethod)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexEventPriceBoundaryMethod), valueOf_1(msg.complexEventPriceBoundaryMethod)));
		}
		if (neq(this$static.complexEventPriceBoundaryPrecision, msg.complexEventPriceBoundaryPrecision)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexEventPriceBoundaryPrecision), valueOf_1(msg.complexEventPriceBoundaryPrecision)));
		}
		if (neq(this$static.complexEventPriceTimeType, msg.complexEventPriceTimeType)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexEventPriceTimeType), valueOf_1(msg.complexEventPriceTimeType)));
		}
		if (neq(this$static.complexEventCondition, msg.complexEventCondition)) {
			ret = false;
			$print_6((valueOf_1(this$static.complexEventCondition), valueOf_1(msg.complexEventCondition)));
		}
		$equals_5(this$static.complexEventDates, msg.complexEventDates) || (ret = false);
		return ret;
	}

	function $getAllGroup_2(this$static, buf) {
		var id_0, lastTagPosition, noComplexEventDates;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1484) {
			this$static.complexEventType = fromInt(getTagIntValue(null, 1484, buf));
			if (!isValid_22(this$static.complexEventType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.complexEventType) + ') for tag'), P5cc_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1485) {
			this$static.complexOptPayoutAmount = getTagFloatValue(null, 1485, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1486) {
			this$static.complexEventPrice = getTagFloatValue(null, 1486, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1487) {
			this$static.complexEventPriceBoundaryMethod = fromInt(getTagIntValue(null, 1487, buf));
			if (!isValid_20(this$static.complexEventPriceBoundaryMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.complexEventPriceBoundaryMethod) + ') for tag'), P5cf_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1488) {
			this$static.complexEventPriceBoundaryPrecision = getTagFloatValue(null, 1488, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1489) {
			this$static.complexEventPriceTimeType = fromInt(getTagIntValue(null, 1489, buf));
			if (!isValid_21(this$static.complexEventPriceTimeType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.complexEventPriceTimeType) + ') for tag'), P5d1_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1490) {
			this$static.complexEventCondition = fromInt(getTagIntValue(null, 1490, buf));
			if (!isValid_19(this$static.complexEventCondition)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.complexEventCondition) + ') for tag'), P5d2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1491) {
			noComplexEventDates = getTagIntValue(null, 1491, buf);
			$getAll_25(this$static.complexEventDates, noComplexEventDates, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_6() {
		$clinit_FixMessage();
	}

	function $toString_11(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.complexEventType, P7fffffffffffffff_longLit) && (s += 'ComplexEventType(1484)=' + $trim('' + toString_183(this$static.complexEventType)) + charToString(sep));
		neq(this$static.complexOptPayoutAmount, P7fffffffffffffff_longLit) && (s += 'ComplexOptPayoutAmount(1485)=' + $trim('' + toString_183(this$static.complexOptPayoutAmount)) + charToString(sep));
		neq(this$static.complexEventPrice, P7fffffffffffffff_longLit) && (s += 'ComplexEventPrice(1486)=' + $trim('' + toString_183(this$static.complexEventPrice)) + charToString(sep));
		neq(this$static.complexEventPriceBoundaryMethod, P7fffffffffffffff_longLit) && (s += 'ComplexEventPriceBoundaryMethod(1487)=' + $trim('' + toString_183(this$static.complexEventPriceBoundaryMethod)) + charToString(sep));
		neq(this$static.complexEventPriceBoundaryPrecision, P7fffffffffffffff_longLit) && (s += 'ComplexEventPriceBoundaryPrecision(1488)=' + $trim('' + toString_183(this$static.complexEventPriceBoundaryPrecision)) + charToString(sep));
		neq(this$static.complexEventPriceTimeType, P7fffffffffffffff_longLit) && (s += 'ComplexEventPriceTimeType(1489)=' + $trim('' + toString_183(this$static.complexEventPriceTimeType)) + charToString(sep));
		neq(this$static.complexEventCondition, P7fffffffffffffff_longLit) && (s += 'ComplexEventCondition(1490)=' + $trim('' + toString_183(this$static.complexEventCondition)) + charToString(sep));
		neq(fromInt(this$static.complexEventDates.noComplexEventDates), P7fffffffffffffff_longLit) && (s += $trim($toString_6(this$static.complexEventDates)));
		return s;
	}

	function FixComplexEvents$ComplexEvents_0() {
		this.complexEventDates = new FixComplexEventDates_0;
		$clear_20(this);
	}

	defineSeed(550, 1, makeCastMap([Q$FixComplexEvents$ComplexEvents, Q$FixComponent]), FixComplexEvents$ComplexEvents_0);
	_.equals$ = function equals_51(o) {
		return $equals_10(this, o);
	};
	_.toString$ = function toString_40() {
		return $toString_11(this);
	};
	_.complexEventCondition = P0_longLit;
	_.complexEventPrice = P0_longLit;
	_.complexEventPriceBoundaryMethod = P0_longLit;
	_.complexEventPriceBoundaryPrecision = P0_longLit;
	_.complexEventPriceTimeType = P0_longLit;
	_.complexEventType = P0_longLit;
	_.complexOptPayoutAmount = P0_longLit;

	function $clear_21(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noContAmts; i_0++)
		$clear_22(this$static.group[i_0]);
	}

	function $equals_11(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixContAmtGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noContAmts; i_0++)
		if (!$equals_12(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_28(this$static, noContAmts, buf) {
		var i_0, i0;
		this$static.noContAmts = noContAmts;
		if (noContAmts < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noContAmts), P206_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noContAmts) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixContAmtGrp$ContAmtGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixContAmtGrp$ContAmtGrp, noContAmts, 0);
			for (i0 = 0; i0 < noContAmts; i0++)
			this$static.group[i0] = new FixContAmtGrp$ContAmtGrp_0;
		}
		for (i_0 = 0; i_0 < noContAmts; i_0++)
		$getAllGroup_3(this$static.group[i_0], buf);
	}

	function $toString_12(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noContAmts; i_0++)
		s += $toString_13(this$static.group[i_0]);
		return s;
	}

	function FixContAmtGrp_0() {}

	defineSeed(551, 1, makeCastMap([Q$FixContAmtGrp]), FixContAmtGrp_0);
	_.equals$ = function equals_52(o) {
		return $equals_11(this, o);
	};
	_.toString$ = function toString_41() {
		return $toString_12(this);
	};
	_.noContAmts = 0;

	function $clear_22(this$static) {
		this$static.contAmtType = P7fffffffffffffff_longLit;
		this$static.contAmtValue = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.contAmtCurr[0] = 0;
	}

	function $equals_12(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixContAmtGrp$ContAmtGrp)) {
			$print_7(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.contAmtType, msg.contAmtType)) {
			ret = false;
			$print_7((valueOf_1(this$static.contAmtType), valueOf_1(msg.contAmtType)));
		}
		if (neq(this$static.contAmtValue, msg.contAmtValue)) {
			ret = false;
			$print_7((valueOf_1(this$static.contAmtValue), valueOf_1(msg.contAmtValue)));
		}
		if (!equals_12(this$static.contAmtCurr, msg.contAmtCurr)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_3(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 519) {
			this$static.contAmtType = fromInt(getTagIntValue(null, 519, buf));
			if (!isValid_23(this$static.contAmtType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.contAmtType) + ') for tag'), P207_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 520) {
			this$static.contAmtValue = getTagFloatValue(null, 520, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 521) {
			this$static.contAmtCurr = getTagStringValue(null, 521, buf, this$static.contAmtCurr);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_7() {
		$clinit_FixMessage();
	}

	function $toString_13(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.contAmtType, P7fffffffffffffff_longLit) && (s += 'ContAmtType(519)=' + $trim('' + toString_183(this$static.contAmtType)) + charToString(sep));
		neq(this$static.contAmtValue, P7fffffffffffffff_longLit) && (s += 'ContAmtValue(520)=' + $trim('' + toString_183(this$static.contAmtValue)) + charToString(sep));
		this$static.contAmtCurr[0] != 0 && (s += 'ContAmtCurr(521)=' + $trim(_String(this$static.contAmtCurr)) + charToString(sep));
		return s;
	}

	function FixContAmtGrp$ContAmtGrp_0() {
		this.contAmtCurr = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		$clear_22(this);
	}

	defineSeed(552, 1, makeCastMap([Q$FixComponent, Q$FixContAmtGrp$ContAmtGrp]), FixContAmtGrp$ContAmtGrp_0);
	_.equals$ = function equals_53(o) {
		return $equals_12(this, o);
	};
	_.toString$ = function toString_42() {
		return $toString_13(this);
	};
	_.contAmtType = P0_longLit;
	_.contAmtValue = P0_longLit;

	function $clear_23(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noContraBrokers; i_0++)
		$clear_24(this$static.group[i_0]);
	}

	function $equals_13(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixContraGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noContraBrokers; i_0++)
		if (!$equals_14(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_29(this$static, noContraBrokers, buf) {
		var i_0, i0;
		this$static.noContraBrokers = noContraBrokers;
		if (noContraBrokers < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noContraBrokers), P17e_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noContraBrokers) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixContraGrp$ContraGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixContraGrp$ContraGrp, noContraBrokers, 0);
			for (i0 = 0; i0 < noContraBrokers; i0++)
			this$static.group[i0] = new FixContraGrp$ContraGrp_0;
		}
		for (i_0 = 0; i_0 < noContraBrokers; i_0++)
		$getAllGroup_4(this$static.group[i_0], buf);
	}

	function $toString_14(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noContraBrokers; i_0++)
		s += $toString_15(this$static.group[i_0]);
		return s;
	}

	function FixContraGrp_0() {}

	defineSeed(553, 1, makeCastMap([Q$FixContraGrp]), FixContraGrp_0);
	_.equals$ = function equals_54(o) {
		return $equals_13(this, o);
	};
	_.toString$ = function toString_43() {
		return $toString_14(this);
	};
	_.noContraBrokers = 0;

	function $clear_24(this$static) {
		$clinit_Utils();
		this$static.contraBroker[0] = 0;
		this$static.contraTrader[0] = 0;
		this$static.contraTradeQty = P7fffffffffffffff_longLit;
		this$static.contraTradeTime[0] = 0;
		this$static.contraLegRefID[0] = 0;
	}

	function $equals_14(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixContraGrp$ContraGrp)) {
			$print_8(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.contraBroker, msg.contraBroker)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.contraTrader, msg.contraTrader)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.contraTradeQty, msg.contraTradeQty)) {
			ret = false;
			$print_8((valueOf_1(this$static.contraTradeQty), valueOf_1(msg.contraTradeQty)));
		}
		if (!equals_12(this$static.contraLegRefID, msg.contraLegRefID)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_4(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 375) {
			this$static.contraBroker = getTagStringValue(null, 375, buf, this$static.contraBroker);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 337) {
			this$static.contraTrader = getTagStringValue(null, 337, buf, this$static.contraTrader);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 437) {
			this$static.contraTradeQty = getTagFloatValue(null, 437, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 438) {
			this$static.contraTradeTime = getTagStringValue(null, 438, buf, this$static.contraTradeTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 655) {
			this$static.contraLegRefID = getTagStringValue(null, 655, buf, this$static.contraLegRefID);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_8() {
		$clinit_FixMessage();
	}

	function $toString_15(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.contraBroker[0] != 0 && (s += 'ContraBroker(375)=' + $trim(_String(this$static.contraBroker)) + charToString(sep));
		this$static.contraTrader[0] != 0 && (s += 'ContraTrader(337)=' + $trim(_String(this$static.contraTrader)) + charToString(sep));
		neq(this$static.contraTradeQty, P7fffffffffffffff_longLit) && (s += 'ContraTradeQty(437)=' + $trim('' + toString_183(this$static.contraTradeQty)) + charToString(sep));
		this$static.contraTradeTime[0] != 0 && (s += 'ContraTradeTime(438)=' + $trim(_String(this$static.contraTradeTime)) + charToString(sep));
		this$static.contraLegRefID[0] != 0 && (s += 'ContraLegRefID(655)=' + $trim(_String(this$static.contraLegRefID)) + charToString(sep));
		return s;
	}

	function FixContraGrp$ContraGrp_0() {
		this.contraBroker = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.contraTrader = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.contraTradeTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.contraLegRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_24(this);
	}

	defineSeed(554, 1, makeCastMap([Q$FixComponent, Q$FixContraGrp$ContraGrp]), FixContraGrp$ContraGrp_0);
	_.equals$ = function equals_55(o) {
		return $equals_14(this, o);
	};
	_.toString$ = function toString_44() {
		return $toString_15(this);
	};
	_.contraTradeQty = P0_longLit;

	function $clear_25(this$static) {
		this$static.discretionInst = 127;
		this$static.discretionOffsetValue = P7fffffffffffffff_longLit;
		this$static.discretionMoveType = P7fffffffffffffff_longLit;
		this$static.discretionOffsetType = P7fffffffffffffff_longLit;
		this$static.discretionLimitType = P7fffffffffffffff_longLit;
		this$static.discretionRoundDirection = P7fffffffffffffff_longLit;
		this$static.discretionScope = P7fffffffffffffff_longLit;
	}

	function $encode_20(this$static, out) {
		$clinit_FixUtils();
		this$static.discretionInst != 127 && putFixTag(out, 388, this$static.discretionInst);
		neq(this$static.discretionOffsetValue, P7fffffffffffffff_longLit) && putFixFloatTag(out, 389, this$static.discretionOffsetValue);
		neq(this$static.discretionMoveType, P7fffffffffffffff_longLit) && putFixTag_0(out, 841, this$static.discretionMoveType);
		neq(this$static.discretionOffsetType, P7fffffffffffffff_longLit) && putFixTag_0(out, 842, this$static.discretionOffsetType);
		neq(this$static.discretionLimitType, P7fffffffffffffff_longLit) && putFixTag_0(out, 843, this$static.discretionLimitType);
		neq(this$static.discretionRoundDirection, P7fffffffffffffff_longLit) && putFixTag_0(out, 844, this$static.discretionRoundDirection);
		neq(this$static.discretionScope, P7fffffffffffffff_longLit) && putFixTag_0(out, 846, this$static.discretionScope);
	}

	function $equals_15(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixDiscretionInstructions)) {
			$print_9(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.discretionInst != msg.discretionInst) {
			ret = false;
			$print_9((valueOf(this$static.discretionInst), valueOf(msg.discretionInst)));
		}
		if (neq(this$static.discretionOffsetValue, msg.discretionOffsetValue)) {
			ret = false;
			$print_9((valueOf_1(this$static.discretionOffsetValue), valueOf_1(msg.discretionOffsetValue)));
		}
		if (neq(this$static.discretionMoveType, msg.discretionMoveType)) {
			ret = false;
			$print_9((valueOf_1(this$static.discretionMoveType), valueOf_1(msg.discretionMoveType)));
		}
		if (neq(this$static.discretionOffsetType, msg.discretionOffsetType)) {
			ret = false;
			$print_9((valueOf_1(this$static.discretionOffsetType), valueOf_1(msg.discretionOffsetType)));
		}
		if (neq(this$static.discretionLimitType, msg.discretionLimitType)) {
			ret = false;
			$print_9((valueOf_1(this$static.discretionLimitType), valueOf_1(msg.discretionLimitType)));
		}
		if (neq(this$static.discretionRoundDirection, msg.discretionRoundDirection)) {
			ret = false;
			$print_9((valueOf_1(this$static.discretionRoundDirection), valueOf_1(msg.discretionRoundDirection)));
		}
		if (neq(this$static.discretionScope, msg.discretionScope)) {
			ret = false;
			$print_9((valueOf_1(this$static.discretionScope), valueOf_1(msg.discretionScope)));
		}
		return ret;
	}

	function $getAll_30(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 388:
				this$static.discretionInst = getTagCharValue(null, 388, buf);
				if (!isValid_38(this$static.discretionInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.discretionInst + ') for tag'), P184_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 389:
				this$static.discretionOffsetValue = getTagFloatValue(null, 389, buf);
				break;
			case 841:
				this$static.discretionMoveType = fromInt(getTagIntValue(null, 841, buf));
				if (!isValid_40(this$static.discretionMoveType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.discretionMoveType) + ') for tag'), P349_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 842:
				this$static.discretionOffsetType = fromInt(getTagIntValue(null, 842, buf));
				if (!isValid_41(this$static.discretionOffsetType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.discretionOffsetType) + ') for tag'), P34a_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 843:
				this$static.discretionLimitType = fromInt(getTagIntValue(null, 843, buf));
				if (!isValid_39(this$static.discretionLimitType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.discretionLimitType) + ') for tag'), P34b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 844:
				this$static.discretionRoundDirection = fromInt(getTagIntValue(null, 844, buf));
				if (!isValid_42(this$static.discretionRoundDirection)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.discretionRoundDirection) + ') for tag'), P34c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 846:
				this$static.discretionScope = fromInt(getTagIntValue(null, 846, buf));
				if (!isValid_43(this$static.discretionScope)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.discretionScope) + ') for tag'), P34e_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_9() {
		$clinit_FixMessage();
	}

	function $toString_16(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.discretionInst != 127 && (s += 'DiscretionInst(388)=' + $trim('' + this$static.discretionInst) + charToString(sep));
		neq(this$static.discretionOffsetValue, P7fffffffffffffff_longLit) && (s += 'DiscretionOffsetValue(389)=' + $trim('' + toString_183(this$static.discretionOffsetValue)) + charToString(sep));
		neq(this$static.discretionMoveType, P7fffffffffffffff_longLit) && (s += 'DiscretionMoveType(841)=' + $trim('' + toString_183(this$static.discretionMoveType)) + charToString(sep));
		neq(this$static.discretionOffsetType, P7fffffffffffffff_longLit) && (s += 'DiscretionOffsetType(842)=' + $trim('' + toString_183(this$static.discretionOffsetType)) + charToString(sep));
		neq(this$static.discretionLimitType, P7fffffffffffffff_longLit) && (s += 'DiscretionLimitType(843)=' + $trim('' + toString_183(this$static.discretionLimitType)) + charToString(sep));
		neq(this$static.discretionRoundDirection, P7fffffffffffffff_longLit) && (s += 'DiscretionRoundDirection(844)=' + $trim('' + toString_183(this$static.discretionRoundDirection)) + charToString(sep));
		neq(this$static.discretionScope, P7fffffffffffffff_longLit) && (s += 'DiscretionScope(846)=' + $trim('' + toString_183(this$static.discretionScope)) + charToString(sep));
		return s;
	}

	function FixDiscretionInstructions_0() {
		$clear_25(this);
	}

	defineSeed(555, 1, makeCastMap([Q$FixComponent, Q$FixDiscretionInstructions]), FixDiscretionInstructions_0);
	_.equals$ = function equals_56(o) {
		return $equals_15(this, o);
	};
	_.toString$ = function toString_45() {
		return $toString_16(this);
	};
	_.discretionInst = 32;
	_.discretionLimitType = P0_longLit;
	_.discretionMoveType = P0_longLit;
	_.discretionOffsetType = P0_longLit;
	_.discretionOffsetValue = P0_longLit;
	_.discretionRoundDirection = P0_longLit;
	_.discretionScope = P0_longLit;

	function $clear_26(this$static) {
		this$static.displayQty = P7fffffffffffffff_longLit;
		this$static.secondaryDisplayQty = P7fffffffffffffff_longLit;
		this$static.displayWhen = 127;
		this$static.displayMethod = 127;
		this$static.displayLowQty = P7fffffffffffffff_longLit;
		this$static.displayHighQty = P7fffffffffffffff_longLit;
		this$static.displayMinIncr = P7fffffffffffffff_longLit;
		this$static.refreshQty = P7fffffffffffffff_longLit;
	}

	function $encode_21(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.displayQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1138, this$static.displayQty);
		neq(this$static.secondaryDisplayQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1082, this$static.secondaryDisplayQty);
		this$static.displayWhen != 127 && putFixTag(out, 1083, this$static.displayWhen);
		this$static.displayMethod != 127 && putFixTag(out, 1084, this$static.displayMethod);
		neq(this$static.displayLowQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1085, this$static.displayLowQty);
		neq(this$static.displayHighQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1086, this$static.displayHighQty);
		neq(this$static.displayMinIncr, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1087, this$static.displayMinIncr);
		neq(this$static.refreshQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1088, this$static.refreshQty);
	}

	function $equals_16(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixDisplayInstruction)) {
			$print_10(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.displayQty, msg.displayQty)) {
			ret = false;
			$print_10((valueOf_1(this$static.displayQty), valueOf_1(msg.displayQty)));
		}
		if (neq(this$static.secondaryDisplayQty, msg.secondaryDisplayQty)) {
			ret = false;
			$print_10((valueOf_1(this$static.secondaryDisplayQty), valueOf_1(msg.secondaryDisplayQty)));
		}
		if (this$static.displayWhen != msg.displayWhen) {
			ret = false;
			$print_10((valueOf(this$static.displayWhen), valueOf(msg.displayWhen)));
		}
		if (this$static.displayMethod != msg.displayMethod) {
			ret = false;
			$print_10((valueOf(this$static.displayMethod), valueOf(msg.displayMethod)));
		}
		if (neq(this$static.displayLowQty, msg.displayLowQty)) {
			ret = false;
			$print_10((valueOf_1(this$static.displayLowQty), valueOf_1(msg.displayLowQty)));
		}
		if (neq(this$static.displayHighQty, msg.displayHighQty)) {
			ret = false;
			$print_10((valueOf_1(this$static.displayHighQty), valueOf_1(msg.displayHighQty)));
		}
		if (neq(this$static.displayMinIncr, msg.displayMinIncr)) {
			ret = false;
			$print_10((valueOf_1(this$static.displayMinIncr), valueOf_1(msg.displayMinIncr)));
		}
		if (neq(this$static.refreshQty, msg.refreshQty)) {
			ret = false;
			$print_10((valueOf_1(this$static.refreshQty), valueOf_1(msg.refreshQty)));
		}
		return ret;
	}

	function $getAll_31(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 1138:
				this$static.displayQty = getTagFloatValue(null, 1138, buf);
				break;
			case 1082:
				this$static.secondaryDisplayQty = getTagFloatValue(null, 1082, buf);
				break;
			case 1083:
				this$static.displayWhen = getTagCharValue(null, 1083, buf);
				if (!isValid_45(this$static.displayWhen)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.displayWhen + ') for tag'), P43b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1084:
				this$static.displayMethod = getTagCharValue(null, 1084, buf);
				if (!isValid_44(this$static.displayMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.displayMethod + ') for tag'), P43c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1085:
				this$static.displayLowQty = getTagFloatValue(null, 1085, buf);
				break;
			case 1086:
				this$static.displayHighQty = getTagFloatValue(null, 1086, buf);
				break;
			case 1087:
				this$static.displayMinIncr = getTagFloatValue(null, 1087, buf);
				break;
			case 1088:
				this$static.refreshQty = getTagFloatValue(null, 1088, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_10() {
		$clinit_FixMessage();
	}

	function $toString_17(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.displayQty, P7fffffffffffffff_longLit) && (s += 'DisplayQty(1138)=' + $trim('' + toString_183(this$static.displayQty)) + charToString(sep));
		neq(this$static.secondaryDisplayQty, P7fffffffffffffff_longLit) && (s += 'SecondaryDisplayQty(1082)=' + $trim('' + toString_183(this$static.secondaryDisplayQty)) + charToString(sep));
		this$static.displayWhen != 127 && (s += 'DisplayWhen(1083)=' + $trim('' + this$static.displayWhen) + charToString(sep));
		this$static.displayMethod != 127 && (s += 'DisplayMethod(1084)=' + $trim('' + this$static.displayMethod) + charToString(sep));
		neq(this$static.displayLowQty, P7fffffffffffffff_longLit) && (s += 'DisplayLowQty(1085)=' + $trim('' + toString_183(this$static.displayLowQty)) + charToString(sep));
		neq(this$static.displayHighQty, P7fffffffffffffff_longLit) && (s += 'DisplayHighQty(1086)=' + $trim('' + toString_183(this$static.displayHighQty)) + charToString(sep));
		neq(this$static.displayMinIncr, P7fffffffffffffff_longLit) && (s += 'DisplayMinIncr(1087)=' + $trim('' + toString_183(this$static.displayMinIncr)) + charToString(sep));
		neq(this$static.refreshQty, P7fffffffffffffff_longLit) && (s += 'RefreshQty(1088)=' + $trim('' + toString_183(this$static.refreshQty)) + charToString(sep));
		return s;
	}

	function FixDisplayInstruction_0() {
		$clear_26(this);
	}

	defineSeed(556, 1, makeCastMap([Q$FixComponent, Q$FixDisplayInstruction]), FixDisplayInstruction_0);
	_.equals$ = function equals_57(o) {
		return $equals_16(this, o);
	};
	_.toString$ = function toString_46() {
		return $toString_17(this);
	};
	_.displayHighQty = P0_longLit;
	_.displayLowQty = P0_longLit;
	_.displayMethod = 32;
	_.displayMinIncr = P0_longLit;
	_.displayQty = P0_longLit;
	_.displayWhen = 32;
	_.refreshQty = P0_longLit;
	_.secondaryDisplayQty = P0_longLit;

	function $clear_27(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noDlvyInst; i_0++)
		this$static.group[i_0].nullMethod();
	}

	function $encode_22(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noDlvyInst; i_0++)
		this$static.group[i_0].nullMethod();
	}

	function $equals_17(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixDlvyInstGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noDlvyInst; i_0++)
		if (!this$static.group[i_0].nullMethod(msg.group[i_0])) return false;
		return true;
	}

	function $toString_18(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noDlvyInst; i_0++)
		s += this$static.group[i_0].nullMethod();
		return s;
	}

	function FixDlvyInstGrp_0() {}

	defineSeed(557, 1, makeCastMap([Q$FixDlvyInstGrp]), FixDlvyInstGrp_0);
	_.equals$ = function equals_58(o) {
		return $equals_17(this, o);
	};
	_.toString$ = function toString_47() {
		return $toString_18(this);
	};
	_.noDlvyInst = 0;

	function $clear_28(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noEvents; i_0++)
		$clear_29(this$static.group[i_0]);
	}

	function $encode_23(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noEvents; i_0++)
		$encode_24(this$static.group[i_0], out);
	}

	function $equals_18(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixEvntGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noEvents; i_0++)
		if (!$equals_19(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_32(this$static, noEvents, buf) {
		var i_0, i0;
		this$static.noEvents = noEvents;
		if (noEvents < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noEvents), P360_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noEvents) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixEvntGrp$EvntGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixEvntGrp$EvntGrp, noEvents, 0);
			for (i0 = 0; i0 < noEvents; i0++)
			this$static.group[i0] = new FixEvntGrp$EvntGrp_0;
		}
		for (i_0 = 0; i_0 < noEvents; i_0++)
		$getAllGroup_5(this$static.group[i_0], buf);
	}

	function $toString_19(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noEvents; i_0++)
		s += $toString_20(this$static.group[i_0]);
		return s;
	}

	function FixEvntGrp_0() {}

	defineSeed(558, 1, makeCastMap([Q$FixEvntGrp]), FixEvntGrp_0);
	_.equals$ = function equals_59(o) {
		return $equals_18(this, o);
	};
	_.toString$ = function toString_48() {
		return $toString_19(this);
	};
	_.noEvents = 0;

	function $clear_29(this$static) {
		this$static.eventType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.eventDate[0] = 0;
		this$static.eventTime[0] = 0;
		this$static.eventPx = P7fffffffffffffff_longLit;
		this$static.eventText[0] = 0;
	}

	function $encode_24(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.eventType, P7fffffffffffffff_longLit) && putFixTag_0(out, 865, this$static.eventType);
		this$static.eventDate[0] != 0 && putFixTag_1(out, 866, this$static.eventDate);
		this$static.eventTime[0] != 0 && putFixTag_1(out, 1145, this$static.eventTime);
		neq(this$static.eventPx, P7fffffffffffffff_longLit) && putFixFloatTag(out, 867, this$static.eventPx);
		this$static.eventText[0] != 0 && putFixTag_2(out, 868, this$static.eventText, lastIndexTrim(this$static.eventText));
	}

	function $equals_19(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixEvntGrp$EvntGrp)) {
			$print_11(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.eventType, msg.eventType)) {
			ret = false;
			$print_11((valueOf_1(this$static.eventType), valueOf_1(msg.eventType)));
		}
		if (neq(this$static.eventPx, msg.eventPx)) {
			ret = false;
			$print_11((valueOf_1(this$static.eventPx), valueOf_1(msg.eventPx)));
		}
		if (!equals_12(this$static.eventText, msg.eventText)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_5(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 865) {
			this$static.eventType = fromInt(getTagIntValue(null, 865, buf));
			if (!isValid_47(this$static.eventType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.eventType) + ') for tag'), P361_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 866) {
			this$static.eventDate = getTagStringValue(null, 866, buf, this$static.eventDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1145) {
			this$static.eventTime = getTagStringValue(null, 1145, buf, this$static.eventTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 867) {
			this$static.eventPx = getTagFloatValue(null, 867, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 868) {
			this$static.eventText = getTagStringValue(null, 868, buf, this$static.eventText);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_11() {
		$clinit_FixMessage();
	}

	function $toString_20(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.eventType, P7fffffffffffffff_longLit) && (s += 'EventType(865)=' + $trim('' + toString_183(this$static.eventType)) + charToString(sep));
		this$static.eventDate[0] != 0 && (s += 'EventDate(866)=' + $trim(_String(this$static.eventDate)) + charToString(sep));
		this$static.eventTime[0] != 0 && (s += 'EventTime(1145)=' + $trim(_String(this$static.eventTime)) + charToString(sep));
		neq(this$static.eventPx, P7fffffffffffffff_longLit) && (s += 'EventPx(867)=' + $trim('' + toString_183(this$static.eventPx)) + charToString(sep));
		this$static.eventText[0] != 0 && (s += 'EventText(868)=' + $trim(_String(this$static.eventText)) + charToString(sep));
		return s;
	}

	function FixEvntGrp$EvntGrp_0() {
		this.eventDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.eventTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.eventText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_29(this);
	}

	defineSeed(559, 1, makeCastMap([Q$FixComponent, Q$FixEvntGrp$EvntGrp]), FixEvntGrp$EvntGrp_0);
	_.equals$ = function equals_60(o) {
		return $equals_19(this, o);
	};
	_.toString$ = function toString_49() {
		return $toString_20(this);
	};
	_.eventPx = P0_longLit;
	_.eventType = P0_longLit;

	function $clear_30(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noExecs; i_0++) {
			$clinit_Utils();
			this$static.group[i_0].execID[0] = 0;
		}
	}

	function $encode_25(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noExecs; i_0++)
		$encode_26(this$static.group[i_0], out);
	}

	function $equals_20(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixExecCollGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noExecs; i_0++)
		if (!$equals_21(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_33(this$static, noExecs, buf) {
		var i_0, i0;
		this$static.noExecs = noExecs;
		if (noExecs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noExecs), P7c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noExecs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixExecCollGrp$ExecCollGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixExecCollGrp$ExecCollGrp, noExecs, 0);
			for (i0 = 0; i0 < noExecs; i0++)
			this$static.group[i0] = new FixExecCollGrp$ExecCollGrp_0;
		}
		for (i_0 = 0; i_0 < noExecs; i_0++)
		$getAllGroup_6(this$static.group[i_0], buf);
	}

	function $toString_21(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noExecs; i_0++)
		s += $toString_22(this$static.group[i_0]);
		return s;
	}

	function FixExecCollGrp_0() {}

	defineSeed(560, 1, makeCastMap([Q$FixExecCollGrp]), FixExecCollGrp_0);
	_.equals$ = function equals_61(o) {
		return $equals_20(this, o);
	};
	_.toString$ = function toString_50() {
		return $toString_21(this);
	};
	_.noExecs = 0;

	function $encode_26(this$static, out) {
		$clinit_FixUtils();
		this$static.execID[0] != 0 && putFixTag_2(out, 17, this$static.execID, lastIndexTrim(this$static.execID));
	}

	function $equals_21(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixExecCollGrp$ExecCollGrp)) {
			$print_12(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.execID, msg.execID)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_6(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 17) {
			this$static.execID = getTagStringValue(null, 17, buf, this$static.execID);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_12() {
		$clinit_FixMessage();
	}

	function $toString_22(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.execID[0] != 0 && (s += 'ExecID(17)=' + $trim(_String(this$static.execID)) + charToString(sep));
		return s;
	}

	function FixExecCollGrp$ExecCollGrp_0() {
		this.execID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.execID[0] = 0;
	}

	defineSeed(561, 1, makeCastMap([Q$FixComponent, Q$FixExecCollGrp$ExecCollGrp]), FixExecCollGrp$ExecCollGrp_0);
	_.equals$ = function equals_62(o) {
		return $equals_21(this, o);
	};
	_.toString$ = function toString_51() {
		return $toString_22(this);
	};

	function $clear_31(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noExecInstRules; i_0++)
		this$static.group[i_0].execInstValue = 127;
	}

	function $equals_22(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixExecInstRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noExecInstRules; i_0++)
		if (!$equals_23(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_34(this$static, noExecInstRules, buf) {
		var i_0, i0;
		this$static.noExecInstRules = noExecInstRules;
		if (noExecInstRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noExecInstRules), P4d0_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noExecInstRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixExecInstRules$ExecInstRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixExecInstRules$ExecInstRules, noExecInstRules, 0);
			for (i0 = 0; i0 < noExecInstRules; i0++)
			this$static.group[i0] = new FixExecInstRules$ExecInstRules_0;
		}
		for (i_0 = 0; i_0 < noExecInstRules; i_0++)
		$getAllGroup_7(this$static.group[i_0], buf);
	}

	function $toString_23(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noExecInstRules; i_0++)
		s += $toString_24(this$static.group[i_0]);
		return s;
	}

	function FixExecInstRules_0() {}

	defineSeed(562, 1, makeCastMap([Q$FixExecInstRules]), FixExecInstRules_0);
	_.equals$ = function equals_63(o) {
		return $equals_22(this, o);
	};
	_.toString$ = function toString_52() {
		return $toString_23(this);
	};
	_.noExecInstRules = 0;

	function $equals_23(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixExecInstRules$ExecInstRules)) {
			$print_13(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.execInstValue != msg.execInstValue) {
			ret = false;
			$print_13((valueOf(this$static.execInstValue), valueOf(msg.execInstValue)));
		}
		return ret;
	}

	function $getAllGroup_7(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1308) {
			this$static.execInstValue = getTagCharValue(null, 1308, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_13() {
		$clinit_FixMessage();
	}

	function $toString_24(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.execInstValue != 127 && (s += 'ExecInstValue(1308)=' + $trim('' + this$static.execInstValue) + charToString(sep));
		return s;
	}

	function FixExecInstRules$ExecInstRules_0() {
		this.execInstValue = 127;
	}

	defineSeed(563, 1, makeCastMap([Q$FixComponent, Q$FixExecInstRules$ExecInstRules]), FixExecInstRules$ExecInstRules_0);
	_.equals$ = function equals_64(o) {
		return $equals_23(this, o);
	};
	_.toString$ = function toString_53() {
		return $toString_24(this);
	};
	_.execInstValue = 32;

	function $clear_32(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noFills; i_0++)
		$clear_33(this$static.group[i_0]);
	}

	function $equals_24(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixFillsGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noFills; i_0++)
		if (!$equals_25(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_35(this$static, noFills, buf) {
		var i_0, i0;
		this$static.noFills = noFills;
		if (noFills < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noFills), P552_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noFills) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixFillsGrp$FillsGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixFillsGrp$FillsGrp, noFills, 0);
			for (i0 = 0; i0 < noFills; i0++)
			this$static.group[i0] = new FixFillsGrp$FillsGrp_0;
		}
		for (i_0 = 0; i_0 < noFills; i_0++)
		$getAllGroup_8(this$static.group[i_0], buf);
	}

	function $toString_25(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noFills; i_0++)
		s += $toString_26(this$static.group[i_0]);
		return s;
	}

	function FixFillsGrp_0() {}

	defineSeed(564, 1, makeCastMap([Q$FixFillsGrp]), FixFillsGrp_0);
	_.equals$ = function equals_65(o) {
		return $equals_24(this, o);
	};
	_.toString$ = function toString_54() {
		return $toString_25(this);
	};
	_.noFills = 0;

	function $clear_33(this$static) {
		$clinit_Utils();
		this$static.fillExecID[0] = 0;
		this$static.fillPx = P7fffffffffffffff_longLit;
		this$static.fillQty = P7fffffffffffffff_longLit;
		this$static.fillLiquidityInd = P7fffffffffffffff_longLit;
		$clear_76(this$static.nestedParties4);
	}

	function $equals_25(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixFillsGrp$FillsGrp)) {
			$print_14(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.fillExecID, msg.fillExecID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.fillPx, msg.fillPx)) {
			ret = false;
			$print_14((valueOf_1(this$static.fillPx), valueOf_1(msg.fillPx)));
		}
		if (neq(this$static.fillQty, msg.fillQty)) {
			ret = false;
			$print_14((valueOf_1(this$static.fillQty), valueOf_1(msg.fillQty)));
		}
		if (neq(this$static.fillLiquidityInd, msg.fillLiquidityInd)) {
			ret = false;
			$print_14((valueOf_1(this$static.fillLiquidityInd), valueOf_1(msg.fillLiquidityInd)));
		}
		$equals_70(this$static.nestedParties4, msg.nestedParties4) || (ret = false);
		return ret;
	}

	function $getAllGroup_8(this$static, buf) {
		var id_0, lastTagPosition, noNested4PartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1363) {
			this$static.fillExecID = getTagStringValue(null, 1363, buf, this$static.fillExecID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1364) {
			this$static.fillPx = getTagFloatValue(null, 1364, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1365) {
			this$static.fillQty = getTagFloatValue(null, 1365, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1443) {
			this$static.fillLiquidityInd = fromInt(getTagIntValue(null, 1443, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1414) {
			noNested4PartyIDs = getTagIntValue(null, 1414, buf);
			$getAll_60(this$static.nestedParties4, noNested4PartyIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_14() {
		$clinit_FixMessage();
	}

	function $toString_26(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.fillExecID[0] != 0 && (s += 'FillExecID(1363)=' + $trim(_String(this$static.fillExecID)) + charToString(sep));
		neq(this$static.fillPx, P7fffffffffffffff_longLit) && (s += 'FillPx(1364)=' + $trim('' + toString_183(this$static.fillPx)) + charToString(sep));
		neq(this$static.fillQty, P7fffffffffffffff_longLit) && (s += 'FillQty(1365)=' + $trim('' + toString_183(this$static.fillQty)) + charToString(sep));
		neq(this$static.fillLiquidityInd, P7fffffffffffffff_longLit) && (s += 'FillLiquidityInd(1443)=' + $trim('' + toString_183(this$static.fillLiquidityInd)) + charToString(sep));
		neq(fromInt(this$static.nestedParties4.noNested4PartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_71(this$static.nestedParties4)));
		return s;
	}

	function FixFillsGrp$FillsGrp_0() {
		this.fillExecID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nestedParties4 = new FixNestedParties4_0;
		$clear_33(this);
	}

	defineSeed(565, 1, makeCastMap([Q$FixComponent, Q$FixFillsGrp$FillsGrp]), FixFillsGrp$FillsGrp_0);
	_.equals$ = function equals_66(o) {
		return $equals_25(this, o);
	};
	_.toString$ = function toString_55() {
		return $toString_26(this);
	};
	_.fillLiquidityInd = P0_longLit;
	_.fillPx = P0_longLit;
	_.fillQty = P0_longLit;

	function $clear_34(this$static) {
		$clinit_Utils();
		this$static.agreementDesc[0] = 0;
		this$static.agreementID[0] = 0;
		this$static.agreementDate[0] = 0;
		this$static.agreementCurrency[0] = 0;
		this$static.terminationType = P7fffffffffffffff_longLit;
		this$static.startDate[0] = 0;
		this$static.endDate[0] = 0;
		this$static.deliveryType = P7fffffffffffffff_longLit;
		this$static.marginRatio = P7fffffffffffffff_longLit;
	}

	function $encode_27(this$static, out) {
		$clinit_FixUtils();
		this$static.agreementDesc[0] != 0 && putFixTag_2(out, 913, this$static.agreementDesc, lastIndexTrim(this$static.agreementDesc));
		this$static.agreementID[0] != 0 && putFixTag_2(out, 914, this$static.agreementID, lastIndexTrim(this$static.agreementID));
		this$static.agreementDate[0] != 0 && putFixTag_1(out, 915, this$static.agreementDate);
		this$static.agreementCurrency[0] != 0 && putFixTag_2(out, 918, this$static.agreementCurrency, lastIndexTrim(this$static.agreementCurrency));
		neq(this$static.terminationType, P7fffffffffffffff_longLit) && putFixTag_0(out, 788, this$static.terminationType);
		this$static.startDate[0] != 0 && putFixTag_1(out, 916, this$static.startDate);
		this$static.endDate[0] != 0 && putFixTag_1(out, 917, this$static.endDate);
		neq(this$static.deliveryType, P7fffffffffffffff_longLit) && putFixTag_0(out, 919, this$static.deliveryType);
		neq(this$static.marginRatio, P7fffffffffffffff_longLit) && putFixFloatTag(out, 898, this$static.marginRatio);
	}

	function $equals_26(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixFinancingDetails)) {
			$print_15(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.agreementDesc, msg.agreementDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.agreementID, msg.agreementID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.agreementCurrency, msg.agreementCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.terminationType, msg.terminationType)) {
			ret = false;
			$print_15((valueOf_1(this$static.terminationType), valueOf_1(msg.terminationType)));
		}
		if (neq(this$static.deliveryType, msg.deliveryType)) {
			ret = false;
			$print_15((valueOf_1(this$static.deliveryType), valueOf_1(msg.deliveryType)));
		}
		if (neq(this$static.marginRatio, msg.marginRatio)) {
			ret = false;
			$print_15((valueOf_1(this$static.marginRatio), valueOf_1(msg.marginRatio)));
		}
		return ret;
	}

	function $getAll_36(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 913:
				this$static.agreementDesc = getTagStringValue(null, 913, buf, this$static.agreementDesc);
				break;
			case 914:
				this$static.agreementID = getTagStringValue(null, 914, buf, this$static.agreementID);
				break;
			case 915:
				this$static.agreementDate = getTagStringValue(null, 915, buf, this$static.agreementDate);
				break;
			case 918:
				this$static.agreementCurrency = getTagStringValue(null, 918, buf, this$static.agreementCurrency);
				break;
			case 788:
				this$static.terminationType = fromInt(getTagIntValue(null, 788, buf));
				if (!isValid_159(this$static.terminationType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.terminationType) + ') for tag'), P314_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 916:
				this$static.startDate = getTagStringValue(null, 916, buf, this$static.startDate);
				break;
			case 917:
				this$static.endDate = getTagStringValue(null, 917, buf, this$static.endDate);
				break;
			case 919:
				this$static.deliveryType = fromInt(getTagIntValue(null, 919, buf));
				if (!isValid_34(this$static.deliveryType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.deliveryType) + ') for tag'), P397_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 898:
				this$static.marginRatio = getTagFloatValue(null, 898, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_15() {
		$clinit_FixMessage();
	}

	function $toString_27(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.agreementDesc[0] != 0 && (s += 'AgreementDesc(913)=' + $trim(_String(this$static.agreementDesc)) + charToString(sep));
		this$static.agreementID[0] != 0 && (s += 'AgreementID(914)=' + $trim(_String(this$static.agreementID)) + charToString(sep));
		this$static.agreementDate[0] != 0 && (s += 'AgreementDate(915)=' + $trim(_String(this$static.agreementDate)) + charToString(sep));
		this$static.agreementCurrency[0] != 0 && (s += 'AgreementCurrency(918)=' + $trim(_String(this$static.agreementCurrency)) + charToString(sep));
		neq(this$static.terminationType, P7fffffffffffffff_longLit) && (s += 'TerminationType(788)=' + $trim('' + toString_183(this$static.terminationType)) + charToString(sep));
		this$static.startDate[0] != 0 && (s += 'StartDate(916)=' + $trim(_String(this$static.startDate)) + charToString(sep));
		this$static.endDate[0] != 0 && (s += 'EndDate(917)=' + $trim(_String(this$static.endDate)) + charToString(sep));
		neq(this$static.deliveryType, P7fffffffffffffff_longLit) && (s += 'DeliveryType(919)=' + $trim('' + toString_183(this$static.deliveryType)) + charToString(sep));
		neq(this$static.marginRatio, P7fffffffffffffff_longLit) && (s += 'MarginRatio(898)=' + $trim('' + toString_183(this$static.marginRatio)) + charToString(sep));
		return s;
	}

	function FixFinancingDetails_0() {
		this.agreementDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.agreementID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.agreementDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.agreementCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.startDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.endDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_34(this);
	}

	defineSeed(566, 1, makeCastMap([Q$FixComponent, Q$FixFinancingDetails]), FixFinancingDetails_0);
	_.equals$ = function equals_67(o) {
		return $equals_26(this, o);
	};
	_.toString$ = function toString_56() {
		return $toString_27(this);
	};
	_.deliveryType = P0_longLit;
	_.marginRatio = P0_longLit;
	_.terminationType = P0_longLit;

	function $encode_28(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noHops; i_0++)
		null.nullMethod();
	}

	function $equals_27(this$static, o) {
		var i_0;
		if (!instanceOf(o, Q$FixHopGrp)) return false;
		for (i_0 = 0; i_0 < this$static.noHops; i_0++)
		if (!null.nullMethod()) return false;
		return true;
	}

	function $toString_28(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noHops; i_0++)
		s += null.nullMethod();
		return s;
	}

	function FixHopGrp_0() {}

	defineSeed(567, 1, makeCastMap([Q$FixHopGrp]), FixHopGrp_0);
	_.equals$ = function equals_68(o) {
		return $equals_27(this, o);
	};
	_.toString$ = function toString_57() {
		return $toString_28(this);
	};
	_.noHops = 0;

	function $clear_35(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		$clear_36(this$static.group[i_0]);
	}

	function $equals_28(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixInstrmtLegExecGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		if (!$equals_29(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_37(this$static, noLegs, buf) {
		var i_0, i0;
		this$static.noLegs = noLegs;
		if (noLegs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegs), P22b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegExecGrp$InstrmtLegExecGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixInstrmtLegExecGrp$InstrmtLegExecGrp, noLegs, 0);
			for (i0 = 0; i0 < noLegs; i0++)
			this$static.group[i0] = new FixInstrmtLegExecGrp$InstrmtLegExecGrp_0;
		}
		for (i_0 = 0; i_0 < noLegs; i_0++)
		$getAllGroup_9(this$static.group[i_0], buf);
	}

	function $toString_29(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		s += $toString_30(this$static.group[i_0]);
		return s;
	}

	function FixInstrmtLegExecGrp_0() {}

	defineSeed(568, 1, makeCastMap([Q$FixInstrmtLegExecGrp]), FixInstrmtLegExecGrp_0);
	_.equals$ = function equals_69(o) {
		return $equals_28(this, o);
	};
	_.toString$ = function toString_58() {
		return $toString_29(this);
	};
	_.noLegs = 0;

	function $clear_36(this$static) {
		this$static.legQty = P7fffffffffffffff_longLit;
		this$static.legOrderQty = P7fffffffffffffff_longLit;
		this$static.legSwapType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.legAllocID[0] = 0;
		this$static.legPositionEffect = 127;
		this$static.legCoveredOrUncovered = P7fffffffffffffff_longLit;
		this$static.legRefID[0] = 0;
		this$static.legSettlType = 127;
		this$static.legSettlDate[0] = 0;
		this$static.legLastPx = P7fffffffffffffff_longLit;
		this$static.legSettlCurrency[0] = 0;
		this$static.legLastForwardPoints = P7fffffffffffffff_longLit;
		this$static.legCalculatedCcyLastQty = P7fffffffffffffff_longLit;
		this$static.legGrossTradeAmt = P7fffffffffffffff_longLit;
		this$static.legVolatility = P7fffffffffffffff_longLit;
		this$static.legDividendYield = P7fffffffffffffff_longLit;
		this$static.legCurrencyRatio = P7fffffffffffffff_longLit;
		this$static.legExecInst[0] = 0;
		this$static.legLastQty = P7fffffffffffffff_longLit;
		$clear_42(this$static.instrumentLeg);
		$clear_54(this$static.legStipulations);
		$clear_48(this$static.legPreAllocGrp);
		$clear_74(this$static.nestedParties3);
	}

	function $equals_29(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrmtLegExecGrp$InstrmtLegExecGrp)) {
			$print_16(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_36(this$static.instrumentLeg, msg.instrumentLeg) || (ret = false);
		if (neq(this$static.legQty, msg.legQty)) {
			ret = false;
			$print_16((valueOf_1(this$static.legQty), valueOf_1(msg.legQty)));
		}
		if (neq(this$static.legOrderQty, msg.legOrderQty)) {
			ret = false;
			$print_16((valueOf_1(this$static.legOrderQty), valueOf_1(msg.legOrderQty)));
		}
		if (neq(this$static.legSwapType, msg.legSwapType)) {
			ret = false;
			$print_16((valueOf_1(this$static.legSwapType), valueOf_1(msg.legSwapType)));
		}
		if (!equals_12(this$static.legAllocID, msg.legAllocID)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_48(this$static.legStipulations, msg.legStipulations) || (ret = false);
		$equals_42(this$static.legPreAllocGrp, msg.legPreAllocGrp) || (ret = false);
		if (this$static.legPositionEffect != msg.legPositionEffect) {
			ret = false;
			$print_16((valueOf(this$static.legPositionEffect), valueOf(msg.legPositionEffect)));
		}
		if (neq(this$static.legCoveredOrUncovered, msg.legCoveredOrUncovered)) {
			ret = false;
			$print_16((valueOf_1(this$static.legCoveredOrUncovered), valueOf_1(msg.legCoveredOrUncovered)));
		}
		$equals_68(this$static.nestedParties3, msg.nestedParties3) || (ret = false);
		if (!equals_12(this$static.legRefID, msg.legRefID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.legSettlType != msg.legSettlType) {
			ret = false;
			$print_16((valueOf(this$static.legSettlType), valueOf(msg.legSettlType)));
		}
		if (neq(this$static.legLastPx, msg.legLastPx)) {
			ret = false;
			$print_16((valueOf_1(this$static.legLastPx), valueOf_1(msg.legLastPx)));
		}
		if (!equals_12(this$static.legSettlCurrency, msg.legSettlCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legLastForwardPoints, msg.legLastForwardPoints)) {
			ret = false;
			$print_16((valueOf_1(this$static.legLastForwardPoints), valueOf_1(msg.legLastForwardPoints)));
		}
		if (neq(this$static.legCalculatedCcyLastQty, msg.legCalculatedCcyLastQty)) {
			ret = false;
			$print_16((valueOf_1(this$static.legCalculatedCcyLastQty), valueOf_1(msg.legCalculatedCcyLastQty)));
		}
		if (neq(this$static.legGrossTradeAmt, msg.legGrossTradeAmt)) {
			ret = false;
			$print_16((valueOf_1(this$static.legGrossTradeAmt), valueOf_1(msg.legGrossTradeAmt)));
		}
		if (neq(this$static.legVolatility, msg.legVolatility)) {
			ret = false;
			$print_16((valueOf_1(this$static.legVolatility), valueOf_1(msg.legVolatility)));
		}
		if (neq(this$static.legDividendYield, msg.legDividendYield)) {
			ret = false;
			$print_16((valueOf_1(this$static.legDividendYield), valueOf_1(msg.legDividendYield)));
		}
		if (neq(this$static.legCurrencyRatio, msg.legCurrencyRatio)) {
			ret = false;
			$print_16((valueOf_1(this$static.legCurrencyRatio), valueOf_1(msg.legCurrencyRatio)));
		}
		if (!equals_12(this$static.legExecInst, msg.legExecInst)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legLastQty, msg.legLastQty)) {
			ret = false;
			$print_16((valueOf_1(this$static.legLastQty), valueOf_1(msg.legLastQty)));
		}
		return ret;
	}

	function $getAllGroup_9(this$static, buf) {
		var id_0, lastTagPosition, noLegAllocs, noLegStipulations, noNested3PartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 600) {
			$getAll_42(this$static.instrumentLeg, 600, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 687) {
			this$static.legQty = getTagFloatValue(null, 687, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 685) {
			this$static.legOrderQty = getTagFloatValue(null, 685, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 690) {
			this$static.legSwapType = fromInt(getTagIntValue(null, 690, buf));
			if (!isValid_69(this$static.legSwapType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.legSwapType) + ') for tag'), P2b2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1366) {
			this$static.legAllocID = getTagStringValue(null, 1366, buf, this$static.legAllocID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 683) {
			noLegStipulations = getTagIntValue(null, 683, buf);
			$getAll_49(this$static.legStipulations, noLegStipulations, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 670) {
			noLegAllocs = getTagIntValue(null, 670, buf);
			$getAll_46(this$static.legPreAllocGrp, noLegAllocs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 564) {
			this$static.legPositionEffect = getTagCharValue(null, 564, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 565) {
			this$static.legCoveredOrUncovered = fromInt(getTagIntValue(null, 565, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 948) {
			noNested3PartyIDs = getTagIntValue(null, 948, buf);
			$getAll_59(this$static.nestedParties3, noNested3PartyIDs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 654) {
			this$static.legRefID = getTagStringValue(null, 654, buf, this$static.legRefID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 587) {
			this$static.legSettlType = getTagCharValue(null, 587, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 588) {
			this$static.legSettlDate = getTagStringValue(null, 588, buf, this$static.legSettlDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 637) {
			this$static.legLastPx = getTagFloatValue(null, 637, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 675) {
			this$static.legSettlCurrency = getTagStringValue(null, 675, buf, this$static.legSettlCurrency);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1073) {
			this$static.legLastForwardPoints = getTagFloatValue(null, 1073, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1074) {
			this$static.legCalculatedCcyLastQty = getTagFloatValue(null, 1074, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1075) {
			this$static.legGrossTradeAmt = getTagFloatValue(null, 1075, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1379) {
			this$static.legVolatility = getTagFloatValue(null, 1379, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1381) {
			this$static.legDividendYield = getTagFloatValue(null, 1381, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1383) {
			this$static.legCurrencyRatio = getTagFloatValue(null, 1383, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1384) {
			this$static.legExecInst = getTagStringValue(null, 1384, buf, this$static.legExecInst);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1418) {
			this$static.legLastQty = getTagFloatValue(null, 1418, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_16() {
		$clinit_FixMessage();
	}

	function $toString_30(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && (s += $trim($toString_37(this$static.instrumentLeg)));
		neq(this$static.legQty, P7fffffffffffffff_longLit) && (s += 'LegQty(687)=' + $trim('' + toString_183(this$static.legQty)) + charToString(sep));
		neq(this$static.legOrderQty, P7fffffffffffffff_longLit) && (s += 'LegOrderQty(685)=' + $trim('' + toString_183(this$static.legOrderQty)) + charToString(sep));
		neq(this$static.legSwapType, P7fffffffffffffff_longLit) && (s += 'LegSwapType(690)=' + $trim('' + toString_183(this$static.legSwapType)) + charToString(sep));
		this$static.legAllocID[0] != 0 && (s += 'LegAllocID(1366)=' + $trim(_String(this$static.legAllocID)) + charToString(sep));
		neq(fromInt(this$static.legStipulations.noLegStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_49(this$static.legStipulations)));
		neq(fromInt(this$static.legPreAllocGrp.noLegAllocs), P7fffffffffffffff_longLit) && (s += $trim($toString_43(this$static.legPreAllocGrp)));
		this$static.legPositionEffect != 127 && (s += 'LegPositionEffect(564)=' + $trim('' + this$static.legPositionEffect) + charToString(sep));
		neq(this$static.legCoveredOrUncovered, P7fffffffffffffff_longLit) && (s += 'LegCoveredOrUncovered(565)=' + $trim('' + toString_183(this$static.legCoveredOrUncovered)) + charToString(sep));
		neq(fromInt(this$static.nestedParties3.noNested3PartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_69(this$static.nestedParties3)));
		this$static.legRefID[0] != 0 && (s += 'LegRefID(654)=' + $trim(_String(this$static.legRefID)) + charToString(sep));
		this$static.legSettlType != 127 && (s += 'LegSettlType(587)=' + $trim('' + this$static.legSettlType) + charToString(sep));
		this$static.legSettlDate[0] != 0 && (s += 'LegSettlDate(588)=' + $trim(_String(this$static.legSettlDate)) + charToString(sep));
		neq(this$static.legLastPx, P7fffffffffffffff_longLit) && (s += 'LegLastPx(637)=' + $trim('' + toString_183(this$static.legLastPx)) + charToString(sep));
		this$static.legSettlCurrency[0] != 0 && (s += 'LegSettlCurrency(675)=' + $trim(_String(this$static.legSettlCurrency)) + charToString(sep));
		neq(this$static.legLastForwardPoints, P7fffffffffffffff_longLit) && (s += 'LegLastForwardPoints(1073)=' + $trim('' + toString_183(this$static.legLastForwardPoints)) + charToString(sep));
		neq(this$static.legCalculatedCcyLastQty, P7fffffffffffffff_longLit) && (s += 'LegCalculatedCcyLastQty(1074)=' + $trim('' + toString_183(this$static.legCalculatedCcyLastQty)) + charToString(sep));
		neq(this$static.legGrossTradeAmt, P7fffffffffffffff_longLit) && (s += 'LegGrossTradeAmt(1075)=' + $trim('' + toString_183(this$static.legGrossTradeAmt)) + charToString(sep));
		neq(this$static.legVolatility, P7fffffffffffffff_longLit) && (s += 'LegVolatility(1379)=' + $trim('' + toString_183(this$static.legVolatility)) + charToString(sep));
		neq(this$static.legDividendYield, P7fffffffffffffff_longLit) && (s += 'LegDividendYield(1381)=' + $trim('' + toString_183(this$static.legDividendYield)) + charToString(sep));
		neq(this$static.legCurrencyRatio, P7fffffffffffffff_longLit) && (s += 'LegCurrencyRatio(1383)=' + $trim('' + toString_183(this$static.legCurrencyRatio)) + charToString(sep));
		this$static.legExecInst[0] != 0 && (s += 'LegExecInst(1384)=' + $trim(_String(this$static.legExecInst)) + charToString(sep));
		neq(this$static.legLastQty, P7fffffffffffffff_longLit) && (s += 'LegLastQty(1418)=' + $trim('' + toString_183(this$static.legLastQty)) + charToString(sep));
		return s;
	}

	function FixInstrmtLegExecGrp$InstrmtLegExecGrp_0() {
		this.instrumentLeg = new FixInstrumentLeg_0;
		this.legAllocID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legStipulations = new FixLegStipulations_0;
		this.legPreAllocGrp = new FixLegPreAllocGrp_0;
		this.nestedParties3 = new FixNestedParties3_0;
		this.legRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSettlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSettlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.legExecInst = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_36(this);
	}

	defineSeed(569, 1, makeCastMap([Q$FixComponent, Q$FixInstrmtLegExecGrp$InstrmtLegExecGrp]), FixInstrmtLegExecGrp$InstrmtLegExecGrp_0);
	_.equals$ = function equals_70(o) {
		return $equals_29(this, o);
	};
	_.toString$ = function toString_59() {
		return $toString_30(this);
	};
	_.legCalculatedCcyLastQty = P0_longLit;
	_.legCoveredOrUncovered = P0_longLit;
	_.legCurrencyRatio = P0_longLit;
	_.legDividendYield = P0_longLit;
	_.legGrossTradeAmt = P0_longLit;
	_.legLastForwardPoints = P0_longLit;
	_.legLastPx = P0_longLit;
	_.legLastQty = P0_longLit;
	_.legOrderQty = P0_longLit;
	_.legPositionEffect = 32;
	_.legQty = P0_longLit;
	_.legSettlType = 32;
	_.legSwapType = P0_longLit;
	_.legVolatility = P0_longLit;

	function $clear_37(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		$clear_42(this$static.group[i_0].instrumentLeg);
	}

	function $encode_29(this$static, out) {
		var i_0;
		if (this$static.noLegs != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 555, fromInt(this$static.noLegs));
			for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
			$encode_30(this$static.group[i_0], out);
		}
	}

	function $equals_30(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixInstrmtLegGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		if (!$equals_31(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_38(this$static, noLegs, buf) {
		var i_0, i0;
		this$static.noLegs = noLegs;
		if (noLegs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegs), P22b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegGrp$InstrmtLegGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixInstrmtLegGrp$InstrmtLegGrp, noLegs, 0);
			for (i0 = 0; i0 < noLegs; i0++)
			this$static.group[i0] = new FixInstrmtLegGrp$InstrmtLegGrp_0;
		}
		for (i_0 = 0; i_0 < noLegs; i_0++)
		$getAllGroup_10(this$static.group[i_0], buf);
	}

	function $isSet(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		if ($isSet_0(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_31(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		s += $toString_32(this$static.group[i_0]);
		return s;
	}

	function FixInstrmtLegGrp_0() {}

	defineSeed(570, 1, makeCastMap([Q$FixInstrmtLegGrp]), FixInstrmtLegGrp_0);
	_.equals$ = function equals_71(o) {
		return $equals_30(this, o);
	};
	_.toString$ = function toString_60() {
		return $toString_31(this);
	};
	_.noLegs = 0;

	function $encode_30(this$static, out) {
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && $encode_33(this$static.instrumentLeg, out);
	}

	function $equals_31(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrmtLegGrp$InstrmtLegGrp)) {
			$print_17(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_36(this$static.instrumentLeg, msg.instrumentLeg) || (ret = false);
		return ret;
	}

	function $getAllGroup_10(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 600) {
			$getAll_42(this$static.instrumentLeg, 600, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_0(this$static) {
		$clinit_FixUtils();
		if (this$static.instrumentLeg.legSymbol[0] != 0) return true;
		return false;
	}

	function $print_17() {
		$clinit_FixMessage();
	}

	function $toString_32(this$static) {
		var s;
		$clinit_Boolean();
		s = '';
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && (s += $trim($toString_37(this$static.instrumentLeg)));
		return s;
	}

	function FixInstrmtLegGrp$InstrmtLegGrp_0() {
		this.instrumentLeg = new FixInstrumentLeg_0;
		$clear_42(this.instrumentLeg);
	}

	defineSeed(571, 1, makeCastMap([Q$FixComponent, Q$FixInstrmtLegGrp$InstrmtLegGrp]), FixInstrmtLegGrp$InstrmtLegGrp_0);
	_.equals$ = function equals_72(o) {
		return $equals_31(this, o);
	};
	_.toString$ = function toString_61() {
		return $toString_32(this);
	};

	function $clear_38(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		$clear_39(this$static.group[i_0]);
	}

	function $equals_32(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixInstrmtLegSecListGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		if (!$equals_33(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_39(this$static, noLegs, buf) {
		var i_0, i0;
		this$static.noLegs = noLegs;
		if (noLegs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegs), P22b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixInstrmtLegSecListGrp$InstrmtLegSecListGrp, noLegs, 0);
			for (i0 = 0; i0 < noLegs; i0++)
			this$static.group[i0] = new FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_0;
		}
		for (i_0 = 0; i_0 < noLegs; i_0++)
		$getAllGroup_11(this$static.group[i_0], buf);
	}

	function $toString_33(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		s += $toString_34(this$static.group[i_0]);
		return s;
	}

	function FixInstrmtLegSecListGrp_0() {}

	defineSeed(572, 1, makeCastMap([Q$FixInstrmtLegSecListGrp]), FixInstrmtLegSecListGrp_0);
	_.equals$ = function equals_73(o) {
		return $equals_32(this, o);
	};
	_.toString$ = function toString_62() {
		return $toString_33(this);
	};
	_.noLegs = 0;

	function $clear_39(this$static) {
		this$static.legSwapType = P7fffffffffffffff_longLit;
		this$static.legSettlType = 127;
		$clear_42(this$static.instrumentLeg);
		$clear_54(this$static.legStipulations);
		$clear_47(this$static.legBenchmarkCurveData);
	}

	function $equals_33(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrmtLegSecListGrp$InstrmtLegSecListGrp)) {
			$print_18(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_36(this$static.instrumentLeg, msg.instrumentLeg) || (ret = false);
		if (neq(this$static.legSwapType, msg.legSwapType)) {
			ret = false;
			$print_18((valueOf_1(this$static.legSwapType), valueOf_1(msg.legSwapType)));
		}
		if (this$static.legSettlType != msg.legSettlType) {
			ret = false;
			$print_18((valueOf(this$static.legSettlType), valueOf(msg.legSettlType)));
		}
		$equals_48(this$static.legStipulations, msg.legStipulations) || (ret = false);
		$equals_41(this$static.legBenchmarkCurveData, msg.legBenchmarkCurveData) || (ret = false);
		return ret;
	}

	function $getAllGroup_11(this$static, buf) {
		var id_0, lastTagPosition, noLegStipulations;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 600) {
			$getAll_42(this$static.instrumentLeg, 600, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 690) {
			this$static.legSwapType = fromInt(getTagIntValue(null, 690, buf));
			if (!isValid_69(this$static.legSwapType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.legSwapType) + ') for tag'), P2b2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 587) {
			this$static.legSettlType = getTagCharValue(null, 587, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 683) {
			noLegStipulations = getTagIntValue(null, 683, buf);
			$getAll_49(this$static.legStipulations, noLegStipulations, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 676) {
			$getAll_45(this$static.legBenchmarkCurveData, 676, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_18() {
		$clinit_FixMessage();
	}

	function $toString_34(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && (s += $trim($toString_37(this$static.instrumentLeg)));
		neq(this$static.legSwapType, P7fffffffffffffff_longLit) && (s += 'LegSwapType(690)=' + $trim('' + toString_183(this$static.legSwapType)) + charToString(sep));
		this$static.legSettlType != 127 && (s += 'LegSettlType(587)=' + $trim('' + this$static.legSettlType) + charToString(sep));
		neq(fromInt(this$static.legStipulations.noLegStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_49(this$static.legStipulations)));
		this$static.legBenchmarkCurveData.legBenchmarkCurveCurrency[0] != 0 && (s += $trim($toString_42(this$static.legBenchmarkCurveData)));
		return s;
	}

	function FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_0() {
		this.instrumentLeg = new FixInstrumentLeg_0;
		this.legStipulations = new FixLegStipulations_0;
		this.legBenchmarkCurveData = new FixLegBenchmarkCurveData_0;
		$clear_39(this);
	}

	defineSeed(573, 1, makeCastMap([Q$FixComponent, Q$FixInstrmtLegSecListGrp$InstrmtLegSecListGrp]), FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_0);
	_.equals$ = function equals_74(o) {
		return $equals_33(this, o);
	};
	_.toString$ = function toString_63() {
		return $toString_34(this);
	};
	_.legSettlType = 32;
	_.legSwapType = P0_longLit;

	function $clear_40(this$static) {
		$clinit_Utils();
		this$static.symbol[0] = 0;
		this$static.symbolSfx[0] = 0;
		this$static.securityID[0] = 0;
		this$static.securityIDSource[0] = 0;
		this$static.product = P7fffffffffffffff_longLit;
		this$static.securityGroup[0] = 0;
		this$static.productComplex[0] = 0;
		this$static.cFICode[0] = 0;
		this$static.securityType[0] = 0;
		this$static.securitySubType[0] = 0;
		this$static.maturityMonthYear[0] = 0;
		this$static.maturityDate[0] = 0;
		this$static.securityStatus[0] = 0;
		this$static.settleOnOpenFlag[0] = 0;
		this$static.instrmtAssignmentMethod = 127;
		this$static.maturityTime[0] = 0;
		this$static.couponPaymentDate[0] = 0;
		this$static.restructuringType[0] = 0;
		this$static.seniority[0] = 0;
		this$static.notionalPercentageOutstanding = P7fffffffffffffff_longLit;
		this$static.originalNotionalPercentageOutstanding = P7fffffffffffffff_longLit;
		this$static.attachmentPoint = P7fffffffffffffff_longLit;
		this$static.detachmentPoint = P7fffffffffffffff_longLit;
		this$static.issueDate[0] = 0;
		this$static.repoCollateralSecurityType = P7fffffffffffffff_longLit;
		this$static.repurchaseTerm = P7fffffffffffffff_longLit;
		this$static.repurchaseRate = P7fffffffffffffff_longLit;
		this$static.factor = P7fffffffffffffff_longLit;
		this$static.creditRating[0] = 0;
		this$static.instrRegistry[0] = 0;
		this$static.countryOfIssue[0] = 0;
		this$static.stateOrProvinceOfIssue[0] = 0;
		this$static.localeOfIssue[0] = 0;
		this$static.redemptionDate[0] = 0;
		this$static.strikePrice = P7fffffffffffffff_longLit;
		this$static.strikeCurrency[0] = 0;
		this$static.strikeMultiplier = P7fffffffffffffff_longLit;
		this$static.strikeValue = P7fffffffffffffff_longLit;
		this$static.strikePriceDeterminationMethod = P7fffffffffffffff_longLit;
		this$static.strikePriceBoundaryMethod = P7fffffffffffffff_longLit;
		this$static.strikePriceBoundaryPrecision = P7fffffffffffffff_longLit;
		this$static.underlyingPriceDeterminationMethod = P7fffffffffffffff_longLit;
		this$static.optAttribute = 127;
		this$static.contractMultiplier = P7fffffffffffffff_longLit;
		this$static.minPriceIncrement = P7fffffffffffffff_longLit;
		this$static.unitOfMeasure[0] = 0;
		this$static.timeUnit[0] = 0;
		this$static.minPriceIncrementAmount = P7fffffffffffffff_longLit;
		this$static.unitOfMeasureQty = P7fffffffffffffff_longLit;
		this$static.priceUnitOfMeasure[0] = 0;
		this$static.priceUnitOfMeasureQty = P7fffffffffffffff_longLit;
		this$static.settlMethod = 127;
		this$static.exerciseStyle = P7fffffffffffffff_longLit;
		this$static.optPayoutAmount = P7fffffffffffffff_longLit;
		this$static.priceQuoteMethod[0] = 0;
		this$static.listMethod = P7fffffffffffffff_longLit;
		this$static.capPrice = P7fffffffffffffff_longLit;
		this$static.floorPrice = P7fffffffffffffff_longLit;
		this$static.putOrCall = P7fffffffffffffff_longLit;
		this$static.flexibleIndicator = false;
		this$static.flexProductEligibilityIndicator = false;
		this$static.valuationMethod[0] = 0;
		this$static.contractMultiplierUnit = P7fffffffffffffff_longLit;
		this$static.flowScheduleType = P7fffffffffffffff_longLit;
		this$static.optPayoutType = P7fffffffffffffff_longLit;
		this$static.couponRate = P7fffffffffffffff_longLit;
		this$static.securityExchange[0] = 0;
		this$static.positionLimit = P7fffffffffffffff_longLit;
		this$static.nTPositionLimit = P7fffffffffffffff_longLit;
		this$static.issuer[0] = 0;
		this$static.encodedIssuerLen = P7fffffffffffffff_longLit;
		this$static.encodedIssuer[0] = 0;
		this$static.securityDesc[0] = 0;
		this$static.encodedSecurityDescLen = P7fffffffffffffff_longLit;
		this$static.encodedSecurityDesc[0] = 0;
		this$static.pool[0] = 0;
		this$static.contractSettlMonth[0] = 0;
		this$static.cPProgram = P7fffffffffffffff_longLit;
		this$static.cPRegType[0] = 0;
		this$static.datedDate[0] = 0;
		this$static.interestAccrualDate[0] = 0;
		$clear_111(this$static.secAltIDGrp);
		$clear_116(this$static.securityXML);
		$clear_28(this$static.evntGrp);
		$clear_43(this$static.instrumentParties);
		$clear_19(this$static.complexEvents);
	}

	function $encode_31(this$static, out) {
		$clinit_FixUtils();
		this$static.symbol[0] != 0 && putFixTag_2(out, 55, this$static.symbol, lastIndexTrim(this$static.symbol));
		this$static.symbolSfx[0] != 0 && putFixTag_2(out, 65, this$static.symbolSfx, lastIndexTrim(this$static.symbolSfx));
		this$static.securityID[0] != 0 && putFixTag_2(out, 48, this$static.securityID, lastIndexTrim(this$static.securityID));
		this$static.securityIDSource[0] != 0 && putFixTag_2(out, 22, this$static.securityIDSource, lastIndexTrim(this$static.securityIDSource));
		neq(fromInt(this$static.secAltIDGrp.noSecurityAltID), P7fffffffffffffff_longLit) && $encode_75(this$static.secAltIDGrp, out);
		neq(this$static.product, P7fffffffffffffff_longLit) && putFixTag_0(out, 460, this$static.product);
		this$static.securityGroup[0] != 0 && putFixTag_2(out, 1151, this$static.securityGroup, lastIndexTrim(this$static.securityGroup));
		this$static.productComplex[0] != 0 && putFixTag_2(out, 1227, this$static.productComplex, lastIndexTrim(this$static.productComplex));
		this$static.cFICode[0] != 0 && putFixTag_2(out, 461, this$static.cFICode, lastIndexTrim(this$static.cFICode));
		this$static.securityType[0] != 0 && putFixTag_2(out, 167, this$static.securityType, lastIndexTrim(this$static.securityType));
		this$static.securitySubType[0] != 0 && putFixTag_2(out, 762, this$static.securitySubType, lastIndexTrim(this$static.securitySubType));
		this$static.maturityMonthYear[0] != 0 && putFixTag_1(out, 200, this$static.maturityMonthYear);
		this$static.maturityDate[0] != 0 && putFixTag_1(out, 541, this$static.maturityDate);
		this$static.securityStatus[0] != 0 && putFixTag_2(out, 965, this$static.securityStatus, lastIndexTrim(this$static.securityStatus));
		this$static.settleOnOpenFlag[0] != 0 && putFixTag_2(out, 966, this$static.settleOnOpenFlag, lastIndexTrim(this$static.settleOnOpenFlag));
		this$static.instrmtAssignmentMethod != 127 && putFixTag(out, 1049, this$static.instrmtAssignmentMethod);
		this$static.maturityTime[0] != 0 && putFixTag_1(out, 1079, this$static.maturityTime);
		this$static.couponPaymentDate[0] != 0 && putFixTag_1(out, 224, this$static.couponPaymentDate);
		this$static.restructuringType[0] != 0 && putFixTag_2(out, 1449, this$static.restructuringType, lastIndexTrim(this$static.restructuringType));
		this$static.seniority[0] != 0 && putFixTag_2(out, 1450, this$static.seniority, lastIndexTrim(this$static.seniority));
		neq(this$static.notionalPercentageOutstanding, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1451, this$static.notionalPercentageOutstanding);
		neq(this$static.originalNotionalPercentageOutstanding, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1452, this$static.originalNotionalPercentageOutstanding);
		neq(this$static.attachmentPoint, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1457, this$static.attachmentPoint);
		neq(this$static.detachmentPoint, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1458, this$static.detachmentPoint);
		this$static.issueDate[0] != 0 && putFixTag_1(out, 225, this$static.issueDate);
		neq(this$static.repoCollateralSecurityType, P7fffffffffffffff_longLit) && putFixTag_0(out, 239, this$static.repoCollateralSecurityType);
		neq(this$static.repurchaseTerm, P7fffffffffffffff_longLit) && putFixTag_0(out, 226, this$static.repurchaseTerm);
		neq(this$static.repurchaseRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 227, this$static.repurchaseRate);
		neq(this$static.factor, P7fffffffffffffff_longLit) && putFixFloatTag(out, 228, this$static.factor);
		this$static.creditRating[0] != 0 && putFixTag_2(out, 255, this$static.creditRating, lastIndexTrim(this$static.creditRating));
		this$static.instrRegistry[0] != 0 && putFixTag_2(out, 543, this$static.instrRegistry, lastIndexTrim(this$static.instrRegistry));
		this$static.countryOfIssue[0] != 0 && putFixTag_2(out, 470, this$static.countryOfIssue, lastIndexTrim(this$static.countryOfIssue));
		this$static.stateOrProvinceOfIssue[0] != 0 && putFixTag_2(out, 471, this$static.stateOrProvinceOfIssue, lastIndexTrim(this$static.stateOrProvinceOfIssue));
		this$static.localeOfIssue[0] != 0 && putFixTag_2(out, 472, this$static.localeOfIssue, lastIndexTrim(this$static.localeOfIssue));
		this$static.redemptionDate[0] != 0 && putFixTag_1(out, 240, this$static.redemptionDate);
		neq(this$static.strikePrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 202, this$static.strikePrice);
		this$static.strikeCurrency[0] != 0 && putFixTag_2(out, 947, this$static.strikeCurrency, lastIndexTrim(this$static.strikeCurrency));
		neq(this$static.strikeMultiplier, P7fffffffffffffff_longLit) && putFixFloatTag(out, 967, this$static.strikeMultiplier);
		neq(this$static.strikeValue, P7fffffffffffffff_longLit) && putFixFloatTag(out, 968, this$static.strikeValue);
		neq(this$static.strikePriceDeterminationMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1478, this$static.strikePriceDeterminationMethod);
		neq(this$static.strikePriceBoundaryMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1479, this$static.strikePriceBoundaryMethod);
		neq(this$static.strikePriceBoundaryPrecision, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1480, this$static.strikePriceBoundaryPrecision);
		neq(this$static.underlyingPriceDeterminationMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1481, this$static.underlyingPriceDeterminationMethod);
		this$static.optAttribute != 127 && putFixTag(out, 206, this$static.optAttribute);
		neq(this$static.contractMultiplier, P7fffffffffffffff_longLit) && putFixFloatTag(out, 231, this$static.contractMultiplier);
		neq(this$static.minPriceIncrement, P7fffffffffffffff_longLit) && putFixFloatTag(out, 969, this$static.minPriceIncrement);
		this$static.unitOfMeasure[0] != 0 && putFixTag_2(out, 996, this$static.unitOfMeasure, lastIndexTrim(this$static.unitOfMeasure));
		this$static.timeUnit[0] != 0 && putFixTag_2(out, 997, this$static.timeUnit, lastIndexTrim(this$static.timeUnit));
		neq(this$static.minPriceIncrementAmount, P7fffffffffffffff_longLit) && putFixTag_0(out, 1146, this$static.minPriceIncrementAmount);
		neq(this$static.unitOfMeasureQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1147, this$static.unitOfMeasureQty);
		this$static.priceUnitOfMeasure[0] != 0 && putFixTag_2(out, 1191, this$static.priceUnitOfMeasure, lastIndexTrim(this$static.priceUnitOfMeasure));
		neq(this$static.priceUnitOfMeasureQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1192, this$static.priceUnitOfMeasureQty);
		this$static.settlMethod != 127 && putFixTag(out, 1193, this$static.settlMethod);
		neq(this$static.exerciseStyle, P7fffffffffffffff_longLit) && putFixTag_0(out, 1194, this$static.exerciseStyle);
		neq(this$static.optPayoutAmount, P7fffffffffffffff_longLit) && putFixTag_0(out, 1195, this$static.optPayoutAmount);
		this$static.priceQuoteMethod[0] != 0 && putFixTag_2(out, 1196, this$static.priceQuoteMethod, lastIndexTrim(this$static.priceQuoteMethod));
		neq(this$static.listMethod, P7fffffffffffffff_longLit) && putFixTag_0(out, 1198, this$static.listMethod);
		neq(this$static.capPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1199, this$static.capPrice);
		neq(this$static.floorPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1200, this$static.floorPrice);
		neq(this$static.putOrCall, P7fffffffffffffff_longLit) && putFixTag_0(out, 201, this$static.putOrCall);
		this$static.flexibleIndicator && putFixTag(out, 1244, this$static.flexibleIndicator ? 89 : 78);
		this$static.flexProductEligibilityIndicator && putFixTag(out, 1242, this$static.flexProductEligibilityIndicator ? 89 : 78);
		this$static.valuationMethod[0] != 0 && putFixTag_2(out, 1197, this$static.valuationMethod, lastIndexTrim(this$static.valuationMethod));
		neq(this$static.contractMultiplierUnit, P7fffffffffffffff_longLit) && putFixTag_0(out, 1435, this$static.contractMultiplierUnit);
		neq(this$static.flowScheduleType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1439, this$static.flowScheduleType);
		neq(this$static.optPayoutType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1482, this$static.optPayoutType);
		neq(this$static.couponRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 223, this$static.couponRate);
		this$static.securityExchange[0] != 0 && putFixTag_2(out, 207, this$static.securityExchange, lastIndexTrim(this$static.securityExchange));
		neq(this$static.positionLimit, P7fffffffffffffff_longLit) && putFixTag_0(out, 970, this$static.positionLimit);
		neq(this$static.nTPositionLimit, P7fffffffffffffff_longLit) && putFixTag_0(out, 971, this$static.nTPositionLimit);
		this$static.issuer[0] != 0 && putFixTag_2(out, 106, this$static.issuer, lastIndexTrim(this$static.issuer));
		neq(this$static.encodedIssuerLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 348, this$static.encodedIssuerLen);
		this$static.encodedIssuer[0] != 0 && putFixTag_2(out, 349, this$static.encodedIssuer, lastIndexTrim(this$static.encodedIssuer));
		this$static.securityDesc[0] != 0 && putFixTag_2(out, 107, this$static.securityDesc, lastIndexTrim(this$static.securityDesc));
		neq(this$static.encodedSecurityDescLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 350, this$static.encodedSecurityDescLen);
		this$static.encodedSecurityDesc[0] != 0 && putFixTag_2(out, 351, this$static.encodedSecurityDesc, lastIndexTrim(this$static.encodedSecurityDesc));
		neq(this$static.securityXML.securityXMLLen, P7fffffffffffffff_longLit) && $encode_77(this$static.securityXML, out);
		this$static.pool[0] != 0 && putFixTag_2(out, 691, this$static.pool, lastIndexTrim(this$static.pool));
		this$static.contractSettlMonth[0] != 0 && putFixTag_1(out, 667, this$static.contractSettlMonth);
		neq(this$static.cPProgram, P7fffffffffffffff_longLit) && putFixTag_0(out, 875, this$static.cPProgram);
		this$static.cPRegType[0] != 0 && putFixTag_2(out, 876, this$static.cPRegType, lastIndexTrim(this$static.cPRegType));
		neq(fromInt(this$static.evntGrp.noEvents), P7fffffffffffffff_longLit) && $encode_23(this$static.evntGrp, out);
		this$static.datedDate[0] != 0 && putFixTag_1(out, 873, this$static.datedDate);
		this$static.interestAccrualDate[0] != 0 && putFixTag_1(out, 874, this$static.interestAccrualDate);
		neq(fromInt(this$static.instrumentParties.noInstrumentParties), P7fffffffffffffff_longLit) && $encode_34(this$static.instrumentParties, out);
		neq(fromInt(this$static.complexEvents.noComplexEvents), P7fffffffffffffff_longLit) && $encode_18(this$static.complexEvents, out);
	}

	function $equals_34(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrument)) {
			$print_19(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.symbol, msg.symbol)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.symbolSfx, msg.symbolSfx)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityID, msg.securityID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityIDSource, msg.securityIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_107(this$static.secAltIDGrp, msg.secAltIDGrp) || (ret = false);
		if (neq(this$static.product, msg.product)) {
			ret = false;
			$print_19((valueOf_1(this$static.product), valueOf_1(msg.product)));
		}
		if (!equals_12(this$static.securityGroup, msg.securityGroup)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.productComplex, msg.productComplex)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.cFICode, msg.cFICode)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityType, msg.securityType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securitySubType, msg.securitySubType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.maturityMonthYear, msg.maturityMonthYear)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityStatus, msg.securityStatus)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.settleOnOpenFlag, msg.settleOnOpenFlag)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.instrmtAssignmentMethod != msg.instrmtAssignmentMethod) {
			ret = false;
			$print_19((valueOf(this$static.instrmtAssignmentMethod), valueOf(msg.instrmtAssignmentMethod)));
		}
		if (!equals_12(this$static.restructuringType, msg.restructuringType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.seniority, msg.seniority)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.notionalPercentageOutstanding, msg.notionalPercentageOutstanding)) {
			ret = false;
			$print_19((valueOf_1(this$static.notionalPercentageOutstanding), valueOf_1(msg.notionalPercentageOutstanding)));
		}
		if (neq(this$static.originalNotionalPercentageOutstanding, msg.originalNotionalPercentageOutstanding)) {
			ret = false;
			$print_19((valueOf_1(this$static.originalNotionalPercentageOutstanding), valueOf_1(msg.originalNotionalPercentageOutstanding)));
		}
		if (neq(this$static.attachmentPoint, msg.attachmentPoint)) {
			ret = false;
			$print_19((valueOf_1(this$static.attachmentPoint), valueOf_1(msg.attachmentPoint)));
		}
		if (neq(this$static.detachmentPoint, msg.detachmentPoint)) {
			ret = false;
			$print_19((valueOf_1(this$static.detachmentPoint), valueOf_1(msg.detachmentPoint)));
		}
		if (neq(this$static.repoCollateralSecurityType, msg.repoCollateralSecurityType)) {
			ret = false;
			$print_19((valueOf_1(this$static.repoCollateralSecurityType), valueOf_1(msg.repoCollateralSecurityType)));
		}
		if (neq(this$static.repurchaseTerm, msg.repurchaseTerm)) {
			ret = false;
			$print_19((valueOf_1(this$static.repurchaseTerm), valueOf_1(msg.repurchaseTerm)));
		}
		if (neq(this$static.repurchaseRate, msg.repurchaseRate)) {
			ret = false;
			$print_19((valueOf_1(this$static.repurchaseRate), valueOf_1(msg.repurchaseRate)));
		}
		if (neq(this$static.factor, msg.factor)) {
			ret = false;
			$print_19((valueOf_1(this$static.factor), valueOf_1(msg.factor)));
		}
		if (!equals_12(this$static.creditRating, msg.creditRating)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.instrRegistry, msg.instrRegistry)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.countryOfIssue, msg.countryOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.stateOrProvinceOfIssue, msg.stateOrProvinceOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.localeOfIssue, msg.localeOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.strikePrice, msg.strikePrice)) {
			ret = false;
			$print_19((valueOf_1(this$static.strikePrice), valueOf_1(msg.strikePrice)));
		}
		if (!equals_12(this$static.strikeCurrency, msg.strikeCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.strikeMultiplier, msg.strikeMultiplier)) {
			ret = false;
			$print_19((valueOf_1(this$static.strikeMultiplier), valueOf_1(msg.strikeMultiplier)));
		}
		if (neq(this$static.strikeValue, msg.strikeValue)) {
			ret = false;
			$print_19((valueOf_1(this$static.strikeValue), valueOf_1(msg.strikeValue)));
		}
		if (neq(this$static.strikePriceDeterminationMethod, msg.strikePriceDeterminationMethod)) {
			ret = false;
			$print_19((valueOf_1(this$static.strikePriceDeterminationMethod), valueOf_1(msg.strikePriceDeterminationMethod)));
		}
		if (neq(this$static.strikePriceBoundaryMethod, msg.strikePriceBoundaryMethod)) {
			ret = false;
			$print_19((valueOf_1(this$static.strikePriceBoundaryMethod), valueOf_1(msg.strikePriceBoundaryMethod)));
		}
		if (neq(this$static.strikePriceBoundaryPrecision, msg.strikePriceBoundaryPrecision)) {
			ret = false;
			$print_19((valueOf_1(this$static.strikePriceBoundaryPrecision), valueOf_1(msg.strikePriceBoundaryPrecision)));
		}
		if (neq(this$static.underlyingPriceDeterminationMethod, msg.underlyingPriceDeterminationMethod)) {
			ret = false;
			$print_19((valueOf_1(this$static.underlyingPriceDeterminationMethod), valueOf_1(msg.underlyingPriceDeterminationMethod)));
		}
		if (this$static.optAttribute != msg.optAttribute) {
			ret = false;
			$print_19((valueOf(this$static.optAttribute), valueOf(msg.optAttribute)));
		}
		if (neq(this$static.contractMultiplier, msg.contractMultiplier)) {
			ret = false;
			$print_19((valueOf_1(this$static.contractMultiplier), valueOf_1(msg.contractMultiplier)));
		}
		if (neq(this$static.minPriceIncrement, msg.minPriceIncrement)) {
			ret = false;
			$print_19((valueOf_1(this$static.minPriceIncrement), valueOf_1(msg.minPriceIncrement)));
		}
		if (!equals_12(this$static.unitOfMeasure, msg.unitOfMeasure)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.timeUnit, msg.timeUnit)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.minPriceIncrementAmount, msg.minPriceIncrementAmount)) {
			ret = false;
			$print_19((valueOf_1(this$static.minPriceIncrementAmount), valueOf_1(msg.minPriceIncrementAmount)));
		}
		if (neq(this$static.unitOfMeasureQty, msg.unitOfMeasureQty)) {
			ret = false;
			$print_19((valueOf_1(this$static.unitOfMeasureQty), valueOf_1(msg.unitOfMeasureQty)));
		}
		if (!equals_12(this$static.priceUnitOfMeasure, msg.priceUnitOfMeasure)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.priceUnitOfMeasureQty, msg.priceUnitOfMeasureQty)) {
			ret = false;
			$print_19((valueOf_1(this$static.priceUnitOfMeasureQty), valueOf_1(msg.priceUnitOfMeasureQty)));
		}
		if (this$static.settlMethod != msg.settlMethod) {
			ret = false;
			$print_19((valueOf(this$static.settlMethod), valueOf(msg.settlMethod)));
		}
		if (neq(this$static.exerciseStyle, msg.exerciseStyle)) {
			ret = false;
			$print_19((valueOf_1(this$static.exerciseStyle), valueOf_1(msg.exerciseStyle)));
		}
		if (neq(this$static.optPayoutAmount, msg.optPayoutAmount)) {
			ret = false;
			$print_19((valueOf_1(this$static.optPayoutAmount), valueOf_1(msg.optPayoutAmount)));
		}
		if (!equals_12(this$static.priceQuoteMethod, msg.priceQuoteMethod)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.listMethod, msg.listMethod)) {
			ret = false;
			$print_19((valueOf_1(this$static.listMethod), valueOf_1(msg.listMethod)));
		}
		if (neq(this$static.capPrice, msg.capPrice)) {
			ret = false;
			$print_19((valueOf_1(this$static.capPrice), valueOf_1(msg.capPrice)));
		}
		if (neq(this$static.floorPrice, msg.floorPrice)) {
			ret = false;
			$print_19((valueOf_1(this$static.floorPrice), valueOf_1(msg.floorPrice)));
		}
		if (neq(this$static.putOrCall, msg.putOrCall)) {
			ret = false;
			$print_19((valueOf_1(this$static.putOrCall), valueOf_1(msg.putOrCall)));
		}
		if (this$static.flexibleIndicator != msg.flexibleIndicator) {
			ret = false;
			$print_19($clinit_Boolean());
		}
		if (this$static.flexProductEligibilityIndicator != msg.flexProductEligibilityIndicator) {
			ret = false;
			$print_19($clinit_Boolean());
		}
		if (!equals_12(this$static.valuationMethod, msg.valuationMethod)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.contractMultiplierUnit, msg.contractMultiplierUnit)) {
			ret = false;
			$print_19((valueOf_1(this$static.contractMultiplierUnit), valueOf_1(msg.contractMultiplierUnit)));
		}
		if (neq(this$static.flowScheduleType, msg.flowScheduleType)) {
			ret = false;
			$print_19((valueOf_1(this$static.flowScheduleType), valueOf_1(msg.flowScheduleType)));
		}
		if (neq(this$static.optPayoutType, msg.optPayoutType)) {
			ret = false;
			$print_19((valueOf_1(this$static.optPayoutType), valueOf_1(msg.optPayoutType)));
		}
		if (neq(this$static.couponRate, msg.couponRate)) {
			ret = false;
			$print_19((valueOf_1(this$static.couponRate), valueOf_1(msg.couponRate)));
		}
		if (!equals_12(this$static.securityExchange, msg.securityExchange)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.positionLimit, msg.positionLimit)) {
			ret = false;
			$print_19((valueOf_1(this$static.positionLimit), valueOf_1(msg.positionLimit)));
		}
		if (neq(this$static.nTPositionLimit, msg.nTPositionLimit)) {
			ret = false;
			$print_19((valueOf_1(this$static.nTPositionLimit), valueOf_1(msg.nTPositionLimit)));
		}
		if (!equals_12(this$static.issuer, msg.issuer)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedIssuerLen, msg.encodedIssuerLen)) {
			ret = false;
			$print_19((valueOf_1(this$static.encodedIssuerLen), valueOf_1(msg.encodedIssuerLen)));
		}
		if (!equals_12(this$static.encodedIssuer, msg.encodedIssuer)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityDesc, msg.securityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedSecurityDescLen, msg.encodedSecurityDescLen)) {
			ret = false;
			$print_19((valueOf_1(this$static.encodedSecurityDescLen), valueOf_1(msg.encodedSecurityDescLen)));
		}
		if (!equals_12(this$static.encodedSecurityDesc, msg.encodedSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_112(this$static.securityXML, msg.securityXML) || (ret = false);
		if (!equals_12(this$static.pool, msg.pool)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.contractSettlMonth, msg.contractSettlMonth)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.cPProgram, msg.cPProgram)) {
			ret = false;
			$print_19((valueOf_1(this$static.cPProgram), valueOf_1(msg.cPProgram)));
		}
		if (!equals_12(this$static.cPRegType, msg.cPRegType)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_18(this$static.evntGrp, msg.evntGrp) || (ret = false);
		$equals_37(this$static.instrumentParties, msg.instrumentParties) || (ret = false);
		$equals_9(this$static.complexEvents, msg.complexEvents) || (ret = false);
		return ret;
	}

	function $getAll_40(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 55:
				this$static.symbol = getTagStringValue(null, 55, buf, this$static.symbol);
				break;
			case 65:
				this$static.symbolSfx = getTagStringValue(null, 65, buf, this$static.symbolSfx);
				if (!isValid_157(this$static.symbolSfx)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.symbolSfx + ') for tag'), P41_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 48:
				this$static.securityID = getTagStringValue(null, 48, buf, this$static.securityID);
				break;
			case 22:
				this$static.securityIDSource = getTagStringValue(null, 22, buf, this$static.securityIDSource);
				if (!isValid_137(this$static.securityIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.securityIDSource + ') for tag'), P16_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 454:
				this$static.secAltIDGrp.noSecurityAltID = getTagIntValue(null, 454, buf);
				$getAll_80(this$static.secAltIDGrp, this$static.secAltIDGrp.noSecurityAltID, buf);
				break;
			case 460:
				this$static.product = fromInt(getTagIntValue(null, 460, buf));
				if (!isValid_121(this$static.product)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.product) + ') for tag'), P1cc_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1151:
				this$static.securityGroup = getTagStringValue(null, 1151, buf, this$static.securityGroup);
				break;
			case 1227:
				this$static.productComplex = getTagStringValue(null, 1227, buf, this$static.productComplex);
				break;
			case 461:
				this$static.cFICode = getTagStringValue(null, 461, buf, this$static.cFICode);
				break;
			case 167:
				this$static.securityType = getTagStringValue(null, 167, buf, this$static.securityType);
				if (!isValid_143(this$static.securityType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.securityType + ') for tag'), Pa7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 762:
				this$static.securitySubType = getTagStringValue(null, 762, buf, this$static.securitySubType);
				break;
			case 200:
				this$static.maturityMonthYear = getTagStringValue(null, 200, buf, this$static.maturityMonthYear);
				break;
			case 541:
				this$static.maturityDate = getTagStringValue(null, 541, buf, this$static.maturityDate);
				break;
			case 965:
				this$static.securityStatus = getTagStringValue(null, 965, buf, this$static.securityStatus);
				if (!isValid_142(this$static.securityStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.securityStatus + ') for tag'), P3c5_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 966:
				this$static.settleOnOpenFlag = getTagStringValue(null, 966, buf, this$static.settleOnOpenFlag);
				break;
			case 1049:
				this$static.instrmtAssignmentMethod = getTagCharValue(null, 1049, buf);
				break;
			case 1079:
				this$static.maturityTime = getTagStringValue(null, 1079, buf, this$static.maturityTime);
				break;
			case 224:
				this$static.couponPaymentDate = getTagStringValue(null, 224, buf, this$static.couponPaymentDate);
				break;
			case 1449:
				this$static.restructuringType = getTagStringValue(null, 1449, buf, this$static.restructuringType);
				if (!isValid_135(this$static.restructuringType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.restructuringType + ') for tag'), P5a9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1450:
				this$static.seniority = getTagStringValue(null, 1450, buf, this$static.seniority);
				if (!isValid_144(this$static.seniority)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.seniority + ') for tag'), P5aa_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1451:
				this$static.notionalPercentageOutstanding = getTagFloatValue(null, 1451, buf);
				break;
			case 1452:
				this$static.originalNotionalPercentageOutstanding = getTagFloatValue(null, 1452, buf);
				break;
			case 1457:
				this$static.attachmentPoint = getTagFloatValue(null, 1457, buf);
				break;
			case 1458:
				this$static.detachmentPoint = getTagFloatValue(null, 1458, buf);
				break;
			case 225:
				this$static.issueDate = getTagStringValue(null, 225, buf, this$static.issueDate);
				break;
			case 239:
				this$static.repoCollateralSecurityType = fromInt(getTagIntValue(null, 239, buf));
				break;
			case 226:
				this$static.repurchaseTerm = fromInt(getTagIntValue(null, 226, buf));
				break;
			case 227:
				this$static.repurchaseRate = getTagFloatValue(null, 227, buf);
				break;
			case 228:
				this$static.factor = getTagFloatValue(null, 228, buf);
				break;
			case 255:
				this$static.creditRating = getTagStringValue(null, 255, buf, this$static.creditRating);
				break;
			case 543:
				this$static.instrRegistry = getTagStringValue(null, 543, buf, this$static.instrRegistry);
				break;
			case 470:
				this$static.countryOfIssue = getTagStringValue(null, 470, buf, this$static.countryOfIssue);
				break;
			case 471:
				this$static.stateOrProvinceOfIssue = getTagStringValue(null, 471, buf, this$static.stateOrProvinceOfIssue);
				break;
			case 472:
				this$static.localeOfIssue = getTagStringValue(null, 472, buf, this$static.localeOfIssue);
				break;
			case 240:
				this$static.redemptionDate = getTagStringValue(null, 240, buf, this$static.redemptionDate);
				break;
			case 202:
				this$static.strikePrice = getTagFloatValue(null, 202, buf);
				break;
			case 947:
				this$static.strikeCurrency = getTagStringValue(null, 947, buf, this$static.strikeCurrency);
				break;
			case 967:
				this$static.strikeMultiplier = getTagFloatValue(null, 967, buf);
				break;
			case 968:
				this$static.strikeValue = getTagFloatValue(null, 968, buf);
				break;
			case 1478:
				this$static.strikePriceDeterminationMethod = fromInt(getTagIntValue(null, 1478, buf));
				if (!isValid_155(this$static.strikePriceDeterminationMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.strikePriceDeterminationMethod) + ') for tag'), P5c6_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1479:
				this$static.strikePriceBoundaryMethod = fromInt(getTagIntValue(null, 1479, buf));
				if (!isValid_154(this$static.strikePriceBoundaryMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.strikePriceBoundaryMethod) + ') for tag'), P5c7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1480:
				this$static.strikePriceBoundaryPrecision = getTagFloatValue(null, 1480, buf);
				break;
			case 1481:
				this$static.underlyingPriceDeterminationMethod = fromInt(getTagIntValue(null, 1481, buf));
				if (!isValid_179(this$static.underlyingPriceDeterminationMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.underlyingPriceDeterminationMethod) + ') for tag'), P5c9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 206:
				this$static.optAttribute = getTagCharValue(null, 206, buf);
				break;
			case 231:
				this$static.contractMultiplier = getTagFloatValue(null, 231, buf);
				break;
			case 969:
				this$static.minPriceIncrement = getTagFloatValue(null, 969, buf);
				break;
			case 996:
				this$static.unitOfMeasure = getTagStringValue(null, 996, buf, this$static.unitOfMeasure);
				if (!isValid_181(this$static.unitOfMeasure)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.unitOfMeasure + ') for tag'), P3e4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 997:
				this$static.timeUnit = getTagStringValue(null, 997, buf, this$static.timeUnit);
				if (!isValid_163(this$static.timeUnit)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.timeUnit + ') for tag'), P3e5_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1146:
				this$static.minPriceIncrementAmount = getTagFloatValue(null, 1146, buf);
				break;
			case 1147:
				this$static.unitOfMeasureQty = getTagFloatValue(null, 1147, buf);
				break;
			case 1191:
				this$static.priceUnitOfMeasure = getTagStringValue(null, 1191, buf, this$static.priceUnitOfMeasure);
				break;
			case 1192:
				this$static.priceUnitOfMeasureQty = getTagFloatValue(null, 1192, buf);
				break;
			case 1193:
				this$static.settlMethod = getTagCharValue(null, 1193, buf);
				if (!isValid_147(this$static.settlMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlMethod + ') for tag'), P4a9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1194:
				this$static.exerciseStyle = fromInt(getTagIntValue(null, 1194, buf));
				if (!isValid_54(this$static.exerciseStyle)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.exerciseStyle) + ') for tag'), P4aa_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1195:
				this$static.optPayoutAmount = getTagFloatValue(null, 1195, buf);
				break;
			case 1196:
				this$static.priceQuoteMethod = getTagStringValue(null, 1196, buf, this$static.priceQuoteMethod);
				if (!isValid_117(this$static.priceQuoteMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.priceQuoteMethod + ') for tag'), P4ac_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1198:
				this$static.listMethod = fromInt(getTagIntValue(null, 1198, buf));
				if (!isValid_70(this$static.listMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.listMethod) + ') for tag'), P4ae_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1199:
				this$static.capPrice = getTagFloatValue(null, 1199, buf);
				break;
			case 1200:
				this$static.floorPrice = getTagFloatValue(null, 1200, buf);
				break;
			case 201:
				this$static.putOrCall = fromInt(getTagIntValue(null, 201, buf));
				if (!isValid_122(this$static.putOrCall)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.putOrCall) + ') for tag'), Pc9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1244:
				this$static.flexibleIndicator = getTagBooleanValue(null, 1244, buf);
				break;
			case 1242:
				this$static.flexProductEligibilityIndicator = getTagBooleanValue(null, 1242, buf);
				break;
			case 1197:
				this$static.valuationMethod = getTagStringValue(null, 1197, buf, this$static.valuationMethod);
				if (!isValid_184(this$static.valuationMethod)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.valuationMethod + ') for tag'), P4ad_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1435:
				this$static.contractMultiplierUnit = fromInt(getTagIntValue(null, 1435, buf));
				if (!isValid_24(this$static.contractMultiplierUnit)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.contractMultiplierUnit) + ') for tag'), P59b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1439:
				this$static.flowScheduleType = fromInt(getTagIntValue(null, 1439, buf));
				if (!isValid_57(this$static.flowScheduleType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.flowScheduleType) + ') for tag'), P59f_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1482:
				this$static.optPayoutType = fromInt(getTagIntValue(null, 1482, buf));
				if (!isValid_86(this$static.optPayoutType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.optPayoutType) + ') for tag'), P5ca_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 223:
				this$static.couponRate = getTagFloatValue(null, 223, buf);
				break;
			case 207:
				this$static.securityExchange = getTagStringValue(null, 207, buf, this$static.securityExchange);
				break;
			case 970:
				this$static.positionLimit = fromInt(getTagIntValue(null, 970, buf));
				break;
			case 971:
				this$static.nTPositionLimit = fromInt(getTagIntValue(null, 971, buf));
				break;
			case 106:
				this$static.issuer = getTagStringValue(null, 106, buf, this$static.issuer);
				break;
			case 348:
				this$static.encodedIssuerLen = fromInt(getTagIntValue(null, 348, buf));
				break;
			case 349:
				this$static.encodedIssuer = getTagStringValue(null, 349, buf, this$static.encodedIssuer);
				break;
			case 107:
				this$static.securityDesc = getTagStringValue(null, 107, buf, this$static.securityDesc);
				break;
			case 350:
				this$static.encodedSecurityDescLen = fromInt(getTagIntValue(null, 350, buf));
				break;
			case 351:
				this$static.encodedSecurityDesc = getTagStringValue(null, 351, buf, this$static.encodedSecurityDesc);
				break;
			case 1184:
				$getAll_83(this$static.securityXML, 1184, buf);
				break;
			case 691:
				this$static.pool = getTagStringValue(null, 691, buf, this$static.pool);
				break;
			case 667:
				this$static.contractSettlMonth = getTagStringValue(null, 667, buf, this$static.contractSettlMonth);
				break;
			case 875:
				this$static.cPProgram = fromInt(getTagIntValue(null, 875, buf));
				if (!isValid_8(this$static.cPProgram)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.cPProgram) + ') for tag'), P36b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 876:
				this$static.cPRegType = getTagStringValue(null, 876, buf, this$static.cPRegType);
				break;
			case 864:
				this$static.evntGrp.noEvents = getTagIntValue(null, 864, buf);
				$getAll_32(this$static.evntGrp, this$static.evntGrp.noEvents, buf);
				break;
			case 873:
				this$static.datedDate = getTagStringValue(null, 873, buf, this$static.datedDate);
				break;
			case 874:
				this$static.interestAccrualDate = getTagStringValue(null, 874, buf, this$static.interestAccrualDate);
				break;
			case 1018:
				this$static.instrumentParties.noInstrumentParties = getTagIntValue(null, 1018, buf);
				$getAll_43(this$static.instrumentParties, this$static.instrumentParties.noInstrumentParties, buf);
				break;
			case 1483:
				this$static.complexEvents.noComplexEvents = getTagIntValue(null, 1483, buf);
				$getAll_27(this$static.complexEvents, this$static.complexEvents.noComplexEvents, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $isSet_1(this$static) {
		$clinit_FixUtils();
		if (this$static.symbol[0] != 0) return true;
		if (this$static.symbolSfx[0] != 0) return true;
		if (this$static.securityID[0] != 0) return true;
		if (this$static.securityIDSource[0] != 0) return true;
		if (neq(fromInt(this$static.secAltIDGrp.noSecurityAltID), P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.product, P7fffffffffffffff_longLit)) return true;
		if (this$static.securityGroup[0] != 0) return true;
		if (this$static.productComplex[0] != 0) return true;
		if (this$static.cFICode[0] != 0) return true;
		if (this$static.securityType[0] != 0) return true;
		if (this$static.securitySubType[0] != 0) return true;
		if (this$static.maturityMonthYear[0] != 0) return true;
		if (this$static.maturityDate[0] != 0) return true;
		if (this$static.securityStatus[0] != 0) return true;
		if (this$static.settleOnOpenFlag[0] != 0) return true;
		if (this$static.instrmtAssignmentMethod != 127) return true;
		if (this$static.maturityTime[0] != 0) return true;
		if (this$static.couponPaymentDate[0] != 0) return true;
		if (this$static.restructuringType[0] != 0) return true;
		if (this$static.seniority[0] != 0) return true;
		if (neq(this$static.notionalPercentageOutstanding, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.originalNotionalPercentageOutstanding, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.attachmentPoint, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.detachmentPoint, P7fffffffffffffff_longLit)) return true;
		if (this$static.issueDate[0] != 0) return true;
		if (neq(this$static.repoCollateralSecurityType, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.repurchaseTerm, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.repurchaseRate, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.factor, P7fffffffffffffff_longLit)) return true;
		if (this$static.creditRating[0] != 0) return true;
		if (this$static.instrRegistry[0] != 0) return true;
		if (this$static.countryOfIssue[0] != 0) return true;
		if (this$static.stateOrProvinceOfIssue[0] != 0) return true;
		if (this$static.localeOfIssue[0] != 0) return true;
		if (this$static.redemptionDate[0] != 0) return true;
		if (neq(this$static.strikePrice, P7fffffffffffffff_longLit)) return true;
		if (this$static.strikeCurrency[0] != 0) return true;
		if (neq(this$static.strikeMultiplier, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.strikeValue, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.strikePriceDeterminationMethod, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.strikePriceBoundaryMethod, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.strikePriceBoundaryPrecision, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.underlyingPriceDeterminationMethod, P7fffffffffffffff_longLit)) return true;
		if (this$static.optAttribute != 127) return true;
		if (neq(this$static.contractMultiplier, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.minPriceIncrement, P7fffffffffffffff_longLit)) return true;
		if (this$static.unitOfMeasure[0] != 0) return true;
		if (this$static.timeUnit[0] != 0) return true;
		if (neq(this$static.minPriceIncrementAmount, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.unitOfMeasureQty, P7fffffffffffffff_longLit)) return true;
		if (this$static.priceUnitOfMeasure[0] != 0) return true;
		if (neq(this$static.priceUnitOfMeasureQty, P7fffffffffffffff_longLit)) return true;
		if (this$static.settlMethod != 127) return true;
		if (neq(this$static.exerciseStyle, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.optPayoutAmount, P7fffffffffffffff_longLit)) return true;
		if (this$static.priceQuoteMethod[0] != 0) return true;
		if (neq(this$static.listMethod, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.capPrice, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.floorPrice, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.putOrCall, P7fffffffffffffff_longLit)) return true;
		if (this$static.flexibleIndicator) return true;
		if (this$static.flexProductEligibilityIndicator) return true;
		if (this$static.valuationMethod[0] != 0) return true;
		if (neq(this$static.contractMultiplierUnit, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.flowScheduleType, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.optPayoutType, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.couponRate, P7fffffffffffffff_longLit)) return true;
		if (this$static.securityExchange[0] != 0) return true;
		if (neq(this$static.positionLimit, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.nTPositionLimit, P7fffffffffffffff_longLit)) return true;
		if (this$static.issuer[0] != 0) return true;
		if (neq(this$static.encodedIssuerLen, P7fffffffffffffff_longLit)) return true;
		if (this$static.encodedIssuer[0] != 0) return true;
		if (this$static.securityDesc[0] != 0) return true;
		if (neq(this$static.encodedSecurityDescLen, P7fffffffffffffff_longLit)) return true;
		if (this$static.encodedSecurityDesc[0] != 0) return true;
		if (neq(this$static.securityXML.securityXMLLen, P7fffffffffffffff_longLit)) return true;
		if (this$static.pool[0] != 0) return true;
		if (this$static.contractSettlMonth[0] != 0) return true;
		if (neq(this$static.cPProgram, P7fffffffffffffff_longLit)) return true;
		if (this$static.cPRegType[0] != 0) return true;
		if (neq(fromInt(this$static.evntGrp.noEvents), P7fffffffffffffff_longLit)) return true;
		if (this$static.datedDate[0] != 0) return true;
		if (this$static.interestAccrualDate[0] != 0) return true;
		if (neq(fromInt(this$static.instrumentParties.noInstrumentParties), P7fffffffffffffff_longLit)) return true;
		if (neq(fromInt(this$static.complexEvents.noComplexEvents), P7fffffffffffffff_longLit)) return true;
		return false;
	}

	function $print_19() {
		$clinit_FixMessage();
	}

	function $toString_35(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.symbol[0] != 0 && (s += 'Symbol(55)=' + $trim(_String(this$static.symbol)) + charToString(sep));
		this$static.symbolSfx[0] != 0 && (s += 'SymbolSfx(65)=' + $trim(_String(this$static.symbolSfx)) + charToString(sep));
		this$static.securityID[0] != 0 && (s += 'SecurityID(48)=' + $trim(_String(this$static.securityID)) + charToString(sep));
		this$static.securityIDSource[0] != 0 && (s += 'SecurityIDSource(22)=' + $trim(_String(this$static.securityIDSource)) + charToString(sep));
		neq(fromInt(this$static.secAltIDGrp.noSecurityAltID), P7fffffffffffffff_longLit) && (s += $trim($toString_108(this$static.secAltIDGrp)));
		neq(this$static.product, P7fffffffffffffff_longLit) && (s += 'Product(460)=' + $trim('' + toString_183(this$static.product)) + charToString(sep));
		this$static.securityGroup[0] != 0 && (s += 'SecurityGroup(1151)=' + $trim(_String(this$static.securityGroup)) + charToString(sep));
		this$static.productComplex[0] != 0 && (s += 'ProductComplex(1227)=' + $trim(_String(this$static.productComplex)) + charToString(sep));
		this$static.cFICode[0] != 0 && (s += 'CFICode(461)=' + $trim(_String(this$static.cFICode)) + charToString(sep));
		this$static.securityType[0] != 0 && (s += 'SecurityType(167)=' + $trim(_String(this$static.securityType)) + charToString(sep));
		this$static.securitySubType[0] != 0 && (s += 'SecuritySubType(762)=' + $trim(_String(this$static.securitySubType)) + charToString(sep));
		this$static.maturityMonthYear[0] != 0 && (s += 'MaturityMonthYear(200)=' + $trim(_String(this$static.maturityMonthYear)) + charToString(sep));
		this$static.maturityDate[0] != 0 && (s += 'MaturityDate(541)=' + $trim(_String(this$static.maturityDate)) + charToString(sep));
		this$static.securityStatus[0] != 0 && (s += 'SecurityStatus(965)=' + $trim(_String(this$static.securityStatus)) + charToString(sep));
		this$static.settleOnOpenFlag[0] != 0 && (s += 'SettleOnOpenFlag(966)=' + $trim(_String(this$static.settleOnOpenFlag)) + charToString(sep));
		this$static.instrmtAssignmentMethod != 127 && (s += 'InstrmtAssignmentMethod(1049)=' + $trim('' + this$static.instrmtAssignmentMethod) + charToString(sep));
		this$static.maturityTime[0] != 0 && (s += 'MaturityTime(1079)=' + $trim(_String(this$static.maturityTime)) + charToString(sep));
		this$static.couponPaymentDate[0] != 0 && (s += 'CouponPaymentDate(224)=' + $trim(_String(this$static.couponPaymentDate)) + charToString(sep));
		this$static.restructuringType[0] != 0 && (s += 'RestructuringType(1449)=' + $trim(_String(this$static.restructuringType)) + charToString(sep));
		this$static.seniority[0] != 0 && (s += 'Seniority(1450)=' + $trim(_String(this$static.seniority)) + charToString(sep));
		neq(this$static.notionalPercentageOutstanding, P7fffffffffffffff_longLit) && (s += 'NotionalPercentageOutstanding(1451)=' + $trim('' + toString_183(this$static.notionalPercentageOutstanding)) + charToString(sep));
		neq(this$static.originalNotionalPercentageOutstanding, P7fffffffffffffff_longLit) && (s += 'OriginalNotionalPercentageOutstanding(1452)=' + $trim('' + toString_183(this$static.originalNotionalPercentageOutstanding)) + charToString(sep));
		neq(this$static.attachmentPoint, P7fffffffffffffff_longLit) && (s += 'AttachmentPoint(1457)=' + $trim('' + toString_183(this$static.attachmentPoint)) + charToString(sep));
		neq(this$static.detachmentPoint, P7fffffffffffffff_longLit) && (s += 'DetachmentPoint(1458)=' + $trim('' + toString_183(this$static.detachmentPoint)) + charToString(sep));
		this$static.issueDate[0] != 0 && (s += 'IssueDate(225)=' + $trim(_String(this$static.issueDate)) + charToString(sep));
		neq(this$static.repoCollateralSecurityType, P7fffffffffffffff_longLit) && (s += 'RepoCollateralSecurityType(239)=' + $trim('' + toString_183(this$static.repoCollateralSecurityType)) + charToString(sep));
		neq(this$static.repurchaseTerm, P7fffffffffffffff_longLit) && (s += 'RepurchaseTerm(226)=' + $trim('' + toString_183(this$static.repurchaseTerm)) + charToString(sep));
		neq(this$static.repurchaseRate, P7fffffffffffffff_longLit) && (s += 'RepurchaseRate(227)=' + $trim('' + toString_183(this$static.repurchaseRate)) + charToString(sep));
		neq(this$static.factor, P7fffffffffffffff_longLit) && (s += 'Factor(228)=' + $trim('' + toString_183(this$static.factor)) + charToString(sep));
		this$static.creditRating[0] != 0 && (s += 'CreditRating(255)=' + $trim(_String(this$static.creditRating)) + charToString(sep));
		this$static.instrRegistry[0] != 0 && (s += 'InstrRegistry(543)=' + $trim(_String(this$static.instrRegistry)) + charToString(sep));
		this$static.countryOfIssue[0] != 0 && (s += 'CountryOfIssue(470)=' + $trim(_String(this$static.countryOfIssue)) + charToString(sep));
		this$static.stateOrProvinceOfIssue[0] != 0 && (s += 'StateOrProvinceOfIssue(471)=' + $trim(_String(this$static.stateOrProvinceOfIssue)) + charToString(sep));
		this$static.localeOfIssue[0] != 0 && (s += 'LocaleOfIssue(472)=' + $trim(_String(this$static.localeOfIssue)) + charToString(sep));
		this$static.redemptionDate[0] != 0 && (s += 'RedemptionDate(240)=' + $trim(_String(this$static.redemptionDate)) + charToString(sep));
		neq(this$static.strikePrice, P7fffffffffffffff_longLit) && (s += 'StrikePrice(202)=' + $trim('' + toString_183(this$static.strikePrice)) + charToString(sep));
		this$static.strikeCurrency[0] != 0 && (s += 'StrikeCurrency(947)=' + $trim(_String(this$static.strikeCurrency)) + charToString(sep));
		neq(this$static.strikeMultiplier, P7fffffffffffffff_longLit) && (s += 'StrikeMultiplier(967)=' + $trim('' + toString_183(this$static.strikeMultiplier)) + charToString(sep));
		neq(this$static.strikeValue, P7fffffffffffffff_longLit) && (s += 'StrikeValue(968)=' + $trim('' + toString_183(this$static.strikeValue)) + charToString(sep));
		neq(this$static.strikePriceDeterminationMethod, P7fffffffffffffff_longLit) && (s += 'StrikePriceDeterminationMethod(1478)=' + $trim('' + toString_183(this$static.strikePriceDeterminationMethod)) + charToString(sep));
		neq(this$static.strikePriceBoundaryMethod, P7fffffffffffffff_longLit) && (s += 'StrikePriceBoundaryMethod(1479)=' + $trim('' + toString_183(this$static.strikePriceBoundaryMethod)) + charToString(sep));
		neq(this$static.strikePriceBoundaryPrecision, P7fffffffffffffff_longLit) && (s += 'StrikePriceBoundaryPrecision(1480)=' + $trim('' + toString_183(this$static.strikePriceBoundaryPrecision)) + charToString(sep));
		neq(this$static.underlyingPriceDeterminationMethod, P7fffffffffffffff_longLit) && (s += 'UnderlyingPriceDeterminationMethod(1481)=' + $trim('' + toString_183(this$static.underlyingPriceDeterminationMethod)) + charToString(sep));
		this$static.optAttribute != 127 && (s += 'OptAttribute(206)=' + $trim('' + this$static.optAttribute) + charToString(sep));
		neq(this$static.contractMultiplier, P7fffffffffffffff_longLit) && (s += 'ContractMultiplier(231)=' + $trim('' + toString_183(this$static.contractMultiplier)) + charToString(sep));
		neq(this$static.minPriceIncrement, P7fffffffffffffff_longLit) && (s += 'MinPriceIncrement(969)=' + $trim('' + toString_183(this$static.minPriceIncrement)) + charToString(sep));
		this$static.unitOfMeasure[0] != 0 && (s += 'UnitOfMeasure(996)=' + $trim(_String(this$static.unitOfMeasure)) + charToString(sep));
		this$static.timeUnit[0] != 0 && (s += 'TimeUnit(997)=' + $trim(_String(this$static.timeUnit)) + charToString(sep));
		neq(this$static.minPriceIncrementAmount, P7fffffffffffffff_longLit) && (s += 'MinPriceIncrementAmount(1146)=' + $trim('' + toString_183(this$static.minPriceIncrementAmount)) + charToString(sep));
		neq(this$static.unitOfMeasureQty, P7fffffffffffffff_longLit) && (s += 'UnitOfMeasureQty(1147)=' + $trim('' + toString_183(this$static.unitOfMeasureQty)) + charToString(sep));
		this$static.priceUnitOfMeasure[0] != 0 && (s += 'PriceUnitOfMeasure(1191)=' + $trim(_String(this$static.priceUnitOfMeasure)) + charToString(sep));
		neq(this$static.priceUnitOfMeasureQty, P7fffffffffffffff_longLit) && (s += 'PriceUnitOfMeasureQty(1192)=' + $trim('' + toString_183(this$static.priceUnitOfMeasureQty)) + charToString(sep));
		this$static.settlMethod != 127 && (s += 'SettlMethod(1193)=' + $trim('' + this$static.settlMethod) + charToString(sep));
		neq(this$static.exerciseStyle, P7fffffffffffffff_longLit) && (s += 'ExerciseStyle(1194)=' + $trim('' + toString_183(this$static.exerciseStyle)) + charToString(sep));
		neq(this$static.optPayoutAmount, P7fffffffffffffff_longLit) && (s += 'OptPayoutAmount(1195)=' + $trim('' + toString_183(this$static.optPayoutAmount)) + charToString(sep));
		this$static.priceQuoteMethod[0] != 0 && (s += 'PriceQuoteMethod(1196)=' + $trim(_String(this$static.priceQuoteMethod)) + charToString(sep));
		neq(this$static.listMethod, P7fffffffffffffff_longLit) && (s += 'ListMethod(1198)=' + $trim('' + toString_183(this$static.listMethod)) + charToString(sep));
		neq(this$static.capPrice, P7fffffffffffffff_longLit) && (s += 'CapPrice(1199)=' + $trim('' + toString_183(this$static.capPrice)) + charToString(sep));
		neq(this$static.floorPrice, P7fffffffffffffff_longLit) && (s += 'FloorPrice(1200)=' + $trim('' + toString_183(this$static.floorPrice)) + charToString(sep));
		neq(this$static.putOrCall, P7fffffffffffffff_longLit) && (s += 'PutOrCall(201)=' + $trim('' + toString_183(this$static.putOrCall)) + charToString(sep));
		this$static.flexibleIndicator && (s += 'FlexibleIndicator(1244)=' + $trim('' + this$static.flexibleIndicator) + charToString(sep));
		this$static.flexProductEligibilityIndicator && (s += 'FlexProductEligibilityIndicator(1242)=' + $trim('' + this$static.flexProductEligibilityIndicator) + charToString(sep));
		this$static.valuationMethod[0] != 0 && (s += 'ValuationMethod(1197)=' + $trim(_String(this$static.valuationMethod)) + charToString(sep));
		neq(this$static.contractMultiplierUnit, P7fffffffffffffff_longLit) && (s += 'ContractMultiplierUnit(1435)=' + $trim('' + toString_183(this$static.contractMultiplierUnit)) + charToString(sep));
		neq(this$static.flowScheduleType, P7fffffffffffffff_longLit) && (s += 'FlowScheduleType(1439)=' + $trim('' + toString_183(this$static.flowScheduleType)) + charToString(sep));
		neq(this$static.optPayoutType, P7fffffffffffffff_longLit) && (s += 'OptPayoutType(1482)=' + $trim('' + toString_183(this$static.optPayoutType)) + charToString(sep));
		neq(this$static.couponRate, P7fffffffffffffff_longLit) && (s += 'CouponRate(223)=' + $trim('' + toString_183(this$static.couponRate)) + charToString(sep));
		this$static.securityExchange[0] != 0 && (s += 'SecurityExchange(207)=' + $trim(_String(this$static.securityExchange)) + charToString(sep));
		neq(this$static.positionLimit, P7fffffffffffffff_longLit) && (s += 'PositionLimit(970)=' + $trim('' + toString_183(this$static.positionLimit)) + charToString(sep));
		neq(this$static.nTPositionLimit, P7fffffffffffffff_longLit) && (s += 'NTPositionLimit(971)=' + $trim('' + toString_183(this$static.nTPositionLimit)) + charToString(sep));
		this$static.issuer[0] != 0 && (s += 'Issuer(106)=' + $trim(_String(this$static.issuer)) + charToString(sep));
		neq(this$static.encodedIssuerLen, P7fffffffffffffff_longLit) && (s += 'EncodedIssuerLen(348)=' + $trim('' + toString_183(this$static.encodedIssuerLen)) + charToString(sep));
		this$static.encodedIssuer[0] != 0 && (s += 'EncodedIssuer(349)=' + $trim(_String(this$static.encodedIssuer)) + charToString(sep));
		this$static.securityDesc[0] != 0 && (s += 'SecurityDesc(107)=' + $trim(_String(this$static.securityDesc)) + charToString(sep));
		neq(this$static.encodedSecurityDescLen, P7fffffffffffffff_longLit) && (s += 'EncodedSecurityDescLen(350)=' + $trim('' + toString_183(this$static.encodedSecurityDescLen)) + charToString(sep));
		this$static.encodedSecurityDesc[0] != 0 && (s += 'EncodedSecurityDesc(351)=' + $trim(_String(this$static.encodedSecurityDesc)) + charToString(sep));
		neq(this$static.securityXML.securityXMLLen, P7fffffffffffffff_longLit) && (s += $trim($toString_113(this$static.securityXML)));
		this$static.pool[0] != 0 && (s += 'Pool(691)=' + $trim(_String(this$static.pool)) + charToString(sep));
		this$static.contractSettlMonth[0] != 0 && (s += 'ContractSettlMonth(667)=' + $trim(_String(this$static.contractSettlMonth)) + charToString(sep));
		neq(this$static.cPProgram, P7fffffffffffffff_longLit) && (s += 'CPProgram(875)=' + $trim('' + toString_183(this$static.cPProgram)) + charToString(sep));
		this$static.cPRegType[0] != 0 && (s += 'CPRegType(876)=' + $trim(_String(this$static.cPRegType)) + charToString(sep));
		neq(fromInt(this$static.evntGrp.noEvents), P7fffffffffffffff_longLit) && (s += $trim($toString_19(this$static.evntGrp)));
		this$static.datedDate[0] != 0 && (s += 'DatedDate(873)=' + $trim(_String(this$static.datedDate)) + charToString(sep));
		this$static.interestAccrualDate[0] != 0 && (s += 'InterestAccrualDate(874)=' + $trim(_String(this$static.interestAccrualDate)) + charToString(sep));
		neq(fromInt(this$static.instrumentParties.noInstrumentParties), P7fffffffffffffff_longLit) && (s += $trim($toString_38(this$static.instrumentParties)));
		neq(fromInt(this$static.complexEvents.noComplexEvents), P7fffffffffffffff_longLit) && (s += $trim($toString_10(this$static.complexEvents)));
		return s;
	}

	function FixInstrument_0() {
		this.symbol = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.symbolSfx = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secAltIDGrp = new FixSecAltIDGrp_0;
		this.securityGroup = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.productComplex = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.cFICode = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securitySubType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.maturityMonthYear = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.maturityDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityStatus = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settleOnOpenFlag = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.maturityTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.couponPaymentDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.restructuringType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.seniority = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.issueDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.creditRating = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrRegistry = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.countryOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.stateOrProvinceOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.localeOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.redemptionDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.strikeCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.unitOfMeasure = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.timeUnit = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.priceUnitOfMeasure = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.priceQuoteMethod = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.valuationMethod = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityExchange = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.issuer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedIssuer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityXML = new FixSecurityXML_0;
		this.pool = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.contractSettlMonth = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.cPRegType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.evntGrp = new FixEvntGrp_0;
		this.datedDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.interestAccrualDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrumentParties = new FixInstrumentParties_0;
		this.complexEvents = new FixComplexEvents_0;
		$clear_40(this);
	}

	defineSeed(574, 1, makeCastMap([Q$FixComponent, Q$FixInstrument]), FixInstrument_0);
	_.equals$ = function equals_75(o) {
		return $equals_34(this, o);
	};
	_.toString$ = function toString_64() {
		return $toString_35(this);
	};
	_.attachmentPoint = P0_longLit;
	_.cPProgram = P0_longLit;
	_.capPrice = P0_longLit;
	_.contractMultiplier = P0_longLit;
	_.contractMultiplierUnit = P0_longLit;
	_.couponRate = P0_longLit;
	_.detachmentPoint = P0_longLit;
	_.encodedIssuerLen = P0_longLit;
	_.encodedSecurityDescLen = P0_longLit;
	_.exerciseStyle = P0_longLit;
	_.factor = P0_longLit;
	_.flexProductEligibilityIndicator = false;
	_.flexibleIndicator = false;
	_.floorPrice = P0_longLit;
	_.flowScheduleType = P0_longLit;
	_.instrmtAssignmentMethod = 32;
	_.listMethod = P0_longLit;
	_.minPriceIncrement = P0_longLit;
	_.minPriceIncrementAmount = P0_longLit;
	_.nTPositionLimit = P0_longLit;
	_.notionalPercentageOutstanding = P0_longLit;
	_.optAttribute = 32;
	_.optPayoutAmount = P0_longLit;
	_.optPayoutType = P0_longLit;
	_.originalNotionalPercentageOutstanding = P0_longLit;
	_.positionLimit = P0_longLit;
	_.priceUnitOfMeasureQty = P0_longLit;
	_.product = P0_longLit;
	_.putOrCall = P0_longLit;
	_.repoCollateralSecurityType = P0_longLit;
	_.repurchaseRate = P0_longLit;
	_.repurchaseTerm = P0_longLit;
	_.settlMethod = 32;
	_.strikeMultiplier = P0_longLit;
	_.strikePrice = P0_longLit;
	_.strikePriceBoundaryMethod = P0_longLit;
	_.strikePriceBoundaryPrecision = P0_longLit;
	_.strikePriceDeterminationMethod = P0_longLit;
	_.strikeValue = P0_longLit;
	_.underlyingPriceDeterminationMethod = P0_longLit;
	_.unitOfMeasureQty = P0_longLit;

	function $clear_41(this$static) {
		this$static.deliveryForm = P7fffffffffffffff_longLit;
		this$static.pctAtRisk = P7fffffffffffffff_longLit;
		$clear_11(this$static.attrbGrp);
	}

	function $encode_32(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.deliveryForm, P7fffffffffffffff_longLit) && putFixTag_0(out, 668, this$static.deliveryForm);
		neq(this$static.pctAtRisk, P7fffffffffffffff_longLit) && putFixFloatTag(out, 869, this$static.pctAtRisk);
		neq(fromInt(this$static.attrbGrp.noInstrAttrib), P7fffffffffffffff_longLit) && $encode_11(this$static.attrbGrp, out);
	}

	function $equals_35(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrumentExtension)) {
			$print_20(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.deliveryForm, msg.deliveryForm)) {
			ret = false;
			$print_20((valueOf_1(this$static.deliveryForm), valueOf_1(msg.deliveryForm)));
		}
		if (neq(this$static.pctAtRisk, msg.pctAtRisk)) {
			ret = false;
			$print_20((valueOf_1(this$static.pctAtRisk), valueOf_1(msg.pctAtRisk)));
		}
		$equals_1(this$static.attrbGrp, msg.attrbGrp) || (ret = false);
		return ret;
	}

	function $getAll_41(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 668:
				this$static.deliveryForm = fromInt(getTagIntValue(null, 668, buf));
				if (!isValid_33(this$static.deliveryForm)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.deliveryForm) + ') for tag'), P29c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 869:
				this$static.pctAtRisk = getTagFloatValue(null, 869, buf);
				break;
			case 870:
				this$static.attrbGrp.noInstrAttrib = getTagIntValue(null, 870, buf);
				$getAll_22(this$static.attrbGrp, this$static.attrbGrp.noInstrAttrib, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_20() {
		$clinit_FixMessage();
	}

	function $toString_36(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.deliveryForm, P7fffffffffffffff_longLit) && (s += 'DeliveryForm(668)=' + $trim('' + toString_183(this$static.deliveryForm)) + charToString(sep));
		neq(this$static.pctAtRisk, P7fffffffffffffff_longLit) && (s += 'PctAtRisk(869)=' + $trim('' + toString_183(this$static.pctAtRisk)) + charToString(sep));
		neq(fromInt(this$static.attrbGrp.noInstrAttrib), P7fffffffffffffff_longLit) && (s += $trim($toString_2(this$static.attrbGrp)));
		return s;
	}

	function FixInstrumentExtension_0() {
		this.attrbGrp = new FixAttrbGrp_0;
		$clear_41(this);
	}

	defineSeed(575, 1, makeCastMap([Q$FixComponent, Q$FixInstrumentExtension]), FixInstrumentExtension_0);
	_.equals$ = function equals_76(o) {
		return $equals_35(this, o);
	};
	_.toString$ = function toString_65() {
		return $toString_36(this);
	};
	_.deliveryForm = P0_longLit;
	_.pctAtRisk = P0_longLit;

	function $clear_42(this$static) {
		$clinit_Utils();
		this$static.legSymbol[0] = 0;
		this$static.legSymbolSfx[0] = 0;
		this$static.legSecurityID[0] = 0;
		this$static.legSecurityIDSource[0] = 0;
		this$static.legProduct = P7fffffffffffffff_longLit;
		this$static.legCFICode[0] = 0;
		this$static.legSecurityType[0] = 0;
		this$static.legSecuritySubType[0] = 0;
		this$static.legMaturityMonthYear[0] = 0;
		this$static.legMaturityDate[0] = 0;
		this$static.legMaturityTime[0] = 0;
		this$static.legCouponPaymentDate[0] = 0;
		this$static.legIssueDate[0] = 0;
		this$static.legRepoCollateralSecurityType = P7fffffffffffffff_longLit;
		this$static.legRepurchaseTerm = P7fffffffffffffff_longLit;
		this$static.legRepurchaseRate = P7fffffffffffffff_longLit;
		this$static.legFactor = P7fffffffffffffff_longLit;
		this$static.legCreditRating[0] = 0;
		this$static.legInstrRegistry[0] = 0;
		this$static.legCountryOfIssue[0] = 0;
		this$static.legStateOrProvinceOfIssue[0] = 0;
		this$static.legLocaleOfIssue[0] = 0;
		this$static.legRedemptionDate[0] = 0;
		this$static.legStrikePrice = P7fffffffffffffff_longLit;
		this$static.legStrikeCurrency[0] = 0;
		this$static.legOptAttribute = 127;
		this$static.legContractMultiplier = P7fffffffffffffff_longLit;
		this$static.legUnitOfMeasure[0] = 0;
		this$static.legTimeUnit[0] = 0;
		this$static.legExerciseStyle = P7fffffffffffffff_longLit;
		this$static.legUnitOfMeasureQty = P7fffffffffffffff_longLit;
		this$static.legPriceUnitOfMeasure[0] = 0;
		this$static.legPriceUnitOfMeasureQty = P7fffffffffffffff_longLit;
		this$static.legContractMultiplierUnit = P7fffffffffffffff_longLit;
		this$static.legFlowScheduleType = P7fffffffffffffff_longLit;
		this$static.legCouponRate = P7fffffffffffffff_longLit;
		this$static.legSecurityExchange[0] = 0;
		this$static.legIssuer[0] = 0;
		this$static.encodedLegIssuerLen = P7fffffffffffffff_longLit;
		this$static.encodedLegIssuer[0] = 0;
		this$static.legSecurityDesc[0] = 0;
		this$static.encodedLegSecurityDescLen = P7fffffffffffffff_longLit;
		this$static.encodedLegSecurityDesc[0] = 0;
		this$static.legRatioQty = P7fffffffffffffff_longLit;
		this$static.legSide = 127;
		this$static.legCurrency[0] = 0;
		this$static.legPool[0] = 0;
		this$static.legDatedDate[0] = 0;
		this$static.legContractSettlMonth[0] = 0;
		this$static.legInterestAccrualDate[0] = 0;
		this$static.legOptionRatio = P7fffffffffffffff_longLit;
		this$static.legPrice = P7fffffffffffffff_longLit;
		this$static.legPutOrCall = P7fffffffffffffff_longLit;
		$clear_52(this$static.legSecAltIDGrp);
	}

	function $encode_33(this$static, out) {
		$clinit_FixUtils();
		this$static.legSymbol[0] != 0 && putFixTag_2(out, 600, this$static.legSymbol, lastIndexTrim(this$static.legSymbol));
		this$static.legSymbolSfx[0] != 0 && putFixTag_2(out, 601, this$static.legSymbolSfx, lastIndexTrim(this$static.legSymbolSfx));
		this$static.legSecurityID[0] != 0 && putFixTag_2(out, 602, this$static.legSecurityID, lastIndexTrim(this$static.legSecurityID));
		this$static.legSecurityIDSource[0] != 0 && putFixTag_2(out, 603, this$static.legSecurityIDSource, lastIndexTrim(this$static.legSecurityIDSource));
		neq(fromInt(this$static.legSecAltIDGrp.noLegSecurityAltID), P7fffffffffffffff_longLit) && $encode_39(this$static.legSecAltIDGrp, out);
		neq(this$static.legProduct, P7fffffffffffffff_longLit) && putFixTag_0(out, 607, this$static.legProduct);
		this$static.legCFICode[0] != 0 && putFixTag_2(out, 608, this$static.legCFICode, lastIndexTrim(this$static.legCFICode));
		this$static.legSecurityType[0] != 0 && putFixTag_2(out, 609, this$static.legSecurityType, lastIndexTrim(this$static.legSecurityType));
		this$static.legSecuritySubType[0] != 0 && putFixTag_2(out, 764, this$static.legSecuritySubType, lastIndexTrim(this$static.legSecuritySubType));
		this$static.legMaturityMonthYear[0] != 0 && putFixTag_1(out, 610, this$static.legMaturityMonthYear);
		this$static.legMaturityDate[0] != 0 && putFixTag_1(out, 611, this$static.legMaturityDate);
		this$static.legMaturityTime[0] != 0 && putFixTag_1(out, 1212, this$static.legMaturityTime);
		this$static.legCouponPaymentDate[0] != 0 && putFixTag_1(out, 248, this$static.legCouponPaymentDate);
		this$static.legIssueDate[0] != 0 && putFixTag_1(out, 249, this$static.legIssueDate);
		neq(this$static.legRepoCollateralSecurityType, P7fffffffffffffff_longLit) && putFixTag_0(out, 250, this$static.legRepoCollateralSecurityType);
		neq(this$static.legRepurchaseTerm, P7fffffffffffffff_longLit) && putFixTag_0(out, 251, this$static.legRepurchaseTerm);
		neq(this$static.legRepurchaseRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 252, this$static.legRepurchaseRate);
		neq(this$static.legFactor, P7fffffffffffffff_longLit) && putFixFloatTag(out, 253, this$static.legFactor);
		this$static.legCreditRating[0] != 0 && putFixTag_2(out, 257, this$static.legCreditRating, lastIndexTrim(this$static.legCreditRating));
		this$static.legInstrRegistry[0] != 0 && putFixTag_2(out, 599, this$static.legInstrRegistry, lastIndexTrim(this$static.legInstrRegistry));
		this$static.legCountryOfIssue[0] != 0 && putFixTag_2(out, 596, this$static.legCountryOfIssue, lastIndexTrim(this$static.legCountryOfIssue));
		this$static.legStateOrProvinceOfIssue[0] != 0 && putFixTag_2(out, 597, this$static.legStateOrProvinceOfIssue, lastIndexTrim(this$static.legStateOrProvinceOfIssue));
		this$static.legLocaleOfIssue[0] != 0 && putFixTag_2(out, 598, this$static.legLocaleOfIssue, lastIndexTrim(this$static.legLocaleOfIssue));
		this$static.legRedemptionDate[0] != 0 && putFixTag_1(out, 254, this$static.legRedemptionDate);
		neq(this$static.legStrikePrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 612, this$static.legStrikePrice);
		this$static.legStrikeCurrency[0] != 0 && putFixTag_2(out, 942, this$static.legStrikeCurrency, lastIndexTrim(this$static.legStrikeCurrency));
		this$static.legOptAttribute != 127 && putFixTag(out, 613, this$static.legOptAttribute);
		neq(this$static.legContractMultiplier, P7fffffffffffffff_longLit) && putFixFloatTag(out, 614, this$static.legContractMultiplier);
		this$static.legUnitOfMeasure[0] != 0 && putFixTag_2(out, 999, this$static.legUnitOfMeasure, lastIndexTrim(this$static.legUnitOfMeasure));
		this$static.legTimeUnit[0] != 0 && putFixTag_2(out, 1001, this$static.legTimeUnit, lastIndexTrim(this$static.legTimeUnit));
		neq(this$static.legExerciseStyle, P7fffffffffffffff_longLit) && putFixTag_0(out, 1420, this$static.legExerciseStyle);
		neq(this$static.legUnitOfMeasureQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1224, this$static.legUnitOfMeasureQty);
		this$static.legPriceUnitOfMeasure[0] != 0 && putFixTag_2(out, 1421, this$static.legPriceUnitOfMeasure, lastIndexTrim(this$static.legPriceUnitOfMeasure));
		neq(this$static.legPriceUnitOfMeasureQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1422, this$static.legPriceUnitOfMeasureQty);
		neq(this$static.legContractMultiplierUnit, P7fffffffffffffff_longLit) && putFixTag_0(out, 1436, this$static.legContractMultiplierUnit);
		neq(this$static.legFlowScheduleType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1440, this$static.legFlowScheduleType);
		neq(this$static.legCouponRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 615, this$static.legCouponRate);
		this$static.legSecurityExchange[0] != 0 && putFixTag_2(out, 616, this$static.legSecurityExchange, lastIndexTrim(this$static.legSecurityExchange));
		this$static.legIssuer[0] != 0 && putFixTag_2(out, 617, this$static.legIssuer, lastIndexTrim(this$static.legIssuer));
		neq(this$static.encodedLegIssuerLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 618, this$static.encodedLegIssuerLen);
		this$static.encodedLegIssuer[0] != 0 && putFixTag_2(out, 619, this$static.encodedLegIssuer, lastIndexTrim(this$static.encodedLegIssuer));
		this$static.legSecurityDesc[0] != 0 && putFixTag_2(out, 620, this$static.legSecurityDesc, lastIndexTrim(this$static.legSecurityDesc));
		neq(this$static.encodedLegSecurityDescLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 621, this$static.encodedLegSecurityDescLen);
		this$static.encodedLegSecurityDesc[0] != 0 && putFixTag_2(out, 622, this$static.encodedLegSecurityDesc, lastIndexTrim(this$static.encodedLegSecurityDesc));
		neq(this$static.legRatioQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 623, this$static.legRatioQty);
		this$static.legSide != 127 && putFixTag(out, 624, this$static.legSide);
		this$static.legCurrency[0] != 0 && putFixTag_2(out, 556, this$static.legCurrency, lastIndexTrim(this$static.legCurrency));
		this$static.legPool[0] != 0 && putFixTag_2(out, 740, this$static.legPool, lastIndexTrim(this$static.legPool));
		this$static.legDatedDate[0] != 0 && putFixTag_1(out, 739, this$static.legDatedDate);
		this$static.legContractSettlMonth[0] != 0 && putFixTag_1(out, 955, this$static.legContractSettlMonth);
		this$static.legInterestAccrualDate[0] != 0 && putFixTag_1(out, 956, this$static.legInterestAccrualDate);
		neq(this$static.legOptionRatio, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1017, this$static.legOptionRatio);
		neq(this$static.legPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 566, this$static.legPrice);
		neq(this$static.legPutOrCall, P7fffffffffffffff_longLit) && putFixTag_0(out, 1358, this$static.legPutOrCall);
	}

	function $equals_36(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrumentLeg)) {
			$print_21(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.legSymbol, msg.legSymbol)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSymbolSfx, msg.legSymbolSfx)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecurityID, msg.legSecurityID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecurityIDSource, msg.legSecurityIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_46(this$static.legSecAltIDGrp, msg.legSecAltIDGrp) || (ret = false);
		if (neq(this$static.legProduct, msg.legProduct)) {
			ret = false;
			$print_21((valueOf_1(this$static.legProduct), valueOf_1(msg.legProduct)));
		}
		if (!equals_12(this$static.legCFICode, msg.legCFICode)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecurityType, msg.legSecurityType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecuritySubType, msg.legSecuritySubType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legMaturityMonthYear, msg.legMaturityMonthYear)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legRepoCollateralSecurityType, msg.legRepoCollateralSecurityType)) {
			ret = false;
			$print_21((valueOf_1(this$static.legRepoCollateralSecurityType), valueOf_1(msg.legRepoCollateralSecurityType)));
		}
		if (neq(this$static.legRepurchaseTerm, msg.legRepurchaseTerm)) {
			ret = false;
			$print_21((valueOf_1(this$static.legRepurchaseTerm), valueOf_1(msg.legRepurchaseTerm)));
		}
		if (neq(this$static.legRepurchaseRate, msg.legRepurchaseRate)) {
			ret = false;
			$print_21((valueOf_1(this$static.legRepurchaseRate), valueOf_1(msg.legRepurchaseRate)));
		}
		if (neq(this$static.legFactor, msg.legFactor)) {
			ret = false;
			$print_21((valueOf_1(this$static.legFactor), valueOf_1(msg.legFactor)));
		}
		if (!equals_12(this$static.legCreditRating, msg.legCreditRating)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legInstrRegistry, msg.legInstrRegistry)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legCountryOfIssue, msg.legCountryOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legStateOrProvinceOfIssue, msg.legStateOrProvinceOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legLocaleOfIssue, msg.legLocaleOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legStrikePrice, msg.legStrikePrice)) {
			ret = false;
			$print_21((valueOf_1(this$static.legStrikePrice), valueOf_1(msg.legStrikePrice)));
		}
		if (!equals_12(this$static.legStrikeCurrency, msg.legStrikeCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.legOptAttribute != msg.legOptAttribute) {
			ret = false;
			$print_21((valueOf(this$static.legOptAttribute), valueOf(msg.legOptAttribute)));
		}
		if (neq(this$static.legContractMultiplier, msg.legContractMultiplier)) {
			ret = false;
			$print_21((valueOf_1(this$static.legContractMultiplier), valueOf_1(msg.legContractMultiplier)));
		}
		if (!equals_12(this$static.legUnitOfMeasure, msg.legUnitOfMeasure)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legTimeUnit, msg.legTimeUnit)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legExerciseStyle, msg.legExerciseStyle)) {
			ret = false;
			$print_21((valueOf_1(this$static.legExerciseStyle), valueOf_1(msg.legExerciseStyle)));
		}
		if (neq(this$static.legUnitOfMeasureQty, msg.legUnitOfMeasureQty)) {
			ret = false;
			$print_21((valueOf_1(this$static.legUnitOfMeasureQty), valueOf_1(msg.legUnitOfMeasureQty)));
		}
		if (!equals_12(this$static.legPriceUnitOfMeasure, msg.legPriceUnitOfMeasure)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legPriceUnitOfMeasureQty, msg.legPriceUnitOfMeasureQty)) {
			ret = false;
			$print_21((valueOf_1(this$static.legPriceUnitOfMeasureQty), valueOf_1(msg.legPriceUnitOfMeasureQty)));
		}
		if (neq(this$static.legContractMultiplierUnit, msg.legContractMultiplierUnit)) {
			ret = false;
			$print_21((valueOf_1(this$static.legContractMultiplierUnit), valueOf_1(msg.legContractMultiplierUnit)));
		}
		if (neq(this$static.legFlowScheduleType, msg.legFlowScheduleType)) {
			ret = false;
			$print_21((valueOf_1(this$static.legFlowScheduleType), valueOf_1(msg.legFlowScheduleType)));
		}
		if (neq(this$static.legCouponRate, msg.legCouponRate)) {
			ret = false;
			$print_21((valueOf_1(this$static.legCouponRate), valueOf_1(msg.legCouponRate)));
		}
		if (!equals_12(this$static.legSecurityExchange, msg.legSecurityExchange)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legIssuer, msg.legIssuer)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedLegIssuerLen, msg.encodedLegIssuerLen)) {
			ret = false;
			$print_21((valueOf_1(this$static.encodedLegIssuerLen), valueOf_1(msg.encodedLegIssuerLen)));
		}
		if (!equals_12(this$static.encodedLegIssuer, msg.encodedLegIssuer)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecurityDesc, msg.legSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedLegSecurityDescLen, msg.encodedLegSecurityDescLen)) {
			ret = false;
			$print_21((valueOf_1(this$static.encodedLegSecurityDescLen), valueOf_1(msg.encodedLegSecurityDescLen)));
		}
		if (!equals_12(this$static.encodedLegSecurityDesc, msg.encodedLegSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legRatioQty, msg.legRatioQty)) {
			ret = false;
			$print_21((valueOf_1(this$static.legRatioQty), valueOf_1(msg.legRatioQty)));
		}
		if (this$static.legSide != msg.legSide) {
			ret = false;
			$print_21((valueOf(this$static.legSide), valueOf(msg.legSide)));
		}
		if (!equals_12(this$static.legCurrency, msg.legCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legPool, msg.legPool)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legContractSettlMonth, msg.legContractSettlMonth)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legOptionRatio, msg.legOptionRatio)) {
			ret = false;
			$print_21((valueOf_1(this$static.legOptionRatio), valueOf_1(msg.legOptionRatio)));
		}
		if (neq(this$static.legPrice, msg.legPrice)) {
			ret = false;
			$print_21((valueOf_1(this$static.legPrice), valueOf_1(msg.legPrice)));
		}
		if (neq(this$static.legPutOrCall, msg.legPutOrCall)) {
			ret = false;
			$print_21((valueOf_1(this$static.legPutOrCall), valueOf_1(msg.legPutOrCall)));
		}
		return ret;
	}

	function $getAll_42(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 600:
				this$static.legSymbol = getTagStringValue(null, 600, buf, this$static.legSymbol);
				break;
			case 601:
				this$static.legSymbolSfx = getTagStringValue(null, 601, buf, this$static.legSymbolSfx);
				break;
			case 602:
				this$static.legSecurityID = getTagStringValue(null, 602, buf, this$static.legSecurityID);
				break;
			case 603:
				this$static.legSecurityIDSource = getTagStringValue(null, 603, buf, this$static.legSecurityIDSource);
				break;
			case 604:
				this$static.legSecAltIDGrp.noLegSecurityAltID = getTagIntValue(null, 604, buf);
				$getAll_48(this$static.legSecAltIDGrp, this$static.legSecAltIDGrp.noLegSecurityAltID, buf);
				break;
			case 607:
				this$static.legProduct = fromInt(getTagIntValue(null, 607, buf));
				break;
			case 608:
				this$static.legCFICode = getTagStringValue(null, 608, buf, this$static.legCFICode);
				break;
			case 609:
				this$static.legSecurityType = getTagStringValue(null, 609, buf, this$static.legSecurityType);
				break;
			case 764:
				this$static.legSecuritySubType = getTagStringValue(null, 764, buf, this$static.legSecuritySubType);
				break;
			case 610:
				this$static.legMaturityMonthYear = getTagStringValue(null, 610, buf, this$static.legMaturityMonthYear);
				break;
			case 611:
				this$static.legMaturityDate = getTagStringValue(null, 611, buf, this$static.legMaturityDate);
				break;
			case 1212:
				this$static.legMaturityTime = getTagStringValue(null, 1212, buf, this$static.legMaturityTime);
				break;
			case 248:
				this$static.legCouponPaymentDate = getTagStringValue(null, 248, buf, this$static.legCouponPaymentDate);
				break;
			case 249:
				this$static.legIssueDate = getTagStringValue(null, 249, buf, this$static.legIssueDate);
				break;
			case 250:
				this$static.legRepoCollateralSecurityType = fromInt(getTagIntValue(null, 250, buf));
				break;
			case 251:
				this$static.legRepurchaseTerm = fromInt(getTagIntValue(null, 251, buf));
				break;
			case 252:
				this$static.legRepurchaseRate = getTagFloatValue(null, 252, buf);
				break;
			case 253:
				this$static.legFactor = getTagFloatValue(null, 253, buf);
				break;
			case 257:
				this$static.legCreditRating = getTagStringValue(null, 257, buf, this$static.legCreditRating);
				break;
			case 599:
				this$static.legInstrRegistry = getTagStringValue(null, 599, buf, this$static.legInstrRegistry);
				break;
			case 596:
				this$static.legCountryOfIssue = getTagStringValue(null, 596, buf, this$static.legCountryOfIssue);
				break;
			case 597:
				this$static.legStateOrProvinceOfIssue = getTagStringValue(null, 597, buf, this$static.legStateOrProvinceOfIssue);
				break;
			case 598:
				this$static.legLocaleOfIssue = getTagStringValue(null, 598, buf, this$static.legLocaleOfIssue);
				break;
			case 254:
				this$static.legRedemptionDate = getTagStringValue(null, 254, buf, this$static.legRedemptionDate);
				break;
			case 612:
				this$static.legStrikePrice = getTagFloatValue(null, 612, buf);
				break;
			case 942:
				this$static.legStrikeCurrency = getTagStringValue(null, 942, buf, this$static.legStrikeCurrency);
				break;
			case 613:
				this$static.legOptAttribute = getTagCharValue(null, 613, buf);
				break;
			case 614:
				this$static.legContractMultiplier = getTagFloatValue(null, 614, buf);
				break;
			case 999:
				this$static.legUnitOfMeasure = getTagStringValue(null, 999, buf, this$static.legUnitOfMeasure);
				break;
			case 1001:
				this$static.legTimeUnit = getTagStringValue(null, 1001, buf, this$static.legTimeUnit);
				break;
			case 1420:
				this$static.legExerciseStyle = fromInt(getTagIntValue(null, 1420, buf));
				break;
			case 1224:
				this$static.legUnitOfMeasureQty = getTagFloatValue(null, 1224, buf);
				break;
			case 1421:
				this$static.legPriceUnitOfMeasure = getTagStringValue(null, 1421, buf, this$static.legPriceUnitOfMeasure);
				break;
			case 1422:
				this$static.legPriceUnitOfMeasureQty = getTagFloatValue(null, 1422, buf);
				break;
			case 1436:
				this$static.legContractMultiplierUnit = fromInt(getTagIntValue(null, 1436, buf));
				break;
			case 1440:
				this$static.legFlowScheduleType = fromInt(getTagIntValue(null, 1440, buf));
				break;
			case 615:
				this$static.legCouponRate = getTagFloatValue(null, 615, buf);
				break;
			case 616:
				this$static.legSecurityExchange = getTagStringValue(null, 616, buf, this$static.legSecurityExchange);
				break;
			case 617:
				this$static.legIssuer = getTagStringValue(null, 617, buf, this$static.legIssuer);
				break;
			case 618:
				this$static.encodedLegIssuerLen = fromInt(getTagIntValue(null, 618, buf));
				break;
			case 619:
				this$static.encodedLegIssuer = getTagStringValue(null, 619, buf, this$static.encodedLegIssuer);
				break;
			case 620:
				this$static.legSecurityDesc = getTagStringValue(null, 620, buf, this$static.legSecurityDesc);
				break;
			case 621:
				this$static.encodedLegSecurityDescLen = fromInt(getTagIntValue(null, 621, buf));
				break;
			case 622:
				this$static.encodedLegSecurityDesc = getTagStringValue(null, 622, buf, this$static.encodedLegSecurityDesc);
				break;
			case 623:
				this$static.legRatioQty = getTagFloatValue(null, 623, buf);
				break;
			case 624:
				this$static.legSide = getTagCharValue(null, 624, buf);
				break;
			case 556:
				this$static.legCurrency = getTagStringValue(null, 556, buf, this$static.legCurrency);
				break;
			case 740:
				this$static.legPool = getTagStringValue(null, 740, buf, this$static.legPool);
				break;
			case 739:
				this$static.legDatedDate = getTagStringValue(null, 739, buf, this$static.legDatedDate);
				break;
			case 955:
				this$static.legContractSettlMonth = getTagStringValue(null, 955, buf, this$static.legContractSettlMonth);
				break;
			case 956:
				this$static.legInterestAccrualDate = getTagStringValue(null, 956, buf, this$static.legInterestAccrualDate);
				break;
			case 1017:
				this$static.legOptionRatio = getTagFloatValue(null, 1017, buf);
				break;
			case 566:
				this$static.legPrice = getTagFloatValue(null, 566, buf);
				break;
			case 1358:
				this$static.legPutOrCall = fromInt(getTagIntValue(null, 1358, buf));
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_21() {
		$clinit_FixMessage();
	}

	function $toString_37(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.legSymbol[0] != 0 && (s += 'LegSymbol(600)=' + $trim(_String(this$static.legSymbol)) + charToString(sep));
		this$static.legSymbolSfx[0] != 0 && (s += 'LegSymbolSfx(601)=' + $trim(_String(this$static.legSymbolSfx)) + charToString(sep));
		this$static.legSecurityID[0] != 0 && (s += 'LegSecurityID(602)=' + $trim(_String(this$static.legSecurityID)) + charToString(sep));
		this$static.legSecurityIDSource[0] != 0 && (s += 'LegSecurityIDSource(603)=' + $trim(_String(this$static.legSecurityIDSource)) + charToString(sep));
		neq(fromInt(this$static.legSecAltIDGrp.noLegSecurityAltID), P7fffffffffffffff_longLit) && (s += $trim($toString_47(this$static.legSecAltIDGrp)));
		neq(this$static.legProduct, P7fffffffffffffff_longLit) && (s += 'LegProduct(607)=' + $trim('' + toString_183(this$static.legProduct)) + charToString(sep));
		this$static.legCFICode[0] != 0 && (s += 'LegCFICode(608)=' + $trim(_String(this$static.legCFICode)) + charToString(sep));
		this$static.legSecurityType[0] != 0 && (s += 'LegSecurityType(609)=' + $trim(_String(this$static.legSecurityType)) + charToString(sep));
		this$static.legSecuritySubType[0] != 0 && (s += 'LegSecuritySubType(764)=' + $trim(_String(this$static.legSecuritySubType)) + charToString(sep));
		this$static.legMaturityMonthYear[0] != 0 && (s += 'LegMaturityMonthYear(610)=' + $trim(_String(this$static.legMaturityMonthYear)) + charToString(sep));
		this$static.legMaturityDate[0] != 0 && (s += 'LegMaturityDate(611)=' + $trim(_String(this$static.legMaturityDate)) + charToString(sep));
		this$static.legMaturityTime[0] != 0 && (s += 'LegMaturityTime(1212)=' + $trim(_String(this$static.legMaturityTime)) + charToString(sep));
		this$static.legCouponPaymentDate[0] != 0 && (s += 'LegCouponPaymentDate(248)=' + $trim(_String(this$static.legCouponPaymentDate)) + charToString(sep));
		this$static.legIssueDate[0] != 0 && (s += 'LegIssueDate(249)=' + $trim(_String(this$static.legIssueDate)) + charToString(sep));
		neq(this$static.legRepoCollateralSecurityType, P7fffffffffffffff_longLit) && (s += 'LegRepoCollateralSecurityType(250)=' + $trim('' + toString_183(this$static.legRepoCollateralSecurityType)) + charToString(sep));
		neq(this$static.legRepurchaseTerm, P7fffffffffffffff_longLit) && (s += 'LegRepurchaseTerm(251)=' + $trim('' + toString_183(this$static.legRepurchaseTerm)) + charToString(sep));
		neq(this$static.legRepurchaseRate, P7fffffffffffffff_longLit) && (s += 'LegRepurchaseRate(252)=' + $trim('' + toString_183(this$static.legRepurchaseRate)) + charToString(sep));
		neq(this$static.legFactor, P7fffffffffffffff_longLit) && (s += 'LegFactor(253)=' + $trim('' + toString_183(this$static.legFactor)) + charToString(sep));
		this$static.legCreditRating[0] != 0 && (s += 'LegCreditRating(257)=' + $trim(_String(this$static.legCreditRating)) + charToString(sep));
		this$static.legInstrRegistry[0] != 0 && (s += 'LegInstrRegistry(599)=' + $trim(_String(this$static.legInstrRegistry)) + charToString(sep));
		this$static.legCountryOfIssue[0] != 0 && (s += 'LegCountryOfIssue(596)=' + $trim(_String(this$static.legCountryOfIssue)) + charToString(sep));
		this$static.legStateOrProvinceOfIssue[0] != 0 && (s += 'LegStateOrProvinceOfIssue(597)=' + $trim(_String(this$static.legStateOrProvinceOfIssue)) + charToString(sep));
		this$static.legLocaleOfIssue[0] != 0 && (s += 'LegLocaleOfIssue(598)=' + $trim(_String(this$static.legLocaleOfIssue)) + charToString(sep));
		this$static.legRedemptionDate[0] != 0 && (s += 'LegRedemptionDate(254)=' + $trim(_String(this$static.legRedemptionDate)) + charToString(sep));
		neq(this$static.legStrikePrice, P7fffffffffffffff_longLit) && (s += 'LegStrikePrice(612)=' + $trim('' + toString_183(this$static.legStrikePrice)) + charToString(sep));
		this$static.legStrikeCurrency[0] != 0 && (s += 'LegStrikeCurrency(942)=' + $trim(_String(this$static.legStrikeCurrency)) + charToString(sep));
		this$static.legOptAttribute != 127 && (s += 'LegOptAttribute(613)=' + $trim('' + this$static.legOptAttribute) + charToString(sep));
		neq(this$static.legContractMultiplier, P7fffffffffffffff_longLit) && (s += 'LegContractMultiplier(614)=' + $trim('' + toString_183(this$static.legContractMultiplier)) + charToString(sep));
		this$static.legUnitOfMeasure[0] != 0 && (s += 'LegUnitOfMeasure(999)=' + $trim(_String(this$static.legUnitOfMeasure)) + charToString(sep));
		this$static.legTimeUnit[0] != 0 && (s += 'LegTimeUnit(1001)=' + $trim(_String(this$static.legTimeUnit)) + charToString(sep));
		neq(this$static.legExerciseStyle, P7fffffffffffffff_longLit) && (s += 'LegExerciseStyle(1420)=' + $trim('' + toString_183(this$static.legExerciseStyle)) + charToString(sep));
		neq(this$static.legUnitOfMeasureQty, P7fffffffffffffff_longLit) && (s += 'LegUnitOfMeasureQty(1224)=' + $trim('' + toString_183(this$static.legUnitOfMeasureQty)) + charToString(sep));
		this$static.legPriceUnitOfMeasure[0] != 0 && (s += 'LegPriceUnitOfMeasure(1421)=' + $trim(_String(this$static.legPriceUnitOfMeasure)) + charToString(sep));
		neq(this$static.legPriceUnitOfMeasureQty, P7fffffffffffffff_longLit) && (s += 'LegPriceUnitOfMeasureQty(1422)=' + $trim('' + toString_183(this$static.legPriceUnitOfMeasureQty)) + charToString(sep));
		neq(this$static.legContractMultiplierUnit, P7fffffffffffffff_longLit) && (s += 'LegContractMultiplierUnit(1436)=' + $trim('' + toString_183(this$static.legContractMultiplierUnit)) + charToString(sep));
		neq(this$static.legFlowScheduleType, P7fffffffffffffff_longLit) && (s += 'LegFlowScheduleType(1440)=' + $trim('' + toString_183(this$static.legFlowScheduleType)) + charToString(sep));
		neq(this$static.legCouponRate, P7fffffffffffffff_longLit) && (s += 'LegCouponRate(615)=' + $trim('' + toString_183(this$static.legCouponRate)) + charToString(sep));
		this$static.legSecurityExchange[0] != 0 && (s += 'LegSecurityExchange(616)=' + $trim(_String(this$static.legSecurityExchange)) + charToString(sep));
		this$static.legIssuer[0] != 0 && (s += 'LegIssuer(617)=' + $trim(_String(this$static.legIssuer)) + charToString(sep));
		neq(this$static.encodedLegIssuerLen, P7fffffffffffffff_longLit) && (s += 'EncodedLegIssuerLen(618)=' + $trim('' + toString_183(this$static.encodedLegIssuerLen)) + charToString(sep));
		this$static.encodedLegIssuer[0] != 0 && (s += 'EncodedLegIssuer(619)=' + $trim(_String(this$static.encodedLegIssuer)) + charToString(sep));
		this$static.legSecurityDesc[0] != 0 && (s += 'LegSecurityDesc(620)=' + $trim(_String(this$static.legSecurityDesc)) + charToString(sep));
		neq(this$static.encodedLegSecurityDescLen, P7fffffffffffffff_longLit) && (s += 'EncodedLegSecurityDescLen(621)=' + $trim('' + toString_183(this$static.encodedLegSecurityDescLen)) + charToString(sep));
		this$static.encodedLegSecurityDesc[0] != 0 && (s += 'EncodedLegSecurityDesc(622)=' + $trim(_String(this$static.encodedLegSecurityDesc)) + charToString(sep));
		neq(this$static.legRatioQty, P7fffffffffffffff_longLit) && (s += 'LegRatioQty(623)=' + $trim('' + toString_183(this$static.legRatioQty)) + charToString(sep));
		this$static.legSide != 127 && (s += 'LegSide(624)=' + $trim('' + this$static.legSide) + charToString(sep));
		this$static.legCurrency[0] != 0 && (s += 'LegCurrency(556)=' + $trim(_String(this$static.legCurrency)) + charToString(sep));
		this$static.legPool[0] != 0 && (s += 'LegPool(740)=' + $trim(_String(this$static.legPool)) + charToString(sep));
		this$static.legDatedDate[0] != 0 && (s += 'LegDatedDate(739)=' + $trim(_String(this$static.legDatedDate)) + charToString(sep));
		this$static.legContractSettlMonth[0] != 0 && (s += 'LegContractSettlMonth(955)=' + $trim(_String(this$static.legContractSettlMonth)) + charToString(sep));
		this$static.legInterestAccrualDate[0] != 0 && (s += 'LegInterestAccrualDate(956)=' + $trim(_String(this$static.legInterestAccrualDate)) + charToString(sep));
		neq(this$static.legOptionRatio, P7fffffffffffffff_longLit) && (s += 'LegOptionRatio(1017)=' + $trim('' + toString_183(this$static.legOptionRatio)) + charToString(sep));
		neq(this$static.legPrice, P7fffffffffffffff_longLit) && (s += 'LegPrice(566)=' + $trim('' + toString_183(this$static.legPrice)) + charToString(sep));
		neq(this$static.legPutOrCall, P7fffffffffffffff_longLit) && (s += 'LegPutOrCall(1358)=' + $trim('' + toString_183(this$static.legPutOrCall)) + charToString(sep));
		return s;
	}

	function FixInstrumentLeg_0() {
		this.legSymbol = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSymbolSfx = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecAltIDGrp = new FixLegSecAltIDGrp_0;
		this.legCFICode = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecuritySubType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legMaturityMonthYear = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legMaturityDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legMaturityTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legCouponPaymentDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legIssueDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legCreditRating = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legInstrRegistry = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legCountryOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legStateOrProvinceOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legLocaleOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legRedemptionDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legStrikeCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.legUnitOfMeasure = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legTimeUnit = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legPriceUnitOfMeasure = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityExchange = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legIssuer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedLegIssuer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedLegSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.legPool = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legDatedDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legContractSettlMonth = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legInterestAccrualDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_42(this);
	}

	defineSeed(576, 1, makeCastMap([Q$FixComponent, Q$FixInstrumentLeg]), FixInstrumentLeg_0);
	_.equals$ = function equals_77(o) {
		return $equals_36(this, o);
	};
	_.toString$ = function toString_66() {
		return $toString_37(this);
	};
	_.encodedLegIssuerLen = P0_longLit;
	_.encodedLegSecurityDescLen = P0_longLit;
	_.legContractMultiplier = P0_longLit;
	_.legContractMultiplierUnit = P0_longLit;
	_.legCouponRate = P0_longLit;
	_.legExerciseStyle = P0_longLit;
	_.legFactor = P0_longLit;
	_.legFlowScheduleType = P0_longLit;
	_.legOptAttribute = 32;
	_.legOptionRatio = P0_longLit;
	_.legPrice = P0_longLit;
	_.legPriceUnitOfMeasureQty = P0_longLit;
	_.legProduct = P0_longLit;
	_.legPutOrCall = P0_longLit;
	_.legRatioQty = P0_longLit;
	_.legRepoCollateralSecurityType = P0_longLit;
	_.legRepurchaseRate = P0_longLit;
	_.legRepurchaseTerm = P0_longLit;
	_.legSide = 32;
	_.legStrikePrice = P0_longLit;
	_.legUnitOfMeasureQty = P0_longLit;

	function $clear_43(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noInstrumentParties; i_0++)
		$clear_44(this$static.group[i_0]);
	}

	function $encode_34(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noInstrumentParties; i_0++)
		$encode_35(this$static.group[i_0], out);
	}

	function $equals_37(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixInstrumentParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noInstrumentParties; i_0++)
		if (!$equals_38(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_43(this$static, noInstrumentParties, buf) {
		var i_0, i0;
		this$static.noInstrumentParties = noInstrumentParties;
		if (noInstrumentParties < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noInstrumentParties), P3fa_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noInstrumentParties) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentParties$InstrumentParties_2_classLit, makeCastMap([Q$Serializable]), Q$FixInstrumentParties$InstrumentParties, noInstrumentParties, 0);
			for (i0 = 0; i0 < noInstrumentParties; i0++)
			this$static.group[i0] = new FixInstrumentParties$InstrumentParties_0;
		}
		for (i_0 = 0; i_0 < noInstrumentParties; i_0++)
		$getAllGroup_12(this$static.group[i_0], buf);
	}

	function $toString_38(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noInstrumentParties; i_0++)
		s += $toString_39(this$static.group[i_0]);
		return s;
	}

	function FixInstrumentParties_0() {}

	defineSeed(577, 1, makeCastMap([Q$FixInstrumentParties]), FixInstrumentParties_0);
	_.equals$ = function equals_78(o) {
		return $equals_37(this, o);
	};
	_.toString$ = function toString_67() {
		return $toString_38(this);
	};
	_.noInstrumentParties = 0;

	function $clear_44(this$static) {
		$clinit_Utils();
		this$static.instrumentPartyID[0] = 0;
		this$static.instrumentPartyIDSource = 127;
		this$static.instrumentPartyRole = P7fffffffffffffff_longLit;
		$clear_45(this$static.instrumentPtysSubGrp);
	}

	function $encode_35(this$static, out) {
		$clinit_FixUtils();
		this$static.instrumentPartyID[0] != 0 && putFixTag_2(out, 1019, this$static.instrumentPartyID, lastIndexTrim(this$static.instrumentPartyID));
		this$static.instrumentPartyIDSource != 127 && putFixTag(out, 1050, this$static.instrumentPartyIDSource);
		neq(this$static.instrumentPartyRole, P7fffffffffffffff_longLit) && putFixTag_0(out, 1051, this$static.instrumentPartyRole);
		neq(fromInt(this$static.instrumentPtysSubGrp.noInstrumentPartySubIDs), P7fffffffffffffff_longLit) && $encode_36(this$static.instrumentPtysSubGrp, out);
	}

	function $equals_38(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrumentParties$InstrumentParties)) {
			$print_22(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.instrumentPartyID, msg.instrumentPartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.instrumentPartyIDSource != msg.instrumentPartyIDSource) {
			ret = false;
			$print_22((valueOf(this$static.instrumentPartyIDSource), valueOf(msg.instrumentPartyIDSource)));
		}
		if (neq(this$static.instrumentPartyRole, msg.instrumentPartyRole)) {
			ret = false;
			$print_22((valueOf_1(this$static.instrumentPartyRole), valueOf_1(msg.instrumentPartyRole)));
		}
		$equals_39(this$static.instrumentPtysSubGrp, msg.instrumentPtysSubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_12(this$static, buf) {
		var id_0, lastTagPosition, noInstrumentPartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1019) {
			this$static.instrumentPartyID = getTagStringValue(null, 1019, buf, this$static.instrumentPartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1050) {
			this$static.instrumentPartyIDSource = getTagCharValue(null, 1050, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1051) {
			this$static.instrumentPartyRole = fromInt(getTagIntValue(null, 1051, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1052) {
			noInstrumentPartySubIDs = getTagIntValue(null, 1052, buf);
			$getAll_44(this$static.instrumentPtysSubGrp, noInstrumentPartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_22() {
		$clinit_FixMessage();
	}

	function $toString_39(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrumentPartyID[0] != 0 && (s += 'InstrumentPartyID(1019)=' + $trim(_String(this$static.instrumentPartyID)) + charToString(sep));
		this$static.instrumentPartyIDSource != 127 && (s += 'InstrumentPartyIDSource(1050)=' + $trim('' + this$static.instrumentPartyIDSource) + charToString(sep));
		neq(this$static.instrumentPartyRole, P7fffffffffffffff_longLit) && (s += 'InstrumentPartyRole(1051)=' + $trim('' + toString_183(this$static.instrumentPartyRole)) + charToString(sep));
		neq(fromInt(this$static.instrumentPtysSubGrp.noInstrumentPartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_40(this$static.instrumentPtysSubGrp)));
		return s;
	}

	function FixInstrumentParties$InstrumentParties_0() {
		this.instrumentPartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.instrumentPtysSubGrp = new FixInstrumentPtysSubGrp_0;
		$clear_44(this);
	}

	defineSeed(578, 1, makeCastMap([Q$FixComponent, Q$FixInstrumentParties$InstrumentParties]), FixInstrumentParties$InstrumentParties_0);
	_.equals$ = function equals_79(o) {
		return $equals_38(this, o);
	};
	_.toString$ = function toString_68() {
		return $toString_39(this);
	};
	_.instrumentPartyIDSource = 32;
	_.instrumentPartyRole = P0_longLit;

	function $clear_45(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noInstrumentPartySubIDs; i_0++)
		$clear_46(this$static.group[i_0]);
	}

	function $encode_36(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noInstrumentPartySubIDs; i_0++)
		$encode_37(this$static.group[i_0], out);
	}

	function $equals_39(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixInstrumentPtysSubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noInstrumentPartySubIDs; i_0++)
		if (!$equals_40(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_44(this$static, noInstrumentPartySubIDs, buf) {
		var i_0, i0;
		this$static.noInstrumentPartySubIDs = noInstrumentPartySubIDs;
		if (noInstrumentPartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noInstrumentPartySubIDs), P41c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noInstrumentPartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixInstrumentPtysSubGrp$InstrumentPtysSubGrp, noInstrumentPartySubIDs, 0);
			for (i0 = 0; i0 < noInstrumentPartySubIDs; i0++)
			this$static.group[i0] = new FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_0;
		}
		for (i_0 = 0; i_0 < noInstrumentPartySubIDs; i_0++)
		$getAllGroup_13(this$static.group[i_0], buf);
	}

	function $toString_40(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noInstrumentPartySubIDs; i_0++)
		s += $toString_41(this$static.group[i_0]);
		return s;
	}

	function FixInstrumentPtysSubGrp_0() {}

	defineSeed(579, 1, makeCastMap([Q$FixInstrumentPtysSubGrp]), FixInstrumentPtysSubGrp_0);
	_.equals$ = function equals_80(o) {
		return $equals_39(this, o);
	};
	_.toString$ = function toString_69() {
		return $toString_40(this);
	};
	_.noInstrumentPartySubIDs = 0;

	function $clear_46(this$static) {
		$clinit_Utils();
		this$static.instrumentPartySubID[0] = 0;
		this$static.instrumentPartySubIDType = P7fffffffffffffff_longLit;
	}

	function $encode_37(this$static, out) {
		$clinit_FixUtils();
		this$static.instrumentPartySubID[0] != 0 && putFixTag_2(out, 1053, this$static.instrumentPartySubID, lastIndexTrim(this$static.instrumentPartySubID));
		neq(this$static.instrumentPartySubIDType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1054, this$static.instrumentPartySubIDType);
	}

	function $equals_40(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixInstrumentPtysSubGrp$InstrumentPtysSubGrp)) {
			$print_23(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.instrumentPartySubID, msg.instrumentPartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.instrumentPartySubIDType, msg.instrumentPartySubIDType)) {
			ret = false;
			$print_23((valueOf_1(this$static.instrumentPartySubIDType), valueOf_1(msg.instrumentPartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_13(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1053) {
			this$static.instrumentPartySubID = getTagStringValue(null, 1053, buf, this$static.instrumentPartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1054) {
			this$static.instrumentPartySubIDType = fromInt(getTagIntValue(null, 1054, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_23() {
		$clinit_FixMessage();
	}

	function $toString_41(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrumentPartySubID[0] != 0 && (s += 'InstrumentPartySubID(1053)=' + $trim(_String(this$static.instrumentPartySubID)) + charToString(sep));
		neq(this$static.instrumentPartySubIDType, P7fffffffffffffff_longLit) && (s += 'InstrumentPartySubIDType(1054)=' + $trim('' + toString_183(this$static.instrumentPartySubIDType)) + charToString(sep));
		return s;
	}

	function FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_0() {
		this.instrumentPartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.instrumentPartySubID[0] = 0;
		this.instrumentPartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(580, 1, makeCastMap([Q$FixComponent, Q$FixInstrumentPtysSubGrp$InstrumentPtysSubGrp]), FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_0);
	_.equals$ = function equals_81(o) {
		return $equals_40(this, o);
	};
	_.toString$ = function toString_70() {
		return $toString_41(this);
	};
	_.instrumentPartySubIDType = P0_longLit;

	function $clear_47(this$static) {
		$clinit_Utils();
		this$static.legBenchmarkCurveCurrency[0] = 0;
		this$static.legBenchmarkCurveName[0] = 0;
		this$static.legBenchmarkCurvePoint[0] = 0;
		this$static.legBenchmarkPrice = P7fffffffffffffff_longLit;
		this$static.legBenchmarkPriceType = P7fffffffffffffff_longLit;
	}

	function $encode_38(this$static, out) {
		$clinit_FixUtils();
		this$static.legBenchmarkCurveCurrency[0] != 0 && putFixTag_2(out, 676, this$static.legBenchmarkCurveCurrency, lastIndexTrim(this$static.legBenchmarkCurveCurrency));
		this$static.legBenchmarkCurveName[0] != 0 && putFixTag_2(out, 677, this$static.legBenchmarkCurveName, lastIndexTrim(this$static.legBenchmarkCurveName));
		this$static.legBenchmarkCurvePoint[0] != 0 && putFixTag_2(out, 678, this$static.legBenchmarkCurvePoint, lastIndexTrim(this$static.legBenchmarkCurvePoint));
		neq(this$static.legBenchmarkPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 679, this$static.legBenchmarkPrice);
		neq(this$static.legBenchmarkPriceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 680, this$static.legBenchmarkPriceType);
	}

	function $equals_41(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLegBenchmarkCurveData)) {
			$print_24(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.legBenchmarkCurveCurrency, msg.legBenchmarkCurveCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legBenchmarkCurveName, msg.legBenchmarkCurveName)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legBenchmarkCurvePoint, msg.legBenchmarkCurvePoint)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legBenchmarkPrice, msg.legBenchmarkPrice)) {
			ret = false;
			$print_24((valueOf_1(this$static.legBenchmarkPrice), valueOf_1(msg.legBenchmarkPrice)));
		}
		if (neq(this$static.legBenchmarkPriceType, msg.legBenchmarkPriceType)) {
			ret = false;
			$print_24((valueOf_1(this$static.legBenchmarkPriceType), valueOf_1(msg.legBenchmarkPriceType)));
		}
		return ret;
	}

	function $getAll_45(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 676:
				this$static.legBenchmarkCurveCurrency = getTagStringValue(null, 676, buf, this$static.legBenchmarkCurveCurrency);
				break;
			case 677:
				this$static.legBenchmarkCurveName = getTagStringValue(null, 677, buf, this$static.legBenchmarkCurveName);
				break;
			case 678:
				this$static.legBenchmarkCurvePoint = getTagStringValue(null, 678, buf, this$static.legBenchmarkCurvePoint);
				break;
			case 679:
				this$static.legBenchmarkPrice = getTagFloatValue(null, 679, buf);
				break;
			case 680:
				this$static.legBenchmarkPriceType = fromInt(getTagIntValue(null, 680, buf));
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_24() {
		$clinit_FixMessage();
	}

	function $toString_42(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.legBenchmarkCurveCurrency[0] != 0 && (s += 'LegBenchmarkCurveCurrency(676)=' + $trim(_String(this$static.legBenchmarkCurveCurrency)) + charToString(sep));
		this$static.legBenchmarkCurveName[0] != 0 && (s += 'LegBenchmarkCurveName(677)=' + $trim(_String(this$static.legBenchmarkCurveName)) + charToString(sep));
		this$static.legBenchmarkCurvePoint[0] != 0 && (s += 'LegBenchmarkCurvePoint(678)=' + $trim(_String(this$static.legBenchmarkCurvePoint)) + charToString(sep));
		neq(this$static.legBenchmarkPrice, P7fffffffffffffff_longLit) && (s += 'LegBenchmarkPrice(679)=' + $trim('' + toString_183(this$static.legBenchmarkPrice)) + charToString(sep));
		neq(this$static.legBenchmarkPriceType, P7fffffffffffffff_longLit) && (s += 'LegBenchmarkPriceType(680)=' + $trim('' + toString_183(this$static.legBenchmarkPriceType)) + charToString(sep));
		return s;
	}

	function FixLegBenchmarkCurveData_0() {
		this.legBenchmarkCurveCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.legBenchmarkCurveName = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legBenchmarkCurvePoint = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_47(this);
	}

	defineSeed(581, 1, makeCastMap([Q$FixComponent, Q$FixLegBenchmarkCurveData]), FixLegBenchmarkCurveData_0);
	_.equals$ = function equals_82(o) {
		return $equals_41(this, o);
	};
	_.toString$ = function toString_71() {
		return $toString_42(this);
	};
	_.legBenchmarkPrice = P0_longLit;
	_.legBenchmarkPriceType = P0_longLit;

	function $clear_48(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegAllocs; i_0++)
		$clear_49(this$static.group[i_0]);
	}

	function $equals_42(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixLegPreAllocGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegAllocs; i_0++)
		if (!$equals_43(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_46(this$static, noLegAllocs, buf) {
		var i_0, i0;
		this$static.noLegAllocs = noLegAllocs;
		if (noLegAllocs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegAllocs), P29e_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegAllocs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegPreAllocGrp$LegPreAllocGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixLegPreAllocGrp$LegPreAllocGrp, noLegAllocs, 0);
			for (i0 = 0; i0 < noLegAllocs; i0++)
			this$static.group[i0] = new FixLegPreAllocGrp$LegPreAllocGrp_0;
		}
		for (i_0 = 0; i_0 < noLegAllocs; i_0++)
		$getAllGroup_14(this$static.group[i_0], buf);
	}

	function $toString_43(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegAllocs; i_0++)
		s += $toString_44(this$static.group[i_0]);
		return s;
	}

	function FixLegPreAllocGrp_0() {}

	defineSeed(582, 1, makeCastMap([Q$FixLegPreAllocGrp]), FixLegPreAllocGrp_0);
	_.equals$ = function equals_83(o) {
		return $equals_42(this, o);
	};
	_.toString$ = function toString_72() {
		return $toString_43(this);
	};
	_.noLegAllocs = 0;

	function $clear_49(this$static) {
		$clinit_Utils();
		this$static.legAllocAccount[0] = 0;
		this$static.legIndividualAllocID[0] = 0;
		this$static.legAllocQty = P7fffffffffffffff_longLit;
		this$static.legAllocAcctIDSource[0] = 0;
		this$static.legAllocSettlCurrency[0] = 0;
		$clear_72(this$static.nestedParties2);
	}

	function $equals_43(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLegPreAllocGrp$LegPreAllocGrp)) {
			$print_25(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.legAllocAccount, msg.legAllocAccount)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legIndividualAllocID, msg.legIndividualAllocID)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_66(this$static.nestedParties2, msg.nestedParties2) || (ret = false);
		if (neq(this$static.legAllocQty, msg.legAllocQty)) {
			ret = false;
			$print_25((valueOf_1(this$static.legAllocQty), valueOf_1(msg.legAllocQty)));
		}
		if (!equals_12(this$static.legAllocAcctIDSource, msg.legAllocAcctIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legAllocSettlCurrency, msg.legAllocSettlCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_14(this$static, buf) {
		var id_0, lastTagPosition, noNested2PartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 671) {
			this$static.legAllocAccount = getTagStringValue(null, 671, buf, this$static.legAllocAccount);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 672) {
			this$static.legIndividualAllocID = getTagStringValue(null, 672, buf, this$static.legIndividualAllocID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 756) {
			noNested2PartyIDs = getTagIntValue(null, 756, buf);
			$getAll_58(this$static.nestedParties2, noNested2PartyIDs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 673) {
			this$static.legAllocQty = getTagFloatValue(null, 673, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 674) {
			this$static.legAllocAcctIDSource = getTagStringValue(null, 674, buf, this$static.legAllocAcctIDSource);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1367) {
			this$static.legAllocSettlCurrency = getTagStringValue(null, 1367, buf, this$static.legAllocSettlCurrency);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_25() {
		$clinit_FixMessage();
	}

	function $toString_44(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.legAllocAccount[0] != 0 && (s += 'LegAllocAccount(671)=' + $trim(_String(this$static.legAllocAccount)) + charToString(sep));
		this$static.legIndividualAllocID[0] != 0 && (s += 'LegIndividualAllocID(672)=' + $trim(_String(this$static.legIndividualAllocID)) + charToString(sep));
		neq(fromInt(this$static.nestedParties2.noNested2PartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_67(this$static.nestedParties2)));
		neq(this$static.legAllocQty, P7fffffffffffffff_longLit) && (s += 'LegAllocQty(673)=' + $trim('' + toString_183(this$static.legAllocQty)) + charToString(sep));
		this$static.legAllocAcctIDSource[0] != 0 && (s += 'LegAllocAcctIDSource(674)=' + $trim(_String(this$static.legAllocAcctIDSource)) + charToString(sep));
		this$static.legAllocSettlCurrency[0] != 0 && (s += 'LegAllocSettlCurrency(1367)=' + $trim(_String(this$static.legAllocSettlCurrency)) + charToString(sep));
		return s;
	}

	function FixLegPreAllocGrp$LegPreAllocGrp_0() {
		this.legAllocAccount = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legIndividualAllocID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nestedParties2 = new FixNestedParties2_0;
		this.legAllocAcctIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legAllocSettlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		$clear_49(this);
	}

	defineSeed(583, 1, makeCastMap([Q$FixComponent, Q$FixLegPreAllocGrp$LegPreAllocGrp]), FixLegPreAllocGrp$LegPreAllocGrp_0);
	_.equals$ = function equals_84(o) {
		return $equals_43(this, o);
	};
	_.toString$ = function toString_73() {
		return $toString_44(this);
	};
	_.legAllocQty = P0_longLit;

	function $clear_50(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		$clear_51(this$static.group[i_0]);
	}

	function $equals_44(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixLegQuotGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		if (!$equals_45(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_47(this$static, noLegs, buf) {
		var i_0, i0;
		this$static.noLegs = noLegs;
		if (noLegs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegs), P22b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegQuotGrp$LegQuotGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixLegQuotGrp$LegQuotGrp, noLegs, 0);
			for (i0 = 0; i0 < noLegs; i0++)
			this$static.group[i0] = new FixLegQuotGrp$LegQuotGrp_0;
		}
		for (i_0 = 0; i_0 < noLegs; i_0++)
		$getAllGroup_15(this$static.group[i_0], buf);
	}

	function $toString_45(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		s += $toString_46(this$static.group[i_0]);
		return s;
	}

	function FixLegQuotGrp_0() {}

	defineSeed(584, 1, makeCastMap([Q$FixLegQuotGrp]), FixLegQuotGrp_0);
	_.equals$ = function equals_85(o) {
		return $equals_44(this, o);
	};
	_.toString$ = function toString_74() {
		return $toString_45(this);
	};
	_.noLegs = 0;

	function $clear_51(this$static) {
		this$static.legQty = P7fffffffffffffff_longLit;
		this$static.legOrderQty = P7fffffffffffffff_longLit;
		this$static.legSwapType = P7fffffffffffffff_longLit;
		this$static.legSettlType = 127;
		$clinit_Utils();
		this$static.legSettlDate[0] = 0;
		this$static.legPriceType = P7fffffffffffffff_longLit;
		this$static.legBidPx = P7fffffffffffffff_longLit;
		this$static.legOfferPx = P7fffffffffffffff_longLit;
		this$static.legRefID[0] = 0;
		this$static.legBidForwardPoints = P7fffffffffffffff_longLit;
		this$static.legOfferForwardPoints = P7fffffffffffffff_longLit;
		$clear_42(this$static.instrumentLeg);
		$clear_54(this$static.legStipulations);
		$clear_70(this$static.nestedParties);
		$clear_47(this$static.legBenchmarkCurveData);
	}

	function $equals_45(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLegQuotGrp$LegQuotGrp)) {
			$print_26(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_36(this$static.instrumentLeg, msg.instrumentLeg) || (ret = false);
		if (neq(this$static.legQty, msg.legQty)) {
			ret = false;
			$print_26((valueOf_1(this$static.legQty), valueOf_1(msg.legQty)));
		}
		if (neq(this$static.legOrderQty, msg.legOrderQty)) {
			ret = false;
			$print_26((valueOf_1(this$static.legOrderQty), valueOf_1(msg.legOrderQty)));
		}
		if (neq(this$static.legSwapType, msg.legSwapType)) {
			ret = false;
			$print_26((valueOf_1(this$static.legSwapType), valueOf_1(msg.legSwapType)));
		}
		if (this$static.legSettlType != msg.legSettlType) {
			ret = false;
			$print_26((valueOf(this$static.legSettlType), valueOf(msg.legSettlType)));
		}
		$equals_48(this$static.legStipulations, msg.legStipulations) || (ret = false);
		$equals_64(this$static.nestedParties, msg.nestedParties) || (ret = false);
		if (neq(this$static.legPriceType, msg.legPriceType)) {
			ret = false;
			$print_26((valueOf_1(this$static.legPriceType), valueOf_1(msg.legPriceType)));
		}
		if (neq(this$static.legBidPx, msg.legBidPx)) {
			ret = false;
			$print_26((valueOf_1(this$static.legBidPx), valueOf_1(msg.legBidPx)));
		}
		if (neq(this$static.legOfferPx, msg.legOfferPx)) {
			ret = false;
			$print_26((valueOf_1(this$static.legOfferPx), valueOf_1(msg.legOfferPx)));
		}
		if (!equals_12(this$static.legRefID, msg.legRefID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.legBidForwardPoints, msg.legBidForwardPoints)) {
			ret = false;
			$print_26((valueOf_1(this$static.legBidForwardPoints), valueOf_1(msg.legBidForwardPoints)));
		}
		if (neq(this$static.legOfferForwardPoints, msg.legOfferForwardPoints)) {
			ret = false;
			$print_26((valueOf_1(this$static.legOfferForwardPoints), valueOf_1(msg.legOfferForwardPoints)));
		}
		$equals_41(this$static.legBenchmarkCurveData, msg.legBenchmarkCurveData) || (ret = false);
		return ret;
	}

	function $getAllGroup_15(this$static, buf) {
		var id_0, lastTagPosition, noLegStipulations, noNestedPartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 600) {
			$getAll_42(this$static.instrumentLeg, 600, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 687) {
			this$static.legQty = getTagFloatValue(null, 687, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 685) {
			this$static.legOrderQty = getTagFloatValue(null, 685, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 690) {
			this$static.legSwapType = fromInt(getTagIntValue(null, 690, buf));
			if (!isValid_69(this$static.legSwapType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.legSwapType) + ') for tag'), P2b2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 587) {
			this$static.legSettlType = getTagCharValue(null, 587, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 588) {
			this$static.legSettlDate = getTagStringValue(null, 588, buf, this$static.legSettlDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 683) {
			noLegStipulations = getTagIntValue(null, 683, buf);
			$getAll_49(this$static.legStipulations, noLegStipulations, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 539) {
			noNestedPartyIDs = getTagIntValue(null, 539, buf);
			$getAll_57(this$static.nestedParties, noNestedPartyIDs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 686) {
			this$static.legPriceType = fromInt(getTagIntValue(null, 686, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 681) {
			this$static.legBidPx = getTagFloatValue(null, 681, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 684) {
			this$static.legOfferPx = getTagFloatValue(null, 684, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 654) {
			this$static.legRefID = getTagStringValue(null, 654, buf, this$static.legRefID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1067) {
			this$static.legBidForwardPoints = getTagFloatValue(null, 1067, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1068) {
			this$static.legOfferForwardPoints = getTagFloatValue(null, 1068, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 676) {
			$getAll_45(this$static.legBenchmarkCurveData, 676, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_26() {
		$clinit_FixMessage();
	}

	function $toString_46(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && (s += $trim($toString_37(this$static.instrumentLeg)));
		neq(this$static.legQty, P7fffffffffffffff_longLit) && (s += 'LegQty(687)=' + $trim('' + toString_183(this$static.legQty)) + charToString(sep));
		neq(this$static.legOrderQty, P7fffffffffffffff_longLit) && (s += 'LegOrderQty(685)=' + $trim('' + toString_183(this$static.legOrderQty)) + charToString(sep));
		neq(this$static.legSwapType, P7fffffffffffffff_longLit) && (s += 'LegSwapType(690)=' + $trim('' + toString_183(this$static.legSwapType)) + charToString(sep));
		this$static.legSettlType != 127 && (s += 'LegSettlType(587)=' + $trim('' + this$static.legSettlType) + charToString(sep));
		this$static.legSettlDate[0] != 0 && (s += 'LegSettlDate(588)=' + $trim(_String(this$static.legSettlDate)) + charToString(sep));
		neq(fromInt(this$static.legStipulations.noLegStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_49(this$static.legStipulations)));
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_65(this$static.nestedParties)));
		neq(this$static.legPriceType, P7fffffffffffffff_longLit) && (s += 'LegPriceType(686)=' + $trim('' + toString_183(this$static.legPriceType)) + charToString(sep));
		neq(this$static.legBidPx, P7fffffffffffffff_longLit) && (s += 'LegBidPx(681)=' + $trim('' + toString_183(this$static.legBidPx)) + charToString(sep));
		neq(this$static.legOfferPx, P7fffffffffffffff_longLit) && (s += 'LegOfferPx(684)=' + $trim('' + toString_183(this$static.legOfferPx)) + charToString(sep));
		this$static.legRefID[0] != 0 && (s += 'LegRefID(654)=' + $trim(_String(this$static.legRefID)) + charToString(sep));
		neq(this$static.legBidForwardPoints, P7fffffffffffffff_longLit) && (s += 'LegBidForwardPoints(1067)=' + $trim('' + toString_183(this$static.legBidForwardPoints)) + charToString(sep));
		neq(this$static.legOfferForwardPoints, P7fffffffffffffff_longLit) && (s += 'LegOfferForwardPoints(1068)=' + $trim('' + toString_183(this$static.legOfferForwardPoints)) + charToString(sep));
		this$static.legBenchmarkCurveData.legBenchmarkCurveCurrency[0] != 0 && (s += $trim($toString_42(this$static.legBenchmarkCurveData)));
		return s;
	}

	function FixLegQuotGrp$LegQuotGrp_0() {
		this.instrumentLeg = new FixInstrumentLeg_0;
		this.legSettlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legStipulations = new FixLegStipulations_0;
		this.nestedParties = new FixNestedParties_0;
		this.legRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legBenchmarkCurveData = new FixLegBenchmarkCurveData_0;
		$clear_51(this);
	}

	defineSeed(585, 1, makeCastMap([Q$FixComponent, Q$FixLegQuotGrp$LegQuotGrp]), FixLegQuotGrp$LegQuotGrp_0);
	_.equals$ = function equals_86(o) {
		return $equals_45(this, o);
	};
	_.toString$ = function toString_75() {
		return $toString_46(this);
	};
	_.legBidForwardPoints = P0_longLit;
	_.legBidPx = P0_longLit;
	_.legOfferForwardPoints = P0_longLit;
	_.legOfferPx = P0_longLit;
	_.legOrderQty = P0_longLit;
	_.legPriceType = P0_longLit;
	_.legQty = P0_longLit;
	_.legSettlType = 32;
	_.legSwapType = P0_longLit;

	function $clear_52(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegSecurityAltID; i_0++)
		$clear_53(this$static.group[i_0]);
	}

	function $encode_39(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegSecurityAltID; i_0++)
		$encode_40(this$static.group[i_0], out);
	}

	function $equals_46(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixLegSecAltIDGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegSecurityAltID; i_0++)
		if (!$equals_47(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_48(this$static, noLegSecurityAltID, buf) {
		var i_0, i0;
		this$static.noLegSecurityAltID = noLegSecurityAltID;
		if (noLegSecurityAltID < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegSecurityAltID), P25c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegSecurityAltID) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegSecAltIDGrp$LegSecAltIDGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixLegSecAltIDGrp$LegSecAltIDGrp, noLegSecurityAltID, 0);
			for (i0 = 0; i0 < noLegSecurityAltID; i0++)
			this$static.group[i0] = new FixLegSecAltIDGrp$LegSecAltIDGrp_0;
		}
		for (i_0 = 0; i_0 < noLegSecurityAltID; i_0++)
		$getAllGroup_16(this$static.group[i_0], buf);
	}

	function $toString_47(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegSecurityAltID; i_0++)
		s += $toString_48(this$static.group[i_0]);
		return s;
	}

	function FixLegSecAltIDGrp_0() {}

	defineSeed(586, 1, makeCastMap([Q$FixLegSecAltIDGrp]), FixLegSecAltIDGrp_0);
	_.equals$ = function equals_87(o) {
		return $equals_46(this, o);
	};
	_.toString$ = function toString_76() {
		return $toString_47(this);
	};
	_.noLegSecurityAltID = 0;

	function $clear_53(this$static) {
		$clinit_Utils();
		this$static.noLegSecurityAltID[0] = 0;
		this$static.legSecurityAltID[0] = 0;
		this$static.legSecurityAltIDSource[0] = 0;
	}

	function $encode_40(this$static, out) {
		$clinit_FixUtils();
		this$static.noLegSecurityAltID[0] != 0 && putFixTag_2(out, 604, this$static.noLegSecurityAltID, lastIndexTrim(this$static.noLegSecurityAltID));
		this$static.legSecurityAltID[0] != 0 && putFixTag_2(out, 605, this$static.legSecurityAltID, lastIndexTrim(this$static.legSecurityAltID));
		this$static.legSecurityAltIDSource[0] != 0 && putFixTag_2(out, 606, this$static.legSecurityAltIDSource, lastIndexTrim(this$static.legSecurityAltIDSource));
	}

	function $equals_47(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLegSecAltIDGrp$LegSecAltIDGrp)) {
			$print_27(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.noLegSecurityAltID, msg.noLegSecurityAltID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecurityAltID, msg.legSecurityAltID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legSecurityAltIDSource, msg.legSecurityAltIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_16(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 604) {
			this$static.noLegSecurityAltID = getTagStringValue(null, 604, buf, this$static.noLegSecurityAltID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 605) {
			this$static.legSecurityAltID = getTagStringValue(null, 605, buf, this$static.legSecurityAltID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 606) {
			this$static.legSecurityAltIDSource = getTagStringValue(null, 606, buf, this$static.legSecurityAltIDSource);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_27() {
		$clinit_FixMessage();
	}

	function $toString_48(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.noLegSecurityAltID[0] != 0 && (s += 'NoLegSecurityAltID(604)=' + $trim(_String(this$static.noLegSecurityAltID)) + charToString(sep));
		this$static.legSecurityAltID[0] != 0 && (s += 'LegSecurityAltID(605)=' + $trim(_String(this$static.legSecurityAltID)) + charToString(sep));
		this$static.legSecurityAltIDSource[0] != 0 && (s += 'LegSecurityAltIDSource(606)=' + $trim(_String(this$static.legSecurityAltIDSource)) + charToString(sep));
		return s;
	}

	function FixLegSecAltIDGrp$LegSecAltIDGrp_0() {
		this.noLegSecurityAltID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityAltID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legSecurityAltIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_53(this);
	}

	defineSeed(587, 1, makeCastMap([Q$FixComponent, Q$FixLegSecAltIDGrp$LegSecAltIDGrp]), FixLegSecAltIDGrp$LegSecAltIDGrp_0);
	_.equals$ = function equals_88(o) {
		return $equals_47(this, o);
	};
	_.toString$ = function toString_77() {
		return $toString_48(this);
	};

	function $clear_54(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegStipulations; i_0++)
		$clear_55(this$static.group[i_0]);
	}

	function $encode_41(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegStipulations; i_0++)
		$encode_42(this$static.group[i_0], out);
	}

	function $equals_48(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixLegStipulations)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegStipulations; i_0++)
		if (!$equals_49(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_49(this$static, noLegStipulations, buf) {
		var i_0, i0;
		this$static.noLegStipulations = noLegStipulations;
		if (noLegStipulations < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegStipulations), P2ab_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegStipulations) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegStipulations$LegStipulations_2_classLit, makeCastMap([Q$Serializable]), Q$FixLegStipulations$LegStipulations, noLegStipulations, 0);
			for (i0 = 0; i0 < noLegStipulations; i0++)
			this$static.group[i0] = new FixLegStipulations$LegStipulations_0;
		}
		for (i_0 = 0; i_0 < noLegStipulations; i_0++)
		$getAllGroup_17(this$static.group[i_0], buf);
	}

	function $toString_49(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegStipulations; i_0++)
		s += $toString_50(this$static.group[i_0]);
		return s;
	}

	function FixLegStipulations_0() {}

	defineSeed(588, 1, makeCastMap([Q$FixLegStipulations]), FixLegStipulations_0);
	_.equals$ = function equals_89(o) {
		return $equals_48(this, o);
	};
	_.toString$ = function toString_78() {
		return $toString_49(this);
	};
	_.noLegStipulations = 0;

	function $clear_55(this$static) {
		$clinit_Utils();
		this$static.legStipulationType[0] = 0;
		this$static.legStipulationValue[0] = 0;
	}

	function $encode_42(this$static, out) {
		$clinit_FixUtils();
		this$static.legStipulationType[0] != 0 && putFixTag_2(out, 688, this$static.legStipulationType, lastIndexTrim(this$static.legStipulationType));
		this$static.legStipulationValue[0] != 0 && putFixTag_2(out, 689, this$static.legStipulationValue, lastIndexTrim(this$static.legStipulationValue));
	}

	function $equals_49(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLegStipulations$LegStipulations)) {
			$print_28(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.legStipulationType, msg.legStipulationType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.legStipulationValue, msg.legStipulationValue)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_17(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 688) {
			this$static.legStipulationType = getTagStringValue(null, 688, buf, this$static.legStipulationType);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 689) {
			this$static.legStipulationValue = getTagStringValue(null, 689, buf, this$static.legStipulationValue);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_28() {
		$clinit_FixMessage();
	}

	function $toString_50(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.legStipulationType[0] != 0 && (s += 'LegStipulationType(688)=' + $trim(_String(this$static.legStipulationType)) + charToString(sep));
		this$static.legStipulationValue[0] != 0 && (s += 'LegStipulationValue(689)=' + $trim(_String(this$static.legStipulationValue)) + charToString(sep));
		return s;
	}

	function FixLegStipulations$LegStipulations_0() {
		this.legStipulationType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legStipulationValue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.legStipulationType[0] = 0;
		this.legStipulationValue[0] = 0;
	}

	defineSeed(589, 1, makeCastMap([Q$FixComponent, Q$FixLegStipulations$LegStipulations]), FixLegStipulations$LegStipulations_0);
	_.equals$ = function equals_90(o) {
		return $equals_49(this, o);
	};
	_.toString$ = function toString_79() {
		return $toString_50(this);
	};

	function $clear_56(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLotTypeRules; i_0++)
		$clear_57(this$static.group[i_0]);
	}

	function $equals_50(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixLotTypeRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLotTypeRules; i_0++)
		if (!$equals_51(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_50(this$static, noLotTypeRules, buf) {
		var i_0, i0;
		this$static.noLotTypeRules = noLotTypeRules;
		if (noLotTypeRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLotTypeRules), P4d2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLotTypeRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLotTypeRules$LotTypeRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixLotTypeRules$LotTypeRules, noLotTypeRules, 0);
			for (i0 = 0; i0 < noLotTypeRules; i0++)
			this$static.group[i0] = new FixLotTypeRules$LotTypeRules_0;
		}
		for (i_0 = 0; i_0 < noLotTypeRules; i_0++)
		$getAllGroup_18(this$static.group[i_0], buf);
	}

	function $toString_51(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLotTypeRules; i_0++)
		s += $toString_52(this$static.group[i_0]);
		return s;
	}

	function FixLotTypeRules_0() {}

	defineSeed(590, 1, makeCastMap([Q$FixLotTypeRules]), FixLotTypeRules_0);
	_.equals$ = function equals_91(o) {
		return $equals_50(this, o);
	};
	_.toString$ = function toString_80() {
		return $toString_51(this);
	};
	_.noLotTypeRules = 0;

	function $clear_57(this$static) {
		this$static.lotType = 127;
		this$static.minLotSize = P7fffffffffffffff_longLit;
	}

	function $equals_51(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixLotTypeRules$LotTypeRules)) {
			$print_29(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.lotType != msg.lotType) {
			ret = false;
			$print_29((valueOf(this$static.lotType), valueOf(msg.lotType)));
		}
		if (neq(this$static.minLotSize, msg.minLotSize)) {
			ret = false;
			$print_29((valueOf_1(this$static.minLotSize), valueOf_1(msg.minLotSize)));
		}
		return ret;
	}

	function $getAllGroup_18(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1093) {
			this$static.lotType = getTagCharValue(null, 1093, buf);
			if (!isValid_72(this$static.lotType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.lotType + ') for tag'), P445_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1231) {
			this$static.minLotSize = getTagFloatValue(null, 1231, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_29() {
		$clinit_FixMessage();
	}

	function $toString_52(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.lotType != 127 && (s += 'LotType(1093)=' + $trim('' + this$static.lotType) + charToString(sep));
		neq(this$static.minLotSize, P7fffffffffffffff_longLit) && (s += 'MinLotSize(1231)=' + $trim('' + toString_183(this$static.minLotSize)) + charToString(sep));
		return s;
	}

	function FixLotTypeRules$LotTypeRules_0() {
		this.lotType = 127;
		this.minLotSize = P7fffffffffffffff_longLit;
	}

	defineSeed(591, 1, makeCastMap([Q$FixComponent, Q$FixLotTypeRules$LotTypeRules]), FixLotTypeRules$LotTypeRules_0);
	_.equals$ = function equals_92(o) {
		return $equals_51(this, o);
	};
	_.toString$ = function toString_81() {
		return $toString_52(this);
	};
	_.lotType = 32;
	_.minLotSize = P0_longLit;

	function $clear_58(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMDFeedTypes; i_0++)
		$clear_59(this$static.group[i_0]);
	}

	function $equals_52(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixMarketDataFeedTypes)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noMDFeedTypes; i_0++)
		if (!$equals_53(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_51(this$static, noMDFeedTypes, buf) {
		var i_0, i0;
		this$static.noMDFeedTypes = noMDFeedTypes;
		if (noMDFeedTypes < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noMDFeedTypes), P475_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noMDFeedTypes) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMarketDataFeedTypes$MarketDataFeedTypes_2_classLit, makeCastMap([Q$Serializable]), Q$FixMarketDataFeedTypes$MarketDataFeedTypes, noMDFeedTypes, 0);
			for (i0 = 0; i0 < noMDFeedTypes; i0++)
			this$static.group[i0] = new FixMarketDataFeedTypes$MarketDataFeedTypes_0;
		}
		for (i_0 = 0; i_0 < noMDFeedTypes; i_0++)
		$getAllGroup_19(this$static.group[i_0], buf);
	}

	function $toString_53(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noMDFeedTypes; i_0++)
		s += $toString_54(this$static.group[i_0]);
		return s;
	}

	function FixMarketDataFeedTypes_0() {}

	defineSeed(592, 1, makeCastMap([Q$FixMarketDataFeedTypes]), FixMarketDataFeedTypes_0);
	_.equals$ = function equals_93(o) {
		return $equals_52(this, o);
	};
	_.toString$ = function toString_82() {
		return $toString_53(this);
	};
	_.noMDFeedTypes = 0;

	function $clear_59(this$static) {
		$clinit_Utils();
		this$static.mDFeedType[0] = 0;
		this$static.marketDepth = P7fffffffffffffff_longLit;
		this$static.mDBookType = P7fffffffffffffff_longLit;
	}

	function $equals_53(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixMarketDataFeedTypes$MarketDataFeedTypes)) {
			$print_30(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.mDFeedType, msg.mDFeedType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.marketDepth, msg.marketDepth)) {
			ret = false;
			$print_30((valueOf_1(this$static.marketDepth), valueOf_1(msg.marketDepth)));
		}
		if (neq(this$static.mDBookType, msg.mDBookType)) {
			ret = false;
			$print_30((valueOf_1(this$static.mDBookType), valueOf_1(msg.mDBookType)));
		}
		return ret;
	}

	function $getAllGroup_19(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1022) {
			this$static.mDFeedType = getTagStringValue(null, 1022, buf, this$static.mDFeedType);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 264) {
			this$static.marketDepth = fromInt(getTagIntValue(null, 264, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1021) {
			this$static.mDBookType = fromInt(getTagIntValue(null, 1021, buf));
			if (!isValid_73(this$static.mDBookType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.mDBookType) + ') for tag'), P3fd_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_30() {
		$clinit_FixMessage();
	}

	function $toString_54(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.mDFeedType[0] != 0 && (s += 'MDFeedType(1022)=' + $trim(_String(this$static.mDFeedType)) + charToString(sep));
		neq(this$static.marketDepth, P7fffffffffffffff_longLit) && (s += 'MarketDepth(264)=' + $trim('' + toString_183(this$static.marketDepth)) + charToString(sep));
		neq(this$static.mDBookType, P7fffffffffffffff_longLit) && (s += 'MDBookType(1021)=' + $trim('' + toString_183(this$static.mDBookType)) + charToString(sep));
		return s;
	}

	function FixMarketDataFeedTypes$MarketDataFeedTypes_0() {
		this.mDFeedType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_59(this);
	}

	defineSeed(593, 1, makeCastMap([Q$FixComponent, Q$FixMarketDataFeedTypes$MarketDataFeedTypes]), FixMarketDataFeedTypes$MarketDataFeedTypes_0);
	_.equals$ = function equals_94(o) {
		return $equals_53(this, o);
	};
	_.toString$ = function toString_83() {
		return $toString_54(this);
	};
	_.mDBookType = P0_longLit;
	_.marketDepth = P0_longLit;

	function $clear_60(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMatchRules; i_0++)
		$clear_61(this$static.group[i_0]);
	}

	function $equals_54(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixMatchRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noMatchRules; i_0++)
		if (!$equals_55(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_52(this$static, noMatchRules, buf) {
		var i_0, i0;
		this$static.noMatchRules = noMatchRules;
		if (noMatchRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noMatchRules), P4d3_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noMatchRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMatchRules$MatchRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixMatchRules$MatchRules, noMatchRules, 0);
			for (i0 = 0; i0 < noMatchRules; i0++)
			this$static.group[i0] = new FixMatchRules$MatchRules_0;
		}
		for (i_0 = 0; i_0 < noMatchRules; i_0++)
		$getAllGroup_20(this$static.group[i_0], buf);
	}

	function $toString_55(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noMatchRules; i_0++)
		s += $toString_56(this$static.group[i_0]);
		return s;
	}

	function FixMatchRules_0() {}

	defineSeed(594, 1, makeCastMap([Q$FixMatchRules]), FixMatchRules_0);
	_.equals$ = function equals_95(o) {
		return $equals_54(this, o);
	};
	_.toString$ = function toString_84() {
		return $toString_55(this);
	};
	_.noMatchRules = 0;

	function $clear_61(this$static) {
		$clinit_Utils();
		this$static.matchAlgorithm[0] = 0;
		this$static.matchType[0] = 0;
	}

	function $equals_55(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixMatchRules$MatchRules)) {
			$print_31(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.matchAlgorithm, msg.matchAlgorithm)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.matchType, msg.matchType)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_20(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1142) {
			this$static.matchAlgorithm = getTagStringValue(null, 1142, buf, this$static.matchAlgorithm);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 574) {
			this$static.matchType = getTagStringValue(null, 574, buf, this$static.matchType);
			if (!isValid_75(this$static.matchType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.matchType + ') for tag'), P23e_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_31() {
		$clinit_FixMessage();
	}

	function $toString_56(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.matchAlgorithm[0] != 0 && (s += 'MatchAlgorithm(1142)=' + $trim(_String(this$static.matchAlgorithm)) + charToString(sep));
		this$static.matchType[0] != 0 && (s += 'MatchType(574)=' + $trim(_String(this$static.matchType)) + charToString(sep));
		return s;
	}

	function FixMatchRules$MatchRules_0() {
		this.matchAlgorithm = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.matchType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.matchAlgorithm[0] = 0;
		this.matchType[0] = 0;
	}

	defineSeed(595, 1, makeCastMap([Q$FixComponent, Q$FixMatchRules$MatchRules]), FixMatchRules$MatchRules_0);
	_.equals$ = function equals_96(o) {
		return $equals_55(this, o);
	};
	_.toString$ = function toString_85() {
		return $toString_56(this);
	};

	function $clear_62(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMaturityRules; i_0++)
		$clear_63(this$static.group[i_0]);
	}

	function $equals_56(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixMaturityRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noMaturityRules; i_0++)
		if (!$equals_57(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_53(this$static, noMaturityRules, buf) {
		var i_0, i0;
		this$static.noMaturityRules = noMaturityRules;
		if (noMaturityRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noMaturityRules), P4d4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noMaturityRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMaturityRules$MaturityRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixMaturityRules$MaturityRules, noMaturityRules, 0);
			for (i0 = 0; i0 < noMaturityRules; i0++)
			this$static.group[i0] = new FixMaturityRules$MaturityRules_0;
		}
		for (i_0 = 0; i_0 < noMaturityRules; i_0++)
		$getAllGroup_21(this$static.group[i_0], buf);
	}

	function $toString_57(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noMaturityRules; i_0++)
		s += $toString_58(this$static.group[i_0]);
		return s;
	}

	function FixMaturityRules_0() {}

	defineSeed(596, 1, makeCastMap([Q$FixMaturityRules]), FixMaturityRules_0);
	_.equals$ = function equals_97(o) {
		return $equals_56(this, o);
	};
	_.toString$ = function toString_86() {
		return $toString_57(this);
	};
	_.noMaturityRules = 0;

	function $clear_63(this$static) {
		$clinit_Utils();
		this$static.maturityRuleID[0] = 0;
		this$static.maturityMonthYearFormat = P7fffffffffffffff_longLit;
		this$static.maturityMonthYearIncrementUnits = P7fffffffffffffff_longLit;
		this$static.startMaturityMonthYear[0] = 0;
		this$static.endMaturityMonthYear[0] = 0;
		this$static.maturityMonthYearIncrement = P7fffffffffffffff_longLit;
	}

	function $equals_57(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixMaturityRules$MaturityRules)) {
			$print_32(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.maturityRuleID, msg.maturityRuleID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.maturityMonthYearFormat, msg.maturityMonthYearFormat)) {
			ret = false;
			$print_32((valueOf_1(this$static.maturityMonthYearFormat), valueOf_1(msg.maturityMonthYearFormat)));
		}
		if (neq(this$static.maturityMonthYearIncrementUnits, msg.maturityMonthYearIncrementUnits)) {
			ret = false;
			$print_32((valueOf_1(this$static.maturityMonthYearIncrementUnits), valueOf_1(msg.maturityMonthYearIncrementUnits)));
		}
		if (!equals_12(this$static.startMaturityMonthYear, msg.startMaturityMonthYear)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.endMaturityMonthYear, msg.endMaturityMonthYear)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.maturityMonthYearIncrement, msg.maturityMonthYearIncrement)) {
			ret = false;
			$print_32((valueOf_1(this$static.maturityMonthYearIncrement), valueOf_1(msg.maturityMonthYearIncrement)));
		}
		return ret;
	}

	function $getAllGroup_21(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1222) {
			this$static.maturityRuleID = getTagStringValue(null, 1222, buf, this$static.maturityRuleID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1303) {
			this$static.maturityMonthYearFormat = fromInt(getTagIntValue(null, 1303, buf));
			if (!isValid_76(this$static.maturityMonthYearFormat)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.maturityMonthYearFormat) + ') for tag'), P517_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1302) {
			this$static.maturityMonthYearIncrementUnits = fromInt(getTagIntValue(null, 1302, buf));
			if (!isValid_77(this$static.maturityMonthYearIncrementUnits)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.maturityMonthYearIncrementUnits) + ') for tag'), P516_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1241) {
			this$static.startMaturityMonthYear = getTagStringValue(null, 1241, buf, this$static.startMaturityMonthYear);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1226) {
			this$static.endMaturityMonthYear = getTagStringValue(null, 1226, buf, this$static.endMaturityMonthYear);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1229) {
			this$static.maturityMonthYearIncrement = fromInt(getTagIntValue(null, 1229, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_32() {
		$clinit_FixMessage();
	}

	function $toString_58(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.maturityRuleID[0] != 0 && (s += 'MaturityRuleID(1222)=' + $trim(_String(this$static.maturityRuleID)) + charToString(sep));
		neq(this$static.maturityMonthYearFormat, P7fffffffffffffff_longLit) && (s += 'MaturityMonthYearFormat(1303)=' + $trim('' + toString_183(this$static.maturityMonthYearFormat)) + charToString(sep));
		neq(this$static.maturityMonthYearIncrementUnits, P7fffffffffffffff_longLit) && (s += 'MaturityMonthYearIncrementUnits(1302)=' + $trim('' + toString_183(this$static.maturityMonthYearIncrementUnits)) + charToString(sep));
		this$static.startMaturityMonthYear[0] != 0 && (s += 'StartMaturityMonthYear(1241)=' + $trim(_String(this$static.startMaturityMonthYear)) + charToString(sep));
		this$static.endMaturityMonthYear[0] != 0 && (s += 'EndMaturityMonthYear(1226)=' + $trim(_String(this$static.endMaturityMonthYear)) + charToString(sep));
		neq(this$static.maturityMonthYearIncrement, P7fffffffffffffff_longLit) && (s += 'MaturityMonthYearIncrement(1229)=' + $trim('' + toString_183(this$static.maturityMonthYearIncrement)) + charToString(sep));
		return s;
	}

	function FixMaturityRules$MaturityRules_0() {
		this.maturityRuleID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.startMaturityMonthYear = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.endMaturityMonthYear = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_63(this);
	}

	defineSeed(597, 1, makeCastMap([Q$FixComponent, Q$FixMaturityRules$MaturityRules]), FixMaturityRules$MaturityRules_0);
	_.equals$ = function equals_98(o) {
		return $equals_57(this, o);
	};
	_.toString$ = function toString_87() {
		return $toString_58(this);
	};
	_.maturityMonthYearFormat = P0_longLit;
	_.maturityMonthYearIncrement = P0_longLit;
	_.maturityMonthYearIncrementUnits = P0_longLit;

	function $clear_64(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMiscFees; i_0++)
		$clear_65(this$static.group[i_0]);
	}

	function $encode_43(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMiscFees; i_0++)
		$encode_44(this$static.group[i_0], out);
	}

	function $equals_58(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixMiscFeesGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noMiscFees; i_0++)
		if (!$equals_59(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_54(this$static, noMiscFees, buf) {
		var i_0, i0;
		this$static.noMiscFees = noMiscFees;
		if (noMiscFees < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noMiscFees), P88_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noMiscFees) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMiscFeesGrp$MiscFeesGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixMiscFeesGrp$MiscFeesGrp, noMiscFees, 0);
			for (i0 = 0; i0 < noMiscFees; i0++)
			this$static.group[i0] = new FixMiscFeesGrp$MiscFeesGrp_0;
		}
		for (i_0 = 0; i_0 < noMiscFees; i_0++)
		$getAllGroup_22(this$static.group[i_0], buf);
	}

	function $toString_59(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noMiscFees; i_0++)
		s += $toString_60(this$static.group[i_0]);
		return s;
	}

	function FixMiscFeesGrp_0() {}

	defineSeed(598, 1, makeCastMap([Q$FixMiscFeesGrp]), FixMiscFeesGrp_0);
	_.equals$ = function equals_99(o) {
		return $equals_58(this, o);
	};
	_.toString$ = function toString_88() {
		return $toString_59(this);
	};
	_.noMiscFees = 0;

	function $clear_65(this$static) {
		this$static.miscFeeAmt = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.miscFeeCurr[0] = 0;
		this$static.miscFeeType[0] = 0;
		this$static.miscFeeBasis = P7fffffffffffffff_longLit;
	}

	function $encode_44(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.miscFeeAmt, P7fffffffffffffff_longLit) && putFixTag_0(out, 137, this$static.miscFeeAmt);
		this$static.miscFeeCurr[0] != 0 && putFixTag_2(out, 138, this$static.miscFeeCurr, lastIndexTrim(this$static.miscFeeCurr));
		this$static.miscFeeType[0] != 0 && putFixTag_2(out, 139, this$static.miscFeeType, lastIndexTrim(this$static.miscFeeType));
		neq(this$static.miscFeeBasis, P7fffffffffffffff_longLit) && putFixTag_0(out, 891, this$static.miscFeeBasis);
	}

	function $equals_59(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixMiscFeesGrp$MiscFeesGrp)) {
			$print_33(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.miscFeeAmt, msg.miscFeeAmt)) {
			ret = false;
			$print_33((valueOf_1(this$static.miscFeeAmt), valueOf_1(msg.miscFeeAmt)));
		}
		if (!equals_12(this$static.miscFeeCurr, msg.miscFeeCurr)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.miscFeeType, msg.miscFeeType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.miscFeeBasis, msg.miscFeeBasis)) {
			ret = false;
			$print_33((valueOf_1(this$static.miscFeeBasis), valueOf_1(msg.miscFeeBasis)));
		}
		return ret;
	}

	function $getAllGroup_22(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 137) {
			this$static.miscFeeAmt = getTagFloatValue(null, 137, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 138) {
			this$static.miscFeeCurr = getTagStringValue(null, 138, buf, this$static.miscFeeCurr);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 139) {
			this$static.miscFeeType = getTagStringValue(null, 139, buf, this$static.miscFeeType);
			if (!isValid_79(this$static.miscFeeType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.miscFeeType + ') for tag'), P8b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 891) {
			this$static.miscFeeBasis = fromInt(getTagIntValue(null, 891, buf));
			if (!isValid_78(this$static.miscFeeBasis)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.miscFeeBasis) + ') for tag'), P37b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_33() {
		$clinit_FixMessage();
	}

	function $toString_60(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.miscFeeAmt, P7fffffffffffffff_longLit) && (s += 'MiscFeeAmt(137)=' + $trim('' + toString_183(this$static.miscFeeAmt)) + charToString(sep));
		this$static.miscFeeCurr[0] != 0 && (s += 'MiscFeeCurr(138)=' + $trim(_String(this$static.miscFeeCurr)) + charToString(sep));
		this$static.miscFeeType[0] != 0 && (s += 'MiscFeeType(139)=' + $trim(_String(this$static.miscFeeType)) + charToString(sep));
		neq(this$static.miscFeeBasis, P7fffffffffffffff_longLit) && (s += 'MiscFeeBasis(891)=' + $trim('' + toString_183(this$static.miscFeeBasis)) + charToString(sep));
		return s;
	}

	function FixMiscFeesGrp$MiscFeesGrp_0() {
		this.miscFeeCurr = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.miscFeeType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_65(this);
	}

	defineSeed(599, 1, makeCastMap([Q$FixComponent, Q$FixMiscFeesGrp$MiscFeesGrp]), FixMiscFeesGrp$MiscFeesGrp_0);
	_.equals$ = function equals_100(o) {
		return $equals_59(this, o);
	};
	_.toString$ = function toString_89() {
		return $toString_60(this);
	};
	_.miscFeeAmt = P0_longLit;
	_.miscFeeBasis = P0_longLit;

	function $clear_66(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMsgTypes; i_0++)
		$clear_67(this$static.group[i_0]);
	}

	function $encode_45(this$static, out) {
		var i_0;
		if (this$static.noMsgTypes != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 384, fromInt(this$static.noMsgTypes));
			for (i_0 = 0; i_0 < this$static.noMsgTypes; i_0++)
			$encode_46(this$static.group[i_0], out);
		}
	}

	function $equals_60(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixMsgTypeGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noMsgTypes; i_0++)
		if (!$equals_61(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_55(this$static, noMsgTypes, buf) {
		var i_0, i0;
		this$static.noMsgTypes = noMsgTypes;
		if (noMsgTypes < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noMsgTypes), P180_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noMsgTypes) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMsgTypeGrp$MsgTypeGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixMsgTypeGrp$MsgTypeGrp, noMsgTypes, 0);
			for (i0 = 0; i0 < noMsgTypes; i0++)
			this$static.group[i0] = new FixMsgTypeGrp$MsgTypeGrp_0;
		}
		for (i_0 = 0; i_0 < noMsgTypes; i_0++)
		$getAllGroup_23(this$static.group[i_0], buf);
	}

	function $isSet_2(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noMsgTypes; i_0++)
		if ($isSet_3(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_61(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noMsgTypes; i_0++)
		s += $toString_62(this$static.group[i_0]);
		return s;
	}

	function FixMsgTypeGrp_0() {}

	defineSeed(600, 1, makeCastMap([Q$FixMsgTypeGrp]), FixMsgTypeGrp_0);
	_.equals$ = function equals_101(o) {
		return $equals_60(this, o);
	};
	_.toString$ = function toString_90() {
		return $toString_61(this);
	};
	_.noMsgTypes = 0;

	function $clear_67(this$static) {
		$clinit_Utils();
		this$static.refMsgType[0] = 0;
		this$static.msgDirection = 127;
		this$static.refApplVerID[0] = 0;
		this$static.refCstmApplVerID[0] = 0;
		this$static.refApplExtID = P7fffffffffffffff_longLit;
		this$static.defaultVerIndicator = false;
	}

	function $encode_46(this$static, out) {
		$clinit_FixUtils();
		this$static.refMsgType[0] != 0 && putFixTag_2(out, 372, this$static.refMsgType, lastIndexTrim(this$static.refMsgType));
		this$static.msgDirection != 127 && putFixTag(out, 385, this$static.msgDirection);
		this$static.refApplVerID[0] != 0 && putFixTag_2(out, 1130, this$static.refApplVerID, lastIndexTrim(this$static.refApplVerID));
		this$static.refCstmApplVerID[0] != 0 && putFixTag_2(out, 1131, this$static.refCstmApplVerID, lastIndexTrim(this$static.refCstmApplVerID));
		neq(this$static.refApplExtID, P7fffffffffffffff_longLit) && putFixTag_0(out, 1406, this$static.refApplExtID);
		this$static.defaultVerIndicator && putFixTag(out, 1410, this$static.defaultVerIndicator ? 89 : 78);
	}

	function $equals_61(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixMsgTypeGrp$MsgTypeGrp)) {
			$print_34(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.refMsgType, msg.refMsgType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.msgDirection != msg.msgDirection) {
			ret = false;
			$print_34((valueOf(this$static.msgDirection), valueOf(msg.msgDirection)));
		}
		if (!equals_12(this$static.refApplVerID, msg.refApplVerID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.refCstmApplVerID, msg.refCstmApplVerID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.refApplExtID, msg.refApplExtID)) {
			ret = false;
			$print_34((valueOf_1(this$static.refApplExtID), valueOf_1(msg.refApplExtID)));
		}
		if (this$static.defaultVerIndicator != msg.defaultVerIndicator) {
			ret = false;
			$print_34($clinit_Boolean());
		}
		return ret;
	}

	function $getAllGroup_23(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 385) {
			this$static.msgDirection = getTagCharValue(null, 385, buf);
			if (!isValid_81(this$static.msgDirection)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.msgDirection + ') for tag'), P181_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1130) {
			this$static.refApplVerID = getTagStringValue(null, 1130, buf, this$static.refApplVerID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1131) {
			this$static.refCstmApplVerID = getTagStringValue(null, 1131, buf, this$static.refCstmApplVerID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1406) {
			this$static.refApplExtID = fromInt(getTagIntValue(null, 1406, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1410) {
			this$static.defaultVerIndicator = getTagBooleanValue(null, 1410, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_3(this$static) {
		$clinit_FixUtils();
		if (this$static.refMsgType[0] != 0) return true;
		if (this$static.msgDirection != 127) return true;
		if (this$static.refApplVerID[0] != 0) return true;
		if (this$static.refCstmApplVerID[0] != 0) return true;
		if (neq(this$static.refApplExtID, P7fffffffffffffff_longLit)) return true;
		if (this$static.defaultVerIndicator) return true;
		return false;
	}

	function $print_34() {
		$clinit_FixMessage();
	}

	function $toString_62(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.refMsgType[0] != 0 && (s += 'RefMsgType(372)=' + $trim(_String(this$static.refMsgType)) + charToString(sep));
		this$static.msgDirection != 127 && (s += 'MsgDirection(385)=' + $trim('' + this$static.msgDirection) + charToString(sep));
		this$static.refApplVerID[0] != 0 && (s += 'RefApplVerID(1130)=' + $trim(_String(this$static.refApplVerID)) + charToString(sep));
		this$static.refCstmApplVerID[0] != 0 && (s += 'RefCstmApplVerID(1131)=' + $trim(_String(this$static.refCstmApplVerID)) + charToString(sep));
		neq(this$static.refApplExtID, P7fffffffffffffff_longLit) && (s += 'RefApplExtID(1406)=' + $trim('' + toString_183(this$static.refApplExtID)) + charToString(sep));
		this$static.defaultVerIndicator && (s += 'DefaultVerIndicator(1410)=' + $trim('' + this$static.defaultVerIndicator) + charToString(sep));
		return s;
	}

	function FixMsgTypeGrp$MsgTypeGrp_0() {
		this.refMsgType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.refApplVerID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.refCstmApplVerID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_67(this);
	}

	defineSeed(601, 1, makeCastMap([Q$FixComponent, Q$FixMsgTypeGrp$MsgTypeGrp]), FixMsgTypeGrp$MsgTypeGrp_0);
	_.equals$ = function equals_102(o) {
		return $equals_61(this, o);
	};
	_.toString$ = function toString_91() {
		return $toString_62(this);
	};
	_.defaultVerIndicator = false;
	_.msgDirection = 32;
	_.refApplExtID = P0_longLit;

	function $clear_68(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNestedInstrAttrib; i_0++)
		$clear_69(this$static.group[i_0]);
	}

	function $equals_62(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNestedInstrumentAttribute)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNestedInstrAttrib; i_0++)
		if (!$equals_63(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_56(this$static, noNestedInstrAttrib, buf) {
		var i_0, i0;
		this$static.noNestedInstrAttrib = noNestedInstrAttrib;
		if (noNestedInstrAttrib < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNestedInstrAttrib), P520_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNestedInstrAttrib) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedInstrumentAttribute$NestedInstrumentAttribute_2_classLit, makeCastMap([Q$Serializable]), Q$FixNestedInstrumentAttribute$NestedInstrumentAttribute, noNestedInstrAttrib, 0);
			for (i0 = 0; i0 < noNestedInstrAttrib; i0++)
			this$static.group[i0] = new FixNestedInstrumentAttribute$NestedInstrumentAttribute_0;
		}
		for (i_0 = 0; i_0 < noNestedInstrAttrib; i_0++)
		$getAllGroup_24(this$static.group[i_0], buf);
	}

	function $toString_63(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNestedInstrAttrib; i_0++)
		s += $toString_64(this$static.group[i_0]);
		return s;
	}

	function FixNestedInstrumentAttribute_0() {}

	defineSeed(602, 1, makeCastMap([Q$FixNestedInstrumentAttribute]), FixNestedInstrumentAttribute_0);
	_.equals$ = function equals_103(o) {
		return $equals_62(this, o);
	};
	_.toString$ = function toString_92() {
		return $toString_63(this);
	};
	_.noNestedInstrAttrib = 0;

	function $clear_69(this$static) {
		this$static.nestedInstrAttribType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.nestedInstrAttribValue[0] = 0;
	}

	function $equals_63(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNestedInstrumentAttribute$NestedInstrumentAttribute)) {
			$print_35(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.nestedInstrAttribType, msg.nestedInstrAttribType)) {
			ret = false;
			$print_35((valueOf_1(this$static.nestedInstrAttribType), valueOf_1(msg.nestedInstrAttribType)));
		}
		if (!equals_12(this$static.nestedInstrAttribValue, msg.nestedInstrAttribValue)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_24(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1210) {
			this$static.nestedInstrAttribType = fromInt(getTagIntValue(null, 1210, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1211) {
			this$static.nestedInstrAttribValue = getTagStringValue(null, 1211, buf, this$static.nestedInstrAttribValue);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_35() {
		$clinit_FixMessage();
	}

	function $toString_64(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.nestedInstrAttribType, P7fffffffffffffff_longLit) && (s += 'NestedInstrAttribType(1210)=' + $trim('' + toString_183(this$static.nestedInstrAttribType)) + charToString(sep));
		this$static.nestedInstrAttribValue[0] != 0 && (s += 'NestedInstrAttribValue(1211)=' + $trim(_String(this$static.nestedInstrAttribValue)) + charToString(sep));
		return s;
	}

	function FixNestedInstrumentAttribute$NestedInstrumentAttribute_0() {
		this.nestedInstrAttribValue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nestedInstrAttribType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this.nestedInstrAttribValue[0] = 0;
	}

	defineSeed(603, 1, makeCastMap([Q$FixComponent, Q$FixNestedInstrumentAttribute$NestedInstrumentAttribute]), FixNestedInstrumentAttribute$NestedInstrumentAttribute_0);
	_.equals$ = function equals_104(o) {
		return $equals_63(this, o);
	};
	_.toString$ = function toString_93() {
		return $toString_64(this);
	};
	_.nestedInstrAttribType = P0_longLit;

	function $clear_70(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNestedPartyIDs; i_0++)
		$clear_71(this$static.group[i_0]);
	}

	function $encode_47(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNestedPartyIDs; i_0++)
		$encode_48(this$static.group[i_0], out);
	}

	function $equals_64(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNestedParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNestedPartyIDs; i_0++)
		if (!$equals_65(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_57(this$static, noNestedPartyIDs, buf) {
		var i_0, i0;
		this$static.noNestedPartyIDs = noNestedPartyIDs;
		if (noNestedPartyIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNestedPartyIDs), P21b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNestedPartyIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties$NestedParties_2_classLit, makeCastMap([Q$Serializable]), Q$FixNestedParties$NestedParties, noNestedPartyIDs, 0);
			for (i0 = 0; i0 < noNestedPartyIDs; i0++)
			this$static.group[i0] = new FixNestedParties$NestedParties_0;
		}
		for (i_0 = 0; i_0 < noNestedPartyIDs; i_0++)
		$getAllGroup_25(this$static.group[i_0], buf);
	}

	function $toString_65(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNestedPartyIDs; i_0++)
		s += $toString_66(this$static.group[i_0]);
		return s;
	}

	function FixNestedParties_0() {}

	defineSeed(604, 1, makeCastMap([Q$FixNestedParties]), FixNestedParties_0);
	_.equals$ = function equals_105(o) {
		return $equals_64(this, o);
	};
	_.toString$ = function toString_94() {
		return $toString_65(this);
	};
	_.noNestedPartyIDs = 0;

	function $clear_71(this$static) {
		$clinit_Utils();
		this$static.nestedPartyID[0] = 0;
		this$static.nestedPartyIDSource = 127;
		this$static.nestedPartyRole = P7fffffffffffffff_longLit;
		$clear_84(this$static.nstdPtysSubGrp);
	}

	function $encode_48(this$static, out) {
		$clinit_FixUtils();
		this$static.nestedPartyID[0] != 0 && putFixTag_2(out, 524, this$static.nestedPartyID, lastIndexTrim(this$static.nestedPartyID));
		this$static.nestedPartyIDSource != 127 && putFixTag(out, 525, this$static.nestedPartyIDSource);
		neq(this$static.nestedPartyRole, P7fffffffffffffff_longLit) && putFixTag_0(out, 538, this$static.nestedPartyRole);
		neq(fromInt(this$static.nstdPtysSubGrp.noNestedPartySubIDs), P7fffffffffffffff_longLit) && $encode_49(this$static.nstdPtysSubGrp, out);
	}

	function $equals_65(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNestedParties$NestedParties)) {
			$print_36(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nestedPartyID, msg.nestedPartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.nestedPartyIDSource != msg.nestedPartyIDSource) {
			ret = false;
			$print_36((valueOf(this$static.nestedPartyIDSource), valueOf(msg.nestedPartyIDSource)));
		}
		if (neq(this$static.nestedPartyRole, msg.nestedPartyRole)) {
			ret = false;
			$print_36((valueOf_1(this$static.nestedPartyRole), valueOf_1(msg.nestedPartyRole)));
		}
		$equals_78(this$static.nstdPtysSubGrp, msg.nstdPtysSubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_25(this$static, buf) {
		var id_0, lastTagPosition, noNestedPartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 524) {
			this$static.nestedPartyID = getTagStringValue(null, 524, buf, this$static.nestedPartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 525) {
			this$static.nestedPartyIDSource = getTagCharValue(null, 525, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 538) {
			this$static.nestedPartyRole = fromInt(getTagIntValue(null, 538, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 804) {
			noNestedPartySubIDs = getTagIntValue(null, 804, buf);
			$getAll_64(this$static.nstdPtysSubGrp, noNestedPartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_36() {
		$clinit_FixMessage();
	}

	function $toString_66(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nestedPartyID[0] != 0 && (s += 'NestedPartyID(524)=' + $trim(_String(this$static.nestedPartyID)) + charToString(sep));
		this$static.nestedPartyIDSource != 127 && (s += 'NestedPartyIDSource(525)=' + $trim('' + this$static.nestedPartyIDSource) + charToString(sep));
		neq(this$static.nestedPartyRole, P7fffffffffffffff_longLit) && (s += 'NestedPartyRole(538)=' + $trim('' + toString_183(this$static.nestedPartyRole)) + charToString(sep));
		neq(fromInt(this$static.nstdPtysSubGrp.noNestedPartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_79(this$static.nstdPtysSubGrp)));
		return s;
	}

	function FixNestedParties$NestedParties_0() {
		this.nestedPartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nstdPtysSubGrp = new FixNstdPtysSubGrp_0;
		$clear_71(this);
	}

	defineSeed(605, 1, makeCastMap([Q$FixComponent, Q$FixNestedParties$NestedParties]), FixNestedParties$NestedParties_0);
	_.equals$ = function equals_106(o) {
		return $equals_65(this, o);
	};
	_.toString$ = function toString_95() {
		return $toString_66(this);
	};
	_.nestedPartyIDSource = 32;
	_.nestedPartyRole = P0_longLit;

	function $clear_72(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNested2PartyIDs; i_0++)
		$clear_73(this$static.group[i_0]);
	}

	function $equals_66(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNestedParties2)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNested2PartyIDs; i_0++)
		if (!$equals_67(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_58(this$static, noNested2PartyIDs, buf) {
		var i_0, i0;
		this$static.noNested2PartyIDs = noNested2PartyIDs;
		if (noNested2PartyIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNested2PartyIDs), P2f4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNested2PartyIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties2$NestedParties2_2_classLit, makeCastMap([Q$Serializable]), Q$FixNestedParties2$NestedParties2, noNested2PartyIDs, 0);
			for (i0 = 0; i0 < noNested2PartyIDs; i0++)
			this$static.group[i0] = new FixNestedParties2$NestedParties2_0;
		}
		for (i_0 = 0; i_0 < noNested2PartyIDs; i_0++)
		$getAllGroup_26(this$static.group[i_0], buf);
	}

	function $toString_67(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNested2PartyIDs; i_0++)
		s += $toString_68(this$static.group[i_0]);
		return s;
	}

	function FixNestedParties2_0() {}

	defineSeed(606, 1, makeCastMap([Q$FixNestedParties2]), FixNestedParties2_0);
	_.equals$ = function equals_107(o) {
		return $equals_66(this, o);
	};
	_.toString$ = function toString_96() {
		return $toString_67(this);
	};
	_.noNested2PartyIDs = 0;

	function $clear_73(this$static) {
		$clinit_Utils();
		this$static.nested2PartyID[0] = 0;
		this$static.nested2PartyIDSource = 127;
		this$static.nested2PartyRole = P7fffffffffffffff_longLit;
		$clear_78(this$static.nstdPtys2SubGrp);
	}

	function $equals_67(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNestedParties2$NestedParties2)) {
			$print_37(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nested2PartyID, msg.nested2PartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.nested2PartyIDSource != msg.nested2PartyIDSource) {
			ret = false;
			$print_37((valueOf(this$static.nested2PartyIDSource), valueOf(msg.nested2PartyIDSource)));
		}
		if (neq(this$static.nested2PartyRole, msg.nested2PartyRole)) {
			ret = false;
			$print_37((valueOf_1(this$static.nested2PartyRole), valueOf_1(msg.nested2PartyRole)));
		}
		$equals_72(this$static.nstdPtys2SubGrp, msg.nstdPtys2SubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_26(this$static, buf) {
		var id_0, lastTagPosition, noNested2PartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 757) {
			this$static.nested2PartyID = getTagStringValue(null, 757, buf, this$static.nested2PartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 758) {
			this$static.nested2PartyIDSource = getTagCharValue(null, 758, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 759) {
			this$static.nested2PartyRole = fromInt(getTagIntValue(null, 759, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 806) {
			noNested2PartySubIDs = getTagIntValue(null, 806, buf);
			$getAll_61(this$static.nstdPtys2SubGrp, noNested2PartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_37() {
		$clinit_FixMessage();
	}

	function $toString_68(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nested2PartyID[0] != 0 && (s += 'Nested2PartyID(757)=' + $trim(_String(this$static.nested2PartyID)) + charToString(sep));
		this$static.nested2PartyIDSource != 127 && (s += 'Nested2PartyIDSource(758)=' + $trim('' + this$static.nested2PartyIDSource) + charToString(sep));
		neq(this$static.nested2PartyRole, P7fffffffffffffff_longLit) && (s += 'Nested2PartyRole(759)=' + $trim('' + toString_183(this$static.nested2PartyRole)) + charToString(sep));
		neq(fromInt(this$static.nstdPtys2SubGrp.noNested2PartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_73(this$static.nstdPtys2SubGrp)));
		return s;
	}

	function FixNestedParties2$NestedParties2_0() {
		this.nested2PartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nstdPtys2SubGrp = new FixNstdPtys2SubGrp_0;
		$clear_73(this);
	}

	defineSeed(607, 1, makeCastMap([Q$FixComponent, Q$FixNestedParties2$NestedParties2]), FixNestedParties2$NestedParties2_0);
	_.equals$ = function equals_108(o) {
		return $equals_67(this, o);
	};
	_.toString$ = function toString_97() {
		return $toString_68(this);
	};
	_.nested2PartyIDSource = 32;
	_.nested2PartyRole = P0_longLit;

	function $clear_74(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNested3PartyIDs; i_0++)
		$clear_75(this$static.group[i_0]);
	}

	function $equals_68(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNestedParties3)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNested3PartyIDs; i_0++)
		if (!$equals_69(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_59(this$static, noNested3PartyIDs, buf) {
		var i_0, i0;
		this$static.noNested3PartyIDs = noNested3PartyIDs;
		if (noNested3PartyIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNested3PartyIDs), P3b4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNested3PartyIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties3$NestedParties3_2_classLit, makeCastMap([Q$Serializable]), Q$FixNestedParties3$NestedParties3, noNested3PartyIDs, 0);
			for (i0 = 0; i0 < noNested3PartyIDs; i0++)
			this$static.group[i0] = new FixNestedParties3$NestedParties3_0;
		}
		for (i_0 = 0; i_0 < noNested3PartyIDs; i_0++)
		$getAllGroup_27(this$static.group[i_0], buf);
	}

	function $toString_69(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNested3PartyIDs; i_0++)
		s += $toString_70(this$static.group[i_0]);
		return s;
	}

	function FixNestedParties3_0() {}

	defineSeed(608, 1, makeCastMap([Q$FixNestedParties3]), FixNestedParties3_0);
	_.equals$ = function equals_109(o) {
		return $equals_68(this, o);
	};
	_.toString$ = function toString_98() {
		return $toString_69(this);
	};
	_.noNested3PartyIDs = 0;

	function $clear_75(this$static) {
		$clinit_Utils();
		this$static.nested3PartyID[0] = 0;
		this$static.nested3PartyIDSource = 127;
		this$static.nested3PartyRole = P7fffffffffffffff_longLit;
		$clear_80(this$static.nstdPtys3SubGrp);
	}

	function $equals_69(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNestedParties3$NestedParties3)) {
			$print_38(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nested3PartyID, msg.nested3PartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.nested3PartyIDSource != msg.nested3PartyIDSource) {
			ret = false;
			$print_38((valueOf(this$static.nested3PartyIDSource), valueOf(msg.nested3PartyIDSource)));
		}
		if (neq(this$static.nested3PartyRole, msg.nested3PartyRole)) {
			ret = false;
			$print_38((valueOf_1(this$static.nested3PartyRole), valueOf_1(msg.nested3PartyRole)));
		}
		$equals_74(this$static.nstdPtys3SubGrp, msg.nstdPtys3SubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_27(this$static, buf) {
		var id_0, lastTagPosition, noNested3PartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 949) {
			this$static.nested3PartyID = getTagStringValue(null, 949, buf, this$static.nested3PartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 950) {
			this$static.nested3PartyIDSource = getTagCharValue(null, 950, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 951) {
			this$static.nested3PartyRole = fromInt(getTagIntValue(null, 951, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 952) {
			noNested3PartySubIDs = getTagIntValue(null, 952, buf);
			$getAll_62(this$static.nstdPtys3SubGrp, noNested3PartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_38() {
		$clinit_FixMessage();
	}

	function $toString_70(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nested3PartyID[0] != 0 && (s += 'Nested3PartyID(949)=' + $trim(_String(this$static.nested3PartyID)) + charToString(sep));
		this$static.nested3PartyIDSource != 127 && (s += 'Nested3PartyIDSource(950)=' + $trim('' + this$static.nested3PartyIDSource) + charToString(sep));
		neq(this$static.nested3PartyRole, P7fffffffffffffff_longLit) && (s += 'Nested3PartyRole(951)=' + $trim('' + toString_183(this$static.nested3PartyRole)) + charToString(sep));
		neq(fromInt(this$static.nstdPtys3SubGrp.noNested3PartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_75(this$static.nstdPtys3SubGrp)));
		return s;
	}

	function FixNestedParties3$NestedParties3_0() {
		this.nested3PartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nstdPtys3SubGrp = new FixNstdPtys3SubGrp_0;
		$clear_75(this);
	}

	defineSeed(609, 1, makeCastMap([Q$FixComponent, Q$FixNestedParties3$NestedParties3]), FixNestedParties3$NestedParties3_0);
	_.equals$ = function equals_110(o) {
		return $equals_69(this, o);
	};
	_.toString$ = function toString_99() {
		return $toString_70(this);
	};
	_.nested3PartyIDSource = 32;
	_.nested3PartyRole = P0_longLit;

	function $clear_76(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNested4PartyIDs; i_0++)
		$clear_77(this$static.group[i_0]);
	}

	function $equals_70(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNestedParties4)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNested4PartyIDs; i_0++)
		if (!$equals_71(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_60(this$static, noNested4PartyIDs, buf) {
		var i_0, i0;
		this$static.noNested4PartyIDs = noNested4PartyIDs;
		if (noNested4PartyIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNested4PartyIDs), P586_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNested4PartyIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties4$NestedParties4_2_classLit, makeCastMap([Q$Serializable]), Q$FixNestedParties4$NestedParties4, noNested4PartyIDs, 0);
			for (i0 = 0; i0 < noNested4PartyIDs; i0++)
			this$static.group[i0] = new FixNestedParties4$NestedParties4_0;
		}
		for (i_0 = 0; i_0 < noNested4PartyIDs; i_0++)
		$getAllGroup_28(this$static.group[i_0], buf);
	}

	function $toString_71(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNested4PartyIDs; i_0++)
		s += $toString_72(this$static.group[i_0]);
		return s;
	}

	function FixNestedParties4_0() {}

	defineSeed(610, 1, makeCastMap([Q$FixNestedParties4]), FixNestedParties4_0);
	_.equals$ = function equals_111(o) {
		return $equals_70(this, o);
	};
	_.toString$ = function toString_100() {
		return $toString_71(this);
	};
	_.noNested4PartyIDs = 0;

	function $clear_77(this$static) {
		$clinit_Utils();
		this$static.nested4PartyID[0] = 0;
		this$static.nested4PartyIDSource = 127;
		this$static.nested4PartyRole = P7fffffffffffffff_longLit;
		$clear_82(this$static.nstdPtys4SubGrp);
	}

	function $equals_71(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNestedParties4$NestedParties4)) {
			$print_39(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nested4PartyID, msg.nested4PartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.nested4PartyIDSource != msg.nested4PartyIDSource) {
			ret = false;
			$print_39((valueOf(this$static.nested4PartyIDSource), valueOf(msg.nested4PartyIDSource)));
		}
		if (neq(this$static.nested4PartyRole, msg.nested4PartyRole)) {
			ret = false;
			$print_39((valueOf_1(this$static.nested4PartyRole), valueOf_1(msg.nested4PartyRole)));
		}
		$equals_76(this$static.nstdPtys4SubGrp, msg.nstdPtys4SubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_28(this$static, buf) {
		var id_0, lastTagPosition, noNested4PartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1415) {
			this$static.nested4PartyID = getTagStringValue(null, 1415, buf, this$static.nested4PartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1416) {
			this$static.nested4PartyIDSource = getTagCharValue(null, 1416, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1417) {
			this$static.nested4PartyRole = fromInt(getTagIntValue(null, 1417, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1413) {
			noNested4PartySubIDs = getTagIntValue(null, 1413, buf);
			$getAll_63(this$static.nstdPtys4SubGrp, noNested4PartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_39() {
		$clinit_FixMessage();
	}

	function $toString_72(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nested4PartyID[0] != 0 && (s += 'Nested4PartyID(1415)=' + $trim(_String(this$static.nested4PartyID)) + charToString(sep));
		this$static.nested4PartyIDSource != 127 && (s += 'Nested4PartyIDSource(1416)=' + $trim('' + this$static.nested4PartyIDSource) + charToString(sep));
		neq(this$static.nested4PartyRole, P7fffffffffffffff_longLit) && (s += 'Nested4PartyRole(1417)=' + $trim('' + toString_183(this$static.nested4PartyRole)) + charToString(sep));
		neq(fromInt(this$static.nstdPtys4SubGrp.noNested4PartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_77(this$static.nstdPtys4SubGrp)));
		return s;
	}

	function FixNestedParties4$NestedParties4_0() {
		this.nested4PartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nstdPtys4SubGrp = new FixNstdPtys4SubGrp_0;
		$clear_77(this);
	}

	defineSeed(611, 1, makeCastMap([Q$FixComponent, Q$FixNestedParties4$NestedParties4]), FixNestedParties4$NestedParties4_0);
	_.equals$ = function equals_112(o) {
		return $equals_71(this, o);
	};
	_.toString$ = function toString_101() {
		return $toString_72(this);
	};
	_.nested4PartyIDSource = 32;
	_.nested4PartyRole = P0_longLit;

	function $clear_78(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNested2PartySubIDs; i_0++)
		$clear_79(this$static.group[i_0]);
	}

	function $equals_72(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNstdPtys2SubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNested2PartySubIDs; i_0++)
		if (!$equals_73(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_61(this$static, noNested2PartySubIDs, buf) {
		var i_0, i0;
		this$static.noNested2PartySubIDs = noNested2PartySubIDs;
		if (noNested2PartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNested2PartySubIDs), P326_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNested2PartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys2SubGrp$NstdPtys2SubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixNstdPtys2SubGrp$NstdPtys2SubGrp, noNested2PartySubIDs, 0);
			for (i0 = 0; i0 < noNested2PartySubIDs; i0++)
			this$static.group[i0] = new FixNstdPtys2SubGrp$NstdPtys2SubGrp_0;
		}
		for (i_0 = 0; i_0 < noNested2PartySubIDs; i_0++)
		$getAllGroup_29(this$static.group[i_0], buf);
	}

	function $toString_73(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNested2PartySubIDs; i_0++)
		s += $toString_74(this$static.group[i_0]);
		return s;
	}

	function FixNstdPtys2SubGrp_0() {}

	defineSeed(612, 1, makeCastMap([Q$FixNstdPtys2SubGrp]), FixNstdPtys2SubGrp_0);
	_.equals$ = function equals_113(o) {
		return $equals_72(this, o);
	};
	_.toString$ = function toString_102() {
		return $toString_73(this);
	};
	_.noNested2PartySubIDs = 0;

	function $clear_79(this$static) {
		$clinit_Utils();
		this$static.nested2PartySubID[0] = 0;
		this$static.nested2PartySubIDType = P7fffffffffffffff_longLit;
	}

	function $equals_73(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNstdPtys2SubGrp$NstdPtys2SubGrp)) {
			$print_40(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nested2PartySubID, msg.nested2PartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.nested2PartySubIDType, msg.nested2PartySubIDType)) {
			ret = false;
			$print_40((valueOf_1(this$static.nested2PartySubIDType), valueOf_1(msg.nested2PartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_29(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 760) {
			this$static.nested2PartySubID = getTagStringValue(null, 760, buf, this$static.nested2PartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 807) {
			this$static.nested2PartySubIDType = fromInt(getTagIntValue(null, 807, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_40() {
		$clinit_FixMessage();
	}

	function $toString_74(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nested2PartySubID[0] != 0 && (s += 'Nested2PartySubID(760)=' + $trim(_String(this$static.nested2PartySubID)) + charToString(sep));
		neq(this$static.nested2PartySubIDType, P7fffffffffffffff_longLit) && (s += 'Nested2PartySubIDType(807)=' + $trim('' + toString_183(this$static.nested2PartySubIDType)) + charToString(sep));
		return s;
	}

	function FixNstdPtys2SubGrp$NstdPtys2SubGrp_0() {
		this.nested2PartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.nested2PartySubID[0] = 0;
		this.nested2PartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(613, 1, makeCastMap([Q$FixComponent, Q$FixNstdPtys2SubGrp$NstdPtys2SubGrp]), FixNstdPtys2SubGrp$NstdPtys2SubGrp_0);
	_.equals$ = function equals_114(o) {
		return $equals_73(this, o);
	};
	_.toString$ = function toString_103() {
		return $toString_74(this);
	};
	_.nested2PartySubIDType = P0_longLit;

	function $clear_80(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNested3PartySubIDs; i_0++)
		$clear_81(this$static.group[i_0]);
	}

	function $equals_74(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNstdPtys3SubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNested3PartySubIDs; i_0++)
		if (!$equals_75(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_62(this$static, noNested3PartySubIDs, buf) {
		var i_0, i0;
		this$static.noNested3PartySubIDs = noNested3PartySubIDs;
		if (noNested3PartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNested3PartySubIDs), P3b8_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNested3PartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys3SubGrp$NstdPtys3SubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixNstdPtys3SubGrp$NstdPtys3SubGrp, noNested3PartySubIDs, 0);
			for (i0 = 0; i0 < noNested3PartySubIDs; i0++)
			this$static.group[i0] = new FixNstdPtys3SubGrp$NstdPtys3SubGrp_0;
		}
		for (i_0 = 0; i_0 < noNested3PartySubIDs; i_0++)
		$getAllGroup_30(this$static.group[i_0], buf);
	}

	function $toString_75(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNested3PartySubIDs; i_0++)
		s += $toString_76(this$static.group[i_0]);
		return s;
	}

	function FixNstdPtys3SubGrp_0() {}

	defineSeed(614, 1, makeCastMap([Q$FixNstdPtys3SubGrp]), FixNstdPtys3SubGrp_0);
	_.equals$ = function equals_115(o) {
		return $equals_74(this, o);
	};
	_.toString$ = function toString_104() {
		return $toString_75(this);
	};
	_.noNested3PartySubIDs = 0;

	function $clear_81(this$static) {
		$clinit_Utils();
		this$static.nested3PartySubID[0] = 0;
		this$static.nested3PartySubIDType = P7fffffffffffffff_longLit;
	}

	function $equals_75(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNstdPtys3SubGrp$NstdPtys3SubGrp)) {
			$print_41(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nested3PartySubID, msg.nested3PartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.nested3PartySubIDType, msg.nested3PartySubIDType)) {
			ret = false;
			$print_41((valueOf_1(this$static.nested3PartySubIDType), valueOf_1(msg.nested3PartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_30(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 953) {
			this$static.nested3PartySubID = getTagStringValue(null, 953, buf, this$static.nested3PartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 954) {
			this$static.nested3PartySubIDType = fromInt(getTagIntValue(null, 954, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_41() {
		$clinit_FixMessage();
	}

	function $toString_76(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nested3PartySubID[0] != 0 && (s += 'Nested3PartySubID(953)=' + $trim(_String(this$static.nested3PartySubID)) + charToString(sep));
		neq(this$static.nested3PartySubIDType, P7fffffffffffffff_longLit) && (s += 'Nested3PartySubIDType(954)=' + $trim('' + toString_183(this$static.nested3PartySubIDType)) + charToString(sep));
		return s;
	}

	function FixNstdPtys3SubGrp$NstdPtys3SubGrp_0() {
		this.nested3PartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.nested3PartySubID[0] = 0;
		this.nested3PartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(615, 1, makeCastMap([Q$FixComponent, Q$FixNstdPtys3SubGrp$NstdPtys3SubGrp]), FixNstdPtys3SubGrp$NstdPtys3SubGrp_0);
	_.equals$ = function equals_116(o) {
		return $equals_75(this, o);
	};
	_.toString$ = function toString_105() {
		return $toString_76(this);
	};
	_.nested3PartySubIDType = P0_longLit;

	function $clear_82(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNested4PartySubIDs; i_0++)
		$clear_83(this$static.group[i_0]);
	}

	function $equals_76(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNstdPtys4SubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNested4PartySubIDs; i_0++)
		if (!$equals_77(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_63(this$static, noNested4PartySubIDs, buf) {
		var i_0, i0;
		this$static.noNested4PartySubIDs = noNested4PartySubIDs;
		if (noNested4PartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNested4PartySubIDs), P585_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNested4PartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys4SubGrp$NstdPtys4SubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixNstdPtys4SubGrp$NstdPtys4SubGrp, noNested4PartySubIDs, 0);
			for (i0 = 0; i0 < noNested4PartySubIDs; i0++)
			this$static.group[i0] = new FixNstdPtys4SubGrp$NstdPtys4SubGrp_0;
		}
		for (i_0 = 0; i_0 < noNested4PartySubIDs; i_0++)
		$getAllGroup_31(this$static.group[i_0], buf);
	}

	function $toString_77(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNested4PartySubIDs; i_0++)
		s += $toString_78(this$static.group[i_0]);
		return s;
	}

	function FixNstdPtys4SubGrp_0() {}

	defineSeed(616, 1, makeCastMap([Q$FixNstdPtys4SubGrp]), FixNstdPtys4SubGrp_0);
	_.equals$ = function equals_117(o) {
		return $equals_76(this, o);
	};
	_.toString$ = function toString_106() {
		return $toString_77(this);
	};
	_.noNested4PartySubIDs = 0;

	function $clear_83(this$static) {
		$clinit_Utils();
		this$static.nested4PartySubID[0] = 0;
		this$static.nested4PartySubIDType = P7fffffffffffffff_longLit;
	}

	function $equals_77(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNstdPtys4SubGrp$NstdPtys4SubGrp)) {
			$print_42(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nested4PartySubID, msg.nested4PartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.nested4PartySubIDType, msg.nested4PartySubIDType)) {
			ret = false;
			$print_42((valueOf_1(this$static.nested4PartySubIDType), valueOf_1(msg.nested4PartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_31(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1412) {
			this$static.nested4PartySubID = getTagStringValue(null, 1412, buf, this$static.nested4PartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1411) {
			this$static.nested4PartySubIDType = fromInt(getTagIntValue(null, 1411, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_42() {
		$clinit_FixMessage();
	}

	function $toString_78(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nested4PartySubID[0] != 0 && (s += 'Nested4PartySubID(1412)=' + $trim(_String(this$static.nested4PartySubID)) + charToString(sep));
		neq(this$static.nested4PartySubIDType, P7fffffffffffffff_longLit) && (s += 'Nested4PartySubIDType(1411)=' + $trim('' + toString_183(this$static.nested4PartySubIDType)) + charToString(sep));
		return s;
	}

	function FixNstdPtys4SubGrp$NstdPtys4SubGrp_0() {
		this.nested4PartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.nested4PartySubID[0] = 0;
		this.nested4PartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(617, 1, makeCastMap([Q$FixComponent, Q$FixNstdPtys4SubGrp$NstdPtys4SubGrp]), FixNstdPtys4SubGrp$NstdPtys4SubGrp_0);
	_.equals$ = function equals_118(o) {
		return $equals_77(this, o);
	};
	_.toString$ = function toString_107() {
		return $toString_78(this);
	};
	_.nested4PartySubIDType = P0_longLit;

	function $clear_84(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNestedPartySubIDs; i_0++)
		$clear_85(this$static.group[i_0]);
	}

	function $encode_49(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noNestedPartySubIDs; i_0++)
		$encode_50(this$static.group[i_0], out);
	}

	function $equals_78(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixNstdPtysSubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noNestedPartySubIDs; i_0++)
		if (!$equals_79(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_64(this$static, noNestedPartySubIDs, buf) {
		var i_0, i0;
		this$static.noNestedPartySubIDs = noNestedPartySubIDs;
		if (noNestedPartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noNestedPartySubIDs), P324_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noNestedPartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtysSubGrp$NstdPtysSubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixNstdPtysSubGrp$NstdPtysSubGrp, noNestedPartySubIDs, 0);
			for (i0 = 0; i0 < noNestedPartySubIDs; i0++)
			this$static.group[i0] = new FixNstdPtysSubGrp$NstdPtysSubGrp_0;
		}
		for (i_0 = 0; i_0 < noNestedPartySubIDs; i_0++)
		$getAllGroup_32(this$static.group[i_0], buf);
	}

	function $toString_79(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noNestedPartySubIDs; i_0++)
		s += $toString_80(this$static.group[i_0]);
		return s;
	}

	function FixNstdPtysSubGrp_0() {}

	defineSeed(618, 1, makeCastMap([Q$FixNstdPtysSubGrp]), FixNstdPtysSubGrp_0);
	_.equals$ = function equals_119(o) {
		return $equals_78(this, o);
	};
	_.toString$ = function toString_108() {
		return $toString_79(this);
	};
	_.noNestedPartySubIDs = 0;

	function $clear_85(this$static) {
		$clinit_Utils();
		this$static.nestedPartySubID[0] = 0;
		this$static.nestedPartySubIDType = P7fffffffffffffff_longLit;
	}

	function $encode_50(this$static, out) {
		$clinit_FixUtils();
		this$static.nestedPartySubID[0] != 0 && putFixTag_2(out, 545, this$static.nestedPartySubID, lastIndexTrim(this$static.nestedPartySubID));
		neq(this$static.nestedPartySubIDType, P7fffffffffffffff_longLit) && putFixTag_0(out, 805, this$static.nestedPartySubIDType);
	}

	function $equals_79(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixNstdPtysSubGrp$NstdPtysSubGrp)) {
			$print_43(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.nestedPartySubID, msg.nestedPartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.nestedPartySubIDType, msg.nestedPartySubIDType)) {
			ret = false;
			$print_43((valueOf_1(this$static.nestedPartySubIDType), valueOf_1(msg.nestedPartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_32(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 545) {
			this$static.nestedPartySubID = getTagStringValue(null, 545, buf, this$static.nestedPartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 805) {
			this$static.nestedPartySubIDType = fromInt(getTagIntValue(null, 805, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_43() {
		$clinit_FixMessage();
	}

	function $toString_80(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.nestedPartySubID[0] != 0 && (s += 'NestedPartySubID(545)=' + $trim(_String(this$static.nestedPartySubID)) + charToString(sep));
		neq(this$static.nestedPartySubIDType, P7fffffffffffffff_longLit) && (s += 'NestedPartySubIDType(805)=' + $trim('' + toString_183(this$static.nestedPartySubIDType)) + charToString(sep));
		return s;
	}

	function FixNstdPtysSubGrp$NstdPtysSubGrp_0() {
		this.nestedPartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.nestedPartySubID[0] = 0;
		this.nestedPartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(619, 1, makeCastMap([Q$FixComponent, Q$FixNstdPtysSubGrp$NstdPtysSubGrp]), FixNstdPtysSubGrp$NstdPtysSubGrp_0);
	_.equals$ = function equals_120(o) {
		return $equals_79(this, o);
	};
	_.toString$ = function toString_109() {
		return $toString_80(this);
	};
	_.nestedPartySubIDType = P0_longLit;

	function $clear_86(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noOrdTypeRules; i_0++)
		this$static.group[i_0].ordType = 127;
	}

	function $equals_80(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixOrdTypeRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noOrdTypeRules; i_0++)
		if (!$equals_81(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_65(this$static, noOrdTypeRules, buf) {
		var i_0, i0;
		this$static.noOrdTypeRules = noOrdTypeRules;
		if (noOrdTypeRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noOrdTypeRules), P4d5_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noOrdTypeRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixOrdTypeRules$OrdTypeRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixOrdTypeRules$OrdTypeRules, noOrdTypeRules, 0);
			for (i0 = 0; i0 < noOrdTypeRules; i0++)
			this$static.group[i0] = new FixOrdTypeRules$OrdTypeRules_0;
		}
		for (i_0 = 0; i_0 < noOrdTypeRules; i_0++)
		$getAllGroup_33(this$static.group[i_0], buf);
	}

	function $toString_81(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noOrdTypeRules; i_0++)
		s += $toString_82(this$static.group[i_0]);
		return s;
	}

	function FixOrdTypeRules_0() {}

	defineSeed(620, 1, makeCastMap([Q$FixOrdTypeRules]), FixOrdTypeRules_0);
	_.equals$ = function equals_121(o) {
		return $equals_80(this, o);
	};
	_.toString$ = function toString_110() {
		return $toString_81(this);
	};
	_.noOrdTypeRules = 0;

	function $equals_81(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixOrdTypeRules$OrdTypeRules)) {
			$print_44(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.ordType != msg.ordType) {
			ret = false;
			$print_44((valueOf(this$static.ordType), valueOf(msg.ordType)));
		}
		return ret;
	}

	function $getAllGroup_33(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 40) {
			this$static.ordType = getTagCharValue(null, 40, buf);
			if (!isValid_89(this$static.ordType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordType + ') for tag'), P28_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_44() {
		$clinit_FixMessage();
	}

	function $toString_82(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.ordType != 127 && (s += 'OrdType(40)=' + $trim('' + this$static.ordType) + charToString(sep));
		return s;
	}

	function FixOrdTypeRules$OrdTypeRules_0() {
		this.ordType = 127;
	}

	defineSeed(621, 1, makeCastMap([Q$FixComponent, Q$FixOrdTypeRules$OrdTypeRules]), FixOrdTypeRules$OrdTypeRules_0);
	_.equals$ = function equals_122(o) {
		return $equals_81(this, o);
	};
	_.toString$ = function toString_111() {
		return $toString_82(this);
	};
	_.ordType = 32;

	function $clear_87(this$static) {
		this$static.orderQty = P7fffffffffffffff_longLit;
		this$static.cashOrderQty = P7fffffffffffffff_longLit;
		this$static.orderPercent = P7fffffffffffffff_longLit;
		this$static.roundingDirection = 127;
		this$static.roundingModulus = P7fffffffffffffff_longLit;
	}

	function $encode_51(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.orderQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 38, this$static.orderQty);
		neq(this$static.cashOrderQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 152, this$static.cashOrderQty);
		neq(this$static.orderPercent, P7fffffffffffffff_longLit) && putFixFloatTag(out, 516, this$static.orderPercent);
		this$static.roundingDirection != 127 && putFixTag(out, 468, this$static.roundingDirection);
		neq(this$static.roundingModulus, P7fffffffffffffff_longLit) && putFixFloatTag(out, 469, this$static.roundingModulus);
	}

	function $equals_82(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixOrderQtyData)) {
			$print_45(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.orderQty, msg.orderQty)) {
			ret = false;
			$print_45((valueOf_1(this$static.orderQty), valueOf_1(msg.orderQty)));
		}
		if (neq(this$static.cashOrderQty, msg.cashOrderQty)) {
			ret = false;
			$print_45((valueOf_1(this$static.cashOrderQty), valueOf_1(msg.cashOrderQty)));
		}
		if (neq(this$static.orderPercent, msg.orderPercent)) {
			ret = false;
			$print_45((valueOf_1(this$static.orderPercent), valueOf_1(msg.orderPercent)));
		}
		if (this$static.roundingDirection != msg.roundingDirection) {
			ret = false;
			$print_45((valueOf(this$static.roundingDirection), valueOf(msg.roundingDirection)));
		}
		if (neq(this$static.roundingModulus, msg.roundingModulus)) {
			ret = false;
			$print_45((valueOf_1(this$static.roundingModulus), valueOf_1(msg.roundingModulus)));
		}
		return ret;
	}

	function $getAll_66(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 38:
				this$static.orderQty = getTagFloatValue(null, 38, buf);
				break;
			case 152:
				this$static.cashOrderQty = getTagFloatValue(null, 152, buf);
				break;
			case 516:
				this$static.orderPercent = getTagFloatValue(null, 516, buf);
				break;
			case 468:
				this$static.roundingDirection = getTagCharValue(null, 468, buf);
				if (!isValid_136(this$static.roundingDirection)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.roundingDirection + ') for tag'), P1d4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 469:
				this$static.roundingModulus = getTagFloatValue(null, 469, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $isSet_4(this$static) {
		$clinit_FixUtils();
		if (neq(this$static.orderQty, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.cashOrderQty, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.orderPercent, P7fffffffffffffff_longLit)) return true;
		if (this$static.roundingDirection != 127) return true;
		if (neq(this$static.roundingModulus, P7fffffffffffffff_longLit)) return true;
		return false;
	}

	function $print_45() {
		$clinit_FixMessage();
	}

	function $toString_83(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.orderQty, P7fffffffffffffff_longLit) && (s += 'OrderQty(38)=' + $trim('' + toString_183(this$static.orderQty)) + charToString(sep));
		neq(this$static.cashOrderQty, P7fffffffffffffff_longLit) && (s += 'CashOrderQty(152)=' + $trim('' + toString_183(this$static.cashOrderQty)) + charToString(sep));
		neq(this$static.orderPercent, P7fffffffffffffff_longLit) && (s += 'OrderPercent(516)=' + $trim('' + toString_183(this$static.orderPercent)) + charToString(sep));
		this$static.roundingDirection != 127 && (s += 'RoundingDirection(468)=' + $trim('' + this$static.roundingDirection) + charToString(sep));
		neq(this$static.roundingModulus, P7fffffffffffffff_longLit) && (s += 'RoundingModulus(469)=' + $trim('' + toString_183(this$static.roundingModulus)) + charToString(sep));
		return s;
	}

	function FixOrderQtyData_0() {
		$clear_87(this);
	}

	defineSeed(622, 1, makeCastMap([Q$FixComponent, Q$FixOrderQtyData]), FixOrderQtyData_0);
	_.equals$ = function equals_123(o) {
		return $equals_82(this, o);
	};
	_.toString$ = function toString_112() {
		return $toString_83(this);
	};
	_.cashOrderQty = P0_longLit;
	_.orderPercent = P0_longLit;
	_.orderQty = P0_longLit;
	_.roundingDirection = 32;
	_.roundingModulus = P0_longLit;

	function $allocateParties(this$static, num) {
		var i_0;
		this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixParties$Parties_2_classLit, makeCastMap([Q$Serializable]), Q$FixParties$Parties, num, 0);
		for (i_0 = 0; i_0 < num; i_0++)
		this$static.group[i_0] = new FixParties$Parties_0;
	}

	function $clear_88(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPartyIDs; i_0++)
		$clear_89(this$static.group[i_0]);
	}

	function $encode_52(this$static, out) {
		var i_0;
		if (this$static.noPartyIDs != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 453, fromInt(this$static.noPartyIDs));
			for (i_0 = 0; i_0 < this$static.noPartyIDs; i_0++)
			$encode_53(this$static.group[i_0], out);
		}
	}

	function $equals_83(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noPartyIDs; i_0++)
		if (!$equals_84(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_67(this$static, noPartyIDs, buf) {
		var i_0, i0;
		this$static.noPartyIDs = noPartyIDs;
		if (noPartyIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noPartyIDs), P1c5_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noPartyIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixParties$Parties_2_classLit, makeCastMap([Q$Serializable]), Q$FixParties$Parties, noPartyIDs, 0);
			for (i0 = 0; i0 < noPartyIDs; i0++)
			this$static.group[i0] = new FixParties$Parties_0;
		}
		for (i_0 = 0; i_0 < noPartyIDs; i_0++)
		$getAllGroup_34(this$static.group[i_0], buf);
	}

	function $isSet_5(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPartyIDs; i_0++)
		if ($isSet_6(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_84(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noPartyIDs; i_0++)
		s += $toString_85(this$static.group[i_0]);
		return s;
	}

	function FixParties_0() {}

	defineSeed(623, 1, makeCastMap([Q$FixParties]), FixParties_0);
	_.equals$ = function equals_124(o) {
		return $equals_83(this, o);
	};
	_.toString$ = function toString_113() {
		return $toString_84(this);
	};
	_.noPartyIDs = 0;

	function $clear_89(this$static) {
		$clinit_Utils();
		this$static.partyID[0] = 0;
		this$static.partyIDSource = 127;
		this$static.partyRole = P7fffffffffffffff_longLit;
		$clear_98(this$static.ptysSubGrp);
	}

	function $encode_53(this$static, out) {
		$clinit_FixUtils();
		this$static.partyID[0] != 0 && putFixTag_2(out, 448, this$static.partyID, lastIndexTrim(this$static.partyID));
		this$static.partyIDSource != 127 && putFixTag(out, 447, this$static.partyIDSource);
		neq(this$static.partyRole, P7fffffffffffffff_longLit) && putFixTag_0(out, 452, this$static.partyRole);
		neq(fromInt(this$static.ptysSubGrp.noPartySubIDs), P7fffffffffffffff_longLit) && $encode_61(this$static.ptysSubGrp, out);
	}

	function $equals_84(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixParties$Parties)) {
			$print_46(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.partyID, msg.partyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.partyIDSource != msg.partyIDSource) {
			ret = false;
			$print_46((valueOf(this$static.partyIDSource), valueOf(msg.partyIDSource)));
		}
		if (neq(this$static.partyRole, msg.partyRole)) {
			ret = false;
			$print_46((valueOf_1(this$static.partyRole), valueOf_1(msg.partyRole)));
		}
		$equals_93(this$static.ptysSubGrp, msg.ptysSubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_34(this$static, buf) {
		var id_0, lastTagPosition, noPartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 448) {
			this$static.partyID = getTagStringValue(null, 448, buf, this$static.partyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 447) {
			this$static.partyIDSource = getTagCharValue(null, 447, buf);
			if (!isValid_94(this$static.partyIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.partyIDSource + ') for tag'), P1bf_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 452) {
			this$static.partyRole = fromInt(getTagIntValue(null, 452, buf));
			if (!isValid_95(this$static.partyRole)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.partyRole) + ') for tag'), P1c4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 802) {
			noPartySubIDs = getTagIntValue(null, 802, buf);
			$getAll_73(this$static.ptysSubGrp, noPartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_6(this$static) {
		$clinit_FixUtils();
		if (this$static.partyID[0] != 0) return true;
		if (this$static.partyIDSource != 127) return true;
		if (neq(this$static.partyRole, P7fffffffffffffff_longLit)) return true;
		if (neq(fromInt(this$static.ptysSubGrp.noPartySubIDs), P7fffffffffffffff_longLit)) return true;
		return false;
	}

	function $print_46() {
		$clinit_FixMessage();
	}

	function $toString_85(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.partyID[0] != 0 && (s += 'PartyID(448)=' + $trim(_String(this$static.partyID)) + charToString(sep));
		this$static.partyIDSource != 127 && (s += 'PartyIDSource(447)=' + $trim('' + this$static.partyIDSource) + charToString(sep));
		neq(this$static.partyRole, P7fffffffffffffff_longLit) && (s += 'PartyRole(452)=' + $trim('' + toString_183(this$static.partyRole)) + charToString(sep));
		neq(fromInt(this$static.ptysSubGrp.noPartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_94(this$static.ptysSubGrp)));
		return s;
	}

	function FixParties$Parties_0() {
		this.partyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.ptysSubGrp = new FixPtysSubGrp_0;
		$clear_89(this);
	}

	defineSeed(624, 1, makeCastMap([Q$FixComponent, Q$FixParties$Parties]), FixParties$Parties_0);
	_.equals$ = function equals_125(o) {
		return $equals_84(this, o);
	};
	_.toString$ = function toString_114() {
		return $toString_85(this);
	};
	_.partyIDSource = 32;
	_.partyRole = P0_longLit;

	function $clear_90(this$static) {
		this$static.pegOffsetValue = P7fffffffffffffff_longLit;
		this$static.pegPriceType = P7fffffffffffffff_longLit;
		this$static.pegMoveType = P7fffffffffffffff_longLit;
		this$static.pegOffsetType = P7fffffffffffffff_longLit;
		this$static.pegLimitType = P7fffffffffffffff_longLit;
		this$static.pegRoundDirection = P7fffffffffffffff_longLit;
		this$static.pegScope = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.pegSecurityIDSource[0] = 0;
		this$static.pegSecurityID[0] = 0;
		this$static.pegSymbol[0] = 0;
		this$static.pegSecurityDesc[0] = 0;
	}

	function $encode_54(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.pegOffsetValue, P7fffffffffffffff_longLit) && putFixFloatTag(out, 211, this$static.pegOffsetValue);
		neq(this$static.pegPriceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1094, this$static.pegPriceType);
		neq(this$static.pegMoveType, P7fffffffffffffff_longLit) && putFixTag_0(out, 835, this$static.pegMoveType);
		neq(this$static.pegOffsetType, P7fffffffffffffff_longLit) && putFixTag_0(out, 836, this$static.pegOffsetType);
		neq(this$static.pegLimitType, P7fffffffffffffff_longLit) && putFixTag_0(out, 837, this$static.pegLimitType);
		neq(this$static.pegRoundDirection, P7fffffffffffffff_longLit) && putFixTag_0(out, 838, this$static.pegRoundDirection);
		neq(this$static.pegScope, P7fffffffffffffff_longLit) && putFixTag_0(out, 840, this$static.pegScope);
		this$static.pegSecurityIDSource[0] != 0 && putFixTag_2(out, 1096, this$static.pegSecurityIDSource, lastIndexTrim(this$static.pegSecurityIDSource));
		this$static.pegSecurityID[0] != 0 && putFixTag_2(out, 1097, this$static.pegSecurityID, lastIndexTrim(this$static.pegSecurityID));
		this$static.pegSymbol[0] != 0 && putFixTag_2(out, 1098, this$static.pegSymbol, lastIndexTrim(this$static.pegSymbol));
		this$static.pegSecurityDesc[0] != 0 && putFixTag_2(out, 1099, this$static.pegSecurityDesc, lastIndexTrim(this$static.pegSecurityDesc));
	}

	function $equals_85(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPegInstructions)) {
			$print_47(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.pegOffsetValue, msg.pegOffsetValue)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegOffsetValue), valueOf_1(msg.pegOffsetValue)));
		}
		if (neq(this$static.pegPriceType, msg.pegPriceType)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegPriceType), valueOf_1(msg.pegPriceType)));
		}
		if (neq(this$static.pegMoveType, msg.pegMoveType)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegMoveType), valueOf_1(msg.pegMoveType)));
		}
		if (neq(this$static.pegOffsetType, msg.pegOffsetType)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegOffsetType), valueOf_1(msg.pegOffsetType)));
		}
		if (neq(this$static.pegLimitType, msg.pegLimitType)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegLimitType), valueOf_1(msg.pegLimitType)));
		}
		if (neq(this$static.pegRoundDirection, msg.pegRoundDirection)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegRoundDirection), valueOf_1(msg.pegRoundDirection)));
		}
		if (neq(this$static.pegScope, msg.pegScope)) {
			ret = false;
			$print_47((valueOf_1(this$static.pegScope), valueOf_1(msg.pegScope)));
		}
		if (!equals_12(this$static.pegSecurityIDSource, msg.pegSecurityIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.pegSecurityID, msg.pegSecurityID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.pegSymbol, msg.pegSymbol)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.pegSecurityDesc, msg.pegSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAll_68(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 211:
				this$static.pegOffsetValue = getTagFloatValue(null, 211, buf);
				break;
			case 1094:
				this$static.pegPriceType = fromInt(getTagIntValue(null, 1094, buf));
				if (!isValid_100(this$static.pegPriceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.pegPriceType) + ') for tag'), P446_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 835:
				this$static.pegMoveType = fromInt(getTagIntValue(null, 835, buf));
				if (!isValid_98(this$static.pegMoveType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.pegMoveType) + ') for tag'), P343_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 836:
				this$static.pegOffsetType = fromInt(getTagIntValue(null, 836, buf));
				if (!isValid_99(this$static.pegOffsetType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.pegOffsetType) + ') for tag'), P344_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 837:
				this$static.pegLimitType = fromInt(getTagIntValue(null, 837, buf));
				if (!isValid_97(this$static.pegLimitType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.pegLimitType) + ') for tag'), P345_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 838:
				this$static.pegRoundDirection = fromInt(getTagIntValue(null, 838, buf));
				if (!isValid_101(this$static.pegRoundDirection)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.pegRoundDirection) + ') for tag'), P346_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 840:
				this$static.pegScope = fromInt(getTagIntValue(null, 840, buf));
				if (!isValid_102(this$static.pegScope)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.pegScope) + ') for tag'), P348_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1096:
				this$static.pegSecurityIDSource = getTagStringValue(null, 1096, buf, this$static.pegSecurityIDSource);
				break;
			case 1097:
				this$static.pegSecurityID = getTagStringValue(null, 1097, buf, this$static.pegSecurityID);
				break;
			case 1098:
				this$static.pegSymbol = getTagStringValue(null, 1098, buf, this$static.pegSymbol);
				break;
			case 1099:
				this$static.pegSecurityDesc = getTagStringValue(null, 1099, buf, this$static.pegSecurityDesc);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_47() {
		$clinit_FixMessage();
	}

	function $toString_86(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.pegOffsetValue, P7fffffffffffffff_longLit) && (s += 'PegOffsetValue(211)=' + $trim('' + toString_183(this$static.pegOffsetValue)) + charToString(sep));
		neq(this$static.pegPriceType, P7fffffffffffffff_longLit) && (s += 'PegPriceType(1094)=' + $trim('' + toString_183(this$static.pegPriceType)) + charToString(sep));
		neq(this$static.pegMoveType, P7fffffffffffffff_longLit) && (s += 'PegMoveType(835)=' + $trim('' + toString_183(this$static.pegMoveType)) + charToString(sep));
		neq(this$static.pegOffsetType, P7fffffffffffffff_longLit) && (s += 'PegOffsetType(836)=' + $trim('' + toString_183(this$static.pegOffsetType)) + charToString(sep));
		neq(this$static.pegLimitType, P7fffffffffffffff_longLit) && (s += 'PegLimitType(837)=' + $trim('' + toString_183(this$static.pegLimitType)) + charToString(sep));
		neq(this$static.pegRoundDirection, P7fffffffffffffff_longLit) && (s += 'PegRoundDirection(838)=' + $trim('' + toString_183(this$static.pegRoundDirection)) + charToString(sep));
		neq(this$static.pegScope, P7fffffffffffffff_longLit) && (s += 'PegScope(840)=' + $trim('' + toString_183(this$static.pegScope)) + charToString(sep));
		this$static.pegSecurityIDSource[0] != 0 && (s += 'PegSecurityIDSource(1096)=' + $trim(_String(this$static.pegSecurityIDSource)) + charToString(sep));
		this$static.pegSecurityID[0] != 0 && (s += 'PegSecurityID(1097)=' + $trim(_String(this$static.pegSecurityID)) + charToString(sep));
		this$static.pegSymbol[0] != 0 && (s += 'PegSymbol(1098)=' + $trim(_String(this$static.pegSymbol)) + charToString(sep));
		this$static.pegSecurityDesc[0] != 0 && (s += 'PegSecurityDesc(1099)=' + $trim(_String(this$static.pegSecurityDesc)) + charToString(sep));
		return s;
	}

	function FixPegInstructions_0() {
		this.pegSecurityIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.pegSecurityID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.pegSymbol = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.pegSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_90(this);
	}

	defineSeed(625, 1, makeCastMap([Q$FixComponent, Q$FixPegInstructions]), FixPegInstructions_0);
	_.equals$ = function equals_126(o) {
		return $equals_85(this, o);
	};
	_.toString$ = function toString_115() {
		return $toString_86(this);
	};
	_.pegLimitType = P0_longLit;
	_.pegMoveType = P0_longLit;
	_.pegOffsetType = P0_longLit;
	_.pegOffsetValue = P0_longLit;
	_.pegPriceType = P0_longLit;
	_.pegRoundDirection = P0_longLit;
	_.pegScope = P0_longLit;

	function $allocatePositionAmountDatas(this$static, num) {
		var i_0;
		this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionAmountData$PositionAmountData_2_classLit, makeCastMap([Q$Serializable]), Q$FixPositionAmountData$PositionAmountData, num, 0);
		for (i_0 = 0; i_0 < num; i_0++)
		this$static.group[i_0] = new FixPositionAmountData$PositionAmountData_0;
	}

	function $clear_91(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPosAmt; i_0++)
		$clear_92(this$static.group[i_0]);
	}

	function $encode_55(this$static, out) {
		var i_0;
		if (this$static.noPosAmt != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 753, fromInt(this$static.noPosAmt));
			for (i_0 = 0; i_0 < this$static.noPosAmt; i_0++)
			$encode_56(this$static.group[i_0], out);
		}
	}

	function $equals_86(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixPositionAmountData)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noPosAmt; i_0++)
		if (!$equals_87(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_69(this$static, noPosAmt, buf) {
		var i_0, i0;
		this$static.noPosAmt = noPosAmt;
		if (noPosAmt < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noPosAmt), P2f1_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noPosAmt) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionAmountData$PositionAmountData_2_classLit, makeCastMap([Q$Serializable]), Q$FixPositionAmountData$PositionAmountData, noPosAmt, 0);
			for (i0 = 0; i0 < noPosAmt; i0++)
			this$static.group[i0] = new FixPositionAmountData$PositionAmountData_0;
		}
		for (i_0 = 0; i_0 < noPosAmt; i_0++)
		$getAllGroup_35(this$static.group[i_0], buf);
	}

	function $isSet_7(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPosAmt; i_0++)
		if ($isSet_8(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_87(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noPosAmt; i_0++)
		s += $toString_88(this$static.group[i_0]);
		return s;
	}

	function FixPositionAmountData_0() {}

	defineSeed(626, 1, makeCastMap([Q$FixPositionAmountData]), FixPositionAmountData_0);
	_.equals$ = function equals_127(o) {
		return $equals_86(this, o);
	};
	_.toString$ = function toString_116() {
		return $toString_87(this);
	};
	_.noPosAmt = 0;

	function $clear_92(this$static) {
		$clinit_Utils();
		this$static.posAmtType[0] = 0;
		this$static.posAmt = P7fffffffffffffff_longLit;
		this$static.positionCurrency[0] = 0;
	}

	function $encode_56(this$static, out) {
		$clinit_FixUtils();
		this$static.posAmtType[0] != 0 && putFixTag_2(out, 707, this$static.posAmtType, lastIndexTrim(this$static.posAmtType));
		neq(this$static.posAmt, P7fffffffffffffff_longLit) && putFixFloatTag(out, 708, this$static.posAmt);
		this$static.positionCurrency[0] != 0 && putFixTag_2(out, 1055, this$static.positionCurrency, lastIndexTrim(this$static.positionCurrency));
	}

	function $equals_87(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPositionAmountData$PositionAmountData)) {
			$print_48(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.posAmtType, msg.posAmtType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.posAmt, msg.posAmt)) {
			ret = false;
			$print_48((valueOf_1(this$static.posAmt), valueOf_1(msg.posAmt)));
		}
		if (!equals_12(this$static.positionCurrency, msg.positionCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_35(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 707) {
			this$static.posAmtType = getTagStringValue(null, 707, buf, this$static.posAmtType);
			if (!isValid_103(this$static.posAmtType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.posAmtType + ') for tag'), P2c3_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 708) {
			this$static.posAmt = getTagFloatValue(null, 708, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1055) {
			this$static.positionCurrency = getTagStringValue(null, 1055, buf, this$static.positionCurrency);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_8(this$static) {
		$clinit_FixUtils();
		if (this$static.posAmtType[0] != 0) return true;
		if (neq(this$static.posAmt, P7fffffffffffffff_longLit)) return true;
		if (this$static.positionCurrency[0] != 0) return true;
		return false;
	}

	function $print_48() {
		$clinit_FixMessage();
	}

	function $toString_88(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.posAmtType[0] != 0 && (s += 'PosAmtType(707)=' + $trim(_String(this$static.posAmtType)) + charToString(sep));
		neq(this$static.posAmt, P7fffffffffffffff_longLit) && (s += 'PosAmt(708)=' + $trim('' + toString_183(this$static.posAmt)) + charToString(sep));
		this$static.positionCurrency[0] != 0 && (s += 'PositionCurrency(1055)=' + $trim(_String(this$static.positionCurrency)) + charToString(sep));
		return s;
	}

	function FixPositionAmountData$PositionAmountData_0() {
		this.posAmtType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.positionCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_92(this);
	}

	defineSeed(627, 1, makeCastMap([Q$FixComponent, Q$FixPositionAmountData$PositionAmountData]), FixPositionAmountData$PositionAmountData_0);
	_.equals$ = function equals_128(o) {
		return $equals_87(this, o);
	};
	_.toString$ = function toString_117() {
		return $toString_88(this);
	};
	_.posAmt = P0_longLit;

	function $allocatePositionQtys(this$static, num) {
		var i_0;
		this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionQty$PositionQty_2_classLit, makeCastMap([Q$Serializable]), Q$FixPositionQty$PositionQty, num, 0);
		for (i_0 = 0; i_0 < num; i_0++)
		this$static.group[i_0] = new FixPositionQty$PositionQty_0;
	}

	function $clear_93(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPositions; i_0++)
		$clear_94(this$static.group[i_0]);
	}

	function $encode_57(this$static, out) {
		var i_0;
		if (this$static.noPositions != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 702, fromInt(this$static.noPositions));
			for (i_0 = 0; i_0 < this$static.noPositions; i_0++)
			$encode_58(this$static.group[i_0], out);
		}
	}

	function $equals_88(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixPositionQty)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noPositions; i_0++)
		if (!$equals_89(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_70(this$static, noPositions, buf) {
		var i_0, i0;
		this$static.noPositions = noPositions;
		if (noPositions < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noPositions), P2be_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noPositions) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionQty$PositionQty_2_classLit, makeCastMap([Q$Serializable]), Q$FixPositionQty$PositionQty, noPositions, 0);
			for (i0 = 0; i0 < noPositions; i0++)
			this$static.group[i0] = new FixPositionQty$PositionQty_0;
		}
		for (i_0 = 0; i_0 < noPositions; i_0++)
		$getAllGroup_36(this$static.group[i_0], buf);
	}

	function $isSet_9(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPositions; i_0++)
		if ($isSet_10(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_89(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noPositions; i_0++)
		s += $toString_90(this$static.group[i_0]);
		return s;
	}

	function FixPositionQty_0() {}

	defineSeed(628, 1, makeCastMap([Q$FixPositionQty]), FixPositionQty_0);
	_.equals$ = function equals_129(o) {
		return $equals_88(this, o);
	};
	_.toString$ = function toString_118() {
		return $toString_89(this);
	};
	_.noPositions = 0;

	function $clear_94(this$static) {
		$clinit_Utils();
		this$static.posType[0] = 0;
		this$static.longQty = P7fffffffffffffff_longLit;
		this$static.shortQty = P7fffffffffffffff_longLit;
		this$static.posQtyStatus = P7fffffffffffffff_longLit;
		this$static.quantityDate[0] = 0;
		$clear_70(this$static.nestedParties);
	}

	function $encode_58(this$static, out) {
		$clinit_FixUtils();
		this$static.posType[0] != 0 && putFixTag_2(out, 703, this$static.posType, lastIndexTrim(this$static.posType));
		neq(this$static.longQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 704, this$static.longQty);
		neq(this$static.shortQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 705, this$static.shortQty);
		neq(this$static.posQtyStatus, P7fffffffffffffff_longLit) && putFixTag_0(out, 706, this$static.posQtyStatus);
		this$static.quantityDate[0] != 0 && putFixTag_1(out, 976, this$static.quantityDate);
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && $encode_47(this$static.nestedParties, out);
	}

	function $equals_89(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPositionQty$PositionQty)) {
			$print_49(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.posType, msg.posType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.longQty, msg.longQty)) {
			ret = false;
			$print_49((valueOf_1(this$static.longQty), valueOf_1(msg.longQty)));
		}
		if (neq(this$static.shortQty, msg.shortQty)) {
			ret = false;
			$print_49((valueOf_1(this$static.shortQty), valueOf_1(msg.shortQty)));
		}
		if (neq(this$static.posQtyStatus, msg.posQtyStatus)) {
			ret = false;
			$print_49((valueOf_1(this$static.posQtyStatus), valueOf_1(msg.posQtyStatus)));
		}
		$equals_64(this$static.nestedParties, msg.nestedParties) || (ret = false);
		return ret;
	}

	function $getAllGroup_36(this$static, buf) {
		var id_0, lastTagPosition, noNestedPartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 703) {
			this$static.posType = getTagStringValue(null, 703, buf, this$static.posType);
			if (!isValid_112(this$static.posType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.posType + ') for tag'), P2bf_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 704) {
			this$static.longQty = getTagFloatValue(null, 704, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 705) {
			this$static.shortQty = getTagFloatValue(null, 705, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 706) {
			this$static.posQtyStatus = fromInt(getTagIntValue(null, 706, buf));
			if (!isValid_107(this$static.posQtyStatus)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.posQtyStatus) + ') for tag'), P2c2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 976) {
			this$static.quantityDate = getTagStringValue(null, 976, buf, this$static.quantityDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 539) {
			noNestedPartyIDs = getTagIntValue(null, 539, buf);
			$getAll_57(this$static.nestedParties, noNestedPartyIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_10(this$static) {
		$clinit_FixUtils();
		if (this$static.posType[0] != 0) return true;
		if (neq(this$static.longQty, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.shortQty, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.posQtyStatus, P7fffffffffffffff_longLit)) return true;
		if (this$static.quantityDate[0] != 0) return true;
		if (neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit)) return true;
		return false;
	}

	function $print_49() {
		$clinit_FixMessage();
	}

	function $toString_90(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.posType[0] != 0 && (s += 'PosType(703)=' + $trim(_String(this$static.posType)) + charToString(sep));
		neq(this$static.longQty, P7fffffffffffffff_longLit) && (s += 'LongQty(704)=' + $trim('' + toString_183(this$static.longQty)) + charToString(sep));
		neq(this$static.shortQty, P7fffffffffffffff_longLit) && (s += 'ShortQty(705)=' + $trim('' + toString_183(this$static.shortQty)) + charToString(sep));
		neq(this$static.posQtyStatus, P7fffffffffffffff_longLit) && (s += 'PosQtyStatus(706)=' + $trim('' + toString_183(this$static.posQtyStatus)) + charToString(sep));
		this$static.quantityDate[0] != 0 && (s += 'QuantityDate(976)=' + $trim(_String(this$static.quantityDate)) + charToString(sep));
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_65(this$static.nestedParties)));
		return s;
	}

	function FixPositionQty$PositionQty_0() {
		this.posType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quantityDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nestedParties = new FixNestedParties_0;
		$clear_94(this);
	}

	defineSeed(629, 1, makeCastMap([Q$FixComponent, Q$FixPositionQty$PositionQty]), FixPositionQty$PositionQty_0);
	_.equals$ = function equals_130(o) {
		return $equals_89(this, o);
	};
	_.toString$ = function toString_119() {
		return $toString_90(this);
	};
	_.longQty = P0_longLit;
	_.posQtyStatus = P0_longLit;
	_.shortQty = P0_longLit;

	function $clear_95(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noAllocs; i_0++)
		$clear_96(this$static.group[i_0]);
	}

	function $encode_59(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noAllocs; i_0++)
		$encode_60(this$static.group[i_0], out);
	}

	function $equals_90(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixPreAllocGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noAllocs; i_0++)
		if (!$equals_91(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_71(this$static, noAllocs, buf) {
		var i_0, i0;
		this$static.noAllocs = noAllocs;
		if (noAllocs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noAllocs), P4e_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noAllocs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPreAllocGrp$PreAllocGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixPreAllocGrp$PreAllocGrp, noAllocs, 0);
			for (i0 = 0; i0 < noAllocs; i0++)
			this$static.group[i0] = new FixPreAllocGrp$PreAllocGrp_0;
		}
		for (i_0 = 0; i_0 < noAllocs; i_0++)
		$getAllGroup_37(this$static.group[i_0], buf);
	}

	function $toString_91(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noAllocs; i_0++)
		s += $toString_92(this$static.group[i_0]);
		return s;
	}

	function FixPreAllocGrp_0() {}

	defineSeed(630, 1, makeCastMap([Q$FixPreAllocGrp]), FixPreAllocGrp_0);
	_.equals$ = function equals_131(o) {
		return $equals_90(this, o);
	};
	_.toString$ = function toString_120() {
		return $toString_91(this);
	};
	_.noAllocs = 0;

	function $clear_96(this$static) {
		$clinit_Utils();
		this$static.allocAccount[0] = 0;
		this$static.allocAcctIDSource = P7fffffffffffffff_longLit;
		this$static.allocSettlCurrency[0] = 0;
		this$static.individualAllocID[0] = 0;
		this$static.allocQty = P7fffffffffffffff_longLit;
		$clear_70(this$static.nestedParties);
	}

	function $encode_60(this$static, out) {
		$clinit_FixUtils();
		this$static.allocAccount[0] != 0 && putFixTag_2(out, 79, this$static.allocAccount, lastIndexTrim(this$static.allocAccount));
		neq(this$static.allocAcctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 661, this$static.allocAcctIDSource);
		this$static.allocSettlCurrency[0] != 0 && putFixTag_2(out, 736, this$static.allocSettlCurrency, lastIndexTrim(this$static.allocSettlCurrency));
		this$static.individualAllocID[0] != 0 && putFixTag_2(out, 467, this$static.individualAllocID, lastIndexTrim(this$static.individualAllocID));
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && $encode_47(this$static.nestedParties, out);
		neq(this$static.allocQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 80, this$static.allocQty);
	}

	function $equals_91(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPreAllocGrp$PreAllocGrp)) {
			$print_50(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.allocAccount, msg.allocAccount)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.allocAcctIDSource, msg.allocAcctIDSource)) {
			ret = false;
			$print_50((valueOf_1(this$static.allocAcctIDSource), valueOf_1(msg.allocAcctIDSource)));
		}
		if (!equals_12(this$static.allocSettlCurrency, msg.allocSettlCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.individualAllocID, msg.individualAllocID)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_64(this$static.nestedParties, msg.nestedParties) || (ret = false);
		if (neq(this$static.allocQty, msg.allocQty)) {
			ret = false;
			$print_50((valueOf_1(this$static.allocQty), valueOf_1(msg.allocQty)));
		}
		return ret;
	}

	function $getAllGroup_37(this$static, buf) {
		var id_0, lastTagPosition, noNestedPartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 79) {
			this$static.allocAccount = getTagStringValue(null, 79, buf, this$static.allocAccount);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 661) {
			this$static.allocAcctIDSource = fromInt(getTagIntValue(null, 661, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 736) {
			this$static.allocSettlCurrency = getTagStringValue(null, 736, buf, this$static.allocSettlCurrency);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 467) {
			this$static.individualAllocID = getTagStringValue(null, 467, buf, this$static.individualAllocID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 539) {
			noNestedPartyIDs = getTagIntValue(null, 539, buf);
			$getAll_57(this$static.nestedParties, noNestedPartyIDs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 80) {
			this$static.allocQty = getTagFloatValue(null, 80, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_50() {
		$clinit_FixMessage();
	}

	function $toString_92(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.allocAccount[0] != 0 && (s += 'AllocAccount(79)=' + $trim(_String(this$static.allocAccount)) + charToString(sep));
		neq(this$static.allocAcctIDSource, P7fffffffffffffff_longLit) && (s += 'AllocAcctIDSource(661)=' + $trim('' + toString_183(this$static.allocAcctIDSource)) + charToString(sep));
		this$static.allocSettlCurrency[0] != 0 && (s += 'AllocSettlCurrency(736)=' + $trim(_String(this$static.allocSettlCurrency)) + charToString(sep));
		this$static.individualAllocID[0] != 0 && (s += 'IndividualAllocID(467)=' + $trim(_String(this$static.individualAllocID)) + charToString(sep));
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_65(this$static.nestedParties)));
		neq(this$static.allocQty, P7fffffffffffffff_longLit) && (s += 'AllocQty(80)=' + $trim('' + toString_183(this$static.allocQty)) + charToString(sep));
		return s;
	}

	function FixPreAllocGrp$PreAllocGrp_0() {
		this.allocAccount = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.allocSettlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.individualAllocID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.nestedParties = new FixNestedParties_0;
		$clear_96(this);
	}

	defineSeed(631, 1, makeCastMap([Q$FixComponent, Q$FixPreAllocGrp$PreAllocGrp]), FixPreAllocGrp$PreAllocGrp_0);
	_.equals$ = function equals_132(o) {
		return $equals_91(this, o);
	};
	_.toString$ = function toString_121() {
		return $toString_92(this);
	};
	_.allocAcctIDSource = P0_longLit;
	_.allocQty = P0_longLit;

	function $clear_97(this$static) {
		this$static.priceLimitType = P7fffffffffffffff_longLit;
		this$static.lowLimitPrice = P7fffffffffffffff_longLit;
		this$static.highLimitPrice = P7fffffffffffffff_longLit;
		this$static.tradingReferencePrice = P7fffffffffffffff_longLit;
	}

	function $equals_92(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPriceLimits)) {
			$print_51(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.priceLimitType, msg.priceLimitType)) {
			ret = false;
			$print_51((valueOf_1(this$static.priceLimitType), valueOf_1(msg.priceLimitType)));
		}
		if (neq(this$static.lowLimitPrice, msg.lowLimitPrice)) {
			ret = false;
			$print_51((valueOf_1(this$static.lowLimitPrice), valueOf_1(msg.lowLimitPrice)));
		}
		if (neq(this$static.highLimitPrice, msg.highLimitPrice)) {
			ret = false;
			$print_51((valueOf_1(this$static.highLimitPrice), valueOf_1(msg.highLimitPrice)));
		}
		if (neq(this$static.tradingReferencePrice, msg.tradingReferencePrice)) {
			ret = false;
			$print_51((valueOf_1(this$static.tradingReferencePrice), valueOf_1(msg.tradingReferencePrice)));
		}
		return ret;
	}

	function $getAll_72(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 1306:
				this$static.priceLimitType = fromInt(getTagIntValue(null, 1306, buf));
				if (!isValid_115(this$static.priceLimitType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceLimitType) + ') for tag'), P51a_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1148:
				this$static.lowLimitPrice = getTagFloatValue(null, 1148, buf);
				break;
			case 1149:
				this$static.highLimitPrice = getTagFloatValue(null, 1149, buf);
				break;
			case 1150:
				this$static.tradingReferencePrice = getTagFloatValue(null, 1150, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_51() {
		$clinit_FixMessage();
	}

	function $toString_93(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.priceLimitType, P7fffffffffffffff_longLit) && (s += 'PriceLimitType(1306)=' + $trim('' + toString_183(this$static.priceLimitType)) + charToString(sep));
		neq(this$static.lowLimitPrice, P7fffffffffffffff_longLit) && (s += 'LowLimitPrice(1148)=' + $trim('' + toString_183(this$static.lowLimitPrice)) + charToString(sep));
		neq(this$static.highLimitPrice, P7fffffffffffffff_longLit) && (s += 'HighLimitPrice(1149)=' + $trim('' + toString_183(this$static.highLimitPrice)) + charToString(sep));
		neq(this$static.tradingReferencePrice, P7fffffffffffffff_longLit) && (s += 'TradingReferencePrice(1150)=' + $trim('' + toString_183(this$static.tradingReferencePrice)) + charToString(sep));
		return s;
	}

	function FixPriceLimits_0() {
		$clear_97(this);
	}

	defineSeed(632, 1, makeCastMap([Q$FixComponent, Q$FixPriceLimits]), FixPriceLimits_0);
	_.equals$ = function equals_133(o) {
		return $equals_92(this, o);
	};
	_.toString$ = function toString_122() {
		return $toString_93(this);
	};
	_.highLimitPrice = P0_longLit;
	_.lowLimitPrice = P0_longLit;
	_.priceLimitType = P0_longLit;
	_.tradingReferencePrice = P0_longLit;

	function $clear_98(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPartySubIDs; i_0++)
		$clear_99(this$static.group[i_0]);
	}

	function $encode_61(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noPartySubIDs; i_0++)
		$encode_62(this$static.group[i_0], out);
	}

	function $equals_93(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixPtysSubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noPartySubIDs; i_0++)
		if (!$equals_94(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_73(this$static, noPartySubIDs, buf) {
		var i_0, i0;
		this$static.noPartySubIDs = noPartySubIDs;
		if (noPartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noPartySubIDs), P322_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noPartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPtysSubGrp$PtysSubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixPtysSubGrp$PtysSubGrp, noPartySubIDs, 0);
			for (i0 = 0; i0 < noPartySubIDs; i0++)
			this$static.group[i0] = new FixPtysSubGrp$PtysSubGrp_0;
		}
		for (i_0 = 0; i_0 < noPartySubIDs; i_0++)
		$getAllGroup_38(this$static.group[i_0], buf);
	}

	function $toString_94(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noPartySubIDs; i_0++)
		s += $toString_95(this$static.group[i_0]);
		return s;
	}

	function FixPtysSubGrp_0() {}

	defineSeed(633, 1, makeCastMap([Q$FixPtysSubGrp]), FixPtysSubGrp_0);
	_.equals$ = function equals_134(o) {
		return $equals_93(this, o);
	};
	_.toString$ = function toString_123() {
		return $toString_94(this);
	};
	_.noPartySubIDs = 0;

	function $clear_99(this$static) {
		$clinit_Utils();
		this$static.partySubID[0] = 0;
		this$static.partySubIDType = P7fffffffffffffff_longLit;
	}

	function $encode_62(this$static, out) {
		$clinit_FixUtils();
		this$static.partySubID[0] != 0 && putFixTag_2(out, 523, this$static.partySubID, lastIndexTrim(this$static.partySubID));
		neq(this$static.partySubIDType, P7fffffffffffffff_longLit) && putFixTag_0(out, 803, this$static.partySubIDType);
	}

	function $equals_94(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixPtysSubGrp$PtysSubGrp)) {
			$print_52(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.partySubID, msg.partySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.partySubIDType, msg.partySubIDType)) {
			ret = false;
			$print_52((valueOf_1(this$static.partySubIDType), valueOf_1(msg.partySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_38(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 523) {
			this$static.partySubID = getTagStringValue(null, 523, buf, this$static.partySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 803) {
			this$static.partySubIDType = fromInt(getTagIntValue(null, 803, buf));
			if (!isValid_96(this$static.partySubIDType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.partySubIDType) + ') for tag'), P323_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_52() {
		$clinit_FixMessage();
	}

	function $toString_95(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.partySubID[0] != 0 && (s += 'PartySubID(523)=' + $trim(_String(this$static.partySubID)) + charToString(sep));
		neq(this$static.partySubIDType, P7fffffffffffffff_longLit) && (s += 'PartySubIDType(803)=' + $trim('' + toString_183(this$static.partySubIDType)) + charToString(sep));
		return s;
	}

	function FixPtysSubGrp$PtysSubGrp_0() {
		this.partySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.partySubID[0] = 0;
		this.partySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(634, 1, makeCastMap([Q$FixComponent, Q$FixPtysSubGrp$PtysSubGrp]), FixPtysSubGrp$PtysSubGrp_0);
	_.equals$ = function equals_135(o) {
		return $equals_94(this, o);
	};
	_.toString$ = function toString_124() {
		return $toString_95(this);
	};
	_.partySubIDType = P0_longLit;

	function $clear_100(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noQuoteQualifiers; i_0++)
		this$static.group[i_0].quoteQualifier = 127;
	}

	function $encode_63(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noQuoteQualifiers; i_0++)
		$encode_64(this$static.group[i_0], out);
	}

	function $equals_95(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixQuotQualGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noQuoteQualifiers; i_0++)
		if (!$equals_96(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_74(this$static, noQuoteQualifiers, buf) {
		var i_0, i0;
		this$static.noQuoteQualifiers = noQuoteQualifiers;
		if (noQuoteQualifiers < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noQuoteQualifiers), P2df_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noQuoteQualifiers) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotQualGrp$QuotQualGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixQuotQualGrp$QuotQualGrp, noQuoteQualifiers, 0);
			for (i0 = 0; i0 < noQuoteQualifiers; i0++)
			this$static.group[i0] = new FixQuotQualGrp$QuotQualGrp_0;
		}
		for (i_0 = 0; i_0 < noQuoteQualifiers; i_0++)
		$getAllGroup_39(this$static.group[i_0], buf);
	}

	function $toString_96(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noQuoteQualifiers; i_0++)
		s += $toString_97(this$static.group[i_0]);
		return s;
	}

	function FixQuotQualGrp_0() {}

	defineSeed(635, 1, makeCastMap([Q$FixQuotQualGrp]), FixQuotQualGrp_0);
	_.equals$ = function equals_136(o) {
		return $equals_95(this, o);
	};
	_.toString$ = function toString_125() {
		return $toString_96(this);
	};
	_.noQuoteQualifiers = 0;

	function $encode_64(this$static, out) {
		$clinit_FixUtils();
		this$static.quoteQualifier != 127 && putFixTag(out, 695, this$static.quoteQualifier);
	}

	function $equals_96(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixQuotQualGrp$QuotQualGrp)) {
			$print_53(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.quoteQualifier != msg.quoteQualifier) {
			ret = false;
			$print_53((valueOf(this$static.quoteQualifier), valueOf(msg.quoteQualifier)));
		}
		return ret;
	}

	function $getAllGroup_39(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 695) {
			this$static.quoteQualifier = getTagCharValue(null, 695, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_53() {
		$clinit_FixMessage();
	}

	function $toString_97(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.quoteQualifier != 127 && (s += 'QuoteQualifier(695)=' + $trim('' + this$static.quoteQualifier) + charToString(sep));
		return s;
	}

	function FixQuotQualGrp$QuotQualGrp_0() {
		this.quoteQualifier = 127;
	}

	defineSeed(636, 1, makeCastMap([Q$FixComponent, Q$FixQuotQualGrp$QuotQualGrp]), FixQuotQualGrp$QuotQualGrp_0);
	_.equals$ = function equals_137(o) {
		return $equals_96(this, o);
	};
	_.toString$ = function toString_126() {
		return $toString_97(this);
	};
	_.quoteQualifier = 32;

	function $allocateQuotReqGrps(this$static, num) {
		var i_0;
		this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqGrp$QuotReqGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixQuotReqGrp$QuotReqGrp, num, 0);
		for (i_0 = 0; i_0 < num; i_0++)
		this$static.group[i_0] = new FixQuotReqGrp$QuotReqGrp_0;
	}

	function $clear_101(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		$clear_102(this$static.group[i_0]);
	}

	function $encode_65(this$static, out) {
		var i_0;
		if (this$static.noRelatedSym != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 146, fromInt(this$static.noRelatedSym));
			for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
			$encode_66(this$static.group[i_0], out);
		}
	}

	function $equals_97(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixQuotReqGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		if (!$equals_98(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_75(this$static, noRelatedSym, buf) {
		var i_0, i0;
		this$static.noRelatedSym = noRelatedSym;
		if (noRelatedSym < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noRelatedSym), P92_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noRelatedSym) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqGrp$QuotReqGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixQuotReqGrp$QuotReqGrp, noRelatedSym, 0);
			for (i0 = 0; i0 < noRelatedSym; i0++)
			this$static.group[i0] = new FixQuotReqGrp$QuotReqGrp_0;
		}
		for (i_0 = 0; i_0 < noRelatedSym; i_0++)
		$getAllGroup_40(this$static.group[i_0], buf);
	}

	function $isSet_11(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		if ($isSet_12(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_98(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		s += $toString_99(this$static.group[i_0]);
		return s;
	}

	function FixQuotReqGrp_0() {}

	defineSeed(637, 1, makeCastMap([Q$FixQuotReqGrp]), FixQuotReqGrp_0);
	_.equals$ = function equals_138(o) {
		return $equals_97(this, o);
	};
	_.toString$ = function toString_127() {
		return $toString_98(this);
	};
	_.noRelatedSym = 0;

	function $checkRequiredTags_18(this$static) {
		if (!$isSet_1(this$static.instrument)) return 55;
		return -1;
	}

	function $clear_102(this$static) {
		this$static.prevClosePx = P7fffffffffffffff_longLit;
		this$static.quoteRequestType = P7fffffffffffffff_longLit;
		this$static.quoteType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
		this$static.tradeOriginationDate[0] = 0;
		this$static.side = 127;
		this$static.qtyType = P7fffffffffffffff_longLit;
		this$static.minQty = P7fffffffffffffff_longLit;
		this$static.settlType[0] = 0;
		this$static.settlDate[0] = 0;
		this$static.settlDate2[0] = 0;
		this$static.orderQty2 = P7fffffffffffffff_longLit;
		this$static.currency[0] = 0;
		this$static.settlCurrency[0] = 0;
		this$static.account[0] = 0;
		this$static.acctIDSource = P7fffffffffffffff_longLit;
		this$static.accountType = P7fffffffffffffff_longLit;
		this$static.quotePriceType = P7fffffffffffffff_longLit;
		this$static.ordType = 127;
		this$static.validUntilTime[0] = 0;
		this$static.expireTime[0] = 0;
		this$static.transactTime[0] = 0;
		this$static.priceType = P7fffffffffffffff_longLit;
		this$static.price = P7fffffffffffffff_longLit;
		this$static.price2 = P7fffffffffffffff_longLit;
		$clear_40(this$static.instrument);
		$clear_34(this$static.financingDetails);
		$clear_142(this$static.undInstrmtGrp);
		$clear_87(this$static.orderQtyData);
		$clear_105(this$static.rateSource);
		$clear_119(this$static.stipulations);
		$clear_103(this$static.quotReqLegsGrp);
		$clear_100(this$static.quotQualGrp);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_152(this$static.yieldData);
		$clear_88(this$static.parties);
	}

	function $encode_66(this$static, out) {
		$clinit_FixUtils();
		this$static.instrument.securityID[0] != 0 && $encode_31(this$static.instrument, out);
		this$static.financingDetails.agreementDesc[0] != 0 && $encode_27(this$static.financingDetails, out);
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && $encode_95(this$static.undInstrmtGrp, out);
		neq(this$static.prevClosePx, P7fffffffffffffff_longLit) && putFixFloatTag(out, 140, this$static.prevClosePx);
		neq(this$static.quoteRequestType, P7fffffffffffffff_longLit) && putFixTag_0(out, 303, this$static.quoteRequestType);
		neq(this$static.quoteType, P7fffffffffffffff_longLit) && putFixTag_0(out, 537, this$static.quoteType);
		this$static.tradingSessionID[0] != 0 && putFixTag_2(out, 336, this$static.tradingSessionID, lastIndexTrim(this$static.tradingSessionID));
		this$static.tradingSessionSubID[0] != 0 && putFixTag_2(out, 625, this$static.tradingSessionSubID, lastIndexTrim(this$static.tradingSessionSubID));
		this$static.tradeOriginationDate[0] != 0 && putFixTag_1(out, 229, this$static.tradeOriginationDate);
		this$static.side != 127 && putFixTag(out, 54, this$static.side);
		neq(this$static.qtyType, P7fffffffffffffff_longLit) && putFixTag_0(out, 854, this$static.qtyType);
		neq(this$static.minQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 110, this$static.minQty);
		neq(this$static.orderQtyData.orderQty, P7fffffffffffffff_longLit) && $encode_51(this$static.orderQtyData, out);
		this$static.settlType[0] != 0 && putFixTag_2(out, 63, this$static.settlType, lastIndexTrim(this$static.settlType));
		this$static.settlDate[0] != 0 && putFixTag_1(out, 64, this$static.settlDate);
		this$static.settlDate2[0] != 0 && putFixTag_1(out, 193, this$static.settlDate2);
		neq(this$static.orderQty2, P7fffffffffffffff_longLit) && putFixFloatTag(out, 192, this$static.orderQty2);
		this$static.currency[0] != 0 && putFixTag_2(out, 15, this$static.currency, lastIndexTrim(this$static.currency));
		this$static.settlCurrency[0] != 0 && putFixTag_2(out, 120, this$static.settlCurrency, lastIndexTrim(this$static.settlCurrency));
		neq(fromInt(this$static.rateSource.noRateSources), P7fffffffffffffff_longLit) && $encode_69(this$static.rateSource, out);
		neq(fromInt(this$static.stipulations.noStipulations), P7fffffffffffffff_longLit) && $encode_80(this$static.stipulations, out);
		this$static.account[0] != 0 && putFixTag_2(out, 1, this$static.account, lastIndexTrim(this$static.account));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 660, this$static.acctIDSource);
		neq(this$static.accountType, P7fffffffffffffff_longLit) && putFixTag_0(out, 581, this$static.accountType);
		neq(fromInt(this$static.quotReqLegsGrp.noLegs), P7fffffffffffffff_longLit) && $encode_67(this$static.quotReqLegsGrp, out);
		neq(fromInt(this$static.quotQualGrp.noQuoteQualifiers), P7fffffffffffffff_longLit) && $encode_63(this$static.quotQualGrp, out);
		neq(this$static.quotePriceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 692, this$static.quotePriceType);
		this$static.ordType != 127 && putFixTag(out, 40, this$static.ordType);
		this$static.validUntilTime[0] != 0 && putFixTag_1(out, 62, this$static.validUntilTime);
		this$static.expireTime[0] != 0 && putFixTag_1(out, 126, this$static.expireTime);
		this$static.transactTime[0] != 0 && putFixTag_1(out, 60, this$static.transactTime);
		neq(this$static.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && $encode_79(this$static.spreadOrBenchmarkCurveData, out);
		neq(this$static.priceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 423, this$static.priceType);
		neq(this$static.price, P7fffffffffffffff_longLit) && putFixFloatTag(out, 44, this$static.price);
		neq(this$static.price2, P7fffffffffffffff_longLit) && putFixFloatTag(out, 640, this$static.price2);
		this$static.yieldData.yieldType[0] != 0 && $encode_106(this$static.yieldData, out);
		neq(fromInt(this$static.parties.noPartyIDs), P7fffffffffffffff_longLit) && $encode_52(this$static.parties, out);
	}

	function $equals_98(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixQuotReqGrp$QuotReqGrp)) {
			$print_54(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_34(this$static.instrument, msg.instrument) || (ret = false);
		$equals_26(this$static.financingDetails, msg.financingDetails) || (ret = false);
		$equals_139(this$static.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (neq(this$static.prevClosePx, msg.prevClosePx)) {
			ret = false;
			$print_54((valueOf_1(this$static.prevClosePx), valueOf_1(msg.prevClosePx)));
		}
		if (neq(this$static.quoteRequestType, msg.quoteRequestType)) {
			ret = false;
			$print_54((valueOf_1(this$static.quoteRequestType), valueOf_1(msg.quoteRequestType)));
		}
		if (neq(this$static.quoteType, msg.quoteType)) {
			ret = false;
			$print_54((valueOf_1(this$static.quoteType), valueOf_1(msg.quoteType)));
		}
		if (!equals_12(this$static.tradingSessionID, msg.tradingSessionID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.tradingSessionSubID, msg.tradingSessionSubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.side != msg.side) {
			ret = false;
			$print_54((valueOf(this$static.side), valueOf(msg.side)));
		}
		if (neq(this$static.qtyType, msg.qtyType)) {
			ret = false;
			$print_54((valueOf_1(this$static.qtyType), valueOf_1(msg.qtyType)));
		}
		if (neq(this$static.minQty, msg.minQty)) {
			ret = false;
			$print_54((valueOf_1(this$static.minQty), valueOf_1(msg.minQty)));
		}
		$equals_82(this$static.orderQtyData, msg.orderQtyData) || (ret = false);
		if (!equals_12(this$static.settlType, msg.settlType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.orderQty2, msg.orderQty2)) {
			ret = false;
			$print_54((valueOf_1(this$static.orderQty2), valueOf_1(msg.orderQty2)));
		}
		if (!equals_12(this$static.currency, msg.currency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.settlCurrency, msg.settlCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_101(this$static.rateSource, msg.rateSource) || (ret = false);
		$equals_115(this$static.stipulations, msg.stipulations) || (ret = false);
		if (!equals_12(this$static.account, msg.account)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.acctIDSource, msg.acctIDSource)) {
			ret = false;
			$print_54((valueOf_1(this$static.acctIDSource), valueOf_1(msg.acctIDSource)));
		}
		if (neq(this$static.accountType, msg.accountType)) {
			ret = false;
			$print_54((valueOf_1(this$static.accountType), valueOf_1(msg.accountType)));
		}
		$equals_99(this$static.quotReqLegsGrp, msg.quotReqLegsGrp) || (ret = false);
		$equals_95(this$static.quotQualGrp, msg.quotQualGrp) || (ret = false);
		if (neq(this$static.quotePriceType, msg.quotePriceType)) {
			ret = false;
			$print_54((valueOf_1(this$static.quotePriceType), valueOf_1(msg.quotePriceType)));
		}
		if (this$static.ordType != msg.ordType) {
			ret = false;
			$print_54((valueOf(this$static.ordType), valueOf(msg.ordType)));
		}
		$equals_114(this$static.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		if (neq(this$static.priceType, msg.priceType)) {
			ret = false;
			$print_54((valueOf_1(this$static.priceType), valueOf_1(msg.priceType)));
		}
		if (neq(this$static.price, msg.price)) {
			ret = false;
			$print_54((valueOf_1(this$static.price), valueOf_1(msg.price)));
		}
		if (neq(this$static.price2, msg.price2)) {
			ret = false;
			$print_54((valueOf_1(this$static.price2), valueOf_1(msg.price2)));
		}
		$equals_150(this$static.yieldData, msg.yieldData) || (ret = false);
		$equals_83(this$static.parties, msg.parties) || (ret = false);
		return ret;
	}

	function $getAllGroup_40(this$static, buf) {
		var id_0, lastTagPosition, noLegs, noPartyIDs, noQuoteQualifiers, noRateSources, noStipulations, noUnderlyings;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 55) {
			$getAll_40(this$static.instrument, 55, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 48) {
			$getAll_40(this$static.instrument, 48, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 913) {
			$getAll_36(this$static.financingDetails, 913, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 711) {
			noUnderlyings = getTagIntValue(null, 711, buf);
			$getAll_97(this$static.undInstrmtGrp, noUnderlyings, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 140) {
			this$static.prevClosePx = getTagFloatValue(null, 140, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 303) {
			this$static.quoteRequestType = fromInt(getTagIntValue(null, 303, buf));
			if (!isValid_125(this$static.quoteRequestType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.quoteRequestType) + ') for tag'), P12f_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 537) {
			this$static.quoteType = fromInt(getTagIntValue(null, 537, buf));
			if (!isValid_127(this$static.quoteType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.quoteType) + ') for tag'), P219_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 336) {
			this$static.tradingSessionID = getTagStringValue(null, 336, buf, this$static.tradingSessionID);
			if (!isValid_168(this$static.tradingSessionID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionID + ') for tag'), P150_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 625) {
			this$static.tradingSessionSubID = getTagStringValue(null, 625, buf, this$static.tradingSessionSubID);
			if (!isValid_169(this$static.tradingSessionSubID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionSubID + ') for tag'), P271_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 229) {
			this$static.tradeOriginationDate = getTagStringValue(null, 229, buf, this$static.tradeOriginationDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 54) {
			this$static.side = getTagCharValue(null, 54, buf);
			if (!isValid_150(this$static.side)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.side + ') for tag'), P36_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 854) {
			this$static.qtyType = fromInt(getTagIntValue(null, 854, buf));
			if (!isValid_123(this$static.qtyType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.qtyType) + ') for tag'), P356_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 110) {
			this$static.minQty = getTagFloatValue(null, 110, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 38) {
			$getAll_66(this$static.orderQtyData, 38, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 63) {
			this$static.settlType = getTagStringValue(null, 63, buf, this$static.settlType);
			if (!isValid_149(this$static.settlType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.settlType + ') for tag'), P3f_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 64) {
			this$static.settlDate = getTagStringValue(null, 64, buf, this$static.settlDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 193) {
			this$static.settlDate2 = getTagStringValue(null, 193, buf, this$static.settlDate2);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 192) {
			this$static.orderQty2 = getTagFloatValue(null, 192, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 15) {
			this$static.currency = getTagStringValue(null, 15, buf, this$static.currency);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 120) {
			this$static.settlCurrency = getTagStringValue(null, 120, buf, this$static.settlCurrency);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1445) {
			noRateSources = getTagIntValue(null, 1445, buf);
			$getAll_77(this$static.rateSource, noRateSources, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 232) {
			noStipulations = getTagIntValue(null, 232, buf);
			$getAll_85(this$static.stipulations, noStipulations, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1) {
			this$static.account = getTagStringValue(null, 1, buf, this$static.account);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 660) {
			this$static.acctIDSource = fromInt(getTagIntValue(null, 660, buf));
			if (!isValid_1(this$static.acctIDSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.acctIDSource) + ') for tag'), P294_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 581) {
			this$static.accountType = fromInt(getTagIntValue(null, 581, buf));
			if (!isValid_0(this$static.accountType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.accountType) + ') for tag'), P245_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 555) {
			noLegs = getTagIntValue(null, 555, buf);
			$getAll_76(this$static.quotReqLegsGrp, noLegs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 735) {
			noQuoteQualifiers = getTagIntValue(null, 735, buf);
			$getAll_74(this$static.quotQualGrp, noQuoteQualifiers, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 692) {
			this$static.quotePriceType = fromInt(getTagIntValue(null, 692, buf));
			if (!isValid_124(this$static.quotePriceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.quotePriceType) + ') for tag'), P2b4_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 40) {
			this$static.ordType = getTagCharValue(null, 40, buf);
			if (!isValid_89(this$static.ordType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.ordType + ') for tag'), P28_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 62) {
			this$static.validUntilTime = getTagStringValue(null, 62, buf, this$static.validUntilTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 126) {
			this$static.expireTime = getTagStringValue(null, 126, buf, this$static.expireTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 60) {
			this$static.transactTime = getTagStringValue(null, 60, buf, this$static.transactTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 218) {
			$getAll_84(this$static.spreadOrBenchmarkCurveData, 218, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 423) {
			this$static.priceType = fromInt(getTagIntValue(null, 423, buf));
			if (!isValid_118(this$static.priceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.priceType) + ') for tag'), P1a7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 44) {
			this$static.price = getTagFloatValue(null, 44, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 640) {
			this$static.price2 = getTagFloatValue(null, 640, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 235) {
			$getAll_103(this$static.yieldData, 235, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 453) {
			noPartyIDs = getTagIntValue(null, 453, buf);
			$getAll_67(this$static.parties, noPartyIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		id_0 = $checkRequiredTags_18(this$static);
		if (id_0 > 0) throw new FixSessionException_0(P1_longLit, getBytesUtf8('Required tag missing'), fromInt(id_0), initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_12(this$static) {
		if ($isSet_1(this$static.instrument)) return true;
		$clinit_FixUtils();
		if (this$static.financingDetails.agreementDesc[0] != 0) return true;
		if (neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.prevClosePx, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.quoteRequestType, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.quoteType, P7fffffffffffffff_longLit)) return true;
		if (this$static.tradingSessionID[0] != 0) return true;
		if (this$static.tradingSessionSubID[0] != 0) return true;
		if (this$static.tradeOriginationDate[0] != 0) return true;
		if (this$static.side != 127) return true;
		if (neq(this$static.qtyType, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.minQty, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.orderQtyData.orderQty, P7fffffffffffffff_longLit)) return true;
		if (this$static.settlType[0] != 0) return true;
		if (this$static.settlDate[0] != 0) return true;
		if (this$static.settlDate2[0] != 0) return true;
		if (neq(this$static.orderQty2, P7fffffffffffffff_longLit)) return true;
		if (this$static.currency[0] != 0) return true;
		if (this$static.settlCurrency[0] != 0) return true;
		if (neq(fromInt(this$static.rateSource.noRateSources), P7fffffffffffffff_longLit)) return true;
		if (neq(fromInt(this$static.stipulations.noStipulations), P7fffffffffffffff_longLit)) return true;
		if (this$static.account[0] != 0) return true;
		if (neq(this$static.acctIDSource, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.accountType, P7fffffffffffffff_longLit)) return true;
		if (neq(fromInt(this$static.quotReqLegsGrp.noLegs), P7fffffffffffffff_longLit)) return true;
		if (neq(fromInt(this$static.quotQualGrp.noQuoteQualifiers), P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.quotePriceType, P7fffffffffffffff_longLit)) return true;
		if (this$static.ordType != 127) return true;
		if (this$static.validUntilTime[0] != 0) return true;
		if (this$static.expireTime[0] != 0) return true;
		if (this$static.transactTime[0] != 0) return true;
		if (neq(this$static.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.priceType, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.price, P7fffffffffffffff_longLit)) return true;
		if (neq(this$static.price2, P7fffffffffffffff_longLit)) return true;
		if (this$static.yieldData.yieldType[0] != 0) return true;
		if (this$static.parties.noPartyIDs != 0 && $isSet_5(this$static.parties)) return true;
		return false;
	}

	function $print_54() {
		$clinit_FixMessage();
	}

	function $toString_99(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrument.symbol[0] != 0 && (s += $trim($toString_35(this$static.instrument)));
		this$static.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this$static.financingDetails)));
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this$static.undInstrmtGrp)));
		neq(this$static.prevClosePx, P7fffffffffffffff_longLit) && (s += 'PrevClosePx(140)=' + $trim('' + toString_183(this$static.prevClosePx)) + charToString(sep));
		neq(this$static.quoteRequestType, P7fffffffffffffff_longLit) && (s += 'QuoteRequestType(303)=' + $trim('' + toString_183(this$static.quoteRequestType)) + charToString(sep));
		neq(this$static.quoteType, P7fffffffffffffff_longLit) && (s += 'QuoteType(537)=' + $trim('' + toString_183(this$static.quoteType)) + charToString(sep));
		this$static.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this$static.tradingSessionID)) + charToString(sep));
		this$static.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this$static.tradingSessionSubID)) + charToString(sep));
		this$static.tradeOriginationDate[0] != 0 && (s += 'TradeOriginationDate(229)=' + $trim(_String(this$static.tradeOriginationDate)) + charToString(sep));
		this$static.side != 127 && (s += 'Side(54)=' + $trim('' + this$static.side) + charToString(sep));
		neq(this$static.qtyType, P7fffffffffffffff_longLit) && (s += 'QtyType(854)=' + $trim('' + toString_183(this$static.qtyType)) + charToString(sep));
		neq(this$static.minQty, P7fffffffffffffff_longLit) && (s += 'MinQty(110)=' + $trim('' + toString_183(this$static.minQty)) + charToString(sep));
		neq(this$static.orderQtyData.orderQty, P7fffffffffffffff_longLit) && (s += $trim($toString_83(this$static.orderQtyData)));
		this$static.settlType[0] != 0 && (s += 'SettlType(63)=' + $trim(_String(this$static.settlType)) + charToString(sep));
		this$static.settlDate[0] != 0 && (s += 'SettlDate(64)=' + $trim(_String(this$static.settlDate)) + charToString(sep));
		this$static.settlDate2[0] != 0 && (s += 'SettlDate2(193)=' + $trim(_String(this$static.settlDate2)) + charToString(sep));
		neq(this$static.orderQty2, P7fffffffffffffff_longLit) && (s += 'OrderQty2(192)=' + $trim('' + toString_183(this$static.orderQty2)) + charToString(sep));
		this$static.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this$static.currency)) + charToString(sep));
		this$static.settlCurrency[0] != 0 && (s += 'SettlCurrency(120)=' + $trim(_String(this$static.settlCurrency)) + charToString(sep));
		neq(fromInt(this$static.rateSource.noRateSources), P7fffffffffffffff_longLit) && (s += $trim($toString_102(this$static.rateSource)));
		neq(fromInt(this$static.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this$static.stipulations)));
		this$static.account[0] != 0 && (s += 'Account(1)=' + $trim(_String(this$static.account)) + charToString(sep));
		neq(this$static.acctIDSource, P7fffffffffffffff_longLit) && (s += 'AcctIDSource(660)=' + $trim('' + toString_183(this$static.acctIDSource)) + charToString(sep));
		neq(this$static.accountType, P7fffffffffffffff_longLit) && (s += 'AccountType(581)=' + $trim('' + toString_183(this$static.accountType)) + charToString(sep));
		neq(fromInt(this$static.quotReqLegsGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_100(this$static.quotReqLegsGrp)));
		neq(fromInt(this$static.quotQualGrp.noQuoteQualifiers), P7fffffffffffffff_longLit) && (s += $trim($toString_96(this$static.quotQualGrp)));
		neq(this$static.quotePriceType, P7fffffffffffffff_longLit) && (s += 'QuotePriceType(692)=' + $trim('' + toString_183(this$static.quotePriceType)) + charToString(sep));
		this$static.ordType != 127 && (s += 'OrdType(40)=' + $trim('' + this$static.ordType) + charToString(sep));
		this$static.validUntilTime[0] != 0 && (s += 'ValidUntilTime(62)=' + $trim(_String(this$static.validUntilTime)) + charToString(sep));
		this$static.expireTime[0] != 0 && (s += 'ExpireTime(126)=' + $trim(_String(this$static.expireTime)) + charToString(sep));
		this$static.transactTime[0] != 0 && (s += 'TransactTime(60)=' + $trim(_String(this$static.transactTime)) + charToString(sep));
		neq(this$static.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this$static.spreadOrBenchmarkCurveData)));
		neq(this$static.priceType, P7fffffffffffffff_longLit) && (s += 'PriceType(423)=' + $trim('' + toString_183(this$static.priceType)) + charToString(sep));
		neq(this$static.price, P7fffffffffffffff_longLit) && (s += 'Price(44)=' + $trim('' + toString_183(this$static.price)) + charToString(sep));
		neq(this$static.price2, P7fffffffffffffff_longLit) && (s += 'Price2(640)=' + $trim('' + toString_183(this$static.price2)) + charToString(sep));
		this$static.yieldData.yieldType[0] != 0 && (s += $trim($toString_151(this$static.yieldData)));
		neq(fromInt(this$static.parties.noPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_84(this$static.parties)));
		return s;
	}

	function FixQuotReqGrp$QuotReqGrp_0() {
		this.instrument = new FixInstrument_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradeOriginationDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.orderQtyData = new FixOrderQtyData_0;
		this.settlType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.settlDate2 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.settlCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.rateSource = new FixRateSource_0;
		this.stipulations = new FixStipulations_0;
		this.account = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.quotReqLegsGrp = new FixQuotReqLegsGrp_0;
		this.quotQualGrp = new FixQuotQualGrp_0;
		this.validUntilTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.expireTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.transactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.yieldData = new FixYieldData_0;
		this.parties = new FixParties_0;
		$clear_102(this);
	}

	defineSeed(638, 1, makeCastMap([Q$FixComponent, Q$FixQuotReqGrp$QuotReqGrp]), FixQuotReqGrp$QuotReqGrp_0);
	_.equals$ = function equals_139(o) {
		return $equals_98(this, o);
	};
	_.toString$ = function toString_128() {
		return $toString_99(this);
	};
	_.accountType = P0_longLit;
	_.acctIDSource = P0_longLit;
	_.minQty = P0_longLit;
	_.ordType = 32;
	_.orderQty2 = P0_longLit;
	_.prevClosePx = P0_longLit;
	_.price = P0_longLit;
	_.price2 = P0_longLit;
	_.priceType = P0_longLit;
	_.qtyType = P0_longLit;
	_.quotePriceType = P0_longLit;
	_.quoteRequestType = P0_longLit;
	_.quoteType = P0_longLit;
	_.side = 32;

	function $clear_103(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		$clear_104(this$static.group[i_0]);
	}

	function $encode_67(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		$encode_68(this$static.group[i_0], out);
	}

	function $equals_99(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixQuotReqLegsGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		if (!$equals_100(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_76(this$static, noLegs, buf) {
		var i_0, i0;
		this$static.noLegs = noLegs;
		if (noLegs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noLegs), P22b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noLegs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqLegsGrp$QuotReqLegsGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixQuotReqLegsGrp$QuotReqLegsGrp, noLegs, 0);
			for (i0 = 0; i0 < noLegs; i0++)
			this$static.group[i0] = new FixQuotReqLegsGrp$QuotReqLegsGrp_0;
		}
		for (i_0 = 0; i_0 < noLegs; i_0++)
		$getAllGroup_41(this$static.group[i_0], buf);
	}

	function $toString_100(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noLegs; i_0++)
		s += $toString_101(this$static.group[i_0]);
		return s;
	}

	function FixQuotReqLegsGrp_0() {}

	defineSeed(639, 1, makeCastMap([Q$FixQuotReqLegsGrp]), FixQuotReqLegsGrp_0);
	_.equals$ = function equals_140(o) {
		return $equals_99(this, o);
	};
	_.toString$ = function toString_129() {
		return $toString_100(this);
	};
	_.noLegs = 0;

	function $clear_104(this$static) {
		this$static.legQty = P7fffffffffffffff_longLit;
		this$static.legOrderQty = P7fffffffffffffff_longLit;
		this$static.legSwapType = P7fffffffffffffff_longLit;
		this$static.legSettlType = 127;
		$clinit_Utils();
		this$static.legSettlDate[0] = 0;
		this$static.legRefID[0] = 0;
		$clear_42(this$static.instrumentLeg);
		$clear_54(this$static.legStipulations);
		$clear_70(this$static.nestedParties);
		$clear_47(this$static.legBenchmarkCurveData);
	}

	function $encode_68(this$static, out) {
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && $encode_33(this$static.instrumentLeg, out);
		neq(this$static.legQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 687, this$static.legQty);
		neq(this$static.legOrderQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 685, this$static.legOrderQty);
		neq(this$static.legSwapType, P7fffffffffffffff_longLit) && putFixTag_0(out, 690, this$static.legSwapType);
		this$static.legSettlType != 127 && putFixTag(out, 587, this$static.legSettlType);
		this$static.legSettlDate[0] != 0 && putFixTag_1(out, 588, this$static.legSettlDate);
		neq(fromInt(this$static.legStipulations.noLegStipulations), P7fffffffffffffff_longLit) && $encode_41(this$static.legStipulations, out);
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && $encode_47(this$static.nestedParties, out);
		this$static.legRefID[0] != 0 && putFixTag_2(out, 654, this$static.legRefID, lastIndexTrim(this$static.legRefID));
		this$static.legBenchmarkCurveData.legBenchmarkCurveCurrency[0] != 0 && $encode_38(this$static.legBenchmarkCurveData, out);
	}

	function $equals_100(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixQuotReqLegsGrp$QuotReqLegsGrp)) {
			$print_55(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_36(this$static.instrumentLeg, msg.instrumentLeg) || (ret = false);
		if (neq(this$static.legQty, msg.legQty)) {
			ret = false;
			$print_55((valueOf_1(this$static.legQty), valueOf_1(msg.legQty)));
		}
		if (neq(this$static.legOrderQty, msg.legOrderQty)) {
			ret = false;
			$print_55((valueOf_1(this$static.legOrderQty), valueOf_1(msg.legOrderQty)));
		}
		if (neq(this$static.legSwapType, msg.legSwapType)) {
			ret = false;
			$print_55((valueOf_1(this$static.legSwapType), valueOf_1(msg.legSwapType)));
		}
		if (this$static.legSettlType != msg.legSettlType) {
			ret = false;
			$print_55((valueOf(this$static.legSettlType), valueOf(msg.legSettlType)));
		}
		$equals_48(this$static.legStipulations, msg.legStipulations) || (ret = false);
		$equals_64(this$static.nestedParties, msg.nestedParties) || (ret = false);
		if (!equals_12(this$static.legRefID, msg.legRefID)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_41(this$static.legBenchmarkCurveData, msg.legBenchmarkCurveData) || (ret = false);
		return ret;
	}

	function $getAllGroup_41(this$static, buf) {
		var id_0, lastTagPosition, noLegStipulations, noNestedPartyIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 600) {
			$getAll_42(this$static.instrumentLeg, 600, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 687) {
			this$static.legQty = getTagFloatValue(null, 687, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 685) {
			this$static.legOrderQty = getTagFloatValue(null, 685, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 690) {
			this$static.legSwapType = fromInt(getTagIntValue(null, 690, buf));
			if (!isValid_69(this$static.legSwapType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.legSwapType) + ') for tag'), P2b2_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 587) {
			this$static.legSettlType = getTagCharValue(null, 587, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 588) {
			this$static.legSettlDate = getTagStringValue(null, 588, buf, this$static.legSettlDate);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 683) {
			noLegStipulations = getTagIntValue(null, 683, buf);
			$getAll_49(this$static.legStipulations, noLegStipulations, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 539) {
			noNestedPartyIDs = getTagIntValue(null, 539, buf);
			$getAll_57(this$static.nestedParties, noNestedPartyIDs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 654) {
			this$static.legRefID = getTagStringValue(null, 654, buf, this$static.legRefID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 676) {
			$getAll_45(this$static.legBenchmarkCurveData, 676, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_55() {
		$clinit_FixMessage();
	}

	function $toString_101(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrumentLeg.legSymbol[0] != 0 && (s += $trim($toString_37(this$static.instrumentLeg)));
		neq(this$static.legQty, P7fffffffffffffff_longLit) && (s += 'LegQty(687)=' + $trim('' + toString_183(this$static.legQty)) + charToString(sep));
		neq(this$static.legOrderQty, P7fffffffffffffff_longLit) && (s += 'LegOrderQty(685)=' + $trim('' + toString_183(this$static.legOrderQty)) + charToString(sep));
		neq(this$static.legSwapType, P7fffffffffffffff_longLit) && (s += 'LegSwapType(690)=' + $trim('' + toString_183(this$static.legSwapType)) + charToString(sep));
		this$static.legSettlType != 127 && (s += 'LegSettlType(587)=' + $trim('' + this$static.legSettlType) + charToString(sep));
		this$static.legSettlDate[0] != 0 && (s += 'LegSettlDate(588)=' + $trim(_String(this$static.legSettlDate)) + charToString(sep));
		neq(fromInt(this$static.legStipulations.noLegStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_49(this$static.legStipulations)));
		neq(fromInt(this$static.nestedParties.noNestedPartyIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_65(this$static.nestedParties)));
		this$static.legRefID[0] != 0 && (s += 'LegRefID(654)=' + $trim(_String(this$static.legRefID)) + charToString(sep));
		this$static.legBenchmarkCurveData.legBenchmarkCurveCurrency[0] != 0 && (s += $trim($toString_42(this$static.legBenchmarkCurveData)));
		return s;
	}

	function FixQuotReqLegsGrp$QuotReqLegsGrp_0() {
		this.instrumentLeg = new FixInstrumentLeg_0;
		this.legSettlDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legStipulations = new FixLegStipulations_0;
		this.nestedParties = new FixNestedParties_0;
		this.legRefID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.legBenchmarkCurveData = new FixLegBenchmarkCurveData_0;
		$clear_104(this);
	}

	defineSeed(640, 1, makeCastMap([Q$FixComponent, Q$FixQuotReqLegsGrp$QuotReqLegsGrp]), FixQuotReqLegsGrp$QuotReqLegsGrp_0);
	_.equals$ = function equals_141(o) {
		return $equals_100(this, o);
	};
	_.toString$ = function toString_130() {
		return $toString_101(this);
	};
	_.legOrderQty = P0_longLit;
	_.legQty = P0_longLit;
	_.legSettlType = 32;
	_.legSwapType = P0_longLit;

	function $clear_105(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRateSources; i_0++)
		$clear_106(this$static.group[i_0]);
	}

	function $encode_69(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRateSources; i_0++)
		$encode_70(this$static.group[i_0], out);
	}

	function $equals_101(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixRateSource)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noRateSources; i_0++)
		if (!$equals_102(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_77(this$static, noRateSources, buf) {
		var i_0, i0;
		this$static.noRateSources = noRateSources;
		if (noRateSources < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noRateSources), P5a5_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noRateSources) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixRateSource$RateSource_2_classLit, makeCastMap([Q$Serializable]), Q$FixRateSource$RateSource, noRateSources, 0);
			for (i0 = 0; i0 < noRateSources; i0++)
			this$static.group[i0] = new FixRateSource$RateSource_0;
		}
		for (i_0 = 0; i_0 < noRateSources; i_0++)
		$getAllGroup_42(this$static.group[i_0], buf);
	}

	function $toString_102(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noRateSources; i_0++)
		s += $toString_103(this$static.group[i_0]);
		return s;
	}

	function FixRateSource_0() {}

	defineSeed(641, 1, makeCastMap([Q$FixRateSource]), FixRateSource_0);
	_.equals$ = function equals_142(o) {
		return $equals_101(this, o);
	};
	_.toString$ = function toString_131() {
		return $toString_102(this);
	};
	_.noRateSources = 0;

	function $clear_106(this$static) {
		this$static.rateSource = P7fffffffffffffff_longLit;
		this$static.rateSourceType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.referencePage[0] = 0;
	}

	function $encode_70(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.rateSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 1446, this$static.rateSource);
		neq(this$static.rateSourceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1447, this$static.rateSourceType);
		this$static.referencePage[0] != 0 && putFixTag_2(out, 1448, this$static.referencePage, lastIndexTrim(this$static.referencePage));
	}

	function $equals_102(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixRateSource$RateSource)) {
			$print_56(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.rateSource, msg.rateSource)) {
			ret = false;
			$print_56((valueOf_1(this$static.rateSource), valueOf_1(msg.rateSource)));
		}
		if (neq(this$static.rateSourceType, msg.rateSourceType)) {
			ret = false;
			$print_56((valueOf_1(this$static.rateSourceType), valueOf_1(msg.rateSourceType)));
		}
		if (!equals_12(this$static.referencePage, msg.referencePage)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_42(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1446) {
			this$static.rateSource = fromInt(getTagIntValue(null, 1446, buf));
			if (!isValid_128(this$static.rateSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.rateSource) + ') for tag'), P5a6_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1447) {
			this$static.rateSourceType = fromInt(getTagIntValue(null, 1447, buf));
			if (!isValid_129(this$static.rateSourceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.rateSourceType) + ') for tag'), P5a7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1448) {
			this$static.referencePage = getTagStringValue(null, 1448, buf, this$static.referencePage);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_56() {
		$clinit_FixMessage();
	}

	function $toString_103(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.rateSource, P7fffffffffffffff_longLit) && (s += 'RateSource(1446)=' + $trim('' + toString_183(this$static.rateSource)) + charToString(sep));
		neq(this$static.rateSourceType, P7fffffffffffffff_longLit) && (s += 'RateSourceType(1447)=' + $trim('' + toString_183(this$static.rateSourceType)) + charToString(sep));
		this$static.referencePage[0] != 0 && (s += 'ReferencePage(1448)=' + $trim(_String(this$static.referencePage)) + charToString(sep));
		return s;
	}

	function FixRateSource$RateSource_0() {
		this.referencePage = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_106(this);
	}

	defineSeed(642, 1, makeCastMap([Q$FixComponent, Q$FixRateSource$RateSource]), FixRateSource$RateSource_0);
	_.equals$ = function equals_143(o) {
		return $equals_102(this, o);
	};
	_.toString$ = function toString_132() {
		return $toString_103(this);
	};
	_.rateSource = P0_longLit;
	_.rateSourceType = P0_longLit;

	function $clear_107(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRootPartyIDs; i_0++)
		$clear_108(this$static.group[i_0]);
	}

	function $encode_71(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRootPartyIDs; i_0++)
		$encode_72(this$static.group[i_0], out);
	}

	function $equals_103(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixRootParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noRootPartyIDs; i_0++)
		if (!$equals_104(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_78(this$static, noRootPartyIDs, buf) {
		var i_0, i0;
		this$static.noRootPartyIDs = noRootPartyIDs;
		if (noRootPartyIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noRootPartyIDs), P45c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noRootPartyIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixRootParties$RootParties_2_classLit, makeCastMap([Q$Serializable]), Q$FixRootParties$RootParties, noRootPartyIDs, 0);
			for (i0 = 0; i0 < noRootPartyIDs; i0++)
			this$static.group[i0] = new FixRootParties$RootParties_0;
		}
		for (i_0 = 0; i_0 < noRootPartyIDs; i_0++)
		$getAllGroup_43(this$static.group[i_0], buf);
	}

	function $toString_104(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noRootPartyIDs; i_0++)
		s += $toString_105(this$static.group[i_0]);
		return s;
	}

	function FixRootParties_0() {}

	defineSeed(643, 1, makeCastMap([Q$FixRootParties]), FixRootParties_0);
	_.equals$ = function equals_144(o) {
		return $equals_103(this, o);
	};
	_.toString$ = function toString_133() {
		return $toString_104(this);
	};
	_.noRootPartyIDs = 0;

	function $clear_108(this$static) {
		$clinit_Utils();
		this$static.rootPartyID[0] = 0;
		this$static.rootPartyIDSource = 127;
		this$static.rootPartyRole = P7fffffffffffffff_longLit;
		$clear_109(this$static.rootSubParties);
	}

	function $encode_72(this$static, out) {
		$clinit_FixUtils();
		this$static.rootPartyID[0] != 0 && putFixTag_2(out, 1117, this$static.rootPartyID, lastIndexTrim(this$static.rootPartyID));
		this$static.rootPartyIDSource != 127 && putFixTag(out, 1118, this$static.rootPartyIDSource);
		neq(this$static.rootPartyRole, P7fffffffffffffff_longLit) && putFixTag_0(out, 1119, this$static.rootPartyRole);
		neq(fromInt(this$static.rootSubParties.noRootPartySubIDs), P7fffffffffffffff_longLit) && $encode_73(this$static.rootSubParties, out);
	}

	function $equals_104(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixRootParties$RootParties)) {
			$print_57(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.rootPartyID, msg.rootPartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.rootPartyIDSource != msg.rootPartyIDSource) {
			ret = false;
			$print_57((valueOf(this$static.rootPartyIDSource), valueOf(msg.rootPartyIDSource)));
		}
		if (neq(this$static.rootPartyRole, msg.rootPartyRole)) {
			ret = false;
			$print_57((valueOf_1(this$static.rootPartyRole), valueOf_1(msg.rootPartyRole)));
		}
		$equals_105(this$static.rootSubParties, msg.rootSubParties) || (ret = false);
		return ret;
	}

	function $getAllGroup_43(this$static, buf) {
		var id_0, lastTagPosition, noRootPartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1117) {
			this$static.rootPartyID = getTagStringValue(null, 1117, buf, this$static.rootPartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1118) {
			this$static.rootPartyIDSource = getTagCharValue(null, 1118, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1119) {
			this$static.rootPartyRole = fromInt(getTagIntValue(null, 1119, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1120) {
			noRootPartySubIDs = getTagIntValue(null, 1120, buf);
			$getAll_79(this$static.rootSubParties, noRootPartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_57() {
		$clinit_FixMessage();
	}

	function $toString_105(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.rootPartyID[0] != 0 && (s += 'RootPartyID(1117)=' + $trim(_String(this$static.rootPartyID)) + charToString(sep));
		this$static.rootPartyIDSource != 127 && (s += 'RootPartyIDSource(1118)=' + $trim('' + this$static.rootPartyIDSource) + charToString(sep));
		neq(this$static.rootPartyRole, P7fffffffffffffff_longLit) && (s += 'RootPartyRole(1119)=' + $trim('' + toString_183(this$static.rootPartyRole)) + charToString(sep));
		neq(fromInt(this$static.rootSubParties.noRootPartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_106(this$static.rootSubParties)));
		return s;
	}

	function FixRootParties$RootParties_0() {
		this.rootPartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.rootSubParties = new FixRootSubParties_0;
		$clear_108(this);
	}

	defineSeed(644, 1, makeCastMap([Q$FixComponent, Q$FixRootParties$RootParties]), FixRootParties$RootParties_0);
	_.equals$ = function equals_145(o) {
		return $equals_104(this, o);
	};
	_.toString$ = function toString_134() {
		return $toString_105(this);
	};
	_.rootPartyIDSource = 32;
	_.rootPartyRole = P0_longLit;

	function $clear_109(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRootPartySubIDs; i_0++)
		$clear_110(this$static.group[i_0]);
	}

	function $encode_73(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRootPartySubIDs; i_0++)
		$encode_74(this$static.group[i_0], out);
	}

	function $equals_105(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixRootSubParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noRootPartySubIDs; i_0++)
		if (!$equals_106(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_79(this$static, noRootPartySubIDs, buf) {
		var i_0, i0;
		this$static.noRootPartySubIDs = noRootPartySubIDs;
		if (noRootPartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noRootPartySubIDs), P460_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noRootPartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixRootSubParties$RootSubParties_2_classLit, makeCastMap([Q$Serializable]), Q$FixRootSubParties$RootSubParties, noRootPartySubIDs, 0);
			for (i0 = 0; i0 < noRootPartySubIDs; i0++)
			this$static.group[i0] = new FixRootSubParties$RootSubParties_0;
		}
		for (i_0 = 0; i_0 < noRootPartySubIDs; i_0++)
		$getAllGroup_44(this$static.group[i_0], buf);
	}

	function $toString_106(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noRootPartySubIDs; i_0++)
		s += $toString_107(this$static.group[i_0]);
		return s;
	}

	function FixRootSubParties_0() {}

	defineSeed(645, 1, makeCastMap([Q$FixRootSubParties]), FixRootSubParties_0);
	_.equals$ = function equals_146(o) {
		return $equals_105(this, o);
	};
	_.toString$ = function toString_135() {
		return $toString_106(this);
	};
	_.noRootPartySubIDs = 0;

	function $clear_110(this$static) {
		$clinit_Utils();
		this$static.rootPartySubID[0] = 0;
		this$static.rootPartySubIDType = P7fffffffffffffff_longLit;
	}

	function $encode_74(this$static, out) {
		$clinit_FixUtils();
		this$static.rootPartySubID[0] != 0 && putFixTag_2(out, 1121, this$static.rootPartySubID, lastIndexTrim(this$static.rootPartySubID));
		neq(this$static.rootPartySubIDType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1122, this$static.rootPartySubIDType);
	}

	function $equals_106(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixRootSubParties$RootSubParties)) {
			$print_58(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.rootPartySubID, msg.rootPartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.rootPartySubIDType, msg.rootPartySubIDType)) {
			ret = false;
			$print_58((valueOf_1(this$static.rootPartySubIDType), valueOf_1(msg.rootPartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_44(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1121) {
			this$static.rootPartySubID = getTagStringValue(null, 1121, buf, this$static.rootPartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1122) {
			this$static.rootPartySubIDType = fromInt(getTagIntValue(null, 1122, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_58() {
		$clinit_FixMessage();
	}

	function $toString_107(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.rootPartySubID[0] != 0 && (s += 'RootPartySubID(1121)=' + $trim(_String(this$static.rootPartySubID)) + charToString(sep));
		neq(this$static.rootPartySubIDType, P7fffffffffffffff_longLit) && (s += 'RootPartySubIDType(1122)=' + $trim('' + toString_183(this$static.rootPartySubIDType)) + charToString(sep));
		return s;
	}

	function FixRootSubParties$RootSubParties_0() {
		this.rootPartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.rootPartySubID[0] = 0;
		this.rootPartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(646, 1, makeCastMap([Q$FixComponent, Q$FixRootSubParties$RootSubParties]), FixRootSubParties$RootSubParties_0);
	_.equals$ = function equals_147(o) {
		return $equals_106(this, o);
	};
	_.toString$ = function toString_136() {
		return $toString_107(this);
	};
	_.rootPartySubIDType = P0_longLit;

	function $clear_111(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noSecurityAltID; i_0++)
		$clear_112(this$static.group[i_0]);
	}

	function $encode_75(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noSecurityAltID; i_0++)
		$encode_76(this$static.group[i_0], out);
	}

	function $equals_107(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixSecAltIDGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noSecurityAltID; i_0++)
		if (!$equals_108(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_80(this$static, noSecurityAltID, buf) {
		var i_0, i0;
		this$static.noSecurityAltID = noSecurityAltID;
		if (noSecurityAltID < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noSecurityAltID), P1c6_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noSecurityAltID) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixSecAltIDGrp$SecAltIDGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixSecAltIDGrp$SecAltIDGrp, noSecurityAltID, 0);
			for (i0 = 0; i0 < noSecurityAltID; i0++)
			this$static.group[i0] = new FixSecAltIDGrp$SecAltIDGrp_0;
		}
		for (i_0 = 0; i_0 < noSecurityAltID; i_0++)
		$getAllGroup_45(this$static.group[i_0], buf);
	}

	function $toString_108(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noSecurityAltID; i_0++)
		s += $toString_109(this$static.group[i_0]);
		return s;
	}

	function FixSecAltIDGrp_0() {}

	defineSeed(647, 1, makeCastMap([Q$FixSecAltIDGrp]), FixSecAltIDGrp_0);
	_.equals$ = function equals_148(o) {
		return $equals_107(this, o);
	};
	_.toString$ = function toString_137() {
		return $toString_108(this);
	};
	_.noSecurityAltID = 0;

	function $clear_112(this$static) {
		$clinit_Utils();
		this$static.securityAltID[0] = 0;
		this$static.securityAltIDSource[0] = 0;
	}

	function $encode_76(this$static, out) {
		$clinit_FixUtils();
		this$static.securityAltID[0] != 0 && putFixTag_2(out, 455, this$static.securityAltID, lastIndexTrim(this$static.securityAltID));
		this$static.securityAltIDSource[0] != 0 && putFixTag_2(out, 456, this$static.securityAltIDSource, lastIndexTrim(this$static.securityAltIDSource));
	}

	function $equals_108(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSecAltIDGrp$SecAltIDGrp)) {
			$print_59(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.securityAltID, msg.securityAltID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityAltIDSource, msg.securityAltIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_45(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 455) {
			this$static.securityAltID = getTagStringValue(null, 455, buf, this$static.securityAltID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 456) {
			this$static.securityAltIDSource = getTagStringValue(null, 456, buf, this$static.securityAltIDSource);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_59() {
		$clinit_FixMessage();
	}

	function $toString_109(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.securityAltID[0] != 0 && (s += 'SecurityAltID(455)=' + $trim(_String(this$static.securityAltID)) + charToString(sep));
		this$static.securityAltIDSource[0] != 0 && (s += 'SecurityAltIDSource(456)=' + $trim(_String(this$static.securityAltIDSource)) + charToString(sep));
		return s;
	}

	function FixSecAltIDGrp$SecAltIDGrp_0() {
		this.securityAltID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityAltIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.securityAltID[0] = 0;
		this.securityAltIDSource[0] = 0;
	}

	defineSeed(648, 1, makeCastMap([Q$FixComponent, Q$FixSecAltIDGrp$SecAltIDGrp]), FixSecAltIDGrp$SecAltIDGrp_0);
	_.equals$ = function equals_149(o) {
		return $equals_108(this, o);
	};
	_.toString$ = function toString_138() {
		return $toString_109(this);
	};

	function $clear_113(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		$clear_114(this$static.group[i_0]);
	}

	function $equals_109(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixSecListGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		if (!$equals_110(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_81(this$static, noRelatedSym, buf) {
		var i_0, i0;
		this$static.noRelatedSym = noRelatedSym;
		if (noRelatedSym < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noRelatedSym), P92_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noRelatedSym) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixSecListGrp$SecListGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixSecListGrp$SecListGrp, noRelatedSym, 0);
			for (i0 = 0; i0 < noRelatedSym; i0++)
			this$static.group[i0] = new FixSecListGrp$SecListGrp_0;
		}
		for (i_0 = 0; i_0 < noRelatedSym; i_0++)
		$getAllGroup_46(this$static.group[i_0], buf);
	}

	function $toString_110(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noRelatedSym; i_0++)
		s += $toString_111(this$static.group[i_0]);
		return s;
	}

	function FixSecListGrp_0() {}

	defineSeed(649, 1, makeCastMap([Q$FixSecListGrp]), FixSecListGrp_0);
	_.equals$ = function equals_150(o) {
		return $equals_109(this, o);
	};
	_.toString$ = function toString_139() {
		return $toString_110(this);
	};
	_.noRelatedSym = 0;

	function $clear_114(this$static) {
		$clinit_Utils();
		this$static.currency[0] = 0;
		this$static.relSymTransactTime[0] = 0;
		this$static.text_0[0] = 0;
		this$static.encodedTextLen = P7fffffffffffffff_longLit;
		this$static.encodedText[0] = 0;
		$clear_40(this$static.instrument);
		$clear_41(this$static.instrumentExtension);
		$clear_34(this$static.financingDetails);
		$clear_115(this$static.securityTradingRules);
		$clear_123(this$static.strikeRules);
		$clear_142(this$static.undInstrmtGrp);
		$clear_119(this$static.stipulations);
		$clear_38(this$static.instrmtLegSecListGrp);
		$clear_118(this$static.spreadOrBenchmarkCurveData);
		$clear_152(this$static.yieldData);
	}

	function $equals_110(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSecListGrp$SecListGrp)) {
			$print_60(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_34(this$static.instrument, msg.instrument) || (ret = false);
		$equals_35(this$static.instrumentExtension, msg.instrumentExtension) || (ret = false);
		$equals_26(this$static.financingDetails, msg.financingDetails) || (ret = false);
		$equals_111(this$static.securityTradingRules, msg.securityTradingRules) || (ret = false);
		$equals_119(this$static.strikeRules, msg.strikeRules) || (ret = false);
		$equals_139(this$static.undInstrmtGrp, msg.undInstrmtGrp) || (ret = false);
		if (!equals_12(this$static.currency, msg.currency)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_115(this$static.stipulations, msg.stipulations) || (ret = false);
		$equals_32(this$static.instrmtLegSecListGrp, msg.instrmtLegSecListGrp) || (ret = false);
		$equals_114(this$static.spreadOrBenchmarkCurveData, msg.spreadOrBenchmarkCurveData) || (ret = false);
		$equals_150(this$static.yieldData, msg.yieldData) || (ret = false);
		if (!equals_12(this$static.text_0, msg.text_0)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedTextLen, msg.encodedTextLen)) {
			ret = false;
			$print_60((valueOf_1(this$static.encodedTextLen), valueOf_1(msg.encodedTextLen)));
		}
		if (!equals_12(this$static.encodedText, msg.encodedText)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_46(this$static, buf) {
		var id_0, lastTagPosition, noLegs, noStipulations, noStrikeRules, noUnderlyings;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 55) {
			$getAll_40(this$static.instrument, 55, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 668) {
			$getAll_41(this$static.instrumentExtension, 668, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 913) {
			$getAll_36(this$static.financingDetails, 913, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 827) {
			$getAll_82(this$static.securityTradingRules, 827, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1201) {
			noStrikeRules = getTagIntValue(null, 1201, buf);
			$getAll_87(this$static.strikeRules, noStrikeRules, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 711) {
			noUnderlyings = getTagIntValue(null, 711, buf);
			$getAll_97(this$static.undInstrmtGrp, noUnderlyings, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 15) {
			this$static.currency = getTagStringValue(null, 15, buf, this$static.currency);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 232) {
			noStipulations = getTagIntValue(null, 232, buf);
			$getAll_85(this$static.stipulations, noStipulations, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 555) {
			noLegs = getTagIntValue(null, 555, buf);
			$getAll_39(this$static.instrmtLegSecListGrp, noLegs, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 218) {
			$getAll_84(this$static.spreadOrBenchmarkCurveData, 218, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 235) {
			$getAll_103(this$static.yieldData, 235, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1504) {
			this$static.relSymTransactTime = getTagStringValue(null, 1504, buf, this$static.relSymTransactTime);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 58) {
			this$static.text_0 = getTagStringValue(null, 58, buf, this$static.text_0);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 354) {
			this$static.encodedTextLen = fromInt(getTagIntValue(null, 354, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 355) {
			this$static.encodedText = getTagStringValue(null, 355, buf, this$static.encodedText);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_60() {
		$clinit_FixMessage();
	}

	function $toString_111(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.instrument.symbol[0] != 0 && (s += $trim($toString_35(this$static.instrument)));
		neq(this$static.instrumentExtension.deliveryForm, P7fffffffffffffff_longLit) && (s += $trim($toString_36(this$static.instrumentExtension)));
		this$static.financingDetails.agreementDesc[0] != 0 && (s += $trim($toString_27(this$static.financingDetails)));
		neq(this$static.securityTradingRules.baseTradingRules.expirationCycle, P7fffffffffffffff_longLit) && (s += $trim($toString_112(this$static.securityTradingRules)));
		neq(fromInt(this$static.strikeRules.noStrikeRules), P7fffffffffffffff_longLit) && (s += $trim($toString_120(this$static.strikeRules)));
		neq(fromInt(this$static.undInstrmtGrp.noUnderlyings), P7fffffffffffffff_longLit) && (s += $trim($toString_140(this$static.undInstrmtGrp)));
		this$static.currency[0] != 0 && (s += 'Currency(15)=' + $trim(_String(this$static.currency)) + charToString(sep));
		neq(fromInt(this$static.stipulations.noStipulations), P7fffffffffffffff_longLit) && (s += $trim($toString_116(this$static.stipulations)));
		neq(fromInt(this$static.instrmtLegSecListGrp.noLegs), P7fffffffffffffff_longLit) && (s += $trim($toString_33(this$static.instrmtLegSecListGrp)));
		neq(this$static.spreadOrBenchmarkCurveData.spread, P7fffffffffffffff_longLit) && (s += $trim($toString_115(this$static.spreadOrBenchmarkCurveData)));
		this$static.yieldData.yieldType[0] != 0 && (s += $trim($toString_151(this$static.yieldData)));
		this$static.relSymTransactTime[0] != 0 && (s += 'RelSymTransactTime(1504)=' + $trim(_String(this$static.relSymTransactTime)) + charToString(sep));
		this$static.text_0[0] != 0 && (s += 'Text(58)=' + $trim(_String(this$static.text_0)) + charToString(sep));
		neq(this$static.encodedTextLen, P7fffffffffffffff_longLit) && (s += 'EncodedTextLen(354)=' + $trim('' + toString_183(this$static.encodedTextLen)) + charToString(sep));
		this$static.encodedText[0] != 0 && (s += 'EncodedText(355)=' + $trim(_String(this$static.encodedText)) + charToString(sep));
		return s;
	}

	function FixSecListGrp$SecListGrp_0() {
		this.instrument = new FixInstrument_0;
		this.instrumentExtension = new FixInstrumentExtension_0;
		this.financingDetails = new FixFinancingDetails_0;
		this.securityTradingRules = new FixSecurityTradingRules_0;
		this.strikeRules = new FixStrikeRules_0;
		this.undInstrmtGrp = new FixUndInstrmtGrp_0;
		this.currency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.stipulations = new FixStipulations_0;
		this.instrmtLegSecListGrp = new FixInstrmtLegSecListGrp_0;
		this.spreadOrBenchmarkCurveData = new FixSpreadOrBenchmarkCurveData_0;
		this.yieldData = new FixYieldData_0;
		this.relSymTransactTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.text_0 = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		this.encodedText = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 1048576, 1);
		$clear_114(this);
	}

	defineSeed(650, 1, makeCastMap([Q$FixComponent, Q$FixSecListGrp$SecListGrp]), FixSecListGrp$SecListGrp_0);
	_.equals$ = function equals_151(o) {
		return $equals_110(this, o);
	};
	_.toString$ = function toString_140() {
		return $toString_111(this);
	};
	_.encodedTextLen = P0_longLit;

	function $clear_115(this$static) {
		$clear_13(this$static.baseTradingRules);
		$clear_130(this$static.tradingSessionRulesGrp);
		$clear_68(this$static.nestedInstrumentAttribute);
	}

	function $equals_111(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSecurityTradingRules)) {
			$print_61(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_3(this$static.baseTradingRules, msg.baseTradingRules) || (ret = false);
		$equals_127(this$static.tradingSessionRulesGrp, msg.tradingSessionRulesGrp) || (ret = false);
		$equals_62(this$static.nestedInstrumentAttribute, msg.nestedInstrumentAttribute) || (ret = false);
		return ret;
	}

	function $getAll_82(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 827:
				$getAll_23(this$static.baseTradingRules, 827, buf);
				break;
			case 1309:
				this$static.tradingSessionRulesGrp.noTradingSessionRules = getTagIntValue(null, 1309, buf);
				$getAll_91(this$static.tradingSessionRulesGrp, this$static.tradingSessionRulesGrp.noTradingSessionRules, buf);
				break;
			case 1312:
				this$static.nestedInstrumentAttribute.noNestedInstrAttrib = getTagIntValue(null, 1312, buf);
				$getAll_56(this$static.nestedInstrumentAttribute, this$static.nestedInstrumentAttribute.noNestedInstrAttrib, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_61() {
		$clinit_FixMessage();
	}

	function $toString_112(this$static) {
		var s;
		$clinit_Boolean();
		s = '';
		$clinit_FixUtils();
		neq(this$static.baseTradingRules.expirationCycle, P7fffffffffffffff_longLit) && (s += $trim($toString_4(this$static.baseTradingRules)));
		neq(fromInt(this$static.tradingSessionRulesGrp.noTradingSessionRules), P7fffffffffffffff_longLit) && (s += $trim($toString_128(this$static.tradingSessionRulesGrp)));
		neq(fromInt(this$static.nestedInstrumentAttribute.noNestedInstrAttrib), P7fffffffffffffff_longLit) && (s += $trim($toString_63(this$static.nestedInstrumentAttribute)));
		return s;
	}

	function FixSecurityTradingRules_0() {
		this.baseTradingRules = new FixBaseTradingRules_0;
		this.tradingSessionRulesGrp = new FixTradingSessionRulesGrp_0;
		this.nestedInstrumentAttribute = new FixNestedInstrumentAttribute_0;
		$clear_115(this);
	}

	defineSeed(651, 1, makeCastMap([Q$FixComponent, Q$FixSecurityTradingRules]), FixSecurityTradingRules_0);
	_.equals$ = function equals_152(o) {
		return $equals_111(this, o);
	};
	_.toString$ = function toString_141() {
		return $toString_112(this);
	};

	function $clear_116(this$static) {
		this$static.securityXMLLen = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.securityXML[0] = 0;
		this$static.securityXMLSchema[0] = 0;
	}

	function $encode_77(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.securityXMLLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 1184, this$static.securityXMLLen);
		this$static.securityXML[0] != 0 && putFixTag_2(out, 1185, this$static.securityXML, lastIndexTrim(this$static.securityXML));
		this$static.securityXMLSchema[0] != 0 && putFixTag_2(out, 1186, this$static.securityXMLSchema, lastIndexTrim(this$static.securityXMLSchema));
	}

	function $equals_112(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSecurityXML)) {
			$print_62(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.securityXMLLen, msg.securityXMLLen)) {
			ret = false;
			$print_62((valueOf_1(this$static.securityXMLLen), valueOf_1(msg.securityXMLLen)));
		}
		if (!equals_12(this$static.securityXML, msg.securityXML)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.securityXMLSchema, msg.securityXMLSchema)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAll_83(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 1184:
				this$static.securityXMLLen = fromInt(getTagIntValue(null, 1184, buf));
				break;
			case 1185:
				this$static.securityXML = getTagStringValue(null, 1185, buf, this$static.securityXML);
				break;
			case 1186:
				this$static.securityXMLSchema = getTagStringValue(null, 1186, buf, this$static.securityXMLSchema);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_62() {
		$clinit_FixMessage();
	}

	function $toString_113(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.securityXMLLen, P7fffffffffffffff_longLit) && (s += 'SecurityXMLLen(1184)=' + $trim('' + toString_183(this$static.securityXMLLen)) + charToString(sep));
		this$static.securityXML[0] != 0 && (s += 'SecurityXML(1185)=' + $trim(_String(this$static.securityXML)) + charToString(sep));
		this$static.securityXMLSchema[0] != 0 && (s += 'SecurityXMLSchema(1186)=' + $trim(_String(this$static.securityXMLSchema)) + charToString(sep));
		return s;
	}

	function FixSecurityXML_0() {
		this.securityXML = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.securityXMLSchema = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_116(this);
	}

	defineSeed(652, 1, makeCastMap([Q$FixComponent, Q$FixSecurityXML]), FixSecurityXML_0);
	_.equals$ = function equals_153(o) {
		return $equals_112(this, o);
	};
	_.toString$ = function toString_142() {
		return $toString_113(this);
	};
	_.securityXMLLen = P0_longLit;

	function $clear_117(this$static) {
		this$static.settlDeliveryType = P7fffffffffffffff_longLit;
		this$static.standInstDbType = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.standInstDbName[0] = 0;
		this$static.standInstDbID[0] = 0;
		$clear_27(this$static.dlvyInstGrp);
	}

	function $encode_78(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.settlDeliveryType, P7fffffffffffffff_longLit) && putFixTag_0(out, 172, this$static.settlDeliveryType);
		neq(this$static.standInstDbType, P7fffffffffffffff_longLit) && putFixTag_0(out, 169, this$static.standInstDbType);
		this$static.standInstDbName[0] != 0 && putFixTag_2(out, 170, this$static.standInstDbName, lastIndexTrim(this$static.standInstDbName));
		this$static.standInstDbID[0] != 0 && putFixTag_2(out, 171, this$static.standInstDbID, lastIndexTrim(this$static.standInstDbID));
		neq(fromInt(this$static.dlvyInstGrp.noDlvyInst), P7fffffffffffffff_longLit) && $encode_22(this$static.dlvyInstGrp);
	}

	function $equals_113(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSettlInstructionsData)) {
			$print_63(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.settlDeliveryType, msg.settlDeliveryType)) {
			ret = false;
			$print_63((valueOf_1(this$static.settlDeliveryType), valueOf_1(msg.settlDeliveryType)));
		}
		if (neq(this$static.standInstDbType, msg.standInstDbType)) {
			ret = false;
			$print_63((valueOf_1(this$static.standInstDbType), valueOf_1(msg.standInstDbType)));
		}
		if (!equals_12(this$static.standInstDbName, msg.standInstDbName)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.standInstDbID, msg.standInstDbID)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_17(this$static.dlvyInstGrp, msg.dlvyInstGrp) || (ret = false);
		return ret;
	}

	function $print_63() {
		$clinit_FixMessage();
	}

	function $toString_114(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.settlDeliveryType, P7fffffffffffffff_longLit) && (s += 'SettlDeliveryType(172)=' + $trim('' + toString_183(this$static.settlDeliveryType)) + charToString(sep));
		neq(this$static.standInstDbType, P7fffffffffffffff_longLit) && (s += 'StandInstDbType(169)=' + $trim('' + toString_183(this$static.standInstDbType)) + charToString(sep));
		this$static.standInstDbName[0] != 0 && (s += 'StandInstDbName(170)=' + $trim(_String(this$static.standInstDbName)) + charToString(sep));
		this$static.standInstDbID[0] != 0 && (s += 'StandInstDbID(171)=' + $trim(_String(this$static.standInstDbID)) + charToString(sep));
		neq(fromInt(this$static.dlvyInstGrp.noDlvyInst), P7fffffffffffffff_longLit) && (s += $trim($toString_18(this$static.dlvyInstGrp)));
		return s;
	}

	function FixSettlInstructionsData_0() {
		this.standInstDbName = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.standInstDbID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.dlvyInstGrp = new FixDlvyInstGrp_0;
		$clear_117(this);
	}

	defineSeed(653, 1, makeCastMap([Q$FixComponent, Q$FixSettlInstructionsData]), FixSettlInstructionsData_0);
	_.equals$ = function equals_154(o) {
		return $equals_113(this, o);
	};
	_.toString$ = function toString_143() {
		return $toString_114(this);
	};
	_.settlDeliveryType = P0_longLit;
	_.standInstDbType = P0_longLit;

	function $clear_118(this$static) {
		this$static.spread = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.benchmarkCurveCurrency[0] = 0;
		this$static.benchmarkCurveName[0] = 0;
		this$static.benchmarkCurvePoint[0] = 0;
		this$static.benchmarkPrice = P7fffffffffffffff_longLit;
		this$static.benchmarkPriceType = P7fffffffffffffff_longLit;
		this$static.benchmarkSecurityID[0] = 0;
		this$static.benchmarkSecurityIDSource[0] = 0;
	}

	function $encode_79(this$static, out) {
		$clinit_FixUtils();
		neq(this$static.spread, P7fffffffffffffff_longLit) && putFixFloatTag(out, 218, this$static.spread);
		this$static.benchmarkCurveCurrency[0] != 0 && putFixTag_2(out, 220, this$static.benchmarkCurveCurrency, lastIndexTrim(this$static.benchmarkCurveCurrency));
		this$static.benchmarkCurveName[0] != 0 && putFixTag_2(out, 221, this$static.benchmarkCurveName, lastIndexTrim(this$static.benchmarkCurveName));
		this$static.benchmarkCurvePoint[0] != 0 && putFixTag_2(out, 222, this$static.benchmarkCurvePoint, lastIndexTrim(this$static.benchmarkCurvePoint));
		neq(this$static.benchmarkPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 662, this$static.benchmarkPrice);
		neq(this$static.benchmarkPriceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 663, this$static.benchmarkPriceType);
		this$static.benchmarkSecurityID[0] != 0 && putFixTag_2(out, 699, this$static.benchmarkSecurityID, lastIndexTrim(this$static.benchmarkSecurityID));
		this$static.benchmarkSecurityIDSource[0] != 0 && putFixTag_2(out, 761, this$static.benchmarkSecurityIDSource, lastIndexTrim(this$static.benchmarkSecurityIDSource));
	}

	function $equals_114(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixSpreadOrBenchmarkCurveData)) {
			$print_64(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.spread, msg.spread)) {
			ret = false;
			$print_64((valueOf_1(this$static.spread), valueOf_1(msg.spread)));
		}
		if (!equals_12(this$static.benchmarkCurveCurrency, msg.benchmarkCurveCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.benchmarkCurveName, msg.benchmarkCurveName)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.benchmarkCurvePoint, msg.benchmarkCurvePoint)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.benchmarkPrice, msg.benchmarkPrice)) {
			ret = false;
			$print_64((valueOf_1(this$static.benchmarkPrice), valueOf_1(msg.benchmarkPrice)));
		}
		if (neq(this$static.benchmarkPriceType, msg.benchmarkPriceType)) {
			ret = false;
			$print_64((valueOf_1(this$static.benchmarkPriceType), valueOf_1(msg.benchmarkPriceType)));
		}
		if (!equals_12(this$static.benchmarkSecurityID, msg.benchmarkSecurityID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.benchmarkSecurityIDSource, msg.benchmarkSecurityIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAll_84(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 218:
				this$static.spread = getTagFloatValue(null, 218, buf);
				break;
			case 220:
				this$static.benchmarkCurveCurrency = getTagStringValue(null, 220, buf, this$static.benchmarkCurveCurrency);
				break;
			case 221:
				this$static.benchmarkCurveName = getTagStringValue(null, 221, buf, this$static.benchmarkCurveName);
				if (!isValid_5(this$static.benchmarkCurveName)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.benchmarkCurveName + ') for tag'), Pdd_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 222:
				this$static.benchmarkCurvePoint = getTagStringValue(null, 222, buf, this$static.benchmarkCurvePoint);
				break;
			case 662:
				this$static.benchmarkPrice = getTagFloatValue(null, 662, buf);
				break;
			case 663:
				this$static.benchmarkPriceType = fromInt(getTagIntValue(null, 663, buf));
				break;
			case 699:
				this$static.benchmarkSecurityID = getTagStringValue(null, 699, buf, this$static.benchmarkSecurityID);
				break;
			case 761:
				this$static.benchmarkSecurityIDSource = getTagStringValue(null, 761, buf, this$static.benchmarkSecurityIDSource);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_64() {
		$clinit_FixMessage();
	}

	function $toString_115(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.spread, P7fffffffffffffff_longLit) && (s += 'Spread(218)=' + $trim('' + toString_183(this$static.spread)) + charToString(sep));
		this$static.benchmarkCurveCurrency[0] != 0 && (s += 'BenchmarkCurveCurrency(220)=' + $trim(_String(this$static.benchmarkCurveCurrency)) + charToString(sep));
		this$static.benchmarkCurveName[0] != 0 && (s += 'BenchmarkCurveName(221)=' + $trim(_String(this$static.benchmarkCurveName)) + charToString(sep));
		this$static.benchmarkCurvePoint[0] != 0 && (s += 'BenchmarkCurvePoint(222)=' + $trim(_String(this$static.benchmarkCurvePoint)) + charToString(sep));
		neq(this$static.benchmarkPrice, P7fffffffffffffff_longLit) && (s += 'BenchmarkPrice(662)=' + $trim('' + toString_183(this$static.benchmarkPrice)) + charToString(sep));
		neq(this$static.benchmarkPriceType, P7fffffffffffffff_longLit) && (s += 'BenchmarkPriceType(663)=' + $trim('' + toString_183(this$static.benchmarkPriceType)) + charToString(sep));
		this$static.benchmarkSecurityID[0] != 0 && (s += 'BenchmarkSecurityID(699)=' + $trim(_String(this$static.benchmarkSecurityID)) + charToString(sep));
		this$static.benchmarkSecurityIDSource[0] != 0 && (s += 'BenchmarkSecurityIDSource(761)=' + $trim(_String(this$static.benchmarkSecurityIDSource)) + charToString(sep));
		return s;
	}

	function FixSpreadOrBenchmarkCurveData_0() {
		this.benchmarkCurveCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.benchmarkCurveName = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.benchmarkCurvePoint = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.benchmarkSecurityID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.benchmarkSecurityIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_118(this);
	}

	defineSeed(654, 1, makeCastMap([Q$FixComponent, Q$FixSpreadOrBenchmarkCurveData]), FixSpreadOrBenchmarkCurveData_0);
	_.equals$ = function equals_155(o) {
		return $equals_114(this, o);
	};
	_.toString$ = function toString_144() {
		return $toString_115(this);
	};
	_.benchmarkPrice = P0_longLit;
	_.benchmarkPriceType = P0_longLit;
	_.spread = P0_longLit;

	function $clear_119(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noStipulations; i_0++)
		$clear_120(this$static.group[i_0]);
	}

	function $encode_80(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noStipulations; i_0++)
		$encode_81(this$static.group[i_0], out);
	}

	function $equals_115(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixStipulations)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noStipulations; i_0++)
		if (!$equals_116(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_85(this$static, noStipulations, buf) {
		var i_0, i0;
		this$static.noStipulations = noStipulations;
		if (noStipulations < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noStipulations), Pe8_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noStipulations) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixStipulations$Stipulations_2_classLit, makeCastMap([Q$Serializable]), Q$FixStipulations$Stipulations, noStipulations, 0);
			for (i0 = 0; i0 < noStipulations; i0++)
			this$static.group[i0] = new FixStipulations$Stipulations_0;
		}
		for (i_0 = 0; i_0 < noStipulations; i_0++)
		$getAllGroup_47(this$static.group[i_0], buf);
	}

	function $toString_116(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noStipulations; i_0++)
		s += $toString_117(this$static.group[i_0]);
		return s;
	}

	function FixStipulations_0() {}

	defineSeed(655, 1, makeCastMap([Q$FixStipulations]), FixStipulations_0);
	_.equals$ = function equals_156(o) {
		return $equals_115(this, o);
	};
	_.toString$ = function toString_145() {
		return $toString_116(this);
	};
	_.noStipulations = 0;

	function $clear_120(this$static) {
		$clinit_Utils();
		this$static.stipulationType[0] = 0;
		this$static.stipulationValue[0] = 0;
	}

	function $encode_81(this$static, out) {
		$clinit_FixUtils();
		this$static.stipulationType[0] != 0 && putFixTag_2(out, 233, this$static.stipulationType, lastIndexTrim(this$static.stipulationType));
		this$static.stipulationValue[0] != 0 && putFixTag_2(out, 234, this$static.stipulationValue, lastIndexTrim(this$static.stipulationValue));
	}

	function $equals_116(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixStipulations$Stipulations)) {
			$print_65(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.stipulationType, msg.stipulationType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.stipulationValue, msg.stipulationValue)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_47(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 233) {
			this$static.stipulationType = getTagStringValue(null, 233, buf, this$static.stipulationType);
			if (!isValid_152(this$static.stipulationType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.stipulationType + ') for tag'), Pe9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 234) {
			this$static.stipulationValue = getTagStringValue(null, 234, buf, this$static.stipulationValue);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_65() {
		$clinit_FixMessage();
	}

	function $toString_117(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.stipulationType[0] != 0 && (s += 'StipulationType(233)=' + $trim(_String(this$static.stipulationType)) + charToString(sep));
		this$static.stipulationValue[0] != 0 && (s += 'StipulationValue(234)=' + $trim(_String(this$static.stipulationValue)) + charToString(sep));
		return s;
	}

	function FixStipulations$Stipulations_0() {
		this.stipulationType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.stipulationValue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.stipulationType[0] = 0;
		this.stipulationValue[0] = 0;
	}

	defineSeed(656, 1, makeCastMap([Q$FixComponent, Q$FixStipulations$Stipulations]), FixStipulations$Stipulations_0);
	_.equals$ = function equals_157(o) {
		return $equals_116(this, o);
	};
	_.toString$ = function toString_146() {
		return $toString_117(this);
	};

	function $clear_121(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noStrategyParameters; i_0++)
		$clear_122(this$static.group[i_0]);
	}

	function $encode_82(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noStrategyParameters; i_0++)
		$encode_83(this$static.group[i_0], out);
	}

	function $equals_117(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixStrategyParametersGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noStrategyParameters; i_0++)
		if (!$equals_118(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_86(this$static, noStrategyParameters, buf) {
		var i_0, i0;
		this$static.noStrategyParameters = noStrategyParameters;
		if (noStrategyParameters < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noStrategyParameters), P3bd_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noStrategyParameters) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixStrategyParametersGrp$StrategyParametersGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixStrategyParametersGrp$StrategyParametersGrp, noStrategyParameters, 0);
			for (i0 = 0; i0 < noStrategyParameters; i0++)
			this$static.group[i0] = new FixStrategyParametersGrp$StrategyParametersGrp_0;
		}
		for (i_0 = 0; i_0 < noStrategyParameters; i_0++)
		$getAllGroup_48(this$static.group[i_0], buf);
	}

	function $toString_118(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noStrategyParameters; i_0++)
		s += $toString_119(this$static.group[i_0]);
		return s;
	}

	function FixStrategyParametersGrp_0() {}

	defineSeed(657, 1, makeCastMap([Q$FixStrategyParametersGrp]), FixStrategyParametersGrp_0);
	_.equals$ = function equals_158(o) {
		return $equals_117(this, o);
	};
	_.toString$ = function toString_147() {
		return $toString_118(this);
	};
	_.noStrategyParameters = 0;

	function $clear_122(this$static) {
		$clinit_Utils();
		this$static.strategyParameterName[0] = 0;
		this$static.strategyParameterType = P7fffffffffffffff_longLit;
		this$static.strategyParameterValue[0] = 0;
	}

	function $encode_83(this$static, out) {
		$clinit_FixUtils();
		this$static.strategyParameterName[0] != 0 && putFixTag_2(out, 958, this$static.strategyParameterName, lastIndexTrim(this$static.strategyParameterName));
		neq(this$static.strategyParameterType, P7fffffffffffffff_longLit) && putFixTag_0(out, 959, this$static.strategyParameterType);
		this$static.strategyParameterValue[0] != 0 && putFixTag_2(out, 960, this$static.strategyParameterValue, lastIndexTrim(this$static.strategyParameterValue));
	}

	function $equals_118(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixStrategyParametersGrp$StrategyParametersGrp)) {
			$print_66(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.strategyParameterName, msg.strategyParameterName)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.strategyParameterType, msg.strategyParameterType)) {
			ret = false;
			$print_66((valueOf_1(this$static.strategyParameterType), valueOf_1(msg.strategyParameterType)));
		}
		if (!equals_12(this$static.strategyParameterValue, msg.strategyParameterValue)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_48(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 958) {
			this$static.strategyParameterName = getTagStringValue(null, 958, buf, this$static.strategyParameterName);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 959) {
			this$static.strategyParameterType = fromInt(getTagIntValue(null, 959, buf));
			if (!isValid_153(this$static.strategyParameterType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.strategyParameterType) + ') for tag'), P3bf_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 960) {
			this$static.strategyParameterValue = getTagStringValue(null, 960, buf, this$static.strategyParameterValue);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_66() {
		$clinit_FixMessage();
	}

	function $toString_119(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.strategyParameterName[0] != 0 && (s += 'StrategyParameterName(958)=' + $trim(_String(this$static.strategyParameterName)) + charToString(sep));
		neq(this$static.strategyParameterType, P7fffffffffffffff_longLit) && (s += 'StrategyParameterType(959)=' + $trim('' + toString_183(this$static.strategyParameterType)) + charToString(sep));
		this$static.strategyParameterValue[0] != 0 && (s += 'StrategyParameterValue(960)=' + $trim(_String(this$static.strategyParameterValue)) + charToString(sep));
		return s;
	}

	function FixStrategyParametersGrp$StrategyParametersGrp_0() {
		this.strategyParameterName = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.strategyParameterValue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_122(this);
	}

	defineSeed(658, 1, makeCastMap([Q$FixComponent, Q$FixStrategyParametersGrp$StrategyParametersGrp]), FixStrategyParametersGrp$StrategyParametersGrp_0);
	_.equals$ = function equals_159(o) {
		return $equals_118(this, o);
	};
	_.toString$ = function toString_148() {
		return $toString_119(this);
	};
	_.strategyParameterType = P0_longLit;

	function $clear_123(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noStrikeRules; i_0++)
		$clear_124(this$static.group[i_0]);
	}

	function $equals_119(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixStrikeRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noStrikeRules; i_0++)
		if (!$equals_120(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_87(this$static, noStrikeRules, buf) {
		var i_0, i0;
		this$static.noStrikeRules = noStrikeRules;
		if (noStrikeRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noStrikeRules), P4b1_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noStrikeRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixStrikeRules$StrikeRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixStrikeRules$StrikeRules, noStrikeRules, 0);
			for (i0 = 0; i0 < noStrikeRules; i0++)
			this$static.group[i0] = new FixStrikeRules$StrikeRules_0;
		}
		for (i_0 = 0; i_0 < noStrikeRules; i_0++)
		$getAllGroup_49(this$static.group[i_0], buf);
	}

	function $toString_120(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noStrikeRules; i_0++)
		s += $toString_121(this$static.group[i_0]);
		return s;
	}

	function FixStrikeRules_0() {}

	defineSeed(659, 1, makeCastMap([Q$FixStrikeRules]), FixStrikeRules_0);
	_.equals$ = function equals_160(o) {
		return $equals_119(this, o);
	};
	_.toString$ = function toString_149() {
		return $toString_120(this);
	};
	_.noStrikeRules = 0;

	function $clear_124(this$static) {
		$clinit_Utils();
		this$static.strikeRuleID[0] = 0;
		this$static.startStrikePxRange = P7fffffffffffffff_longLit;
		this$static.endStrikePxRange = P7fffffffffffffff_longLit;
		this$static.strikeIncrement = P7fffffffffffffff_longLit;
		this$static.strikeExerciseStyle = P7fffffffffffffff_longLit;
		$clear_62(this$static.maturityRules);
	}

	function $equals_120(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixStrikeRules$StrikeRules)) {
			$print_67(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.strikeRuleID, msg.strikeRuleID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.startStrikePxRange, msg.startStrikePxRange)) {
			ret = false;
			$print_67((valueOf_1(this$static.startStrikePxRange), valueOf_1(msg.startStrikePxRange)));
		}
		if (neq(this$static.endStrikePxRange, msg.endStrikePxRange)) {
			ret = false;
			$print_67((valueOf_1(this$static.endStrikePxRange), valueOf_1(msg.endStrikePxRange)));
		}
		if (neq(this$static.strikeIncrement, msg.strikeIncrement)) {
			ret = false;
			$print_67((valueOf_1(this$static.strikeIncrement), valueOf_1(msg.strikeIncrement)));
		}
		if (neq(this$static.strikeExerciseStyle, msg.strikeExerciseStyle)) {
			ret = false;
			$print_67((valueOf_1(this$static.strikeExerciseStyle), valueOf_1(msg.strikeExerciseStyle)));
		}
		$equals_56(this$static.maturityRules, msg.maturityRules) || (ret = false);
		return ret;
	}

	function $getAllGroup_49(this$static, buf) {
		var id_0, lastTagPosition, noMaturityRules;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1223) {
			this$static.strikeRuleID = getTagStringValue(null, 1223, buf, this$static.strikeRuleID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1202) {
			this$static.startStrikePxRange = getTagFloatValue(null, 1202, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1203) {
			this$static.endStrikePxRange = getTagFloatValue(null, 1203, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1204) {
			this$static.strikeIncrement = getTagFloatValue(null, 1204, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1304) {
			this$static.strikeExerciseStyle = fromInt(getTagIntValue(null, 1304, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1236) {
			noMaturityRules = getTagIntValue(null, 1236, buf);
			$getAll_53(this$static.maturityRules, noMaturityRules, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_67() {
		$clinit_FixMessage();
	}

	function $toString_121(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.strikeRuleID[0] != 0 && (s += 'StrikeRuleID(1223)=' + $trim(_String(this$static.strikeRuleID)) + charToString(sep));
		neq(this$static.startStrikePxRange, P7fffffffffffffff_longLit) && (s += 'StartStrikePxRange(1202)=' + $trim('' + toString_183(this$static.startStrikePxRange)) + charToString(sep));
		neq(this$static.endStrikePxRange, P7fffffffffffffff_longLit) && (s += 'EndStrikePxRange(1203)=' + $trim('' + toString_183(this$static.endStrikePxRange)) + charToString(sep));
		neq(this$static.strikeIncrement, P7fffffffffffffff_longLit) && (s += 'StrikeIncrement(1204)=' + $trim('' + toString_183(this$static.strikeIncrement)) + charToString(sep));
		neq(this$static.strikeExerciseStyle, P7fffffffffffffff_longLit) && (s += 'StrikeExerciseStyle(1304)=' + $trim('' + toString_183(this$static.strikeExerciseStyle)) + charToString(sep));
		neq(fromInt(this$static.maturityRules.noMaturityRules), P7fffffffffffffff_longLit) && (s += $trim($toString_57(this$static.maturityRules)));
		return s;
	}

	function FixStrikeRules$StrikeRules_0() {
		this.strikeRuleID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.maturityRules = new FixMaturityRules_0;
		$clear_124(this);
	}

	defineSeed(660, 1, makeCastMap([Q$FixComponent, Q$FixStrikeRules$StrikeRules]), FixStrikeRules$StrikeRules_0);
	_.equals$ = function equals_161(o) {
		return $equals_120(this, o);
	};
	_.toString$ = function toString_150() {
		return $toString_121(this);
	};
	_.endStrikePxRange = P0_longLit;
	_.startStrikePxRange = P0_longLit;
	_.strikeExerciseStyle = P0_longLit;
	_.strikeIncrement = P0_longLit;

	function $clear_125(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTargetPartyIDs; i_0++)
		this$static.group[i_0].nullMethod();
	}

	function $encode_84(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTargetPartyIDs; i_0++)
		this$static.group[i_0].nullMethod();
	}

	function $equals_121(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTargetParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTargetPartyIDs; i_0++)
		if (!this$static.group[i_0].nullMethod(msg.group[i_0])) return false;
		return true;
	}

	function $toString_122(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTargetPartyIDs; i_0++)
		s += this$static.group[i_0].nullMethod();
		return s;
	}

	function FixTargetParties_0() {}

	defineSeed(661, 1, makeCastMap([Q$FixTargetParties]), FixTargetParties_0);
	_.equals$ = function equals_162(o) {
		return $equals_121(this, o);
	};
	_.toString$ = function toString_151() {
		return $toString_122(this);
	};
	_.noTargetPartyIDs = 0;

	function $clear_126(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTickRules; i_0++)
		$clear_127(this$static.group[i_0]);
	}

	function $equals_122(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTickRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTickRules; i_0++)
		if (!$equals_123(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_88(this$static, noTickRules, buf) {
		var i_0, i0;
		this$static.noTickRules = noTickRules;
		if (noTickRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noTickRules), P4b5_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noTickRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTickRules$TickRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixTickRules$TickRules, noTickRules, 0);
			for (i0 = 0; i0 < noTickRules; i0++)
			this$static.group[i0] = new FixTickRules$TickRules_0;
		}
		for (i_0 = 0; i_0 < noTickRules; i_0++)
		$getAllGroup_50(this$static.group[i_0], buf);
	}

	function $toString_123(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTickRules; i_0++)
		s += $toString_124(this$static.group[i_0]);
		return s;
	}

	function FixTickRules_0() {}

	defineSeed(662, 1, makeCastMap([Q$FixTickRules]), FixTickRules_0);
	_.equals$ = function equals_163(o) {
		return $equals_122(this, o);
	};
	_.toString$ = function toString_152() {
		return $toString_123(this);
	};
	_.noTickRules = 0;

	function $clear_127(this$static) {
		this$static.startTickPriceRange = P7fffffffffffffff_longLit;
		this$static.endTickPriceRange = P7fffffffffffffff_longLit;
		this$static.tickIncrement = P7fffffffffffffff_longLit;
		this$static.tickRuleType = P7fffffffffffffff_longLit;
	}

	function $equals_123(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTickRules$TickRules)) {
			$print_68(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.startTickPriceRange, msg.startTickPriceRange)) {
			ret = false;
			$print_68((valueOf_1(this$static.startTickPriceRange), valueOf_1(msg.startTickPriceRange)));
		}
		if (neq(this$static.endTickPriceRange, msg.endTickPriceRange)) {
			ret = false;
			$print_68((valueOf_1(this$static.endTickPriceRange), valueOf_1(msg.endTickPriceRange)));
		}
		if (neq(this$static.tickIncrement, msg.tickIncrement)) {
			ret = false;
			$print_68((valueOf_1(this$static.tickIncrement), valueOf_1(msg.tickIncrement)));
		}
		if (neq(this$static.tickRuleType, msg.tickRuleType)) {
			ret = false;
			$print_68((valueOf_1(this$static.tickRuleType), valueOf_1(msg.tickRuleType)));
		}
		return ret;
	}

	function $getAllGroup_50(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1206) {
			this$static.startTickPriceRange = getTagFloatValue(null, 1206, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1207) {
			this$static.endTickPriceRange = getTagFloatValue(null, 1207, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1208) {
			this$static.tickIncrement = getTagFloatValue(null, 1208, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1209) {
			this$static.tickRuleType = fromInt(getTagIntValue(null, 1209, buf));
			if (!isValid_161(this$static.tickRuleType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.tickRuleType) + ') for tag'), P4b9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_68() {
		$clinit_FixMessage();
	}

	function $toString_124(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		neq(this$static.startTickPriceRange, P7fffffffffffffff_longLit) && (s += 'StartTickPriceRange(1206)=' + $trim('' + toString_183(this$static.startTickPriceRange)) + charToString(sep));
		neq(this$static.endTickPriceRange, P7fffffffffffffff_longLit) && (s += 'EndTickPriceRange(1207)=' + $trim('' + toString_183(this$static.endTickPriceRange)) + charToString(sep));
		neq(this$static.tickIncrement, P7fffffffffffffff_longLit) && (s += 'TickIncrement(1208)=' + $trim('' + toString_183(this$static.tickIncrement)) + charToString(sep));
		neq(this$static.tickRuleType, P7fffffffffffffff_longLit) && (s += 'TickRuleType(1209)=' + $trim('' + toString_183(this$static.tickRuleType)) + charToString(sep));
		return s;
	}

	function FixTickRules$TickRules_0() {
		$clear_127(this);
	}

	defineSeed(663, 1, makeCastMap([Q$FixComponent, Q$FixTickRules$TickRules]), FixTickRules$TickRules_0);
	_.equals$ = function equals_164(o) {
		return $equals_123(this, o);
	};
	_.toString$ = function toString_153() {
		return $toString_124(this);
	};
	_.endTickPriceRange = P0_longLit;
	_.startTickPriceRange = P0_longLit;
	_.tickIncrement = P0_longLit;
	_.tickRuleType = P0_longLit;

	function $clear_128(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTimeInForceRules; i_0++)
		this$static.group[i_0].timeInForce = 127;
	}

	function $equals_124(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTimeInForceRules)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTimeInForceRules; i_0++)
		if (!$equals_125(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_89(this$static, noTimeInForceRules, buf) {
		var i_0, i0;
		this$static.noTimeInForceRules = noTimeInForceRules;
		if (noTimeInForceRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noTimeInForceRules), P4d7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noTimeInForceRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTimeInForceRules$TimeInForceRules_2_classLit, makeCastMap([Q$Serializable]), Q$FixTimeInForceRules$TimeInForceRules, noTimeInForceRules, 0);
			for (i0 = 0; i0 < noTimeInForceRules; i0++)
			this$static.group[i0] = new FixTimeInForceRules$TimeInForceRules_0;
		}
		for (i_0 = 0; i_0 < noTimeInForceRules; i_0++)
		$getAllGroup_51(this$static.group[i_0], buf);
	}

	function $toString_125(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTimeInForceRules; i_0++)
		s += $toString_126(this$static.group[i_0]);
		return s;
	}

	function FixTimeInForceRules_0() {}

	defineSeed(664, 1, makeCastMap([Q$FixTimeInForceRules]), FixTimeInForceRules_0);
	_.equals$ = function equals_165(o) {
		return $equals_124(this, o);
	};
	_.toString$ = function toString_154() {
		return $toString_125(this);
	};
	_.noTimeInForceRules = 0;

	function $equals_125(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTimeInForceRules$TimeInForceRules)) {
			$print_69(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.timeInForce != msg.timeInForce) {
			ret = false;
			$print_69((valueOf(this$static.timeInForce), valueOf(msg.timeInForce)));
		}
		return ret;
	}

	function $getAllGroup_51(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 59) {
			this$static.timeInForce = getTagCharValue(null, 59, buf);
			if (!isValid_162(this$static.timeInForce)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.timeInForce + ') for tag'), P3b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_69() {
		$clinit_FixMessage();
	}

	function $toString_126(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.timeInForce != 127 && (s += 'TimeInForce(59)=' + $trim('' + this$static.timeInForce) + charToString(sep));
		return s;
	}

	function FixTimeInForceRules$TimeInForceRules_0() {
		this.timeInForce = 127;
	}

	defineSeed(665, 1, makeCastMap([Q$FixComponent, Q$FixTimeInForceRules$TimeInForceRules]), FixTimeInForceRules$TimeInForceRules_0);
	_.equals$ = function equals_166(o) {
		return $equals_125(this, o);
	};
	_.toString$ = function toString_155() {
		return $toString_126(this);
	};
	_.timeInForce = 32;

	function $clear_129(this$static) {
		$clear_86(this$static.ordTypeRules);
		$clear_128(this$static.timeInForceRules);
		$clear_31(this$static.execInstRules);
		$clear_60(this$static.matchRules);
		$clear_58(this$static.marketDataFeedTypes);
	}

	function $equals_126(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTradingSessionRules)) {
			$print_70(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_80(this$static.ordTypeRules, msg.ordTypeRules) || (ret = false);
		$equals_124(this$static.timeInForceRules, msg.timeInForceRules) || (ret = false);
		$equals_22(this$static.execInstRules, msg.execInstRules) || (ret = false);
		$equals_54(this$static.matchRules, msg.matchRules) || (ret = false);
		$equals_52(this$static.marketDataFeedTypes, msg.marketDataFeedTypes) || (ret = false);
		return ret;
	}

	function $getAll_90(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 1237:
				this$static.ordTypeRules.noOrdTypeRules = getTagIntValue(null, 1237, buf);
				$getAll_65(this$static.ordTypeRules, this$static.ordTypeRules.noOrdTypeRules, buf);
				break;
			case 1239:
				this$static.timeInForceRules.noTimeInForceRules = getTagIntValue(null, 1239, buf);
				$getAll_89(this$static.timeInForceRules, this$static.timeInForceRules.noTimeInForceRules, buf);
				break;
			case 1232:
				this$static.execInstRules.noExecInstRules = getTagIntValue(null, 1232, buf);
				$getAll_34(this$static.execInstRules, this$static.execInstRules.noExecInstRules, buf);
				break;
			case 1235:
				this$static.matchRules.noMatchRules = getTagIntValue(null, 1235, buf);
				$getAll_52(this$static.matchRules, this$static.matchRules.noMatchRules, buf);
				break;
			case 1141:
				this$static.marketDataFeedTypes.noMDFeedTypes = getTagIntValue(null, 1141, buf);
				$getAll_51(this$static.marketDataFeedTypes, this$static.marketDataFeedTypes.noMDFeedTypes, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_70() {
		$clinit_FixMessage();
	}

	function $toString_127(this$static) {
		var s;
		$clinit_Boolean();
		s = '';
		$clinit_FixUtils();
		neq(fromInt(this$static.ordTypeRules.noOrdTypeRules), P7fffffffffffffff_longLit) && (s += $trim($toString_81(this$static.ordTypeRules)));
		neq(fromInt(this$static.timeInForceRules.noTimeInForceRules), P7fffffffffffffff_longLit) && (s += $trim($toString_125(this$static.timeInForceRules)));
		neq(fromInt(this$static.execInstRules.noExecInstRules), P7fffffffffffffff_longLit) && (s += $trim($toString_23(this$static.execInstRules)));
		neq(fromInt(this$static.matchRules.noMatchRules), P7fffffffffffffff_longLit) && (s += $trim($toString_55(this$static.matchRules)));
		neq(fromInt(this$static.marketDataFeedTypes.noMDFeedTypes), P7fffffffffffffff_longLit) && (s += $trim($toString_53(this$static.marketDataFeedTypes)));
		return s;
	}

	function FixTradingSessionRules_0() {
		this.ordTypeRules = new FixOrdTypeRules_0;
		this.timeInForceRules = new FixTimeInForceRules_0;
		this.execInstRules = new FixExecInstRules_0;
		this.matchRules = new FixMatchRules_0;
		this.marketDataFeedTypes = new FixMarketDataFeedTypes_0;
		$clear_129(this);
	}

	defineSeed(666, 1, makeCastMap([Q$FixComponent, Q$FixTradingSessionRules]), FixTradingSessionRules_0);
	_.equals$ = function equals_167(o) {
		return $equals_126(this, o);
	};
	_.toString$ = function toString_156() {
		return $toString_127(this);
	};

	function $clear_130(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTradingSessionRules; i_0++)
		$clear_131(this$static.group[i_0]);
	}

	function $equals_127(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTradingSessionRulesGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTradingSessionRules; i_0++)
		if (!$equals_128(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_91(this$static, noTradingSessionRules, buf) {
		var i_0, i0;
		this$static.noTradingSessionRules = noTradingSessionRules;
		if (noTradingSessionRules < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noTradingSessionRules), P51d_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noTradingSessionRules) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTradingSessionRulesGrp$TradingSessionRulesGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixTradingSessionRulesGrp$TradingSessionRulesGrp, noTradingSessionRules, 0);
			for (i0 = 0; i0 < noTradingSessionRules; i0++)
			this$static.group[i0] = new FixTradingSessionRulesGrp$TradingSessionRulesGrp_0;
		}
		for (i_0 = 0; i_0 < noTradingSessionRules; i_0++)
		$getAllGroup_52(this$static.group[i_0], buf);
	}

	function $toString_128(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTradingSessionRules; i_0++)
		s += $toString_129(this$static.group[i_0]);
		return s;
	}

	function FixTradingSessionRulesGrp_0() {}

	defineSeed(667, 1, makeCastMap([Q$FixTradingSessionRulesGrp]), FixTradingSessionRulesGrp_0);
	_.equals$ = function equals_168(o) {
		return $equals_127(this, o);
	};
	_.toString$ = function toString_157() {
		return $toString_128(this);
	};
	_.noTradingSessionRules = 0;

	function $clear_131(this$static) {
		$clinit_Utils();
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
		$clear_129(this$static.tradingSessionRules);
	}

	function $equals_128(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTradingSessionRulesGrp$TradingSessionRulesGrp)) {
			$print_71(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.tradingSessionID, msg.tradingSessionID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.tradingSessionSubID, msg.tradingSessionSubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_126(this$static.tradingSessionRules, msg.tradingSessionRules) || (ret = false);
		return ret;
	}

	function $getAllGroup_52(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 336) {
			this$static.tradingSessionID = getTagStringValue(null, 336, buf, this$static.tradingSessionID);
			if (!isValid_168(this$static.tradingSessionID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionID + ') for tag'), P150_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 625) {
			this$static.tradingSessionSubID = getTagStringValue(null, 625, buf, this$static.tradingSessionSubID);
			if (!isValid_169(this$static.tradingSessionSubID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionSubID + ') for tag'), P271_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1237) {
			$getAll_90(this$static.tradingSessionRules, 1237, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_71() {
		$clinit_FixMessage();
	}

	function $toString_129(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this$static.tradingSessionID)) + charToString(sep));
		this$static.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this$static.tradingSessionSubID)) + charToString(sep));
		neq(fromInt(this$static.tradingSessionRules.ordTypeRules.noOrdTypeRules), P7fffffffffffffff_longLit) && (s += $trim($toString_127(this$static.tradingSessionRules)));
		return s;
	}

	function FixTradingSessionRulesGrp$TradingSessionRulesGrp_0() {
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionRules = new FixTradingSessionRules_0;
		$clear_131(this);
	}

	defineSeed(668, 1, makeCastMap([Q$FixComponent, Q$FixTradingSessionRulesGrp$TradingSessionRulesGrp]), FixTradingSessionRulesGrp$TradingSessionRulesGrp_0);
	_.equals$ = function equals_169(o) {
		return $equals_128(this, o);
	};
	_.toString$ = function toString_158() {
		return $toString_129(this);
	};

	function $clear_132(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noDates; i_0++)
		this$static.group[i_0].nullMethod();
	}

	function $encode_85(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noDates; i_0++)
		this$static.group[i_0].nullMethod();
	}

	function $equals_129(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTrdCapDtGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noDates; i_0++)
		if (!this$static.group[i_0].nullMethod(msg.group[i_0])) return false;
		return true;
	}

	function $toString_130(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noDates; i_0++)
		s += this$static.group[i_0].nullMethod();
		return s;
	}

	function FixTrdCapDtGrp_0() {}

	defineSeed(669, 1, makeCastMap([Q$FixTrdCapDtGrp]), FixTrdCapDtGrp_0);
	_.equals$ = function equals_170(o) {
		return $equals_129(this, o);
	};
	_.toString$ = function toString_159() {
		return $toString_130(this);
	};
	_.noDates = 0;

	function $clear_133(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTrades; i_0++)
		$clear_134(this$static.group[i_0]);
	}

	function $encode_86(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTrades; i_0++)
		$encode_87(this$static.group[i_0], out);
	}

	function $equals_130(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTrdCollGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTrades; i_0++)
		if (!$equals_131(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_92(this$static, noTrades, buf) {
		var i_0, i0;
		this$static.noTrades = noTrades;
		if (noTrades < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noTrades), P381_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noTrades) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdCollGrp$TrdCollGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixTrdCollGrp$TrdCollGrp, noTrades, 0);
			for (i0 = 0; i0 < noTrades; i0++)
			this$static.group[i0] = new FixTrdCollGrp$TrdCollGrp_0;
		}
		for (i_0 = 0; i_0 < noTrades; i_0++)
		$getAllGroup_53(this$static.group[i_0], buf);
	}

	function $toString_131(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTrades; i_0++)
		s += $toString_132(this$static.group[i_0]);
		return s;
	}

	function FixTrdCollGrp_0() {}

	defineSeed(670, 1, makeCastMap([Q$FixTrdCollGrp]), FixTrdCollGrp_0);
	_.equals$ = function equals_171(o) {
		return $equals_130(this, o);
	};
	_.toString$ = function toString_160() {
		return $toString_131(this);
	};
	_.noTrades = 0;

	function $clear_134(this$static) {
		$clinit_Utils();
		this$static.tradeReportID[0] = 0;
		this$static.secondaryTradeReportID[0] = 0;
	}

	function $encode_87(this$static, out) {
		$clinit_FixUtils();
		this$static.tradeReportID[0] != 0 && putFixTag_2(out, 571, this$static.tradeReportID, lastIndexTrim(this$static.tradeReportID));
		this$static.secondaryTradeReportID[0] != 0 && putFixTag_2(out, 818, this$static.secondaryTradeReportID, lastIndexTrim(this$static.secondaryTradeReportID));
	}

	function $equals_131(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTrdCollGrp$TrdCollGrp)) {
			$print_72(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.tradeReportID, msg.tradeReportID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.secondaryTradeReportID, msg.secondaryTradeReportID)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_53(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 571) {
			this$static.tradeReportID = getTagStringValue(null, 571, buf, this$static.tradeReportID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 818) {
			this$static.secondaryTradeReportID = getTagStringValue(null, 818, buf, this$static.secondaryTradeReportID);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_72() {
		$clinit_FixMessage();
	}

	function $toString_132(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.tradeReportID[0] != 0 && (s += 'TradeReportID(571)=' + $trim(_String(this$static.tradeReportID)) + charToString(sep));
		this$static.secondaryTradeReportID[0] != 0 && (s += 'SecondaryTradeReportID(818)=' + $trim(_String(this$static.secondaryTradeReportID)) + charToString(sep));
		return s;
	}

	function FixTrdCollGrp$TrdCollGrp_0() {
		this.tradeReportID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.secondaryTradeReportID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.tradeReportID[0] = 0;
		this.secondaryTradeReportID[0] = 0;
	}

	defineSeed(671, 1, makeCastMap([Q$FixComponent, Q$FixTrdCollGrp$TrdCollGrp]), FixTrdCollGrp$TrdCollGrp_0);
	_.equals$ = function equals_172(o) {
		return $equals_131(this, o);
	};
	_.toString$ = function toString_161() {
		return $toString_132(this);
	};

	function $clear_135(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTrdRegTimestamps; i_0++)
		$clear_136(this$static.group[i_0]);
	}

	function $encode_88(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTrdRegTimestamps; i_0++)
		$encode_89(this$static.group[i_0], out);
	}

	function $equals_132(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTrdRegTimestamps)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTrdRegTimestamps; i_0++)
		if (!$equals_133(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_93(this$static, noTrdRegTimestamps, buf) {
		var i_0, i0;
		this$static.noTrdRegTimestamps = noTrdRegTimestamps;
		if (noTrdRegTimestamps < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noTrdRegTimestamps), P300_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noTrdRegTimestamps) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdRegTimestamps$TrdRegTimestamps_2_classLit, makeCastMap([Q$Serializable]), Q$FixTrdRegTimestamps$TrdRegTimestamps, noTrdRegTimestamps, 0);
			for (i0 = 0; i0 < noTrdRegTimestamps; i0++)
			this$static.group[i0] = new FixTrdRegTimestamps$TrdRegTimestamps_0;
		}
		for (i_0 = 0; i_0 < noTrdRegTimestamps; i_0++)
		$getAllGroup_54(this$static.group[i_0], buf);
	}

	function $toString_133(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTrdRegTimestamps; i_0++)
		s += $toString_134(this$static.group[i_0]);
		return s;
	}

	function FixTrdRegTimestamps_0() {}

	defineSeed(672, 1, makeCastMap([Q$FixTrdRegTimestamps]), FixTrdRegTimestamps_0);
	_.equals$ = function equals_173(o) {
		return $equals_132(this, o);
	};
	_.toString$ = function toString_162() {
		return $toString_133(this);
	};
	_.noTrdRegTimestamps = 0;

	function $clear_136(this$static) {
		$clinit_Utils();
		this$static.trdRegTimestamp[0] = 0;
		this$static.trdRegTimestampType = P7fffffffffffffff_longLit;
		this$static.trdRegTimestampOrigin[0] = 0;
		this$static.deskType[0] = 0;
		this$static.deskTypeSource = P7fffffffffffffff_longLit;
		this$static.deskOrderHandlingInst[0] = 0;
	}

	function $encode_89(this$static, out) {
		$clinit_FixUtils();
		this$static.trdRegTimestamp[0] != 0 && putFixTag_1(out, 769, this$static.trdRegTimestamp);
		neq(this$static.trdRegTimestampType, P7fffffffffffffff_longLit) && putFixTag_0(out, 770, this$static.trdRegTimestampType);
		this$static.trdRegTimestampOrigin[0] != 0 && putFixTag_2(out, 771, this$static.trdRegTimestampOrigin, lastIndexTrim(this$static.trdRegTimestampOrigin));
		this$static.deskType[0] != 0 && putFixTag_2(out, 1033, this$static.deskType, lastIndexTrim(this$static.deskType));
		neq(this$static.deskTypeSource, P7fffffffffffffff_longLit) && putFixTag_0(out, 1034, this$static.deskTypeSource);
		this$static.deskOrderHandlingInst[0] != 0 && putFixTag_2(out, 1035, this$static.deskOrderHandlingInst, lastIndexTrim(this$static.deskOrderHandlingInst));
	}

	function $equals_133(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTrdRegTimestamps$TrdRegTimestamps)) {
			$print_73(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (neq(this$static.trdRegTimestampType, msg.trdRegTimestampType)) {
			ret = false;
			$print_73((valueOf_1(this$static.trdRegTimestampType), valueOf_1(msg.trdRegTimestampType)));
		}
		if (!equals_12(this$static.trdRegTimestampOrigin, msg.trdRegTimestampOrigin)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.deskType, msg.deskType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.deskTypeSource, msg.deskTypeSource)) {
			ret = false;
			$print_73((valueOf_1(this$static.deskTypeSource), valueOf_1(msg.deskTypeSource)));
		}
		if (!equals_12(this$static.deskOrderHandlingInst, msg.deskOrderHandlingInst)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_54(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 769) {
			this$static.trdRegTimestamp = getTagStringValue(null, 769, buf, this$static.trdRegTimestamp);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 770) {
			this$static.trdRegTimestampType = fromInt(getTagIntValue(null, 770, buf));
			if (!isValid_170(this$static.trdRegTimestampType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.trdRegTimestampType) + ') for tag'), P302_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 771) {
			this$static.trdRegTimestampOrigin = getTagStringValue(null, 771, buf, this$static.trdRegTimestampOrigin);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1033) {
			this$static.deskType = getTagStringValue(null, 1033, buf, this$static.deskType);
			if (!isValid_36(this$static.deskType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.deskType + ') for tag'), P409_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1034) {
			this$static.deskTypeSource = fromInt(getTagIntValue(null, 1034, buf));
			if (!isValid_37(this$static.deskTypeSource)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.deskTypeSource) + ') for tag'), P40a_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1035) {
			this$static.deskOrderHandlingInst = getTagStringValue(null, 1035, buf, this$static.deskOrderHandlingInst);
			if (!isValid_35(this$static.deskOrderHandlingInst)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.deskOrderHandlingInst + ') for tag'), P40b_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_73() {
		$clinit_FixMessage();
	}

	function $toString_134(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.trdRegTimestamp[0] != 0 && (s += 'TrdRegTimestamp(769)=' + $trim(_String(this$static.trdRegTimestamp)) + charToString(sep));
		neq(this$static.trdRegTimestampType, P7fffffffffffffff_longLit) && (s += 'TrdRegTimestampType(770)=' + $trim('' + toString_183(this$static.trdRegTimestampType)) + charToString(sep));
		this$static.trdRegTimestampOrigin[0] != 0 && (s += 'TrdRegTimestampOrigin(771)=' + $trim(_String(this$static.trdRegTimestampOrigin)) + charToString(sep));
		this$static.deskType[0] != 0 && (s += 'DeskType(1033)=' + $trim(_String(this$static.deskType)) + charToString(sep));
		neq(this$static.deskTypeSource, P7fffffffffffffff_longLit) && (s += 'DeskTypeSource(1034)=' + $trim('' + toString_183(this$static.deskTypeSource)) + charToString(sep));
		this$static.deskOrderHandlingInst[0] != 0 && (s += 'DeskOrderHandlingInst(1035)=' + $trim(_String(this$static.deskOrderHandlingInst)) + charToString(sep));
		return s;
	}

	function FixTrdRegTimestamps$TrdRegTimestamps_0() {
		this.trdRegTimestamp = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 21, 1);
		this.trdRegTimestampOrigin = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.deskType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.deskOrderHandlingInst = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_136(this);
	}

	defineSeed(673, 1, makeCastMap([Q$FixComponent, Q$FixTrdRegTimestamps$TrdRegTimestamps]), FixTrdRegTimestamps$TrdRegTimestamps_0);
	_.equals$ = function equals_174(o) {
		return $equals_133(this, o);
	};
	_.toString$ = function toString_163() {
		return $toString_134(this);
	};
	_.deskTypeSource = P0_longLit;
	_.trdRegTimestampType = P0_longLit;

	function $clear_137(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTradingSessions; i_0++)
		$clear_138(this$static.group[i_0]);
	}

	function $encode_90(this$static, out) {
		var i_0;
		if (this$static.noTradingSessions != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 386, fromInt(this$static.noTradingSessions));
			for (i_0 = 0; i_0 < this$static.noTradingSessions; i_0++)
			$encode_91(this$static.group[i_0], out);
		}
	}

	function $equals_134(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixTrdgSesGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noTradingSessions; i_0++)
		if (!$equals_135(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_94(this$static, noTradingSessions, buf) {
		var i_0, i0;
		this$static.noTradingSessions = noTradingSessions;
		if (noTradingSessions < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noTradingSessions), P182_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noTradingSessions) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdgSesGrp$TrdgSesGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixTrdgSesGrp$TrdgSesGrp, noTradingSessions, 0);
			for (i0 = 0; i0 < noTradingSessions; i0++)
			this$static.group[i0] = new FixTrdgSesGrp$TrdgSesGrp_0;
		}
		for (i_0 = 0; i_0 < noTradingSessions; i_0++)
		$getAllGroup_55(this$static.group[i_0], buf);
	}

	function $isSet_13(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noTradingSessions; i_0++)
		if ($isSet_14(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_135(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noTradingSessions; i_0++)
		s += $toString_136(this$static.group[i_0]);
		return s;
	}

	function FixTrdgSesGrp_0() {}

	defineSeed(674, 1, makeCastMap([Q$FixTrdgSesGrp]), FixTrdgSesGrp_0);
	_.equals$ = function equals_175(o) {
		return $equals_134(this, o);
	};
	_.toString$ = function toString_164() {
		return $toString_135(this);
	};
	_.noTradingSessions = 0;

	function $clear_138(this$static) {
		$clinit_Utils();
		this$static.tradingSessionID[0] = 0;
		this$static.tradingSessionSubID[0] = 0;
	}

	function $encode_91(this$static, out) {
		$clinit_FixUtils();
		this$static.tradingSessionID[0] != 0 && putFixTag_2(out, 336, this$static.tradingSessionID, lastIndexTrim(this$static.tradingSessionID));
		this$static.tradingSessionSubID[0] != 0 && putFixTag_2(out, 625, this$static.tradingSessionSubID, lastIndexTrim(this$static.tradingSessionSubID));
	}

	function $equals_135(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTrdgSesGrp$TrdgSesGrp)) {
			$print_74(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.tradingSessionID, msg.tradingSessionID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.tradingSessionSubID, msg.tradingSessionSubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_55(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 336) {
			this$static.tradingSessionID = getTagStringValue(null, 336, buf, this$static.tradingSessionID);
			if (!isValid_168(this$static.tradingSessionID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionID + ') for tag'), P150_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 625) {
			this$static.tradingSessionSubID = getTagStringValue(null, 625, buf, this$static.tradingSessionSubID);
			if (!isValid_169(this$static.tradingSessionSubID)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.tradingSessionSubID + ') for tag'), P271_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $isSet_14(this$static) {
		$clinit_FixUtils();
		if (this$static.tradingSessionID[0] != 0) return true;
		if (this$static.tradingSessionSubID[0] != 0) return true;
		return false;
	}

	function $print_74() {
		$clinit_FixMessage();
	}

	function $toString_136(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.tradingSessionID[0] != 0 && (s += 'TradingSessionID(336)=' + $trim(_String(this$static.tradingSessionID)) + charToString(sep));
		this$static.tradingSessionSubID[0] != 0 && (s += 'TradingSessionSubID(625)=' + $trim(_String(this$static.tradingSessionSubID)) + charToString(sep));
		return s;
	}

	function FixTrdgSesGrp$TrdgSesGrp_0() {
		this.tradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.tradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.tradingSessionID[0] = 0;
		this.tradingSessionSubID[0] = 0;
	}

	defineSeed(675, 1, makeCastMap([Q$FixComponent, Q$FixTrdgSesGrp$TrdgSesGrp]), FixTrdgSesGrp$TrdgSesGrp_0);
	_.equals$ = function equals_176(o) {
		return $equals_135(this, o);
	};
	_.toString$ = function toString_165() {
		return $toString_136(this);
	};

	function $clear_139(this$static) {
		this$static.triggerType = 127;
		this$static.triggerAction = 127;
		this$static.triggerPrice = P7fffffffffffffff_longLit;
		$clinit_Utils();
		this$static.triggerSymbol[0] = 0;
		this$static.triggerSecurityID[0] = 0;
		this$static.triggerSecurityIDSource[0] = 0;
		this$static.triggerSecurityDesc[0] = 0;
		this$static.triggerPriceType = 127;
		this$static.triggerPriceTypeScope = 127;
		this$static.triggerPriceDirection = 127;
		this$static.triggerNewPrice = P7fffffffffffffff_longLit;
		this$static.triggerOrderType = 127;
		this$static.triggerNewQty = P7fffffffffffffff_longLit;
		this$static.triggerTradingSessionID[0] = 0;
		this$static.triggerTradingSessionSubID[0] = 0;
	}

	function $encode_92(this$static, out) {
		$clinit_FixUtils();
		this$static.triggerType != 127 && putFixTag(out, 1100, this$static.triggerType);
		this$static.triggerAction != 127 && putFixTag(out, 1101, this$static.triggerAction);
		neq(this$static.triggerPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1102, this$static.triggerPrice);
		this$static.triggerSymbol[0] != 0 && putFixTag_2(out, 1103, this$static.triggerSymbol, lastIndexTrim(this$static.triggerSymbol));
		this$static.triggerSecurityID[0] != 0 && putFixTag_2(out, 1104, this$static.triggerSecurityID, lastIndexTrim(this$static.triggerSecurityID));
		this$static.triggerSecurityIDSource[0] != 0 && putFixTag_2(out, 1105, this$static.triggerSecurityIDSource, lastIndexTrim(this$static.triggerSecurityIDSource));
		this$static.triggerSecurityDesc[0] != 0 && putFixTag_2(out, 1106, this$static.triggerSecurityDesc, lastIndexTrim(this$static.triggerSecurityDesc));
		this$static.triggerPriceType != 127 && putFixTag(out, 1107, this$static.triggerPriceType);
		this$static.triggerPriceTypeScope != 127 && putFixTag(out, 1108, this$static.triggerPriceTypeScope);
		this$static.triggerPriceDirection != 127 && putFixTag(out, 1109, this$static.triggerPriceDirection);
		neq(this$static.triggerNewPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1110, this$static.triggerNewPrice);
		this$static.triggerOrderType != 127 && putFixTag(out, 1111, this$static.triggerOrderType);
		neq(this$static.triggerNewQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1112, this$static.triggerNewQty);
		this$static.triggerTradingSessionID[0] != 0 && putFixTag_2(out, 1113, this$static.triggerTradingSessionID, lastIndexTrim(this$static.triggerTradingSessionID));
		this$static.triggerTradingSessionSubID[0] != 0 && putFixTag_2(out, 1114, this$static.triggerTradingSessionSubID, lastIndexTrim(this$static.triggerTradingSessionSubID));
	}

	function $equals_136(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixTriggeringInstruction)) {
			$print_75(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (this$static.triggerType != msg.triggerType) {
			ret = false;
			$print_75((valueOf(this$static.triggerType), valueOf(msg.triggerType)));
		}
		if (this$static.triggerAction != msg.triggerAction) {
			ret = false;
			$print_75((valueOf(this$static.triggerAction), valueOf(msg.triggerAction)));
		}
		if (neq(this$static.triggerPrice, msg.triggerPrice)) {
			ret = false;
			$print_75((valueOf_1(this$static.triggerPrice), valueOf_1(msg.triggerPrice)));
		}
		if (!equals_12(this$static.triggerSymbol, msg.triggerSymbol)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.triggerSecurityID, msg.triggerSecurityID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.triggerSecurityIDSource, msg.triggerSecurityIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.triggerSecurityDesc, msg.triggerSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.triggerPriceType != msg.triggerPriceType) {
			ret = false;
			$print_75((valueOf(this$static.triggerPriceType), valueOf(msg.triggerPriceType)));
		}
		if (this$static.triggerPriceTypeScope != msg.triggerPriceTypeScope) {
			ret = false;
			$print_75((valueOf(this$static.triggerPriceTypeScope), valueOf(msg.triggerPriceTypeScope)));
		}
		if (this$static.triggerPriceDirection != msg.triggerPriceDirection) {
			ret = false;
			$print_75((valueOf(this$static.triggerPriceDirection), valueOf(msg.triggerPriceDirection)));
		}
		if (neq(this$static.triggerNewPrice, msg.triggerNewPrice)) {
			ret = false;
			$print_75((valueOf_1(this$static.triggerNewPrice), valueOf_1(msg.triggerNewPrice)));
		}
		if (this$static.triggerOrderType != msg.triggerOrderType) {
			ret = false;
			$print_75((valueOf(this$static.triggerOrderType), valueOf(msg.triggerOrderType)));
		}
		if (neq(this$static.triggerNewQty, msg.triggerNewQty)) {
			ret = false;
			$print_75((valueOf_1(this$static.triggerNewQty), valueOf_1(msg.triggerNewQty)));
		}
		if (!equals_12(this$static.triggerTradingSessionID, msg.triggerTradingSessionID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.triggerTradingSessionSubID, msg.triggerTradingSessionSubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAll_95(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 1100:
				this$static.triggerType = getTagCharValue(null, 1100, buf);
				if (!isValid_176(this$static.triggerType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.triggerType + ') for tag'), P44c_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1101:
				this$static.triggerAction = getTagCharValue(null, 1101, buf);
				if (!isValid_171(this$static.triggerAction)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.triggerAction + ') for tag'), P44d_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1102:
				this$static.triggerPrice = getTagFloatValue(null, 1102, buf);
				break;
			case 1103:
				this$static.triggerSymbol = getTagStringValue(null, 1103, buf, this$static.triggerSymbol);
				break;
			case 1104:
				this$static.triggerSecurityID = getTagStringValue(null, 1104, buf, this$static.triggerSecurityID);
				break;
			case 1105:
				this$static.triggerSecurityIDSource = getTagStringValue(null, 1105, buf, this$static.triggerSecurityIDSource);
				break;
			case 1106:
				this$static.triggerSecurityDesc = getTagStringValue(null, 1106, buf, this$static.triggerSecurityDesc);
				break;
			case 1107:
				this$static.triggerPriceType = getTagCharValue(null, 1107, buf);
				if (!isValid_174(this$static.triggerPriceType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.triggerPriceType + ') for tag'), P453_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1108:
				this$static.triggerPriceTypeScope = getTagCharValue(null, 1108, buf);
				if (!isValid_175(this$static.triggerPriceTypeScope)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.triggerPriceTypeScope + ') for tag'), P454_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1109:
				this$static.triggerPriceDirection = getTagCharValue(null, 1109, buf);
				if (!isValid_173(this$static.triggerPriceDirection)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.triggerPriceDirection + ') for tag'), P455_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1110:
				this$static.triggerNewPrice = getTagFloatValue(null, 1110, buf);
				break;
			case 1111:
				this$static.triggerOrderType = getTagCharValue(null, 1111, buf);
				if (!isValid_172(this$static.triggerOrderType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.triggerOrderType + ') for tag'), P457_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 1112:
				this$static.triggerNewQty = getTagFloatValue(null, 1112, buf);
				break;
			case 1113:
				this$static.triggerTradingSessionID = getTagStringValue(null, 1113, buf, this$static.triggerTradingSessionID);
				break;
			case 1114:
				this$static.triggerTradingSessionSubID = getTagStringValue(null, 1114, buf, this$static.triggerTradingSessionSubID);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_75() {
		$clinit_FixMessage();
	}

	function $toString_137(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.triggerType != 127 && (s += 'TriggerType(1100)=' + $trim('' + this$static.triggerType) + charToString(sep));
		this$static.triggerAction != 127 && (s += 'TriggerAction(1101)=' + $trim('' + this$static.triggerAction) + charToString(sep));
		neq(this$static.triggerPrice, P7fffffffffffffff_longLit) && (s += 'TriggerPrice(1102)=' + $trim('' + toString_183(this$static.triggerPrice)) + charToString(sep));
		this$static.triggerSymbol[0] != 0 && (s += 'TriggerSymbol(1103)=' + $trim(_String(this$static.triggerSymbol)) + charToString(sep));
		this$static.triggerSecurityID[0] != 0 && (s += 'TriggerSecurityID(1104)=' + $trim(_String(this$static.triggerSecurityID)) + charToString(sep));
		this$static.triggerSecurityIDSource[0] != 0 && (s += 'TriggerSecurityIDSource(1105)=' + $trim(_String(this$static.triggerSecurityIDSource)) + charToString(sep));
		this$static.triggerSecurityDesc[0] != 0 && (s += 'TriggerSecurityDesc(1106)=' + $trim(_String(this$static.triggerSecurityDesc)) + charToString(sep));
		this$static.triggerPriceType != 127 && (s += 'TriggerPriceType(1107)=' + $trim('' + this$static.triggerPriceType) + charToString(sep));
		this$static.triggerPriceTypeScope != 127 && (s += 'TriggerPriceTypeScope(1108)=' + $trim('' + this$static.triggerPriceTypeScope) + charToString(sep));
		this$static.triggerPriceDirection != 127 && (s += 'TriggerPriceDirection(1109)=' + $trim('' + this$static.triggerPriceDirection) + charToString(sep));
		neq(this$static.triggerNewPrice, P7fffffffffffffff_longLit) && (s += 'TriggerNewPrice(1110)=' + $trim('' + toString_183(this$static.triggerNewPrice)) + charToString(sep));
		this$static.triggerOrderType != 127 && (s += 'TriggerOrderType(1111)=' + $trim('' + this$static.triggerOrderType) + charToString(sep));
		neq(this$static.triggerNewQty, P7fffffffffffffff_longLit) && (s += 'TriggerNewQty(1112)=' + $trim('' + toString_183(this$static.triggerNewQty)) + charToString(sep));
		this$static.triggerTradingSessionID[0] != 0 && (s += 'TriggerTradingSessionID(1113)=' + $trim(_String(this$static.triggerTradingSessionID)) + charToString(sep));
		this$static.triggerTradingSessionSubID[0] != 0 && (s += 'TriggerTradingSessionSubID(1114)=' + $trim(_String(this$static.triggerTradingSessionSubID)) + charToString(sep));
		return s;
	}

	function FixTriggeringInstruction_0() {
		this.triggerSymbol = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.triggerSecurityID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.triggerSecurityIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.triggerSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.triggerTradingSessionID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.triggerTradingSessionSubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_139(this);
	}

	defineSeed(676, 1, makeCastMap([Q$FixComponent, Q$FixTriggeringInstruction]), FixTriggeringInstruction_0);
	_.equals$ = function equals_177(o) {
		return $equals_136(this, o);
	};
	_.toString$ = function toString_166() {
		return $toString_137(this);
	};
	_.triggerAction = 32;
	_.triggerNewPrice = P0_longLit;
	_.triggerNewQty = P0_longLit;
	_.triggerOrderType = 32;
	_.triggerPrice = P0_longLit;
	_.triggerPriceDirection = 32;
	_.triggerPriceType = 32;
	_.triggerPriceTypeScope = 32;
	_.triggerType = 32;

	function $clear_140(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		$clear_141(this$static.group[i_0]);
	}

	function $encode_93(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		$encode_94(this$static.group[i_0], out);
	}

	function $equals_137(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixUndInstrmtCollGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		if (!$equals_138(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_96(this$static, noUnderlyings, buf) {
		var i_0, i0;
		this$static.noUnderlyings = noUnderlyings;
		if (noUnderlyings < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noUnderlyings), P2c7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noUnderlyings) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtCollGrp$UndInstrmtCollGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixUndInstrmtCollGrp$UndInstrmtCollGrp, noUnderlyings, 0);
			for (i0 = 0; i0 < noUnderlyings; i0++)
			this$static.group[i0] = new FixUndInstrmtCollGrp$UndInstrmtCollGrp_0;
		}
		for (i_0 = 0; i_0 < noUnderlyings; i_0++)
		$getAllGroup_56(this$static.group[i_0], buf);
	}

	function $toString_138(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		s += $toString_139(this$static.group[i_0]);
		return s;
	}

	function FixUndInstrmtCollGrp_0() {}

	defineSeed(677, 1, makeCastMap([Q$FixUndInstrmtCollGrp]), FixUndInstrmtCollGrp_0);
	_.equals$ = function equals_178(o) {
		return $equals_137(this, o);
	};
	_.toString$ = function toString_167() {
		return $toString_138(this);
	};
	_.noUnderlyings = 0;

	function $clear_141(this$static) {
		this$static.collAction = P7fffffffffffffff_longLit;
		$clear_145(this$static.underlyingInstrument);
	}

	function $encode_94(this$static, out) {
		$clinit_FixUtils();
		this$static.underlyingInstrument.underlyingSymbol[0] != 0 && $encode_99(this$static.underlyingInstrument, out);
		neq(this$static.collAction, P7fffffffffffffff_longLit) && putFixTag_0(out, 944, this$static.collAction);
	}

	function $equals_138(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUndInstrmtCollGrp$UndInstrmtCollGrp)) {
			$print_76(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_143(this$static.underlyingInstrument, msg.underlyingInstrument) || (ret = false);
		if (neq(this$static.collAction, msg.collAction)) {
			ret = false;
			$print_76((valueOf_1(this$static.collAction), valueOf_1(msg.collAction)));
		}
		return ret;
	}

	function $getAllGroup_56(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 311) {
			$getAll_99(this$static.underlyingInstrument, 311, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 944) {
			this$static.collAction = fromInt(getTagIntValue(null, 944, buf));
			if (!isValid_12(this$static.collAction)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.collAction) + ') for tag'), P3b0_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_76() {
		$clinit_FixMessage();
	}

	function $toString_139(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.underlyingInstrument.underlyingSymbol[0] != 0 && (s += $trim($toString_144(this$static.underlyingInstrument)));
		neq(this$static.collAction, P7fffffffffffffff_longLit) && (s += 'CollAction(944)=' + $trim('' + toString_183(this$static.collAction)) + charToString(sep));
		return s;
	}

	function FixUndInstrmtCollGrp$UndInstrmtCollGrp_0() {
		this.underlyingInstrument = new FixUnderlyingInstrument_0;
		this.collAction = P7fffffffffffffff_longLit;
		$clear_145(this.underlyingInstrument);
	}

	defineSeed(678, 1, makeCastMap([Q$FixComponent, Q$FixUndInstrmtCollGrp$UndInstrmtCollGrp]), FixUndInstrmtCollGrp$UndInstrmtCollGrp_0);
	_.equals$ = function equals_179(o) {
		return $equals_138(this, o);
	};
	_.toString$ = function toString_168() {
		return $toString_139(this);
	};
	_.collAction = P0_longLit;

	function $allocateUndInstrmtGrps(this$static, num) {
		var i_0;
		this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtGrp$UndInstrmtGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixUndInstrmtGrp$UndInstrmtGrp, num, 0);
		for (i_0 = 0; i_0 < num; i_0++)
		this$static.group[i_0] = new FixUndInstrmtGrp$UndInstrmtGrp_0;
	}

	function $clear_142(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		$clear_145(this$static.group[i_0].underlyingInstrument);
	}

	function $encode_95(this$static, out) {
		var i_0;
		if (this$static.noUnderlyings != 0) {
			$clinit_FixUtils();
			putFixTag_0(out, 711, fromInt(this$static.noUnderlyings));
			for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
			$encode_96(this$static.group[i_0], out);
		}
	}

	function $equals_139(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixUndInstrmtGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		if (!$equals_140(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_97(this$static, noUnderlyings, buf) {
		var i_0, i0;
		this$static.noUnderlyings = noUnderlyings;
		if (noUnderlyings < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noUnderlyings), P2c7_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noUnderlyings) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtGrp$UndInstrmtGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixUndInstrmtGrp$UndInstrmtGrp, noUnderlyings, 0);
			for (i0 = 0; i0 < noUnderlyings; i0++)
			this$static.group[i0] = new FixUndInstrmtGrp$UndInstrmtGrp_0;
		}
		for (i_0 = 0; i_0 < noUnderlyings; i_0++)
		$getAllGroup_57(this$static.group[i_0], buf);
	}

	function $isSet_15(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		if ($isSet_16(this$static.group[i_0])) return true;
		return false;
	}

	function $toString_140(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noUnderlyings; i_0++)
		s += $toString_141(this$static.group[i_0]);
		return s;
	}

	function FixUndInstrmtGrp_0() {}

	defineSeed(679, 1, makeCastMap([Q$FixUndInstrmtGrp]), FixUndInstrmtGrp_0);
	_.equals$ = function equals_180(o) {
		return $equals_139(this, o);
	};
	_.toString$ = function toString_169() {
		return $toString_140(this);
	};
	_.noUnderlyings = 0;

	function $encode_96(this$static, out) {
		$clinit_FixUtils();
		if (this$static.underlyingInstrument.underlyingSymbol[0] != 0) {
			$encode_99(this$static.underlyingInstrument, out);
			return;
		}
		if (this$static.underlyingInstrument.underlyingSecurityID[0] != 0) {
			$encode_99(this$static.underlyingInstrument, out);
			return;
		}
	}

	function $equals_140(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUndInstrmtGrp$UndInstrmtGrp)) {
			$print_77(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		$equals_143(this$static.underlyingInstrument, msg.underlyingInstrument) || (ret = false);
		return ret;
	}

	function $getAllGroup_57(this$static, buf) {
		var id_0;
		id_0 = getTagId(buf);
		id_0 == 311 && $getAll_99(this$static.underlyingInstrument, 311, buf);
		id_0 == 309 && $getAll_99(this$static.underlyingInstrument, 309, buf);
		return;
	}

	function $isSet_16(this$static) {
		$clinit_FixUtils();
		if (this$static.underlyingInstrument.underlyingSymbol[0] != 0) return true;
		if (this$static.underlyingInstrument.underlyingSecurityID[0] != 0) return true;
		return false;
	}

	function $print_77() {
		$clinit_FixMessage();
	}

	function $toString_141(this$static) {
		var s;
		$clinit_Boolean();
		s = '';
		$clinit_FixUtils();
		this$static.underlyingInstrument.underlyingSymbol[0] != 0 && (s += $trim($toString_144(this$static.underlyingInstrument)));
		return s;
	}

	function FixUndInstrmtGrp$UndInstrmtGrp_0() {
		this.underlyingInstrument = new FixUnderlyingInstrument_0;
		$clear_145(this.underlyingInstrument);
	}

	defineSeed(680, 1, makeCastMap([Q$FixComponent, Q$FixUndInstrmtGrp$UndInstrmtGrp]), FixUndInstrmtGrp$UndInstrmtGrp_0);
	_.equals$ = function equals_181(o) {
		return $equals_140(this, o);
	};
	_.toString$ = function toString_170() {
		return $toString_141(this);
	};

	function $clear_143(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyingSecurityAltID; i_0++)
		$clear_144(this$static.group[i_0]);
	}

	function $encode_97(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyingSecurityAltID; i_0++)
		$encode_98(this$static.group[i_0], out);
	}

	function $equals_141(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixUndSecAltIDGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noUnderlyingSecurityAltID; i_0++)
		if (!$equals_142(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_98(this$static, noUnderlyingSecurityAltID, buf) {
		var i_0, i0;
		this$static.noUnderlyingSecurityAltID = noUnderlyingSecurityAltID;
		if (noUnderlyingSecurityAltID < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noUnderlyingSecurityAltID), P1c9_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noUnderlyingSecurityAltID) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndSecAltIDGrp$UndSecAltIDGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixUndSecAltIDGrp$UndSecAltIDGrp, noUnderlyingSecurityAltID, 0);
			for (i0 = 0; i0 < noUnderlyingSecurityAltID; i0++)
			this$static.group[i0] = new FixUndSecAltIDGrp$UndSecAltIDGrp_0;
		}
		for (i_0 = 0; i_0 < noUnderlyingSecurityAltID; i_0++)
		$getAllGroup_58(this$static.group[i_0], buf);
	}

	function $toString_142(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noUnderlyingSecurityAltID; i_0++)
		s += $toString_143(this$static.group[i_0]);
		return s;
	}

	function FixUndSecAltIDGrp_0() {}

	defineSeed(681, 1, makeCastMap([Q$FixUndSecAltIDGrp]), FixUndSecAltIDGrp_0);
	_.equals$ = function equals_182(o) {
		return $equals_141(this, o);
	};
	_.toString$ = function toString_171() {
		return $toString_142(this);
	};
	_.noUnderlyingSecurityAltID = 0;

	function $clear_144(this$static) {
		$clinit_Utils();
		this$static.underlyingSecurityAltID[0] = 0;
		this$static.underlyingSecurityAltIDSource[0] = 0;
	}

	function $encode_98(this$static, out) {
		$clinit_FixUtils();
		this$static.underlyingSecurityAltID[0] != 0 && putFixTag_2(out, 458, this$static.underlyingSecurityAltID, lastIndexTrim(this$static.underlyingSecurityAltID));
		this$static.underlyingSecurityAltIDSource[0] != 0 && putFixTag_2(out, 459, this$static.underlyingSecurityAltIDSource, lastIndexTrim(this$static.underlyingSecurityAltIDSource));
	}

	function $equals_142(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUndSecAltIDGrp$UndSecAltIDGrp)) {
			$print_78(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.underlyingSecurityAltID, msg.underlyingSecurityAltID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSecurityAltIDSource, msg.underlyingSecurityAltIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_58(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 458) {
			this$static.underlyingSecurityAltID = getTagStringValue(null, 458, buf, this$static.underlyingSecurityAltID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 459) {
			this$static.underlyingSecurityAltIDSource = getTagStringValue(null, 459, buf, this$static.underlyingSecurityAltIDSource);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_78() {
		$clinit_FixMessage();
	}

	function $toString_143(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.underlyingSecurityAltID[0] != 0 && (s += 'UnderlyingSecurityAltID(458)=' + $trim(_String(this$static.underlyingSecurityAltID)) + charToString(sep));
		this$static.underlyingSecurityAltIDSource[0] != 0 && (s += 'UnderlyingSecurityAltIDSource(459)=' + $trim(_String(this$static.underlyingSecurityAltIDSource)) + charToString(sep));
		return s;
	}

	function FixUndSecAltIDGrp$UndSecAltIDGrp_0() {
		this.underlyingSecurityAltID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecurityAltIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.underlyingSecurityAltID[0] = 0;
		this.underlyingSecurityAltIDSource[0] = 0;
	}

	defineSeed(682, 1, makeCastMap([Q$FixComponent, Q$FixUndSecAltIDGrp$UndSecAltIDGrp]), FixUndSecAltIDGrp$UndSecAltIDGrp_0);
	_.equals$ = function equals_183(o) {
		return $equals_142(this, o);
	};
	_.toString$ = function toString_172() {
		return $toString_143(this);
	};

	function $clear_145(this$static) {
		$clinit_Utils();
		this$static.underlyingSymbol[0] = 0;
		this$static.underlyingSymbolSfx[0] = 0;
		this$static.underlyingSecurityID[0] = 0;
		this$static.underlyingSecurityIDSource[0] = 0;
		this$static.underlyingProduct = P7fffffffffffffff_longLit;
		this$static.underlyingCFICode[0] = 0;
		this$static.underlyingSecurityType[0] = 0;
		this$static.underlyingSecuritySubType[0] = 0;
		this$static.underlyingMaturityMonthYear[0] = 0;
		this$static.underlyingMaturityDate[0] = 0;
		this$static.underlyingMaturityTime[0] = 0;
		this$static.underlyingCouponPaymentDate[0] = 0;
		this$static.underlyingRestructuringType[0] = 0;
		this$static.underlyingSeniority[0] = 0;
		this$static.underlyingNotionalPercentageOutstanding = P7fffffffffffffff_longLit;
		this$static.underlyingOriginalNotionalPercentageOutstanding = P7fffffffffffffff_longLit;
		this$static.underlyingAttachmentPoint = P7fffffffffffffff_longLit;
		this$static.underlyingDetachmentPoint = P7fffffffffffffff_longLit;
		this$static.underlyingIssueDate[0] = 0;
		this$static.underlyingRepoCollateralSecurityType = P7fffffffffffffff_longLit;
		this$static.underlyingRepurchaseTerm = P7fffffffffffffff_longLit;
		this$static.underlyingRepurchaseRate = P7fffffffffffffff_longLit;
		this$static.underlyingFactor = P7fffffffffffffff_longLit;
		this$static.underlyingCreditRating[0] = 0;
		this$static.underlyingInstrRegistry[0] = 0;
		this$static.underlyingCountryOfIssue[0] = 0;
		this$static.underlyingStateOrProvinceOfIssue[0] = 0;
		this$static.underlyingLocaleOfIssue[0] = 0;
		this$static.underlyingRedemptionDate[0] = 0;
		this$static.underlyingStrikePrice = P7fffffffffffffff_longLit;
		this$static.underlyingStrikeCurrency[0] = 0;
		this$static.underlyingOptAttribute = 127;
		this$static.underlyingContractMultiplier = P7fffffffffffffff_longLit;
		this$static.underlyingUnitOfMeasure[0] = 0;
		this$static.underlyingTimeUnit[0] = 0;
		this$static.underlyingExerciseStyle = P7fffffffffffffff_longLit;
		this$static.underlyingUnitOfMeasureQty = P7fffffffffffffff_longLit;
		this$static.underlyingPriceUnitOfMeasure[0] = 0;
		this$static.underlyingPriceUnitOfMeasureQty = P7fffffffffffffff_longLit;
		this$static.underlyingContractMultiplierUnit = P7fffffffffffffff_longLit;
		this$static.underlyingFlowScheduleType = P7fffffffffffffff_longLit;
		this$static.underlyingCouponRate = P7fffffffffffffff_longLit;
		this$static.underlyingSecurityExchange[0] = 0;
		this$static.underlyingIssuer[0] = 0;
		this$static.encodedUnderlyingIssuerLen = P7fffffffffffffff_longLit;
		this$static.encodedUnderlyingIssuer[0] = 0;
		this$static.underlyingSecurityDesc[0] = 0;
		this$static.encodedUnderlyingSecurityDescLen = P7fffffffffffffff_longLit;
		this$static.encodedUnderlyingSecurityDesc[0] = 0;
		this$static.underlyingCPProgram[0] = 0;
		this$static.underlyingCPRegType[0] = 0;
		this$static.underlyingAllocationPercent = P7fffffffffffffff_longLit;
		this$static.underlyingCurrency[0] = 0;
		this$static.underlyingQty = P7fffffffffffffff_longLit;
		this$static.underlyingSettlementType = P7fffffffffffffff_longLit;
		this$static.underlyingCashAmount = P7fffffffffffffff_longLit;
		this$static.underlyingCashType[0] = 0;
		this$static.underlyingPx = P7fffffffffffffff_longLit;
		this$static.underlyingDirtyPrice = P7fffffffffffffff_longLit;
		this$static.underlyingEndPrice = P7fffffffffffffff_longLit;
		this$static.underlyingStartValue = P7fffffffffffffff_longLit;
		this$static.underlyingCurrentValue = P7fffffffffffffff_longLit;
		this$static.underlyingEndValue = P7fffffffffffffff_longLit;
		this$static.underlyingAdjustedQuantity = P7fffffffffffffff_longLit;
		this$static.underlyingFXRate = P7fffffffffffffff_longLit;
		this$static.underlyingFXRateCalc = 127;
		this$static.underlyingCapValue = P7fffffffffffffff_longLit;
		this$static.underlyingSettlMethod[0] = 0;
		this$static.underlyingPutOrCall = P7fffffffffffffff_longLit;
		$clear_143(this$static.undSecAltIDGrp);
		$clear_146(this$static.underlyingStipulations);
		$clear_148(this$static.undlyInstrumentParties);
	}

	function $encode_99(this$static, out) {
		$clinit_FixUtils();
		this$static.underlyingSymbol[0] != 0 && putFixTag_2(out, 311, this$static.underlyingSymbol, lastIndexTrim(this$static.underlyingSymbol));
		this$static.underlyingSymbolSfx[0] != 0 && putFixTag_2(out, 312, this$static.underlyingSymbolSfx, lastIndexTrim(this$static.underlyingSymbolSfx));
		this$static.underlyingSecurityID[0] != 0 && putFixTag_2(out, 309, this$static.underlyingSecurityID, lastIndexTrim(this$static.underlyingSecurityID));
		this$static.underlyingSecurityIDSource[0] != 0 && putFixTag_2(out, 305, this$static.underlyingSecurityIDSource, lastIndexTrim(this$static.underlyingSecurityIDSource));
		neq(fromInt(this$static.undSecAltIDGrp.noUnderlyingSecurityAltID), P7fffffffffffffff_longLit) && $encode_97(this$static.undSecAltIDGrp, out);
		neq(this$static.underlyingProduct, P7fffffffffffffff_longLit) && putFixTag_0(out, 462, this$static.underlyingProduct);
		this$static.underlyingCFICode[0] != 0 && putFixTag_2(out, 463, this$static.underlyingCFICode, lastIndexTrim(this$static.underlyingCFICode));
		this$static.underlyingSecurityType[0] != 0 && putFixTag_2(out, 310, this$static.underlyingSecurityType, lastIndexTrim(this$static.underlyingSecurityType));
		this$static.underlyingSecuritySubType[0] != 0 && putFixTag_2(out, 763, this$static.underlyingSecuritySubType, lastIndexTrim(this$static.underlyingSecuritySubType));
		this$static.underlyingMaturityMonthYear[0] != 0 && putFixTag_1(out, 313, this$static.underlyingMaturityMonthYear);
		this$static.underlyingMaturityDate[0] != 0 && putFixTag_1(out, 542, this$static.underlyingMaturityDate);
		this$static.underlyingMaturityTime[0] != 0 && putFixTag_1(out, 1213, this$static.underlyingMaturityTime);
		this$static.underlyingCouponPaymentDate[0] != 0 && putFixTag_1(out, 241, this$static.underlyingCouponPaymentDate);
		this$static.underlyingRestructuringType[0] != 0 && putFixTag_2(out, 1453, this$static.underlyingRestructuringType, lastIndexTrim(this$static.underlyingRestructuringType));
		this$static.underlyingSeniority[0] != 0 && putFixTag_2(out, 1454, this$static.underlyingSeniority, lastIndexTrim(this$static.underlyingSeniority));
		neq(this$static.underlyingNotionalPercentageOutstanding, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1455, this$static.underlyingNotionalPercentageOutstanding);
		neq(this$static.underlyingOriginalNotionalPercentageOutstanding, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1456, this$static.underlyingOriginalNotionalPercentageOutstanding);
		neq(this$static.underlyingAttachmentPoint, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1459, this$static.underlyingAttachmentPoint);
		neq(this$static.underlyingDetachmentPoint, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1460, this$static.underlyingDetachmentPoint);
		this$static.underlyingIssueDate[0] != 0 && putFixTag_1(out, 242, this$static.underlyingIssueDate);
		neq(this$static.underlyingRepoCollateralSecurityType, P7fffffffffffffff_longLit) && putFixTag_0(out, 243, this$static.underlyingRepoCollateralSecurityType);
		neq(this$static.underlyingRepurchaseTerm, P7fffffffffffffff_longLit) && putFixTag_0(out, 244, this$static.underlyingRepurchaseTerm);
		neq(this$static.underlyingRepurchaseRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 245, this$static.underlyingRepurchaseRate);
		neq(this$static.underlyingFactor, P7fffffffffffffff_longLit) && putFixFloatTag(out, 246, this$static.underlyingFactor);
		this$static.underlyingCreditRating[0] != 0 && putFixTag_2(out, 256, this$static.underlyingCreditRating, lastIndexTrim(this$static.underlyingCreditRating));
		this$static.underlyingInstrRegistry[0] != 0 && putFixTag_2(out, 595, this$static.underlyingInstrRegistry, lastIndexTrim(this$static.underlyingInstrRegistry));
		this$static.underlyingCountryOfIssue[0] != 0 && putFixTag_2(out, 592, this$static.underlyingCountryOfIssue, lastIndexTrim(this$static.underlyingCountryOfIssue));
		this$static.underlyingStateOrProvinceOfIssue[0] != 0 && putFixTag_2(out, 593, this$static.underlyingStateOrProvinceOfIssue, lastIndexTrim(this$static.underlyingStateOrProvinceOfIssue));
		this$static.underlyingLocaleOfIssue[0] != 0 && putFixTag_2(out, 594, this$static.underlyingLocaleOfIssue, lastIndexTrim(this$static.underlyingLocaleOfIssue));
		this$static.underlyingRedemptionDate[0] != 0 && putFixTag_1(out, 247, this$static.underlyingRedemptionDate);
		neq(this$static.underlyingStrikePrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 316, this$static.underlyingStrikePrice);
		this$static.underlyingStrikeCurrency[0] != 0 && putFixTag_2(out, 941, this$static.underlyingStrikeCurrency, lastIndexTrim(this$static.underlyingStrikeCurrency));
		this$static.underlyingOptAttribute != 127 && putFixTag(out, 317, this$static.underlyingOptAttribute);
		neq(this$static.underlyingContractMultiplier, P7fffffffffffffff_longLit) && putFixFloatTag(out, 436, this$static.underlyingContractMultiplier);
		this$static.underlyingUnitOfMeasure[0] != 0 && putFixTag_2(out, 998, this$static.underlyingUnitOfMeasure, lastIndexTrim(this$static.underlyingUnitOfMeasure));
		this$static.underlyingTimeUnit[0] != 0 && putFixTag_2(out, 1000, this$static.underlyingTimeUnit, lastIndexTrim(this$static.underlyingTimeUnit));
		neq(this$static.underlyingExerciseStyle, P7fffffffffffffff_longLit) && putFixTag_0(out, 1419, this$static.underlyingExerciseStyle);
		neq(this$static.underlyingUnitOfMeasureQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1423, this$static.underlyingUnitOfMeasureQty);
		this$static.underlyingPriceUnitOfMeasure[0] != 0 && putFixTag_2(out, 1424, this$static.underlyingPriceUnitOfMeasure, lastIndexTrim(this$static.underlyingPriceUnitOfMeasure));
		neq(this$static.underlyingPriceUnitOfMeasureQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1425, this$static.underlyingPriceUnitOfMeasureQty);
		neq(this$static.underlyingContractMultiplierUnit, P7fffffffffffffff_longLit) && putFixTag_0(out, 1437, this$static.underlyingContractMultiplierUnit);
		neq(this$static.underlyingFlowScheduleType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1441, this$static.underlyingFlowScheduleType);
		neq(this$static.underlyingCouponRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 435, this$static.underlyingCouponRate);
		this$static.underlyingSecurityExchange[0] != 0 && putFixTag_2(out, 308, this$static.underlyingSecurityExchange, lastIndexTrim(this$static.underlyingSecurityExchange));
		this$static.underlyingIssuer[0] != 0 && putFixTag_2(out, 306, this$static.underlyingIssuer, lastIndexTrim(this$static.underlyingIssuer));
		neq(this$static.encodedUnderlyingIssuerLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 362, this$static.encodedUnderlyingIssuerLen);
		this$static.encodedUnderlyingIssuer[0] != 0 && putFixTag_2(out, 363, this$static.encodedUnderlyingIssuer, lastIndexTrim(this$static.encodedUnderlyingIssuer));
		this$static.underlyingSecurityDesc[0] != 0 && putFixTag_2(out, 307, this$static.underlyingSecurityDesc, lastIndexTrim(this$static.underlyingSecurityDesc));
		neq(this$static.encodedUnderlyingSecurityDescLen, P7fffffffffffffff_longLit) && putFixTag_0(out, 364, this$static.encodedUnderlyingSecurityDescLen);
		this$static.encodedUnderlyingSecurityDesc[0] != 0 && putFixTag_2(out, 365, this$static.encodedUnderlyingSecurityDesc, lastIndexTrim(this$static.encodedUnderlyingSecurityDesc));
		this$static.underlyingCPProgram[0] != 0 && putFixTag_2(out, 877, this$static.underlyingCPProgram, lastIndexTrim(this$static.underlyingCPProgram));
		this$static.underlyingCPRegType[0] != 0 && putFixTag_2(out, 878, this$static.underlyingCPRegType, lastIndexTrim(this$static.underlyingCPRegType));
		neq(this$static.underlyingAllocationPercent, P7fffffffffffffff_longLit) && putFixFloatTag(out, 972, this$static.underlyingAllocationPercent);
		this$static.underlyingCurrency[0] != 0 && putFixTag_2(out, 318, this$static.underlyingCurrency, lastIndexTrim(this$static.underlyingCurrency));
		neq(this$static.underlyingQty, P7fffffffffffffff_longLit) && putFixFloatTag(out, 879, this$static.underlyingQty);
		neq(this$static.underlyingSettlementType, P7fffffffffffffff_longLit) && putFixTag_0(out, 975, this$static.underlyingSettlementType);
		neq(this$static.underlyingCashAmount, P7fffffffffffffff_longLit) && putFixTag_0(out, 973, this$static.underlyingCashAmount);
		this$static.underlyingCashType[0] != 0 && putFixTag_2(out, 974, this$static.underlyingCashType, lastIndexTrim(this$static.underlyingCashType));
		neq(this$static.underlyingPx, P7fffffffffffffff_longLit) && putFixFloatTag(out, 810, this$static.underlyingPx);
		neq(this$static.underlyingDirtyPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 882, this$static.underlyingDirtyPrice);
		neq(this$static.underlyingEndPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 883, this$static.underlyingEndPrice);
		neq(this$static.underlyingStartValue, P7fffffffffffffff_longLit) && putFixTag_0(out, 884, this$static.underlyingStartValue);
		neq(this$static.underlyingCurrentValue, P7fffffffffffffff_longLit) && putFixTag_0(out, 885, this$static.underlyingCurrentValue);
		neq(this$static.underlyingEndValue, P7fffffffffffffff_longLit) && putFixTag_0(out, 886, this$static.underlyingEndValue);
		neq(this$static.underlyingAdjustedQuantity, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1044, this$static.underlyingAdjustedQuantity);
		neq(this$static.underlyingFXRate, P7fffffffffffffff_longLit) && putFixFloatTag(out, 1045, this$static.underlyingFXRate);
		this$static.underlyingFXRateCalc != 127 && putFixTag(out, 1046, this$static.underlyingFXRateCalc);
		neq(fromInt(this$static.underlyingStipulations.noUnderlyingStips), P7fffffffffffffff_longLit) && $encode_100(this$static.underlyingStipulations, out);
		neq(this$static.underlyingCapValue, P7fffffffffffffff_longLit) && putFixTag_0(out, 1038, this$static.underlyingCapValue);
		this$static.underlyingSettlMethod[0] != 0 && putFixTag_2(out, 1039, this$static.underlyingSettlMethod, lastIndexTrim(this$static.underlyingSettlMethod));
		neq(this$static.underlyingPutOrCall, P7fffffffffffffff_longLit) && putFixTag_0(out, 315, this$static.underlyingPutOrCall);
		neq(fromInt(this$static.undlyInstrumentParties.noUndlyInstrumentParties), P7fffffffffffffff_longLit) && $encode_102(this$static.undlyInstrumentParties, out);
	}

	function $equals_143(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUnderlyingInstrument)) {
			$print_79(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.underlyingSymbol, msg.underlyingSymbol)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSymbolSfx, msg.underlyingSymbolSfx)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSecurityID, msg.underlyingSecurityID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSecurityIDSource, msg.underlyingSecurityIDSource)) {
			ret = false;
			$clinit_FixMessage();
		}
		$equals_141(this$static.undSecAltIDGrp, msg.undSecAltIDGrp) || (ret = false);
		if (neq(this$static.underlyingProduct, msg.underlyingProduct)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingProduct), valueOf_1(msg.underlyingProduct)));
		}
		if (!equals_12(this$static.underlyingCFICode, msg.underlyingCFICode)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSecurityType, msg.underlyingSecurityType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSecuritySubType, msg.underlyingSecuritySubType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingMaturityMonthYear, msg.underlyingMaturityMonthYear)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingRestructuringType, msg.underlyingRestructuringType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSeniority, msg.underlyingSeniority)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingNotionalPercentageOutstanding, msg.underlyingNotionalPercentageOutstanding)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingNotionalPercentageOutstanding), valueOf_1(msg.underlyingNotionalPercentageOutstanding)));
		}
		if (neq(this$static.underlyingOriginalNotionalPercentageOutstanding, msg.underlyingOriginalNotionalPercentageOutstanding)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingOriginalNotionalPercentageOutstanding), valueOf_1(msg.underlyingOriginalNotionalPercentageOutstanding)));
		}
		if (neq(this$static.underlyingAttachmentPoint, msg.underlyingAttachmentPoint)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingAttachmentPoint), valueOf_1(msg.underlyingAttachmentPoint)));
		}
		if (neq(this$static.underlyingDetachmentPoint, msg.underlyingDetachmentPoint)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingDetachmentPoint), valueOf_1(msg.underlyingDetachmentPoint)));
		}
		if (neq(this$static.underlyingRepoCollateralSecurityType, msg.underlyingRepoCollateralSecurityType)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingRepoCollateralSecurityType), valueOf_1(msg.underlyingRepoCollateralSecurityType)));
		}
		if (neq(this$static.underlyingRepurchaseTerm, msg.underlyingRepurchaseTerm)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingRepurchaseTerm), valueOf_1(msg.underlyingRepurchaseTerm)));
		}
		if (neq(this$static.underlyingRepurchaseRate, msg.underlyingRepurchaseRate)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingRepurchaseRate), valueOf_1(msg.underlyingRepurchaseRate)));
		}
		if (neq(this$static.underlyingFactor, msg.underlyingFactor)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingFactor), valueOf_1(msg.underlyingFactor)));
		}
		if (!equals_12(this$static.underlyingCreditRating, msg.underlyingCreditRating)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingInstrRegistry, msg.underlyingInstrRegistry)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingCountryOfIssue, msg.underlyingCountryOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingStateOrProvinceOfIssue, msg.underlyingStateOrProvinceOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingLocaleOfIssue, msg.underlyingLocaleOfIssue)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingStrikePrice, msg.underlyingStrikePrice)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingStrikePrice), valueOf_1(msg.underlyingStrikePrice)));
		}
		if (!equals_12(this$static.underlyingStrikeCurrency, msg.underlyingStrikeCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.underlyingOptAttribute != msg.underlyingOptAttribute) {
			ret = false;
			$print_79((valueOf(this$static.underlyingOptAttribute), valueOf(msg.underlyingOptAttribute)));
		}
		if (neq(this$static.underlyingContractMultiplier, msg.underlyingContractMultiplier)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingContractMultiplier), valueOf_1(msg.underlyingContractMultiplier)));
		}
		if (!equals_12(this$static.underlyingUnitOfMeasure, msg.underlyingUnitOfMeasure)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingTimeUnit, msg.underlyingTimeUnit)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingExerciseStyle, msg.underlyingExerciseStyle)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingExerciseStyle), valueOf_1(msg.underlyingExerciseStyle)));
		}
		if (neq(this$static.underlyingUnitOfMeasureQty, msg.underlyingUnitOfMeasureQty)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingUnitOfMeasureQty), valueOf_1(msg.underlyingUnitOfMeasureQty)));
		}
		if (!equals_12(this$static.underlyingPriceUnitOfMeasure, msg.underlyingPriceUnitOfMeasure)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingPriceUnitOfMeasureQty, msg.underlyingPriceUnitOfMeasureQty)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingPriceUnitOfMeasureQty), valueOf_1(msg.underlyingPriceUnitOfMeasureQty)));
		}
		if (neq(this$static.underlyingContractMultiplierUnit, msg.underlyingContractMultiplierUnit)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingContractMultiplierUnit), valueOf_1(msg.underlyingContractMultiplierUnit)));
		}
		if (neq(this$static.underlyingFlowScheduleType, msg.underlyingFlowScheduleType)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingFlowScheduleType), valueOf_1(msg.underlyingFlowScheduleType)));
		}
		if (neq(this$static.underlyingCouponRate, msg.underlyingCouponRate)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingCouponRate), valueOf_1(msg.underlyingCouponRate)));
		}
		if (!equals_12(this$static.underlyingSecurityExchange, msg.underlyingSecurityExchange)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingIssuer, msg.underlyingIssuer)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedUnderlyingIssuerLen, msg.encodedUnderlyingIssuerLen)) {
			ret = false;
			$print_79((valueOf_1(this$static.encodedUnderlyingIssuerLen), valueOf_1(msg.encodedUnderlyingIssuerLen)));
		}
		if (!equals_12(this$static.encodedUnderlyingIssuer, msg.encodedUnderlyingIssuer)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingSecurityDesc, msg.underlyingSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.encodedUnderlyingSecurityDescLen, msg.encodedUnderlyingSecurityDescLen)) {
			ret = false;
			$print_79((valueOf_1(this$static.encodedUnderlyingSecurityDescLen), valueOf_1(msg.encodedUnderlyingSecurityDescLen)));
		}
		if (!equals_12(this$static.encodedUnderlyingSecurityDesc, msg.encodedUnderlyingSecurityDesc)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingCPProgram, msg.underlyingCPProgram)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingCPRegType, msg.underlyingCPRegType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingAllocationPercent, msg.underlyingAllocationPercent)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingAllocationPercent), valueOf_1(msg.underlyingAllocationPercent)));
		}
		if (!equals_12(this$static.underlyingCurrency, msg.underlyingCurrency)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingQty, msg.underlyingQty)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingQty), valueOf_1(msg.underlyingQty)));
		}
		if (neq(this$static.underlyingSettlementType, msg.underlyingSettlementType)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingSettlementType), valueOf_1(msg.underlyingSettlementType)));
		}
		if (neq(this$static.underlyingCashAmount, msg.underlyingCashAmount)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingCashAmount), valueOf_1(msg.underlyingCashAmount)));
		}
		if (!equals_12(this$static.underlyingCashType, msg.underlyingCashType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingPx, msg.underlyingPx)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingPx), valueOf_1(msg.underlyingPx)));
		}
		if (neq(this$static.underlyingDirtyPrice, msg.underlyingDirtyPrice)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingDirtyPrice), valueOf_1(msg.underlyingDirtyPrice)));
		}
		if (neq(this$static.underlyingEndPrice, msg.underlyingEndPrice)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingEndPrice), valueOf_1(msg.underlyingEndPrice)));
		}
		if (neq(this$static.underlyingStartValue, msg.underlyingStartValue)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingStartValue), valueOf_1(msg.underlyingStartValue)));
		}
		if (neq(this$static.underlyingCurrentValue, msg.underlyingCurrentValue)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingCurrentValue), valueOf_1(msg.underlyingCurrentValue)));
		}
		if (neq(this$static.underlyingEndValue, msg.underlyingEndValue)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingEndValue), valueOf_1(msg.underlyingEndValue)));
		}
		if (neq(this$static.underlyingAdjustedQuantity, msg.underlyingAdjustedQuantity)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingAdjustedQuantity), valueOf_1(msg.underlyingAdjustedQuantity)));
		}
		if (neq(this$static.underlyingFXRate, msg.underlyingFXRate)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingFXRate), valueOf_1(msg.underlyingFXRate)));
		}
		if (this$static.underlyingFXRateCalc != msg.underlyingFXRateCalc) {
			ret = false;
			$print_79((valueOf(this$static.underlyingFXRateCalc), valueOf(msg.underlyingFXRateCalc)));
		}
		$equals_144(this$static.underlyingStipulations, msg.underlyingStipulations) || (ret = false);
		if (neq(this$static.underlyingCapValue, msg.underlyingCapValue)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingCapValue), valueOf_1(msg.underlyingCapValue)));
		}
		if (!equals_12(this$static.underlyingSettlMethod, msg.underlyingSettlMethod)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingPutOrCall, msg.underlyingPutOrCall)) {
			ret = false;
			$print_79((valueOf_1(this$static.underlyingPutOrCall), valueOf_1(msg.underlyingPutOrCall)));
		}
		$equals_146(this$static.undlyInstrumentParties, msg.undlyInstrumentParties) || (ret = false);
		return ret;
	}

	function $getAll_99(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition, underlyingSecurityIDGetted, underlyingSymbolGetted;
		underlyingSymbolGetted = false;
		underlyingSecurityIDGetted = false;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 311:
				if (underlyingSymbolGetted) {
					$position(buf, lastTagPosition);
					return;
				}

				this$static.underlyingSymbol = getTagStringValue(null, 311, buf, this$static.underlyingSymbol);
				underlyingSymbolGetted = true;
				break;
			case 312:
				this$static.underlyingSymbolSfx = getTagStringValue(null, 312, buf, this$static.underlyingSymbolSfx);
				break;
			case 309:
				if (underlyingSecurityIDGetted) {
					$position(buf, lastTagPosition);
					return;
				}

				this$static.underlyingSecurityID = getTagStringValue(null, 309, buf, this$static.underlyingSecurityID);
				underlyingSecurityIDGetted = true;
				break;
			case 305:
				this$static.underlyingSecurityIDSource = getTagStringValue(null, 305, buf, this$static.underlyingSecurityIDSource);
				break;
			case 457:
				this$static.undSecAltIDGrp.noUnderlyingSecurityAltID = getTagIntValue(null, 457, buf);
				$getAll_98(this$static.undSecAltIDGrp, this$static.undSecAltIDGrp.noUnderlyingSecurityAltID, buf);
				break;
			case 462:
				this$static.underlyingProduct = fromInt(getTagIntValue(null, 462, buf));
				break;
			case 463:
				this$static.underlyingCFICode = getTagStringValue(null, 463, buf, this$static.underlyingCFICode);
				break;
			case 310:
				this$static.underlyingSecurityType = getTagStringValue(null, 310, buf, this$static.underlyingSecurityType);
				break;
			case 763:
				this$static.underlyingSecuritySubType = getTagStringValue(null, 763, buf, this$static.underlyingSecuritySubType);
				break;
			case 313:
				this$static.underlyingMaturityMonthYear = getTagStringValue(null, 313, buf, this$static.underlyingMaturityMonthYear);
				break;
			case 542:
				this$static.underlyingMaturityDate = getTagStringValue(null, 542, buf, this$static.underlyingMaturityDate);
				break;
			case 1213:
				this$static.underlyingMaturityTime = getTagStringValue(null, 1213, buf, this$static.underlyingMaturityTime);
				break;
			case 241:
				this$static.underlyingCouponPaymentDate = getTagStringValue(null, 241, buf, this$static.underlyingCouponPaymentDate);
				break;
			case 1453:
				this$static.underlyingRestructuringType = getTagStringValue(null, 1453, buf, this$static.underlyingRestructuringType);
				break;
			case 1454:
				this$static.underlyingSeniority = getTagStringValue(null, 1454, buf, this$static.underlyingSeniority);
				break;
			case 1455:
				this$static.underlyingNotionalPercentageOutstanding = getTagFloatValue(null, 1455, buf);
				break;
			case 1456:
				this$static.underlyingOriginalNotionalPercentageOutstanding = getTagFloatValue(null, 1456, buf);
				break;
			case 1459:
				this$static.underlyingAttachmentPoint = getTagFloatValue(null, 1459, buf);
				break;
			case 1460:
				this$static.underlyingDetachmentPoint = getTagFloatValue(null, 1460, buf);
				break;
			case 242:
				this$static.underlyingIssueDate = getTagStringValue(null, 242, buf, this$static.underlyingIssueDate);
				break;
			case 243:
				this$static.underlyingRepoCollateralSecurityType = fromInt(getTagIntValue(null, 243, buf));
				break;
			case 244:
				this$static.underlyingRepurchaseTerm = fromInt(getTagIntValue(null, 244, buf));
				break;
			case 245:
				this$static.underlyingRepurchaseRate = getTagFloatValue(null, 245, buf);
				break;
			case 246:
				this$static.underlyingFactor = getTagFloatValue(null, 246, buf);
				break;
			case 256:
				this$static.underlyingCreditRating = getTagStringValue(null, 256, buf, this$static.underlyingCreditRating);
				break;
			case 595:
				this$static.underlyingInstrRegistry = getTagStringValue(null, 595, buf, this$static.underlyingInstrRegistry);
				break;
			case 592:
				this$static.underlyingCountryOfIssue = getTagStringValue(null, 592, buf, this$static.underlyingCountryOfIssue);
				break;
			case 593:
				this$static.underlyingStateOrProvinceOfIssue = getTagStringValue(null, 593, buf, this$static.underlyingStateOrProvinceOfIssue);
				break;
			case 594:
				this$static.underlyingLocaleOfIssue = getTagStringValue(null, 594, buf, this$static.underlyingLocaleOfIssue);
				break;
			case 247:
				this$static.underlyingRedemptionDate = getTagStringValue(null, 247, buf, this$static.underlyingRedemptionDate);
				break;
			case 316:
				this$static.underlyingStrikePrice = getTagFloatValue(null, 316, buf);
				break;
			case 941:
				this$static.underlyingStrikeCurrency = getTagStringValue(null, 941, buf, this$static.underlyingStrikeCurrency);
				break;
			case 317:
				this$static.underlyingOptAttribute = getTagCharValue(null, 317, buf);
				break;
			case 436:
				this$static.underlyingContractMultiplier = getTagFloatValue(null, 436, buf);
				break;
			case 998:
				this$static.underlyingUnitOfMeasure = getTagStringValue(null, 998, buf, this$static.underlyingUnitOfMeasure);
				break;
			case 1000:
				this$static.underlyingTimeUnit = getTagStringValue(null, 1000, buf, this$static.underlyingTimeUnit);
				break;
			case 1419:
				this$static.underlyingExerciseStyle = fromInt(getTagIntValue(null, 1419, buf));
				break;
			case 1423:
				this$static.underlyingUnitOfMeasureQty = getTagFloatValue(null, 1423, buf);
				break;
			case 1424:
				this$static.underlyingPriceUnitOfMeasure = getTagStringValue(null, 1424, buf, this$static.underlyingPriceUnitOfMeasure);
				break;
			case 1425:
				this$static.underlyingPriceUnitOfMeasureQty = getTagFloatValue(null, 1425, buf);
				break;
			case 1437:
				this$static.underlyingContractMultiplierUnit = fromInt(getTagIntValue(null, 1437, buf));
				break;
			case 1441:
				this$static.underlyingFlowScheduleType = fromInt(getTagIntValue(null, 1441, buf));
				break;
			case 435:
				this$static.underlyingCouponRate = getTagFloatValue(null, 435, buf);
				break;
			case 308:
				this$static.underlyingSecurityExchange = getTagStringValue(null, 308, buf, this$static.underlyingSecurityExchange);
				break;
			case 306:
				this$static.underlyingIssuer = getTagStringValue(null, 306, buf, this$static.underlyingIssuer);
				break;
			case 362:
				this$static.encodedUnderlyingIssuerLen = fromInt(getTagIntValue(null, 362, buf));
				break;
			case 363:
				this$static.encodedUnderlyingIssuer = getTagStringValue(null, 363, buf, this$static.encodedUnderlyingIssuer);
				break;
			case 307:
				this$static.underlyingSecurityDesc = getTagStringValue(null, 307, buf, this$static.underlyingSecurityDesc);
				break;
			case 364:
				this$static.encodedUnderlyingSecurityDescLen = fromInt(getTagIntValue(null, 364, buf));
				break;
			case 365:
				this$static.encodedUnderlyingSecurityDesc = getTagStringValue(null, 365, buf, this$static.encodedUnderlyingSecurityDesc);
				break;
			case 877:
				this$static.underlyingCPProgram = getTagStringValue(null, 877, buf, this$static.underlyingCPProgram);
				break;
			case 878:
				this$static.underlyingCPRegType = getTagStringValue(null, 878, buf, this$static.underlyingCPRegType);
				break;
			case 972:
				this$static.underlyingAllocationPercent = getTagFloatValue(null, 972, buf);
				break;
			case 318:
				this$static.underlyingCurrency = getTagStringValue(null, 318, buf, this$static.underlyingCurrency);
				break;
			case 879:
				this$static.underlyingQty = getTagFloatValue(null, 879, buf);
				break;
			case 975:
				this$static.underlyingSettlementType = fromInt(getTagIntValue(null, 975, buf));
				if (!isValid_180(this$static.underlyingSettlementType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + toString_183(this$static.underlyingSettlementType) + ') for tag'), P3cf_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 973:
				this$static.underlyingCashAmount = getTagFloatValue(null, 973, buf);
				break;
			case 974:
				this$static.underlyingCashType = getTagStringValue(null, 974, buf, this$static.underlyingCashType);
				if (!isValid_177(this$static.underlyingCashType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.underlyingCashType + ') for tag'), P3ce_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 810:
				this$static.underlyingPx = getTagFloatValue(null, 810, buf);
				break;
			case 882:
				this$static.underlyingDirtyPrice = getTagFloatValue(null, 882, buf);
				break;
			case 883:
				this$static.underlyingEndPrice = getTagFloatValue(null, 883, buf);
				break;
			case 884:
				this$static.underlyingStartValue = getTagFloatValue(null, 884, buf);
				break;
			case 885:
				this$static.underlyingCurrentValue = getTagFloatValue(null, 885, buf);
				break;
			case 886:
				this$static.underlyingEndValue = getTagFloatValue(null, 886, buf);
				break;
			case 1044:
				this$static.underlyingAdjustedQuantity = getTagFloatValue(null, 1044, buf);
				break;
			case 1045:
				this$static.underlyingFXRate = getTagFloatValue(null, 1045, buf);
				break;
			case 1046:
				this$static.underlyingFXRateCalc = getTagCharValue(null, 1046, buf);
				if (!isValid_178(this$static.underlyingFXRateCalc)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.underlyingFXRateCalc + ') for tag'), P416_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 887:
				this$static.underlyingStipulations.noUnderlyingStips = getTagIntValue(null, 887, buf);
				$getAll_100(this$static.underlyingStipulations, this$static.underlyingStipulations.noUnderlyingStips, buf);
				break;
			case 1038:
				this$static.underlyingCapValue = getTagFloatValue(null, 1038, buf);
				break;
			case 1039:
				this$static.underlyingSettlMethod = getTagStringValue(null, 1039, buf, this$static.underlyingSettlMethod);
				break;
			case 315:
				this$static.underlyingPutOrCall = fromInt(getTagIntValue(null, 315, buf));
				break;
			case 1058:
				this$static.undlyInstrumentParties.noUndlyInstrumentParties = getTagIntValue(null, 1058, buf);
				$getAll_101(this$static.undlyInstrumentParties, this$static.undlyInstrumentParties.noUndlyInstrumentParties, buf);
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_79() {
		$clinit_FixMessage();
	}

	function $toString_144(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.underlyingSymbol[0] != 0 && (s += 'UnderlyingSymbol(311)=' + $trim(_String(this$static.underlyingSymbol)) + charToString(sep));
		this$static.underlyingSymbolSfx[0] != 0 && (s += 'UnderlyingSymbolSfx(312)=' + $trim(_String(this$static.underlyingSymbolSfx)) + charToString(sep));
		this$static.underlyingSecurityID[0] != 0 && (s += 'UnderlyingSecurityID(309)=' + $trim(_String(this$static.underlyingSecurityID)) + charToString(sep));
		this$static.underlyingSecurityIDSource[0] != 0 && (s += 'UnderlyingSecurityIDSource(305)=' + $trim(_String(this$static.underlyingSecurityIDSource)) + charToString(sep));
		neq(fromInt(this$static.undSecAltIDGrp.noUnderlyingSecurityAltID), P7fffffffffffffff_longLit) && (s += $trim($toString_142(this$static.undSecAltIDGrp)));
		neq(this$static.underlyingProduct, P7fffffffffffffff_longLit) && (s += 'UnderlyingProduct(462)=' + $trim('' + toString_183(this$static.underlyingProduct)) + charToString(sep));
		this$static.underlyingCFICode[0] != 0 && (s += 'UnderlyingCFICode(463)=' + $trim(_String(this$static.underlyingCFICode)) + charToString(sep));
		this$static.underlyingSecurityType[0] != 0 && (s += 'UnderlyingSecurityType(310)=' + $trim(_String(this$static.underlyingSecurityType)) + charToString(sep));
		this$static.underlyingSecuritySubType[0] != 0 && (s += 'UnderlyingSecuritySubType(763)=' + $trim(_String(this$static.underlyingSecuritySubType)) + charToString(sep));
		this$static.underlyingMaturityMonthYear[0] != 0 && (s += 'UnderlyingMaturityMonthYear(313)=' + $trim(_String(this$static.underlyingMaturityMonthYear)) + charToString(sep));
		this$static.underlyingMaturityDate[0] != 0 && (s += 'UnderlyingMaturityDate(542)=' + $trim(_String(this$static.underlyingMaturityDate)) + charToString(sep));
		this$static.underlyingMaturityTime[0] != 0 && (s += 'UnderlyingMaturityTime(1213)=' + $trim(_String(this$static.underlyingMaturityTime)) + charToString(sep));
		this$static.underlyingCouponPaymentDate[0] != 0 && (s += 'UnderlyingCouponPaymentDate(241)=' + $trim(_String(this$static.underlyingCouponPaymentDate)) + charToString(sep));
		this$static.underlyingRestructuringType[0] != 0 && (s += 'UnderlyingRestructuringType(1453)=' + $trim(_String(this$static.underlyingRestructuringType)) + charToString(sep));
		this$static.underlyingSeniority[0] != 0 && (s += 'UnderlyingSeniority(1454)=' + $trim(_String(this$static.underlyingSeniority)) + charToString(sep));
		neq(this$static.underlyingNotionalPercentageOutstanding, P7fffffffffffffff_longLit) && (s += 'UnderlyingNotionalPercentageOutstanding(1455)=' + $trim('' + toString_183(this$static.underlyingNotionalPercentageOutstanding)) + charToString(sep));
		neq(this$static.underlyingOriginalNotionalPercentageOutstanding, P7fffffffffffffff_longLit) && (s += 'UnderlyingOriginalNotionalPercentageOutstanding(1456)=' + $trim('' + toString_183(this$static.underlyingOriginalNotionalPercentageOutstanding)) + charToString(sep));
		neq(this$static.underlyingAttachmentPoint, P7fffffffffffffff_longLit) && (s += 'UnderlyingAttachmentPoint(1459)=' + $trim('' + toString_183(this$static.underlyingAttachmentPoint)) + charToString(sep));
		neq(this$static.underlyingDetachmentPoint, P7fffffffffffffff_longLit) && (s += 'UnderlyingDetachmentPoint(1460)=' + $trim('' + toString_183(this$static.underlyingDetachmentPoint)) + charToString(sep));
		this$static.underlyingIssueDate[0] != 0 && (s += 'UnderlyingIssueDate(242)=' + $trim(_String(this$static.underlyingIssueDate)) + charToString(sep));
		neq(this$static.underlyingRepoCollateralSecurityType, P7fffffffffffffff_longLit) && (s += 'UnderlyingRepoCollateralSecurityType(243)=' + $trim('' + toString_183(this$static.underlyingRepoCollateralSecurityType)) + charToString(sep));
		neq(this$static.underlyingRepurchaseTerm, P7fffffffffffffff_longLit) && (s += 'UnderlyingRepurchaseTerm(244)=' + $trim('' + toString_183(this$static.underlyingRepurchaseTerm)) + charToString(sep));
		neq(this$static.underlyingRepurchaseRate, P7fffffffffffffff_longLit) && (s += 'UnderlyingRepurchaseRate(245)=' + $trim('' + toString_183(this$static.underlyingRepurchaseRate)) + charToString(sep));
		neq(this$static.underlyingFactor, P7fffffffffffffff_longLit) && (s += 'UnderlyingFactor(246)=' + $trim('' + toString_183(this$static.underlyingFactor)) + charToString(sep));
		this$static.underlyingCreditRating[0] != 0 && (s += 'UnderlyingCreditRating(256)=' + $trim(_String(this$static.underlyingCreditRating)) + charToString(sep));
		this$static.underlyingInstrRegistry[0] != 0 && (s += 'UnderlyingInstrRegistry(595)=' + $trim(_String(this$static.underlyingInstrRegistry)) + charToString(sep));
		this$static.underlyingCountryOfIssue[0] != 0 && (s += 'UnderlyingCountryOfIssue(592)=' + $trim(_String(this$static.underlyingCountryOfIssue)) + charToString(sep));
		this$static.underlyingStateOrProvinceOfIssue[0] != 0 && (s += 'UnderlyingStateOrProvinceOfIssue(593)=' + $trim(_String(this$static.underlyingStateOrProvinceOfIssue)) + charToString(sep));
		this$static.underlyingLocaleOfIssue[0] != 0 && (s += 'UnderlyingLocaleOfIssue(594)=' + $trim(_String(this$static.underlyingLocaleOfIssue)) + charToString(sep));
		this$static.underlyingRedemptionDate[0] != 0 && (s += 'UnderlyingRedemptionDate(247)=' + $trim(_String(this$static.underlyingRedemptionDate)) + charToString(sep));
		neq(this$static.underlyingStrikePrice, P7fffffffffffffff_longLit) && (s += 'UnderlyingStrikePrice(316)=' + $trim('' + toString_183(this$static.underlyingStrikePrice)) + charToString(sep));
		this$static.underlyingStrikeCurrency[0] != 0 && (s += 'UnderlyingStrikeCurrency(941)=' + $trim(_String(this$static.underlyingStrikeCurrency)) + charToString(sep));
		this$static.underlyingOptAttribute != 127 && (s += 'UnderlyingOptAttribute(317)=' + $trim('' + this$static.underlyingOptAttribute) + charToString(sep));
		neq(this$static.underlyingContractMultiplier, P7fffffffffffffff_longLit) && (s += 'UnderlyingContractMultiplier(436)=' + $trim('' + toString_183(this$static.underlyingContractMultiplier)) + charToString(sep));
		this$static.underlyingUnitOfMeasure[0] != 0 && (s += 'UnderlyingUnitOfMeasure(998)=' + $trim(_String(this$static.underlyingUnitOfMeasure)) + charToString(sep));
		this$static.underlyingTimeUnit[0] != 0 && (s += 'UnderlyingTimeUnit(1000)=' + $trim(_String(this$static.underlyingTimeUnit)) + charToString(sep));
		neq(this$static.underlyingExerciseStyle, P7fffffffffffffff_longLit) && (s += 'UnderlyingExerciseStyle(1419)=' + $trim('' + toString_183(this$static.underlyingExerciseStyle)) + charToString(sep));
		neq(this$static.underlyingUnitOfMeasureQty, P7fffffffffffffff_longLit) && (s += 'UnderlyingUnitOfMeasureQty(1423)=' + $trim('' + toString_183(this$static.underlyingUnitOfMeasureQty)) + charToString(sep));
		this$static.underlyingPriceUnitOfMeasure[0] != 0 && (s += 'UnderlyingPriceUnitOfMeasure(1424)=' + $trim(_String(this$static.underlyingPriceUnitOfMeasure)) + charToString(sep));
		neq(this$static.underlyingPriceUnitOfMeasureQty, P7fffffffffffffff_longLit) && (s += 'UnderlyingPriceUnitOfMeasureQty(1425)=' + $trim('' + toString_183(this$static.underlyingPriceUnitOfMeasureQty)) + charToString(sep));
		neq(this$static.underlyingContractMultiplierUnit, P7fffffffffffffff_longLit) && (s += 'UnderlyingContractMultiplierUnit(1437)=' + $trim('' + toString_183(this$static.underlyingContractMultiplierUnit)) + charToString(sep));
		neq(this$static.underlyingFlowScheduleType, P7fffffffffffffff_longLit) && (s += 'UnderlyingFlowScheduleType(1441)=' + $trim('' + toString_183(this$static.underlyingFlowScheduleType)) + charToString(sep));
		neq(this$static.underlyingCouponRate, P7fffffffffffffff_longLit) && (s += 'UnderlyingCouponRate(435)=' + $trim('' + toString_183(this$static.underlyingCouponRate)) + charToString(sep));
		this$static.underlyingSecurityExchange[0] != 0 && (s += 'UnderlyingSecurityExchange(308)=' + $trim(_String(this$static.underlyingSecurityExchange)) + charToString(sep));
		this$static.underlyingIssuer[0] != 0 && (s += 'UnderlyingIssuer(306)=' + $trim(_String(this$static.underlyingIssuer)) + charToString(sep));
		neq(this$static.encodedUnderlyingIssuerLen, P7fffffffffffffff_longLit) && (s += 'EncodedUnderlyingIssuerLen(362)=' + $trim('' + toString_183(this$static.encodedUnderlyingIssuerLen)) + charToString(sep));
		this$static.encodedUnderlyingIssuer[0] != 0 && (s += 'EncodedUnderlyingIssuer(363)=' + $trim(_String(this$static.encodedUnderlyingIssuer)) + charToString(sep));
		this$static.underlyingSecurityDesc[0] != 0 && (s += 'UnderlyingSecurityDesc(307)=' + $trim(_String(this$static.underlyingSecurityDesc)) + charToString(sep));
		neq(this$static.encodedUnderlyingSecurityDescLen, P7fffffffffffffff_longLit) && (s += 'EncodedUnderlyingSecurityDescLen(364)=' + $trim('' + toString_183(this$static.encodedUnderlyingSecurityDescLen)) + charToString(sep));
		this$static.encodedUnderlyingSecurityDesc[0] != 0 && (s += 'EncodedUnderlyingSecurityDesc(365)=' + $trim(_String(this$static.encodedUnderlyingSecurityDesc)) + charToString(sep));
		this$static.underlyingCPProgram[0] != 0 && (s += 'UnderlyingCPProgram(877)=' + $trim(_String(this$static.underlyingCPProgram)) + charToString(sep));
		this$static.underlyingCPRegType[0] != 0 && (s += 'UnderlyingCPRegType(878)=' + $trim(_String(this$static.underlyingCPRegType)) + charToString(sep));
		neq(this$static.underlyingAllocationPercent, P7fffffffffffffff_longLit) && (s += 'UnderlyingAllocationPercent(972)=' + $trim('' + toString_183(this$static.underlyingAllocationPercent)) + charToString(sep));
		this$static.underlyingCurrency[0] != 0 && (s += 'UnderlyingCurrency(318)=' + $trim(_String(this$static.underlyingCurrency)) + charToString(sep));
		neq(this$static.underlyingQty, P7fffffffffffffff_longLit) && (s += 'UnderlyingQty(879)=' + $trim('' + toString_183(this$static.underlyingQty)) + charToString(sep));
		neq(this$static.underlyingSettlementType, P7fffffffffffffff_longLit) && (s += 'UnderlyingSettlementType(975)=' + $trim('' + toString_183(this$static.underlyingSettlementType)) + charToString(sep));
		neq(this$static.underlyingCashAmount, P7fffffffffffffff_longLit) && (s += 'UnderlyingCashAmount(973)=' + $trim('' + toString_183(this$static.underlyingCashAmount)) + charToString(sep));
		this$static.underlyingCashType[0] != 0 && (s += 'UnderlyingCashType(974)=' + $trim(_String(this$static.underlyingCashType)) + charToString(sep));
		neq(this$static.underlyingPx, P7fffffffffffffff_longLit) && (s += 'UnderlyingPx(810)=' + $trim('' + toString_183(this$static.underlyingPx)) + charToString(sep));
		neq(this$static.underlyingDirtyPrice, P7fffffffffffffff_longLit) && (s += 'UnderlyingDirtyPrice(882)=' + $trim('' + toString_183(this$static.underlyingDirtyPrice)) + charToString(sep));
		neq(this$static.underlyingEndPrice, P7fffffffffffffff_longLit) && (s += 'UnderlyingEndPrice(883)=' + $trim('' + toString_183(this$static.underlyingEndPrice)) + charToString(sep));
		neq(this$static.underlyingStartValue, P7fffffffffffffff_longLit) && (s += 'UnderlyingStartValue(884)=' + $trim('' + toString_183(this$static.underlyingStartValue)) + charToString(sep));
		neq(this$static.underlyingCurrentValue, P7fffffffffffffff_longLit) && (s += 'UnderlyingCurrentValue(885)=' + $trim('' + toString_183(this$static.underlyingCurrentValue)) + charToString(sep));
		neq(this$static.underlyingEndValue, P7fffffffffffffff_longLit) && (s += 'UnderlyingEndValue(886)=' + $trim('' + toString_183(this$static.underlyingEndValue)) + charToString(sep));
		neq(this$static.underlyingAdjustedQuantity, P7fffffffffffffff_longLit) && (s += 'UnderlyingAdjustedQuantity(1044)=' + $trim('' + toString_183(this$static.underlyingAdjustedQuantity)) + charToString(sep));
		neq(this$static.underlyingFXRate, P7fffffffffffffff_longLit) && (s += 'UnderlyingFXRate(1045)=' + $trim('' + toString_183(this$static.underlyingFXRate)) + charToString(sep));
		this$static.underlyingFXRateCalc != 127 && (s += 'UnderlyingFXRateCalc(1046)=' + $trim('' + this$static.underlyingFXRateCalc) + charToString(sep));
		neq(fromInt(this$static.underlyingStipulations.noUnderlyingStips), P7fffffffffffffff_longLit) && (s += $trim($toString_145(this$static.underlyingStipulations)));
		neq(this$static.underlyingCapValue, P7fffffffffffffff_longLit) && (s += 'UnderlyingCapValue(1038)=' + $trim('' + toString_183(this$static.underlyingCapValue)) + charToString(sep));
		this$static.underlyingSettlMethod[0] != 0 && (s += 'UnderlyingSettlMethod(1039)=' + $trim(_String(this$static.underlyingSettlMethod)) + charToString(sep));
		neq(this$static.underlyingPutOrCall, P7fffffffffffffff_longLit) && (s += 'UnderlyingPutOrCall(315)=' + $trim('' + toString_183(this$static.underlyingPutOrCall)) + charToString(sep));
		neq(fromInt(this$static.undlyInstrumentParties.noUndlyInstrumentParties), P7fffffffffffffff_longLit) && (s += $trim($toString_147(this$static.undlyInstrumentParties)));
		return s;
	}

	function FixUnderlyingInstrument_0() {
		this.underlyingSymbol = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSymbolSfx = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecurityID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecurityIDSource = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.undSecAltIDGrp = new FixUndSecAltIDGrp_0;
		this.underlyingCFICode = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecurityType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecuritySubType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingMaturityMonthYear = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingMaturityDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingMaturityTime = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingCouponPaymentDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingRestructuringType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSeniority = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingIssueDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingCreditRating = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingInstrRegistry = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingCountryOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingStateOrProvinceOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingLocaleOfIssue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingRedemptionDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingStrikeCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.underlyingUnitOfMeasure = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingTimeUnit = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingPriceUnitOfMeasure = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecurityExchange = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingIssuer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedUnderlyingIssuer = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.encodedUnderlyingSecurityDesc = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingCPProgram = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingCPRegType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingCurrency = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 3, 1);
		this.underlyingCashType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingStipulations = new FixUnderlyingStipulations_0;
		this.underlyingSettlMethod = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.undlyInstrumentParties = new FixUndlyInstrumentParties_0;
		$clear_145(this);
	}

	defineSeed(683, 1, makeCastMap([Q$FixComponent, Q$FixUnderlyingInstrument]), FixUnderlyingInstrument_0);
	_.equals$ = function equals_184(o) {
		return $equals_143(this, o);
	};
	_.toString$ = function toString_173() {
		return $toString_144(this);
	};
	_.encodedUnderlyingIssuerLen = P0_longLit;
	_.encodedUnderlyingSecurityDescLen = P0_longLit;
	_.underlyingAdjustedQuantity = P0_longLit;
	_.underlyingAllocationPercent = P0_longLit;
	_.underlyingAttachmentPoint = P0_longLit;
	_.underlyingCapValue = P0_longLit;
	_.underlyingCashAmount = P0_longLit;
	_.underlyingContractMultiplier = P0_longLit;
	_.underlyingContractMultiplierUnit = P0_longLit;
	_.underlyingCouponRate = P0_longLit;
	_.underlyingCurrentValue = P0_longLit;
	_.underlyingDetachmentPoint = P0_longLit;
	_.underlyingDirtyPrice = P0_longLit;
	_.underlyingEndPrice = P0_longLit;
	_.underlyingEndValue = P0_longLit;
	_.underlyingExerciseStyle = P0_longLit;
	_.underlyingFXRate = P0_longLit;
	_.underlyingFXRateCalc = 32;
	_.underlyingFactor = P0_longLit;
	_.underlyingFlowScheduleType = P0_longLit;
	_.underlyingNotionalPercentageOutstanding = P0_longLit;
	_.underlyingOptAttribute = 32;
	_.underlyingOriginalNotionalPercentageOutstanding = P0_longLit;
	_.underlyingPriceUnitOfMeasureQty = P0_longLit;
	_.underlyingProduct = P0_longLit;
	_.underlyingPutOrCall = P0_longLit;
	_.underlyingPx = P0_longLit;
	_.underlyingQty = P0_longLit;
	_.underlyingRepoCollateralSecurityType = P0_longLit;
	_.underlyingRepurchaseRate = P0_longLit;
	_.underlyingRepurchaseTerm = P0_longLit;
	_.underlyingSettlementType = P0_longLit;
	_.underlyingStartValue = P0_longLit;
	_.underlyingStrikePrice = P0_longLit;
	_.underlyingUnitOfMeasureQty = P0_longLit;

	function $clear_146(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyingStips; i_0++)
		$clear_147(this$static.group[i_0]);
	}

	function $encode_100(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUnderlyingStips; i_0++)
		$encode_101(this$static.group[i_0], out);
	}

	function $equals_144(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixUnderlyingStipulations)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noUnderlyingStips; i_0++)
		if (!$equals_145(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_100(this$static, noUnderlyingStips, buf) {
		var i_0, i0;
		this$static.noUnderlyingStips = noUnderlyingStips;
		if (noUnderlyingStips < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noUnderlyingStips), P377_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noUnderlyingStips) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUnderlyingStipulations$UnderlyingStipulations_2_classLit, makeCastMap([Q$Serializable]), Q$FixUnderlyingStipulations$UnderlyingStipulations, noUnderlyingStips, 0);
			for (i0 = 0; i0 < noUnderlyingStips; i0++)
			this$static.group[i0] = new FixUnderlyingStipulations$UnderlyingStipulations_0;
		}
		for (i_0 = 0; i_0 < noUnderlyingStips; i_0++)
		$getAllGroup_59(this$static.group[i_0], buf);
	}

	function $toString_145(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noUnderlyingStips; i_0++)
		s += $toString_146(this$static.group[i_0]);
		return s;
	}

	function FixUnderlyingStipulations_0() {}

	defineSeed(684, 1, makeCastMap([Q$FixUnderlyingStipulations]), FixUnderlyingStipulations_0);
	_.equals$ = function equals_185(o) {
		return $equals_144(this, o);
	};
	_.toString$ = function toString_174() {
		return $toString_145(this);
	};
	_.noUnderlyingStips = 0;

	function $clear_147(this$static) {
		$clinit_Utils();
		this$static.underlyingStipType[0] = 0;
		this$static.underlyingStipValue[0] = 0;
	}

	function $encode_101(this$static, out) {
		$clinit_FixUtils();
		this$static.underlyingStipType[0] != 0 && putFixTag_2(out, 888, this$static.underlyingStipType, lastIndexTrim(this$static.underlyingStipType));
		this$static.underlyingStipValue[0] != 0 && putFixTag_2(out, 889, this$static.underlyingStipValue, lastIndexTrim(this$static.underlyingStipValue));
	}

	function $equals_145(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUnderlyingStipulations$UnderlyingStipulations)) {
			$print_80(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.underlyingStipType, msg.underlyingStipType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (!equals_12(this$static.underlyingStipValue, msg.underlyingStipValue)) {
			ret = false;
			$clinit_FixMessage();
		}
		return ret;
	}

	function $getAllGroup_59(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 888) {
			this$static.underlyingStipType = getTagStringValue(null, 888, buf, this$static.underlyingStipType);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 889) {
			this$static.underlyingStipValue = getTagStringValue(null, 889, buf, this$static.underlyingStipValue);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_80() {
		$clinit_FixMessage();
	}

	function $toString_146(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.underlyingStipType[0] != 0 && (s += 'UnderlyingStipType(888)=' + $trim(_String(this$static.underlyingStipType)) + charToString(sep));
		this$static.underlyingStipValue[0] != 0 && (s += 'UnderlyingStipValue(889)=' + $trim(_String(this$static.underlyingStipValue)) + charToString(sep));
		return s;
	}

	function FixUnderlyingStipulations$UnderlyingStipulations_0() {
		this.underlyingStipType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.underlyingStipValue = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.underlyingStipType[0] = 0;
		this.underlyingStipValue[0] = 0;
	}

	defineSeed(685, 1, makeCastMap([Q$FixComponent, Q$FixUnderlyingStipulations$UnderlyingStipulations]), FixUnderlyingStipulations$UnderlyingStipulations_0);
	_.equals$ = function equals_186(o) {
		return $equals_145(this, o);
	};
	_.toString$ = function toString_175() {
		return $toString_146(this);
	};

	function $clear_148(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentParties; i_0++)
		$clear_149(this$static.group[i_0]);
	}

	function $encode_102(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentParties; i_0++)
		$encode_103(this$static.group[i_0], out);
	}

	function $equals_146(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixUndlyInstrumentParties)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentParties; i_0++)
		if (!$equals_147(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_101(this$static, noUndlyInstrumentParties, buf) {
		var i_0, i0;
		this$static.noUndlyInstrumentParties = noUndlyInstrumentParties;
		if (noUndlyInstrumentParties < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noUndlyInstrumentParties), P422_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noUndlyInstrumentParties) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentParties$UndlyInstrumentParties_2_classLit, makeCastMap([Q$Serializable]), Q$FixUndlyInstrumentParties$UndlyInstrumentParties, noUndlyInstrumentParties, 0);
			for (i0 = 0; i0 < noUndlyInstrumentParties; i0++)
			this$static.group[i0] = new FixUndlyInstrumentParties$UndlyInstrumentParties_0;
		}
		for (i_0 = 0; i_0 < noUndlyInstrumentParties; i_0++)
		$getAllGroup_60(this$static.group[i_0], buf);
	}

	function $toString_147(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentParties; i_0++)
		s += $toString_148(this$static.group[i_0]);
		return s;
	}

	function FixUndlyInstrumentParties_0() {}

	defineSeed(686, 1, makeCastMap([Q$FixUndlyInstrumentParties]), FixUndlyInstrumentParties_0);
	_.equals$ = function equals_187(o) {
		return $equals_146(this, o);
	};
	_.toString$ = function toString_176() {
		return $toString_147(this);
	};
	_.noUndlyInstrumentParties = 0;

	function $clear_149(this$static) {
		$clinit_Utils();
		this$static.underlyingInstrumentPartyID[0] = 0;
		this$static.underlyingInstrumentPartyIDSource = 127;
		this$static.underlyingInstrumentPartyRole = P7fffffffffffffff_longLit;
		$clear_150(this$static.undlyInstrumentPtysSubGrp);
	}

	function $encode_103(this$static, out) {
		$clinit_FixUtils();
		this$static.underlyingInstrumentPartyID[0] != 0 && putFixTag_2(out, 1059, this$static.underlyingInstrumentPartyID, lastIndexTrim(this$static.underlyingInstrumentPartyID));
		this$static.underlyingInstrumentPartyIDSource != 127 && putFixTag(out, 1060, this$static.underlyingInstrumentPartyIDSource);
		neq(this$static.underlyingInstrumentPartyRole, P7fffffffffffffff_longLit) && putFixTag_0(out, 1061, this$static.underlyingInstrumentPartyRole);
		neq(fromInt(this$static.undlyInstrumentPtysSubGrp.noUndlyInstrumentPartySubIDs), P7fffffffffffffff_longLit) && $encode_104(this$static.undlyInstrumentPtysSubGrp, out);
	}

	function $equals_147(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUndlyInstrumentParties$UndlyInstrumentParties)) {
			$print_81(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.underlyingInstrumentPartyID, msg.underlyingInstrumentPartyID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (this$static.underlyingInstrumentPartyIDSource != msg.underlyingInstrumentPartyIDSource) {
			ret = false;
			$print_81((valueOf(this$static.underlyingInstrumentPartyIDSource), valueOf(msg.underlyingInstrumentPartyIDSource)));
		}
		if (neq(this$static.underlyingInstrumentPartyRole, msg.underlyingInstrumentPartyRole)) {
			ret = false;
			$print_81((valueOf_1(this$static.underlyingInstrumentPartyRole), valueOf_1(msg.underlyingInstrumentPartyRole)));
		}
		$equals_148(this$static.undlyInstrumentPtysSubGrp, msg.undlyInstrumentPtysSubGrp) || (ret = false);
		return ret;
	}

	function $getAllGroup_60(this$static, buf) {
		var id_0, lastTagPosition, noUndlyInstrumentPartySubIDs;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1059) {
			this$static.underlyingInstrumentPartyID = getTagStringValue(null, 1059, buf, this$static.underlyingInstrumentPartyID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1060) {
			this$static.underlyingInstrumentPartyIDSource = getTagCharValue(null, 1060, buf);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1061) {
			this$static.underlyingInstrumentPartyRole = fromInt(getTagIntValue(null, 1061, buf));
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1062) {
			noUndlyInstrumentPartySubIDs = getTagIntValue(null, 1062, buf);
			$getAll_102(this$static.undlyInstrumentPtysSubGrp, noUndlyInstrumentPartySubIDs, buf);
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_81() {
		$clinit_FixMessage();
	}

	function $toString_148(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.underlyingInstrumentPartyID[0] != 0 && (s += 'UnderlyingInstrumentPartyID(1059)=' + $trim(_String(this$static.underlyingInstrumentPartyID)) + charToString(sep));
		this$static.underlyingInstrumentPartyIDSource != 127 && (s += 'UnderlyingInstrumentPartyIDSource(1060)=' + $trim('' + this$static.underlyingInstrumentPartyIDSource) + charToString(sep));
		neq(this$static.underlyingInstrumentPartyRole, P7fffffffffffffff_longLit) && (s += 'UnderlyingInstrumentPartyRole(1061)=' + $trim('' + toString_183(this$static.underlyingInstrumentPartyRole)) + charToString(sep));
		neq(fromInt(this$static.undlyInstrumentPtysSubGrp.noUndlyInstrumentPartySubIDs), P7fffffffffffffff_longLit) && (s += $trim($toString_149(this$static.undlyInstrumentPtysSubGrp)));
		return s;
	}

	function FixUndlyInstrumentParties$UndlyInstrumentParties_0() {
		this.underlyingInstrumentPartyID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.undlyInstrumentPtysSubGrp = new FixUndlyInstrumentPtysSubGrp_0;
		$clear_149(this);
	}

	defineSeed(687, 1, makeCastMap([Q$FixComponent, Q$FixUndlyInstrumentParties$UndlyInstrumentParties]), FixUndlyInstrumentParties$UndlyInstrumentParties_0);
	_.equals$ = function equals_188(o) {
		return $equals_147(this, o);
	};
	_.toString$ = function toString_177() {
		return $toString_148(this);
	};
	_.underlyingInstrumentPartyIDSource = 32;
	_.underlyingInstrumentPartyRole = P0_longLit;

	function $clear_150(this$static) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentPartySubIDs; i_0++)
		$clear_151(this$static.group[i_0]);
	}

	function $encode_104(this$static, out) {
		var i_0;
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentPartySubIDs; i_0++)
		$encode_105(this$static.group[i_0], out);
	}

	function $equals_148(this$static, o) {
		var i_0, msg;
		if (!instanceOf(o, Q$FixUndlyInstrumentPtysSubGrp)) return false;
		msg = o;
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentPartySubIDs; i_0++)
		if (!$equals_149(this$static.group[i_0], msg.group[i_0])) return false;
		return true;
	}

	function $getAll_102(this$static, noUndlyInstrumentPartySubIDs, buf) {
		var i_0, i0;
		this$static.noUndlyInstrumentPartySubIDs = noUndlyInstrumentPartySubIDs;
		if (noUndlyInstrumentPartySubIDs < 1) throw new FixSessionException_0(P10_longLit, getBytesUtf8('Incorrect num in group count ' + noUndlyInstrumentPartySubIDs), P426_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
		if (this$static.group == null || this$static.group.length < noUndlyInstrumentPartySubIDs) {
			this$static.group = initDim(_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_2_classLit, makeCastMap([Q$Serializable]), Q$FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp, noUndlyInstrumentPartySubIDs, 0);
			for (i0 = 0; i0 < noUndlyInstrumentPartySubIDs; i0++)
			this$static.group[i0] = new FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_0;
		}
		for (i_0 = 0; i_0 < noUndlyInstrumentPartySubIDs; i_0++)
		$getAllGroup_61(this$static.group[i_0], buf);
	}

	function $toString_149(this$static) {
		var i_0, s;
		s = '';
		for (i_0 = 0; i_0 < this$static.noUndlyInstrumentPartySubIDs; i_0++)
		s += $toString_150(this$static.group[i_0]);
		return s;
	}

	function FixUndlyInstrumentPtysSubGrp_0() {}

	defineSeed(688, 1, makeCastMap([Q$FixUndlyInstrumentPtysSubGrp]), FixUndlyInstrumentPtysSubGrp_0);
	_.equals$ = function equals_189(o) {
		return $equals_148(this, o);
	};
	_.toString$ = function toString_178() {
		return $toString_149(this);
	};
	_.noUndlyInstrumentPartySubIDs = 0;

	function $clear_151(this$static) {
		$clinit_Utils();
		this$static.underlyingInstrumentPartySubID[0] = 0;
		this$static.underlyingInstrumentPartySubIDType = P7fffffffffffffff_longLit;
	}

	function $encode_105(this$static, out) {
		$clinit_FixUtils();
		this$static.underlyingInstrumentPartySubID[0] != 0 && putFixTag_2(out, 1063, this$static.underlyingInstrumentPartySubID, lastIndexTrim(this$static.underlyingInstrumentPartySubID));
		neq(this$static.underlyingInstrumentPartySubIDType, P7fffffffffffffff_longLit) && putFixTag_0(out, 1064, this$static.underlyingInstrumentPartySubIDType);
	}

	function $equals_149(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp)) {
			$print_82(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.underlyingInstrumentPartySubID, msg.underlyingInstrumentPartySubID)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.underlyingInstrumentPartySubIDType, msg.underlyingInstrumentPartySubIDType)) {
			ret = false;
			$print_82((valueOf_1(this$static.underlyingInstrumentPartySubIDType), valueOf_1(msg.underlyingInstrumentPartySubIDType)));
		}
		return ret;
	}

	function $getAllGroup_61(this$static, buf) {
		var id_0, lastTagPosition;
		id_0 = getTagId(buf);
		lastTagPosition = buf.position;
		if (id_0 == 1063) {
			this$static.underlyingInstrumentPartySubID = getTagStringValue(null, 1063, buf, this$static.underlyingInstrumentPartySubID);
			lastTagPosition = buf.position;
			id_0 = getTagId(buf);
		}
		if (id_0 == 1064) {
			this$static.underlyingInstrumentPartySubIDType = fromInt(getTagIntValue(null, 1064, buf));
			lastTagPosition = buf.position;
			getTagId(buf);
		}
		$position(buf, lastTagPosition);
		return;
	}

	function $print_82() {
		$clinit_FixMessage();
	}

	function $toString_150(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.underlyingInstrumentPartySubID[0] != 0 && (s += 'UnderlyingInstrumentPartySubID(1063)=' + $trim(_String(this$static.underlyingInstrumentPartySubID)) + charToString(sep));
		neq(this$static.underlyingInstrumentPartySubIDType, P7fffffffffffffff_longLit) && (s += 'UnderlyingInstrumentPartySubIDType(1064)=' + $trim('' + toString_183(this$static.underlyingInstrumentPartySubIDType)) + charToString(sep));
		return s;
	}

	function FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_0() {
		this.underlyingInstrumentPartySubID = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clinit_Utils();
		this.underlyingInstrumentPartySubID[0] = 0;
		this.underlyingInstrumentPartySubIDType = P7fffffffffffffff_longLit;
	}

	defineSeed(689, 1, makeCastMap([Q$FixComponent, Q$FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp]), FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_0);
	_.equals$ = function equals_190(o) {
		return $equals_149(this, o);
	};
	_.toString$ = function toString_179() {
		return $toString_150(this);
	};
	_.underlyingInstrumentPartySubIDType = P0_longLit;

	function $clear_152(this$static) {
		$clinit_Utils();
		this$static.yieldType[0] = 0;
		this$static.yield = P7fffffffffffffff_longLit;
		this$static.yieldCalcDate[0] = 0;
		this$static.yieldRedemptionDate[0] = 0;
		this$static.yieldRedemptionPrice = P7fffffffffffffff_longLit;
		this$static.yieldRedemptionPriceType = P7fffffffffffffff_longLit;
	}

	function $encode_106(this$static, out) {
		$clinit_FixUtils();
		this$static.yieldType[0] != 0 && putFixTag_2(out, 235, this$static.yieldType, lastIndexTrim(this$static.yieldType));
		neq(this$static.yield, P7fffffffffffffff_longLit) && putFixFloatTag(out, 236, this$static.yield);
		this$static.yieldCalcDate[0] != 0 && putFixTag_1(out, 701, this$static.yieldCalcDate);
		this$static.yieldRedemptionDate[0] != 0 && putFixTag_1(out, 696, this$static.yieldRedemptionDate);
		neq(this$static.yieldRedemptionPrice, P7fffffffffffffff_longLit) && putFixFloatTag(out, 697, this$static.yieldRedemptionPrice);
		neq(this$static.yieldRedemptionPriceType, P7fffffffffffffff_longLit) && putFixTag_0(out, 698, this$static.yieldRedemptionPriceType);
	}

	function $equals_150(this$static, o) {
		var msg, ret;
		ret = true;
		if (!instanceOf(o, Q$FixYieldData)) {
			$print_83(getClass__devirtual$(o));
			return false;
		}
		msg = o;
		if (!equals_12(this$static.yieldType, msg.yieldType)) {
			ret = false;
			$clinit_FixMessage();
		}
		if (neq(this$static.yield, msg.yield)) {
			ret = false;
			$print_83((valueOf_1(this$static.yield), valueOf_1(msg.yield)));
		}
		if (neq(this$static.yieldRedemptionPrice, msg.yieldRedemptionPrice)) {
			ret = false;
			$print_83((valueOf_1(this$static.yieldRedemptionPrice), valueOf_1(msg.yieldRedemptionPrice)));
		}
		if (neq(this$static.yieldRedemptionPriceType, msg.yieldRedemptionPriceType)) {
			ret = false;
			$print_83((valueOf_1(this$static.yieldRedemptionPriceType), valueOf_1(msg.yieldRedemptionPriceType)));
		}
		return ret;
	}

	function $getAll_103(this$static, id_0, buf) {
		var lastTagPosition, startTagPosition;
		startTagPosition = buf.position;
		lastTagPosition = buf.position;
		do {
			switch (id_0) {
			case 235:
				this$static.yieldType = getTagStringValue(null, 235, buf, this$static.yieldType);
				if (!isValid_186(this$static.yieldType)) throw new FixSessionException_0(P5_longLit, getBytesUtf8('Invalid enumerated value(' + this$static.yieldType + ') for tag'), Peb_longLit, initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 0, 1));
				break;
			case 236:
				this$static.yield = getTagFloatValue(null, 236, buf);
				break;
			case 701:
				this$static.yieldCalcDate = getTagStringValue(null, 701, buf, this$static.yieldCalcDate);
				break;
			case 696:
				this$static.yieldRedemptionDate = getTagStringValue(null, 696, buf, this$static.yieldRedemptionDate);
				break;
			case 697:
				this$static.yieldRedemptionPrice = getTagFloatValue(null, 697, buf);
				break;
			case 698:
				this$static.yieldRedemptionPriceType = fromInt(getTagIntValue(null, 698, buf));
				break;
			default:
				$position(buf, lastTagPosition);
				return;
			}
			lastTagPosition = buf.position;
		}
		while ((id_0 = getTagId(buf)) >= 0);
		$position(buf, startTagPosition);
	}

	function $print_83() {
		$clinit_FixMessage();
	}

	function $toString_151(this$static) {
		var s, sep;
		sep = 10;
		($clinit_Boolean(), $clinit_Boolean(), TRUE).value_0 && (sep = 1);
		s = '';
		$clinit_FixUtils();
		this$static.yieldType[0] != 0 && (s += 'YieldType(235)=' + $trim(_String(this$static.yieldType)) + charToString(sep));
		neq(this$static.yield, P7fffffffffffffff_longLit) && (s += 'Yield(236)=' + $trim('' + toString_183(this$static.yield)) + charToString(sep));
		this$static.yieldCalcDate[0] != 0 && (s += 'YieldCalcDate(701)=' + $trim(_String(this$static.yieldCalcDate)) + charToString(sep));
		this$static.yieldRedemptionDate[0] != 0 && (s += 'YieldRedemptionDate(696)=' + $trim(_String(this$static.yieldRedemptionDate)) + charToString(sep));
		neq(this$static.yieldRedemptionPrice, P7fffffffffffffff_longLit) && (s += 'YieldRedemptionPrice(697)=' + $trim('' + toString_183(this$static.yieldRedemptionPrice)) + charToString(sep));
		neq(this$static.yieldRedemptionPriceType, P7fffffffffffffff_longLit) && (s += 'YieldRedemptionPriceType(698)=' + $trim('' + toString_183(this$static.yieldRedemptionPriceType)) + charToString(sep));
		return s;
	}

	function FixYieldData_0() {
		this.yieldType = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.yieldCalcDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		this.yieldRedemptionDate = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, 32, 1);
		$clear_152(this);
	}

	defineSeed(690, 1, makeCastMap([Q$FixComponent, Q$FixYieldData]), FixYieldData_0);
	_.equals$ = function equals_191(o) {
		return $equals_150(this, o);
	};
	_.toString$ = function toString_180() {
		return $toString_151(this);
	};
	_.yield = P0_longLit;
	_.yieldRedemptionPrice = P0_longLit;
	_.yieldRedemptionPriceType = P0_longLit;

	function $clear_153(this$static) {
		this$static.position = 0;
		this$static.mark = -1;
		this$static.limit = this$static.capacity;
		return this$static;
	}

	function $flip(this$static) {
		this$static.limit = this$static.position;
		this$static.position = 0;
		this$static.mark = -1;
		return this$static;
	}

	function $position(this$static, newPosition) {
		if (newPosition < 0 || newPosition > this$static.limit) {
			throw new IllegalArgumentException_0;
		}
		this$static.position = newPosition;
		this$static.mark != -1 && this$static.mark > this$static.position && (this$static.mark = -1);
		return this$static;
	}

	function $remaining(this$static) {
		return this$static.limit - this$static.position;
	}

	function $reset(this$static) {
		if (this$static.mark == -1) {
			throw new InvalidMarkException_0;
		}
		this$static.position = this$static.mark;
		return this$static;
	}

	function Buffer_0(capacity) {
		if (capacity < 0) {
			throw new IllegalArgumentException_0;
		}
		this.capacity = this.limit = capacity;
	}

	defineSeed(691, 1, {});
	_.capacity = 0;
	_.limit = 0;
	_.mark = -1;
	_.position = 0;

	function RuntimeException_0() {
		Exception_0.call(this);
	}

	function RuntimeException_1(message) {
		this.detailMessage = message;
		$fillInStackTrace(this);
	}

	defineSeed(693, 309, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RuntimeException_1);

	function BufferOverflowException_0() {
		RuntimeException_0.call(this);
	}

	defineSeed(692, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), BufferOverflowException_0);

	function $byteLength(this$static) {
		return this$static.mBytes == null ? 0 : this$static.mBytes.length;
	}

	function $get(this$static, index_0) {
		return (this$static.mBytes == null ? null : valueOf(this$static.mBytes[index_0])).value_0;
	}

	function $set(this$static, index_0, value_0) {
		if (index_0 >= this$static.mBytes.length) return;
		this$static.mBytes[index_0] = narrow_byte(value_0);
	}

	function ByteArray_0(capacity) {
		this.mBytes = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, capacity, 1);
	}

	defineSeed(694, 1, {}, ByteArray_0);

	function $array(this$static) {
		var bytes, i_0;
		bytes = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, $byteLength(this$static.byteArray), 1);
		for (i_0 = 0; i_0 < $byteLength(this$static.byteArray); i_0++) {
			bytes[i_0] = $get(this$static.byteArray, i_0);
		}
		return bytes;
	}

	function $compareTo_1(this$static, otherBuffer) {
		var compareRemaining, otherByte, otherPos, thisByte, thisPos;
		compareRemaining = this$static.limit - this$static.position < otherBuffer.limit - otherBuffer.position ? this$static.limit - this$static.position : otherBuffer.limit - otherBuffer.position;
		thisPos = this$static.position;
		otherPos = otherBuffer.position;
		while (compareRemaining > 0) {
			thisByte = $get(this$static.byteArray, thisPos);
			otherByte = $get(otherBuffer.byteArray, otherPos);
			if (thisByte != otherByte) {
				return thisByte < otherByte ? -1 : 1;
			}++thisPos;
			++otherPos;
			--compareRemaining;
		}
		return this$static.limit - this$static.position - (otherBuffer.limit - otherBuffer.position);
	}

	function $get_0(this$static, index_0) {
		return $get(this$static.byteArray, index_0);
	}

	function $put(this$static, src_0) {
		return $put_0(this$static, src_0, src_0.length);
	}

	function $put_0(this$static, src_0, len) {
		var i_0, length_0;
		length_0 = src_0.length;
		if (len < 0 || len > length_0) {
			throw new IndexOutOfBoundsException_0;
		}
		if (len > this$static.limit - this$static.position) {
			throw new BufferOverflowException_0;
		}
		for (i_0 = 0; i_0 < len; i_0++) {
			$set(this$static.byteArray, i_0 + this$static.position, src_0[i_0]);
		}
		this$static.position += len;
		return this$static;
	}

	function ByteBuffer_0(capacity) {
		Buffer_0.call(this, capacity);
		$clinit_ByteOrder();
		this.byteArray = new ByteArray_0(capacity);
	}

	function allocate(capacity) {
		var result;
		result = allocateDirect(capacity);
		return result;
	}

	function allocateDirect(capacity) {
		if (capacity < 0) {
			throw new IllegalArgumentException_0;
		}
		return new ByteBuffer_0(capacity);
	}

	defineSeed(695, 691, makeCastMap([Q$ByteBuffer, Q$Comparable]), ByteBuffer_0);
	_.compareTo$ = function compareTo_3(otherBuffer) {
		return $compareTo_1(this, otherBuffer);
	};
	_.equals$ = function equals_192(other) {
		var equalSoFar, myPosition, otherBuffer, otherPosition;
		if (!instanceOf(other, Q$ByteBuffer)) {
			return false;
		}
		otherBuffer = other;
		if (this.limit - this.position != otherBuffer.limit - otherBuffer.position) {
			return false;
		}
		myPosition = this.position;
		otherPosition = otherBuffer.position;
		equalSoFar = true;
		while (equalSoFar && myPosition < this.limit) {
			equalSoFar = $get_0(this, myPosition++) == $get_0(otherBuffer, otherPosition++);
		}
		return equalSoFar;
	};
	_.hashCode$ = function hashCode_1() {
		var hash, myPosition;
		myPosition = this.position;
		hash = 0;
		while (myPosition < this.limit) {
			hash = hash + $get_0(this, myPosition++);
		}
		return hash;
	};
	_.toString$ = function toString_181() {
		var buf;
		buf = new StringBuffer_0;
		$append_2(buf, Lcom_gf_hippo_protocol_fix_nio_ByteBuffer_2_classLit.typeName);
		$append_0(buf.impl, ', status: capacity=');
		$append_1(buf, this.capacity);
		$append_0(buf.impl, ' position=');
		$append_1(buf, this.position);
		$append_0(buf.impl, ' limit=');
		$append_1(buf, this.limit);
		return buf.impl.string;
	};

	function $clinit_ByteOrder() {
		$clinit_ByteOrder = nullMethod;
		new ByteOrder_0('BIG_ENDIAN');
		new ByteOrder_0('LITTLE_ENDIAN');
	}

	function ByteOrder_0(name_0) {
		this.name_0 = name_0;
	}

	defineSeed(696, 1, {}, ByteOrder_0);
	_.toString$ = function toString_182() {
		return this.name_0;
	};

	function $clinit_DateTimeFormat() {
		$clinit_DateTimeFormat = nullMethod;
		cache = new HashMap_0;
	}

	function $addPart(this$static, buf, count) {
		var oldLength;
		if (buf.impl.string.length > 0) {
			$add(this$static.patternParts, new DateTimeFormat$PatternPart_0(buf.impl.string, count));
			oldLength = buf.impl.string.length;
			0 < oldLength ? ($replace(buf.impl, oldLength), buf) : 0 > oldLength && $append_3(buf, initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, -oldLength, 1));
		}
	}

	function $getNextCharCountInPattern(pattern, start_0) {
		var ch_0, next;
		ch_0 = pattern.charCodeAt(start_0);
		next = start_0 + 1;
		while (next < pattern.length && pattern.charCodeAt(next) == ch_0) {
			++next;
		}
		return next - start_0;
	}

	function $identifyAbutStart(this$static) {
		var abut, i_0, len;
		abut = false;
		len = this$static.patternParts.size_0;
		for (i_0 = 0; i_0 < len; i_0++) {
			if ($isNumeric($get_2(this$static.patternParts, i_0))) {
				if (!abut && i_0 + 1 < len && $isNumeric($get_2(this$static.patternParts, i_0 + 1))) {
					abut = true;
					$get_2(this$static.patternParts, i_0).abutStart = true;
				}
			} else {
				abut = false;
			}
		}
	}

	function $isNumeric(part) {
		var i_0;
		if (part.count <= 0) {
			return false;
		}
		i_0 = $indexOf('MLydhHmsSDkK', fromCodePoint(part.text_0.charCodeAt(0)));
		return i_0 > 1 || i_0 >= 0 && part.count < 3;
	}

	function $parsePattern(this$static, pattern) {
		var buf, ch_0, count, i_0, inQuote;
		buf = new StringBuffer_1;
		inQuote = false;
		for (i_0 = 0; i_0 < pattern.length; i_0++) {
			ch_0 = pattern.charCodeAt(i_0);
			if (ch_0 == 32) {
				$addPart(this$static, buf, 0);
				$appendNonNull(buf.impl, ' ');
				$addPart(this$static, buf, 0);
				while (i_0 + 1 < pattern.length && pattern.charCodeAt(i_0 + 1) == 32) {
					++i_0;
				}
				continue;
			}
			if (inQuote) {
				if (ch_0 == 39) {
					if (i_0 + 1 < pattern.length && pattern.charCodeAt(i_0 + 1) == 39) {
						$appendNonNull(buf.impl, "'");
						++i_0;
					} else {
						inQuote = false;
					}
				} else {
					$appendNonNull(buf.impl, valueOf_2(ch_0));
				}
				continue;
			}
			if ($indexOf('GyMLdkHmsSEcDahKzZv', fromCodePoint(ch_0)) > 0) {
				$addPart(this$static, buf, 0);
				$appendNonNull(buf.impl, valueOf_2(ch_0));
				count = $getNextCharCountInPattern(pattern, i_0);
				$addPart(this$static, buf, count);
				i_0 += count - 1;
				continue;
			}
			if (ch_0 == 39) {
				if (i_0 + 1 < pattern.length && pattern.charCodeAt(i_0 + 1) == 39) {
					$appendNonNull(buf.impl, "'");
					++i_0;
				} else {
					inQuote = true;
				}
			} else {
				$appendNonNull(buf.impl, valueOf_2(ch_0));
			}
		}
		$addPart(this$static, buf, 0);
		$identifyAbutStart(this$static);
	}

	function DateTimeFormat_0(pattern) {
		this.patternParts = new ArrayList_0;
		$parsePattern(this, pattern);
	}

	function getFormat(pattern, dtfi) {
		$clinit_DateTimeFormat();
		var defaultDtfi, dtf;
		defaultDtfi = new DefaultDateTimeFormatInfo_0;
		dtf = null;
		dtfi == defaultDtfi && (dtf = $get_1(cache, pattern));
		if (!dtf) {
			dtf = new DateTimeFormat_0(pattern);
			dtfi == defaultDtfi && $put_1(cache, pattern, dtf);
		}
		return dtf;
	}

	defineSeed(697, 1, {}, DateTimeFormat_0);
	var cache;

	function DateTimeFormat$PatternPart_0(txt, cnt) {
		this.text_0 = txt;
		this.count = cnt;
		this.abutStart = false;
	}

	defineSeed(698, 1, {}, DateTimeFormat$PatternPart_0);
	_.abutStart = false;
	_.count = 0;

	function DefaultDateTimeFormatInfo_0() {}

	defineSeed(699, 1, {}, DefaultDateTimeFormatInfo_0);

	function IllegalStateException_0() {
		RuntimeException_0.call(this);
	}

	defineSeed(701, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IllegalStateException_0);

	function InvalidMarkException_0() {
		IllegalStateException_0.call(this);
	}

	defineSeed(700, 701, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), InvalidMarkException_0);

	function $clinit_JavaScriptException() {
		$clinit_JavaScriptException = nullMethod;
		NOT_SET = new Object_1;
	}

	function $ensureInit(this$static) {
		var exception;
		if (this$static.message_0 == null) {
			exception = this$static.e === NOT_SET ? null : this$static.e;
			this$static.name_0 = exception == null ? 'null' : instanceOfJso(exception) ? exception == null ? null : exception.name : instanceOf(exception, Q$String) ? 'String' : getClass__devirtual$(exception).typeName;
			this$static.description = this$static.description + ': ' + (instanceOfJso(exception) ? exception == null ? null : exception.message : exception + '');
			this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception) ? $getProperties(exception) : '') + this$static.description;
		}
	}

	function JavaScriptException_0(e) {
		$clinit_JavaScriptException();
		RuntimeException_0.call(this);
		this.description = '';
		this.e = e;
		this.description = '';
		$createStackTrace(this);
	}

	defineSeed(704, 693, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Exception, Q$Throwable]), JavaScriptException_0);
	_.getMessage_0 = function getMessage_3() {
		$ensureInit(this);
		return this.message_0;
	};
	_.getThrown = function getThrown() {
		return this.e === NOT_SET ? null : this.e;
	};
	var NOT_SET;

	function equals__devirtual$(this$static, other) {
		var maybeJsoInvocation;
		return maybeJsoInvocation = this$static, isJavaObject(maybeJsoInvocation) ? maybeJsoInvocation.equals$(other) : maybeJsoInvocation === other;
	}

	function getClass__devirtual$(this$static) {
		var maybeJsoInvocation;
		return maybeJsoInvocation = this$static, isJavaObject(maybeJsoInvocation) ? maybeJsoInvocation.___clazz$ : Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
	}

	function hashCode__devirtual$(this$static) {
		var maybeJsoInvocation;
		return maybeJsoInvocation = this$static, isJavaObject(maybeJsoInvocation) ? maybeJsoInvocation.hashCode$() : getHashCode(maybeJsoInvocation);
	}

	function $setDate(this$static, dayOfMonth) {
		this$static.setDate(dayOfMonth);
		return this$static.getTime();
	}

	function $setFullYear(this$static, year, month, day) {
		this$static.setFullYear(year, month, day);
		return this$static.getTime();
	}

	function $setHours(this$static, hours, mins, secs, ms) {
		this$static.setHours(hours, mins, secs, ms);
		return this$static.getTime();
	}

	function $setTime_8(this$static, milliseconds) {
		this$static.setTime(milliseconds);
		return this$static.getTime();
	}

	function create(milliseconds) {
		return new Date(milliseconds);
	}

	function create_0(year, month, dayOfMonth, hours, minutes, seconds, millis) {
		return new Date(year, month, dayOfMonth, hours, minutes, seconds, millis);
	}

	defineSeed(710, 1, {});

	function apply_0(jsFunction, thisObj, args) {
		return jsFunction.apply(thisObj, args);
		var __0;
	}

	function dispose(d) {}

	function enter() {
		var now_0;
		if (entryDepth != 0) {
			now_0 = (new Date).getTime();
			if (now_0 - watchdogEntryDepthLastScheduled > 2000) {
				watchdogEntryDepthLastScheduled = now_0;
				watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();
			}
		}
		if (entryDepth++ == 0) {
			$flushEntryCommands(($clinit_SchedulerImpl(), INSTANCE));
			return true;
		}
		return false;
	}

	function entry_0(jsFunction) {
		return function() {
			try {
				return entry0(jsFunction, this, arguments);
				var __0;
			} catch (e) {
				throw e;
			}
		};
	}

	function entry0(jsFunction, thisObj, args) {
		var initialEntry;
		initialEntry = enter();
		try {
			return apply_0(jsFunction, thisObj, args);
		} finally {
			exit(initialEntry);
		}
	}

	function exit(initialEntry) {
		initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl(), INSTANCE));
		--entryDepth;
		if (initialEntry) {
			if (watchdogEntryDepthTimerId != -1) {
				watchdogEntryDepthCancel(watchdogEntryDepthTimerId);
				watchdogEntryDepthTimerId = -1;
			}
		}
	}

	function getHashCode(o) {
		return o.$H || (o.$H = ++sNextHashId);
	}

	function registerEntry() {
		return entry_0;
	}

	function reportToBrowser(e) {
		$wnd.setTimeout(function() {
			throw e;
		}, 0);
	}

	function setTimeout_0(func, time) {
		return setTimeout0(func, time, null);
	}

	function watchdogEntryDepthCancel(timerId) {
		$wnd.clearTimeout(timerId);
	}

	function watchdogEntryDepthSchedule() {
		return setTimeout_0(function() {
			entryDepth != 0 && (entryDepth = 0);
			watchdogEntryDepthTimerId = -1;
		}, 10);
	}

	var entryDepth = 0,
		sNextHashId = 0,
		watchdogEntryDepthLastScheduled = 0,
		watchdogEntryDepthTimerId = -1;

	function $clinit_SchedulerImpl() {
		$clinit_SchedulerImpl = nullMethod;
		INSTANCE = new SchedulerImpl_0;
	}

	function $flushEntryCommands(this$static) {
		var oldQueue, rescheduled;
		if (this$static.entryCommands) {
			rescheduled = null;
			do {
				oldQueue = this$static.entryCommands;
				this$static.entryCommands = null;
				rescheduled = runScheduledTasks(oldQueue, rescheduled);
			}
			while (this$static.entryCommands);
			this$static.entryCommands = rescheduled;
		}
	}

	function $flushFinallyCommands(this$static) {
		var oldQueue, rescheduled;
		if (this$static.finallyCommands) {
			rescheduled = null;
			do {
				oldQueue = this$static.finallyCommands;
				this$static.finallyCommands = null;
				rescheduled = runScheduledTasks(oldQueue, rescheduled);
			}
			while (this$static.finallyCommands);
			this$static.finallyCommands = rescheduled;
		}
	}

	function SchedulerImpl_0() {}

	function push_0(queue, task) {
		!queue && (queue = []);
		queue[queue.length] = task;
		return queue;
	}

	function runScheduledTasks(tasks, rescheduled) {
		var e, i_0, j, t;
		for (i_0 = 0, j = tasks.length; i_0 < j; i_0++) {
			t = tasks[i_0];
			try {
				t[1] ? t[0].nullMethod() && (rescheduled = push_0(rescheduled, t)) : t[0].nullMethod();
			} catch ($e0) {
				$e0 = wrap($e0);
				if (instanceOf($e0, Q$Throwable)) {
					e = $e0;
					reportToBrowser(instanceOf(e, Q$JavaScriptException) ? e.getThrown() : e);
				} else throw unwrap($e0);
			}
		}
		return rescheduled;
	}

	defineSeed(712, 710, {}, SchedulerImpl_0);
	var INSTANCE;

	function extractNameFromToString(fnToString) {
		var index_0, start_0, toReturn;
		toReturn = '';
		fnToString = $trim(fnToString);
		index_0 = fnToString.indexOf('(');
		start_0 = fnToString.indexOf('function') == 0 ? 8 : 0;
		if (index_0 == -1) {
			index_0 = $indexOf(fnToString, fromCodePoint(64));
			start_0 = fnToString.indexOf('function ') == 0 ? 9 : 0;
		}
		index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));
		return toReturn.length > 0 ? toReturn : 'anonymous';
	}

	function splice(arr, length_0) {
		arr.length >= length_0 && arr.splice(0, length_0);
		return arr;
	}

	function $createStackTrace(e) {
		var i_0, j, stack_0, stackTrace;
		stack_0 = $inferFrom(e.e === ($clinit_JavaScriptException(), NOT_SET) ? null : e.e);
		stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);
		for (i_0 = 0, j = stackTrace.length; i_0 < j; i_0++) {
			stackTrace[i_0] = new StackTraceElement_0(stack_0[i_0]);
		}
		$setStackTrace(e, stackTrace);
	}

	function $fillInStackTrace(t) {
		var i_0, j, stack_0, stackTrace;
		stack_0 = splice($inferFrom($makeException()), 2);
		stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);
		for (i_0 = 0, j = stackTrace.length; i_0 < j; i_0++) {
			stackTrace[i_0] = new StackTraceElement_0(stack_0[i_0]);
		}
		$setStackTrace(t, stackTrace);
	}

	function $getProperties(e) {
		var result = '';
		try {
			for (var prop in e) {
				if (prop != 'name' && prop != 'message' && prop != 'toString') {
					try {
						var propValue = prop != '__gwt$exception' ? e[prop] : '<skipped>';
						result += '\n ' + prop + ': ' + propValue;
					} catch (ignored) {}
				}
			}
		} catch (ignored) {}
		return result;
	}

	function $makeException() {
		try {
			null.a();
		} catch (e) {
			return e;
		}
	}

	function $inferFrom(e) {
		var i_0, j, jso, stack_0;
		jso = instanceOfJso(e) ? e : null;
		stack_0 = jso && jso.stack ? jso.stack.split('\n') : [];
		for (i_0 = 0, j = stack_0.length; i_0 < j; i_0++) {
			stack_0[i_0] = extractNameFromToString(stack_0[i_0]);
		}
		return stack_0;
	}

	defineSeed(717, 1, {});

	function $append(this$static, x_0) {
		this$static.string += x_0;
	}

	function $append_0(this$static, x_0) {
		this$static.string += x_0;
	}

	function $appendNonNull(this$static, x_0) {
		this$static.string += x_0;
	}

	function $replace(this$static, end) {
		this$static.string = $substring_0(this$static.string, 0, 0) + '' + $substring(this$static.string, end);
	}

	function StringBufferImplAppend_0() {}

	defineSeed(718, 717, {}, StringBufferImplAppend_0);
	_.string = '';

	function setTimeout0(func, time, disposeable) {
		var timerId = $wnd.setTimeout(function() {
			func();
			disposeable != null && dispose(disposeable);
		}, time);
		return timerId;
	}

	function Array_0() {}

	function clone(array) {
		return cloneSubrange(array, 0, array.length);
	}

	function cloneSubrange(array, fromIndex, toIndex) {
		var a, result;
		a = array;
		result = a.slice(fromIndex, toIndex);
		initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);
		return result;
	}

	function createFrom(array, length_0) {
		var a, result;
		a = array;
		result = createFromSeed(0, length_0);
		initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);
		return result;
	}

	function createFromSeed(seedType, length_0) {
		var array = new Array(length_0);
		if (seedType == 3) {
			for (var i_0 = 0; i_0 < length_0; ++i_0) {
				array[i_0] = {
					l: 0,
					m: 0,
					h: 0
				};
			}
		} else if (seedType > 0 && seedType < 3) {
			var value_0 = seedType == 1 ? 0 : false;
			for (var i_0 = 0; i_0 < length_0; ++i_0) {
				array[i_0] = value_0;
			}
		}
		return array;
	}

	function initDim(arrayClass, castableTypeMap, queryId, length_0, seedType) {
		var result;
		result = createFromSeed(seedType, length_0);
		initValues(arrayClass, castableTypeMap, queryId, result);
		return result;
	}

	function initValues(arrayClass, castableTypeMap, queryId, array) {
		$clinit_Array$ExpandoWrapper();
		wrapArray(array, expandoNames_0, expandoValues_0);
		array.___clazz$ = arrayClass;
		array.castableTypeMap$ = castableTypeMap;
		array.queryId$ = queryId;
		return array;
	}

	defineSeed(722, 1, {}, Array_0);
	_.queryId$ = 0;

	function $clinit_Array$ExpandoWrapper() {
		$clinit_Array$ExpandoWrapper = nullMethod;
		expandoNames_0 = [];
		expandoValues_0 = [];
		initExpandos(new Array_0, expandoNames_0, expandoValues_0);
	}

	function initExpandos(protoType, expandoNames, expandoValues) {
		var i_0 = 0,
			value_0;
		for (var name_0 in protoType) {
			if (value_0 = protoType[name_0]) {
				expandoNames[i_0] = name_0;
				expandoValues[i_0] = value_0;
				++i_0;
			}
		}
	}

	function wrapArray(array, expandoNames, expandoValues) {
		$clinit_Array$ExpandoWrapper();
		for (var i_0 = 0, c = expandoNames.length; i_0 < c; ++i_0) {
			array[expandoNames[i_0]] = expandoValues[i_0];
		}
	}

	var expandoNames_0, expandoValues_0;

	function canCast(src_0, dstId) {
		return src_0.castableTypeMap$ && !! src_0.castableTypeMap$[dstId];
	}

	function charToString(x_0) {
		return String.fromCharCode(x_0);
	}

	function instanceOf(src_0, dstId) {
		return src_0 != null && canCast(src_0, dstId);
	}

	function instanceOfJso(src_0) {
		return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);
	}

	function isJavaObject(src_0) {
		return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);
	}

	function maskUndefined(src_0) {
		return src_0 == null ? null : src_0;
	}

	function narrow_byte(x_0) {
		return x_0 << 24 >> 24;
	}

	function round_int(x_0) {
		return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);
	}

	function init_5() {
		var runtimeValue;
		isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');
		runtimeValue = $getRuntimeValue();
		$equals_151('gecko1_8', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\nThe compile time user.agent value (gecko1_8) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\n'), undefined);
		isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');
		$onModuleLoad_0();
		isStatsAvailable() && onModuleStart('com.google.gwt.logging.client.LogConfiguration');
		isStatsAvailable() && onModuleStart('com.gf.hippo.domain.client.gwt.Domain');
		$onModuleLoad();
	}

	function getCachableJavaScriptException(e_0) {
		var jse = e_0.__gwt$exception;
		if (!jse) {
			jse = new JavaScriptException_0(e_0);
			try {
				e_0.__gwt$exception = jse;
			} catch (e) {}
		}
		return jse;
	}

	function unwrap(e) {
		var jse;
		if (instanceOf(e, Q$JavaScriptException)) {
			jse = e;
			if (jse.e !== ($clinit_JavaScriptException(), NOT_SET)) {
				return jse.e === NOT_SET ? null : jse.e;
			}
		}
		return e;
	}

	function wrap(e) {
		if (instanceOf(e, Q$Throwable)) {
			return e;
		}
		return e == null ? new JavaScriptException_0(null) : getCachableJavaScriptException(e);
	}

	function create_1(value_0) {
		var a0, a1, a2;
		a0 = value_0 & 4194303;
		a1 = value_0 >> 22 & 4194303;
		a2 = value_0 < 0 ? 1048575 : 0;
		return create0(a0, a1, a2);
	}

	function create_2(a) {
		return create0(a.l, a.m, a.h);
	}

	function create0(l_0, m_0, h_0) {
		return {
			l: l_0,
			m: m_0,
			h: h_0
		};
	}

	function divMod(a, b, computeRemainder) {
		var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;
		if (b.l == 0 && b.m == 0 && b.h == 0) {
			throw new ArithmeticException_0;
		}
		if (a.l == 0 && a.m == 0 && a.h == 0) {
			computeRemainder && (remainder = create0(0, 0, 0));
			return create0(0, 0, 0);
		}
		if (b.h == 524288 && b.m == 0 && b.l == 0) {
			return divModByMinValue(a, computeRemainder);
		}
		negative = false;
		if (b.h >> 19 != 0) {
			b = neg(b);
			negative = true;
		}
		bpower = powerOfTwo(b);
		aIsNegative = false;
		aIsMinValue = false;
		aIsCopy = false;
		if (a.h == 524288 && a.m == 0 && a.l == 0) {
			aIsMinValue = true;
			aIsNegative = true;
			if (bpower == -1) {
				a = create_2(($clinit_LongLib$Const(), MAX_VALUE));
				aIsCopy = true;
				negative = !negative;
			} else {
				c = shr(a, bpower);
				negative && negate(c);
				computeRemainder && (remainder = create0(0, 0, 0));
				return c;
			}
		} else if (a.h >> 19 != 0) {
			aIsNegative = true;
			a = neg(a);
			aIsCopy = true;
			negative = !negative;
		}
		if (bpower != -1) {
			return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);
		}
		if (!gte_0(a, b)) {
			computeRemainder && (aIsNegative ? (remainder = neg(a)) : (remainder = create0(a.l, a.m, a.h)));
			return create0(0, 0, 0);
		}
		return divModHelper(aIsCopy ? a : create0(a.l, a.m, a.h), b, negative, aIsNegative, aIsMinValue, computeRemainder);
	}

	function divModByMinValue(a, computeRemainder) {
		if (a.h == 524288 && a.m == 0 && a.l == 0) {
			computeRemainder && (remainder = create0(0, 0, 0));
			return create_2(($clinit_LongLib$Const(), ONE));
		}
		computeRemainder && (remainder = create0(a.l, a.m, a.h));
		return create0(0, 0, 0);
	}

	function divModByShift(a, bpower, negative, aIsNegative, computeRemainder) {
		var c;
		c = shr(a, bpower);
		negative && negate(c);
		if (computeRemainder) {
			a = maskRight(a, bpower);
			aIsNegative ? (remainder = neg(a)) : (remainder = create0(a.l, a.m, a.h));
		}
		return c;
	}

	function divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder) {
		var bshift, gte, quotient, shift_0, a1, a2, a0;
		shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);
		bshift = shl(b, shift_0);
		quotient = create0(0, 0, 0);
		while (shift_0 >= 0) {
			gte = trialSubtract(a, bshift);
			if (gte) {
				shift_0 < 22 ? (quotient.l |= 1 << shift_0, undefined) : shift_0 < 44 ? (quotient.m |= 1 << shift_0 - 22, undefined) : (quotient.h |= 1 << shift_0 - 44, undefined);
				if (a.l == 0 && a.m == 0 && a.h == 0) {
					break;
				}
			}
			a1 = bshift.m;
			a2 = bshift.h;
			a0 = bshift.l;
			setH(bshift, a2 >>> 1);
			bshift.m = a1 >>> 1 | (a2 & 1) << 21;
			bshift.l = a0 >>> 1 | (a1 & 1) << 21;
			--shift_0;
		}
		negative && negate(quotient);
		if (computeRemainder) {
			if (aIsNegative) {
				remainder = neg(a);
				aIsMinValue && (remainder = sub_0(remainder, ($clinit_LongLib$Const(), ONE)));
			} else {
				remainder = create0(a.l, a.m, a.h);
			}
		}
		return quotient;
	}

	function maskRight(a, bits) {
		var b0, b1, b2;
		if (bits <= 22) {
			b0 = a.l & (1 << bits) - 1;
			b1 = b2 = 0;
		} else if (bits <= 44) {
			b0 = a.l;
			b1 = a.m & (1 << bits - 22) - 1;
			b2 = 0;
		} else {
			b0 = a.l;
			b1 = a.m;
			b2 = a.h & (1 << bits - 44) - 1;
		}
		return create0(b0, b1, b2);
	}

	function negate(a) {
		var neg0, neg1, neg2;
		neg0 = ~a.l + 1 & 4194303;
		neg1 = ~a.m + (neg0 == 0 ? 1 : 0) & 4194303;
		neg2 = ~a.h + (neg0 == 0 && neg1 == 0 ? 1 : 0) & 1048575;
		setL(a, neg0);
		setM(a, neg1);
		setH(a, neg2);
	}

	function numberOfLeadingZeros(a) {
		var b1, b2;
		b2 = numberOfLeadingZeros_0(a.h);
		if (b2 == 32) {
			b1 = numberOfLeadingZeros_0(a.m);
			return b1 == 32 ? numberOfLeadingZeros_0(a.l) + 32 : b1 + 20 - 10;
		} else {
			return b2 - 12;
		}
	}

	function powerOfTwo(a) {
		var h_0, l_0, m_0;
		l_0 = a.l;
		if ((l_0 & l_0 - 1) != 0) {
			return -1;
		}
		m_0 = a.m;
		if ((m_0 & m_0 - 1) != 0) {
			return -1;
		}
		h_0 = a.h;
		if ((h_0 & h_0 - 1) != 0) {
			return -1;
		}
		if (h_0 == 0 && m_0 == 0 && l_0 == 0) {
			return -1;
		}
		if (h_0 == 0 && m_0 == 0 && l_0 != 0) {
			return numberOfTrailingZeros(l_0);
		}
		if (h_0 == 0 && m_0 != 0 && l_0 == 0) {
			return numberOfTrailingZeros(m_0) + 22;
		}
		if (h_0 != 0 && m_0 == 0 && l_0 == 0) {
			return numberOfTrailingZeros(h_0) + 44;
		}
		return -1;
	}

	function setH(a, x_0) {
		a.h = x_0;
	}

	function setL(a, x_0) {
		a.l = x_0;
	}

	function setM(a, x_0) {
		a.m = x_0;
	}

	function toDoubleHelper(a) {
		return a.l + a.m * 4194304 + a.h * 17592186044416;
	}

	function trialSubtract(a, b) {
		var sum0, sum1, sum2;
		sum2 = a.h - b.h;
		if (sum2 < 0) {
			return false;
		}
		sum0 = a.l - b.l;
		sum1 = a.m - b.m + (sum0 >> 22);
		sum2 += sum1 >> 22;
		if (sum2 < 0) {
			return false;
		}
		setL(a, sum0 & 4194303);
		setM(a, sum1 & 4194303);
		setH(a, sum2 & 1048575);
		return true;
	}

	var remainder;

	function add_0(a, b) {
		var sum0, sum1, sum2;
		sum0 = a.l + b.l;
		sum1 = a.m + b.m + (sum0 >> 22);
		sum2 = a.h + b.h + (sum1 >> 22);
		return {
			l: sum0 & 4194303,
			m: sum1 & 4194303,
			h: sum2 & 1048575
		};
	}

	function div(a, b) {
		return divMod(a, b, false);
	}

	function eq(a, b) {
		return a.l == b.l && a.m == b.m && a.h == b.h;
	}

	function fromDouble(value_0) {
		var a0, a1, a2, negative, result;
		if (isNaN(value_0)) {
			return $clinit_LongLib$Const(), ZERO;
		}
		if (value_0 < -9223372036854775808) {
			return $clinit_LongLib$Const(), MIN_VALUE_0;
		}
		if (value_0 >= 9223372036854775807) {
			return $clinit_LongLib$Const(), MAX_VALUE;
		}
		negative = false;
		if (value_0 < 0) {
			negative = true;
			value_0 = -value_0;
		}
		a2 = 0;
		if (value_0 >= 17592186044416) {
			a2 = round_int(value_0 / 17592186044416);
			value_0 -= a2 * 17592186044416;
		}
		a1 = 0;
		if (value_0 >= 4194304) {
			a1 = round_int(value_0 / 4194304);
			value_0 -= a1 * 4194304;
		}
		a0 = round_int(value_0);
		result = create0(a0, a1, a2);
		negative && negate(result);
		return result;
	}

	function fromInt(value_0) {
		var rebase, result;
		if (value_0 > -129 && value_0 < 128) {
			rebase = value_0 + 128;
			boxedValues == null && (boxedValues = initDim(_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, makeCastMap([Q$Serializable]), Q$LongLibBase$LongEmul, 256, 0));
			result = boxedValues[rebase];
			!result && (result = boxedValues[rebase] = create_1(value_0));
			return result;
		}
		return create_1(value_0);
	}

	function gt(a, b) {
		var signa, signb;
		signa = a.h >> 19;
		signb = b.h >> 19;
		return signa == 0 ? signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l > b.l : !(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l <= b.l);
	}

	function gte_0(a, b) {
		var signa, signb;
		signa = a.h >> 19;
		signb = b.h >> 19;
		return signa == 0 ? signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l >= b.l : !(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l < b.l);
	}

	function lt(a, b) {
		return !gte_0(a, b);
	}

	function mod(a, b) {
		divMod(a, b, true);
		return remainder;
	}

	function mul(a, b) {
		var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;
		a0 = a.l & 8191;
		a1 = a.l >> 13 | (a.m & 15) << 9;
		a2 = a.m >> 4 & 8191;
		a3 = a.m >> 17 | (a.h & 255) << 5;
		a4 = (a.h & 1048320) >> 8;
		b0 = b.l & 8191;
		b1 = b.l >> 13 | (b.m & 15) << 9;
		b2 = b.m >> 4 & 8191;
		b3 = b.m >> 17 | (b.h & 255) << 5;
		b4 = (b.h & 1048320) >> 8;
		p0 = a0 * b0;
		p1 = a1 * b0;
		p2 = a2 * b0;
		p3 = a3 * b0;
		p4 = a4 * b0;
		if (b1 != 0) {
			p1 += a0 * b1;
			p2 += a1 * b1;
			p3 += a2 * b1;
			p4 += a3 * b1;
		}
		if (b2 != 0) {
			p2 += a0 * b2;
			p3 += a1 * b2;
			p4 += a2 * b2;
		}
		if (b3 != 0) {
			p3 += a0 * b3;
			p4 += a1 * b3;
		}
		b4 != 0 && (p4 += a0 * b4);
		c00 = p0 & 4194303;
		c01 = (p1 & 511) << 13;
		c0 = c00 + c01;
		c10 = p0 >> 22;
		c11 = p1 >> 9;
		c12 = (p2 & 262143) << 4;
		c13 = (p3 & 31) << 17;
		c1 = c10 + c11 + c12 + c13;
		c22 = p2 >> 18;
		c23 = p3 >> 5;
		c24 = (p4 & 4095) << 8;
		c2 = c22 + c23 + c24;
		c1 += c0 >> 22;
		c0 &= 4194303;
		c2 += c1 >> 22;
		c1 &= 4194303;
		c2 &= 1048575;
		return create0(c0, c1, c2);
	}

	function neg(a) {
		var neg0, neg1, neg2;
		neg0 = ~a.l + 1 & 4194303;
		neg1 = ~a.m + (neg0 == 0 ? 1 : 0) & 4194303;
		neg2 = ~a.h + (neg0 == 0 && neg1 == 0 ? 1 : 0) & 1048575;
		return create0(neg0, neg1, neg2);
	}

	function neq(a, b) {
		return a.l != b.l || a.m != b.m || a.h != b.h;
	}

	function shl(a, n) {
		var res0, res1, res2;
		n &= 63;
		if (n < 22) {
			res0 = a.l << n;
			res1 = a.m << n | a.l >> 22 - n;
			res2 = a.h << n | a.m >> 22 - n;
		} else if (n < 44) {
			res0 = 0;
			res1 = a.l << n - 22;
			res2 = a.m << n - 22 | a.l >> 44 - n;
		} else {
			res0 = 0;
			res1 = 0;
			res2 = a.l << n - 44;
		}
		return {
			l: res0 & 4194303,
			m: res1 & 4194303,
			h: res2 & 1048575
		};
	}

	function shr(a, n) {
		var a2, negative, res0, res1, res2;
		n &= 63;
		a2 = a.h;
		negative = (a2 & 524288) != 0;
		negative && (a2 |= -1048576);
		if (n < 22) {
			res2 = a2 >> n;
			res1 = a.m >> n | a2 << 22 - n;
			res0 = a.l >> n | a.m << 22 - n;
		} else if (n < 44) {
			res2 = negative ? 1048575 : 0;
			res1 = a2 >> n - 22;
			res0 = a.m >> n - 22 | a2 << 44 - n;
		} else {
			res2 = negative ? 1048575 : 0;
			res1 = negative ? 4194303 : 0;
			res0 = a2 >> n - 44;
		}
		return {
			l: res0 & 4194303,
			m: res1 & 4194303,
			h: res2 & 1048575
		};
	}

	function shru(a, n) {
		var a2, res0, res1, res2;
		n &= 63;
		a2 = a.h & 1048575;
		if (n < 22) {
			res2 = a2 >>> n;
			res1 = a.m >> n | a2 << 22 - n;
			res0 = a.l >> n | a.m << 22 - n;
		} else if (n < 44) {
			res2 = 0;
			res1 = a2 >>> n - 22;
			res0 = a.m >> n - 22 | a.h << 44 - n;
		} else {
			res2 = 0;
			res1 = 0;
			res0 = a2 >>> n - 44;
		}
		return {
			l: res0 & 4194303,
			m: res1 & 4194303,
			h: res2 & 1048575
		};
	}

	function sub_0(a, b) {
		var sum0, sum1, sum2;
		sum0 = a.l - b.l;
		sum1 = a.m - b.m + (sum0 >> 22);
		sum2 = a.h - b.h + (sum1 >> 22);
		return {
			l: sum0 & 4194303,
			m: sum1 & 4194303,
			h: sum2 & 1048575
		};
	}

	function toDouble(a) {
		if (eq(a, ($clinit_LongLib$Const(), MIN_VALUE_0))) {
			return -9223372036854775808;
		}
		if (!gte_0(a, ZERO)) {
			return -toDoubleHelper(neg(a));
		}
		return a.l + a.m * 4194304 + a.h * 17592186044416;
	}

	function toInt(a) {
		return a.l | a.m << 22;
	}

	function toString_183(a) {
		var digits, rem, res, tenPowerLong, zeroesNeeded;
		if (a.l == 0 && a.m == 0 && a.h == 0) {
			return '0';
		}
		if (a.h == 524288 && a.m == 0 && a.l == 0) {
			return '-9223372036854775808';
		}
		if (a.h >> 19 != 0) {
			return '-' + toString_183(neg(a));
		}
		rem = a;
		res = '';
		while (!(rem.l == 0 && rem.m == 0 && rem.h == 0)) {
			tenPowerLong = fromInt(1000000000);
			rem = divMod(rem, tenPowerLong, true);
			digits = '' + toInt(remainder);
			if (!(rem.l == 0 && rem.m == 0 && rem.h == 0)) {
				zeroesNeeded = 9 - digits.length;
				for (; zeroesNeeded > 0; zeroesNeeded--) {
					digits = '0' + digits;
				}
			}
			res = digits + res;
		}
		return res;
	}

	function xor(a, b) {
		return {
			l: a.l ^ b.l,
			m: a.m ^ b.m,
			h: a.h ^ b.h
		};
	}

	var boxedValues;

	function $clinit_LongLib$Const() {
		$clinit_LongLib$Const = nullMethod;
		MAX_VALUE = create0(4194303, 4194303, 524287);
		MIN_VALUE_0 = create0(0, 0, 524288);
		ONE = fromInt(1);
		fromInt(2);
		ZERO = fromInt(0);
	}

	var MAX_VALUE, MIN_VALUE_0, ONE, ZERO;

	function isStatsAvailable() {
		return !!$stats;
	}

	function onModuleStart(mainClassName) {
		return $stats({
			moduleName: $moduleName,
			sessionId: $sessionId,
			subSystem: 'startup',
			evtGroup: 'moduleStartup',
			millis: (new Date).getTime(),
			type: 'onModuleLoadStart',
			className: mainClassName
		});
	}

	function $onModuleLoad_0() {
		var allowedModes, currentMode, i_0;
		currentMode = $doc.compatMode;
		allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['CSS1Compat']);
		for (i_0 = 0; i_0 < allowedModes.length; i_0++) {
			if ($equals_151(allowedModes[i_0], currentMode)) {
				return;
			}
		}
		allowedModes.length == 1 && $equals_151('CSS1Compat', allowedModes[0]) && $equals_151('BackCompat', currentMode) ? "GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\"document.compatMode\" value=\"" + currentMode + '"/&gt;' : "Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' " + currentMode + "').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.";
	}

	function alert_0(msg) {
		$wnd.alert(msg);
	}

	function $getRuntimeValue() {
		var ua = navigator.userAgent.toLowerCase();
		var makeVersion = function(result) {
				return parseInt(result[1]) * 1000 + parseInt(result[2]);
			};
		if (function() {
			return ua.indexOf('webkit') != -1;
		}()) return 'safari';
		if (function() {
			return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;
		}()) return 'ie10';
		if (function() {
			return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;
		}()) return 'ie9';
		if (function() {
			return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;
		}()) return 'ie8';
		if (function() {
			return ua.indexOf('gecko') != -1;
		}()) return 'gecko1_8';
		return 'unknown';
	}

	function ArithmeticException_0() {
		RuntimeException_1.call(this, 'divide by zero');
	}

	defineSeed(738, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArithmeticException_0);

	function ArrayStoreException_0(message) {
		RuntimeException_1.call(this, message);
	}

	defineSeed(739, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArrayStoreException_0);

	function $clinit_Boolean() {
		$clinit_Boolean = nullMethod;
		FALSE = new Boolean_1(false);
		TRUE = new Boolean_1(true);
	}

	function Boolean_1(value_0) {
		this.value_0 = value_0;
	}

	function compare_9(x_0, y_0) {
		return x_0 == y_0 ? 0 : x_0 ? 1 : -1;
	}

	defineSeed(740, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);
	_.compareTo$ = function compareTo_4(b) {
		return compare_9(this.value_0, b.value_0);
	};
	_.equals$ = function equals_193(o) {
		return instanceOf(o, Q$Boolean) && o.value_0 == this.value_0;
	};
	_.hashCode$ = function hashCode_2() {
		return this.value_0 ? 1231 : 1237;
	};
	_.toString$ = function toString_184() {
		return this.value_0 ? 'true' : 'false';
	};
	_.value_0 = false;
	var FALSE, TRUE;

	function __parseAndValidateInt(s) {
		var i_0, isTooLow, length_0, startIndex, toReturn;
		if (s == null) {
			throw new NumberFormatException_1('null');
		}
		length_0 = s.length;
		startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43) ? 1 : 0;
		for (i_0 = startIndex; i_0 < length_0; i_0++) {
			if (digit_0(s.charCodeAt(i_0)) == -1) {
				throw new NumberFormatException_1('For input string: "' + s + '"');
			}
		}
		toReturn = parseInt(s, 10);
		isTooLow = toReturn < -2147483648;
		if (isNaN(toReturn)) {
			throw new NumberFormatException_1('For input string: "' + s + '"');
		} else if (isTooLow || toReturn > 2147483647) {
			throw new NumberFormatException_1('For input string: "' + s + '"');
		}
		return toReturn;
	}

	function __parseAndValidateLong(s) {
		var c, firstTime, head, i_0, length_0, maxDigits, minValue, negative, orig, radixPower, toReturn;
		if (s == null) {
			throw new NumberFormatException_1('null');
		}
		orig = s;
		length_0 = s.length;
		negative = false;
		if (length_0 > 0) {
			c = s.charCodeAt(0);
			if (c == 45 || c == 43) {
				s = $substring(s, 1);
				--length_0;
				negative = c == 45;
			}
		}
		if (length_0 == 0) {
			throw new NumberFormatException_1('For input string: "' + orig + '"');
		}
		while (s.length > 0 && s.charCodeAt(0) == 48) {
			s = $substring(s, 1);
			--length_0;
		}
		if (length_0 > ($clinit_Number$__ParseLong(), maxLengthForRadix)[10]) {
			throw new NumberFormatException_1('For input string: "' + orig + '"');
		}
		for (i_0 = 0; i_0 < length_0; i_0++) {
			c = s.charCodeAt(i_0);
			if (c >= 48 && c < 58) {
				continue;
			}
			if (c >= 97 && c < 97) {
				continue;
			}
			if (c >= 65 && c < 65) {
				continue;
			}
			throw new NumberFormatException_1('For input string: "' + orig + '"');
		}
		toReturn = P0_longLit;
		maxDigits = maxDigitsForRadix[10];
		radixPower = fromInt(maxDigitsRadixPower[10]);
		minValue = neg(maxValueForRadix[10]);
		firstTime = true;
		head = length_0 % maxDigits;
		if (head > 0) {
			toReturn = fromInt(-__parseInt($substring_0(s, 0, head), 10));
			s = $substring(s, head);
			length_0 -= head;
			firstTime = false;
		}
		while (length_0 >= maxDigits) {
			head = __parseInt($substring_0(s, 0, maxDigits), 10);
			s = $substring(s, maxDigits);
			length_0 -= maxDigits;
			if (firstTime) {
				firstTime = false;
			} else {
				if (lt(toReturn, minValue)) {
					throw new NumberFormatException_1(s);
				}
				toReturn = mul(toReturn, radixPower);
			}
			toReturn = sub_0(toReturn, fromInt(head));
		}
		if (gt(toReturn, P0_longLit)) {
			throw new NumberFormatException_1('For input string: "' + orig + '"');
		}
		if (!negative) {
			toReturn = neg(toReturn);
			if (lt(toReturn, P0_longLit)) {
				throw new NumberFormatException_1('For input string: "' + orig + '"');
			}
		}
		return toReturn;
	}

	function __parseInt(s, radix) {
		return parseInt(s, radix);
	}

	defineSeed(742, 1, makeCastMap([Q$Serializable, Q$Number]));

	function Byte_0(value_0) {
		this.value_0 = value_0;
	}

	function valueOf(b) {
		var rebase, result;
		rebase = b + 128;
		result = ($clinit_Byte$BoxedValues(), boxedValues_0)[rebase];
		!result && (result = boxedValues_0[rebase] = new Byte_0(b));
		return result;
	}

	defineSeed(741, 742, makeCastMap([Q$Serializable, Q$Byte, Q$Comparable, Q$Number]), Byte_0);
	_.compareTo$ = function compareTo_5(b) {
		return this.value_0 - b.value_0;
	};
	_.equals$ = function equals_194(o) {
		return instanceOf(o, Q$Byte) && o.value_0 == this.value_0;
	};
	_.hashCode$ = function hashCode_3() {
		return this.value_0;
	};
	_.toString$ = function toString_185() {
		return '' + this.value_0;
	};
	_.value_0 = 0;

	function $clinit_Byte$BoxedValues() {
		$clinit_Byte$BoxedValues = nullMethod;
		boxedValues_0 = initDim(_3Ljava_lang_Byte_2_classLit, makeCastMap([Q$Serializable]), Q$Byte, 256, 0);
	}

	var boxedValues_0;

	function codePointAt(cs, index_0, limit) {
		var hiSurrogate, loSurrogate;
		hiSurrogate = $charAt(cs, index_0++);
		if (hiSurrogate >= 55296 && hiSurrogate <= 56319 && index_0 < limit && isLowSurrogate(loSurrogate = cs.charCodeAt(index_0))) {
			return 65536 + ((hiSurrogate & 1023) << 10) + (loSurrogate & 1023);
		}
		return hiSurrogate;
	}

	function digit_0(c) {
		if (c >= 48 && c < 58) {
			return c - 48;
		}
		if (c >= 97 && c < 97) {
			return c - 97 + 10;
		}
		if (c >= 65 && c < 65) {
			return c - 65 + 10;
		}
		return -1;
	}

	function isLowSurrogate(ch_0) {
		return ch_0 >= 56320 && ch_0 <= 57343;
	}

	function toChars(codePoint, dst, dstIndex) {
		if (codePoint < 0 || codePoint > 1114111) {
			throw new IllegalArgumentException_0;
		}
		if (codePoint >= 65536) {
			dst[dstIndex++] = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;
			dst[dstIndex] = 56320 + (codePoint - 65536 & 1023) & 65535;
			return 2;
		} else {
			dst[dstIndex] = codePoint & 65535;
			return 1;
		}
	}

	function Class_0() {}

	function asString(number) {
		return typeof number == 'number' ? 'S' + (number < 0 ? -number : number) : number;
	}

	function createForArray(seedId, componentType) {
		var clazz;
		clazz = new Class_0;
		clazz.typeName = 'Class$' + (isInstantiableOrPrimitive(seedId != 0 ? -seedId : 0) ? asString(seedId != 0 ? -seedId : 0) : '' + getHashCode(clazz));
		isInstantiable(seedId != 0 ? -seedId : 0) && setClassLiteral(seedId != 0 ? -seedId : 0, clazz);
		clazz.modifiers = 4;
		clazz.componentType = componentType;
		return clazz;
	}

	function createForClass(seedId) {
		var clazz;
		clazz = new Class_0;
		clazz.typeName = 'Class$' + (isInstantiableOrPrimitive(seedId) ? asString(seedId) : '' + getHashCode(clazz));
		isInstantiable(seedId) && setClassLiteral(seedId, clazz);
		return clazz;
	}

	function createForEnum(seedId, enumConstantsFunc) {
		var clazz;
		clazz = new Class_0;
		clazz.typeName = 'Class$' + (isInstantiableOrPrimitive(seedId) ? asString(seedId) : '' + getHashCode(clazz));
		isInstantiable(seedId) && setClassLiteral(seedId, clazz);
		clazz.modifiers = enumConstantsFunc ? 8 : 0;
		return clazz;
	}

	function createForInterface() {
		var clazz;
		clazz = new Class_0;
		clazz.typeName = 'Class$' + (isInstantiableOrPrimitive(0) ? asString(0) : '' + getHashCode(clazz));
		isInstantiable(0) && setClassLiteral(0, clazz);
		clazz.modifiers = 2;
		return clazz;
	}

	function createForPrimitive(seedId) {
		var clazz;
		clazz = new Class_0;
		clazz.typeName = 'Class$' + (isInstantiableOrPrimitive(seedId) ? asString(seedId) : '' + getHashCode(clazz));
		isInstantiable(seedId) && setClassLiteral(seedId, clazz);
		clazz.modifiers = 1;
		return clazz;
	}

	function getSeedFunction(clazz) {
		var func = seedTable[clazz.seedId];
		clazz = null;
		return func;
	}

	function isInstantiable(seedId) {
		return typeof seedId == 'number' && seedId > 0;
	}

	function isInstantiableOrPrimitive(seedId) {
		return seedId != null && seedId != 0;
	}

	function setClassLiteral(seedId, clazz) {
		var proto;
		clazz.seedId = seedId;
		if (seedId == 2) {
			proto = String.prototype;
		} else {
			if (seedId > 0) {
				var seed = getSeedFunction(clazz);
				if (seed) {
					proto = seed.prototype;
				} else {
					seed = seedTable[seedId] = function() {};
					seed.___clazz$ = clazz;
					return;
				}
			} else {
				return;
			}
		}
		proto.___clazz$ = clazz;
	}

	defineSeed(745, 1, {}, Class_0);
	_.toString$ = function toString_186() {
		return ((this.modifiers & 2) != 0 ? 'interface ' : (this.modifiers & 1) != 0 ? '' : 'class ') + this.typeName;
	};
	_.modifiers = 0;
	_.seedId = 0;

	function Double_0(value_0) {
		this.value_0 = value_0;
	}

	function compare_10(x_0, y_0) {
		if (x_0 < y_0) {
			return -1;
		}
		if (x_0 > y_0) {
			return 1;
		}
		if (x_0 == y_0) {
			return 0;
		}
		return isNaN(x_0) ? isNaN(y_0) ? 0 : 1 : -1;
	}

	defineSeed(746, 742, makeCastMap([Q$Serializable, Q$Comparable, Q$Double, Q$Number]), Double_0);
	_.compareTo$ = function compareTo_6(b) {
		return compare_10(this.value_0, b.value_0);
	};
	_.equals$ = function equals_195(o) {
		return instanceOf(o, Q$Double) && o.value_0 == this.value_0;
	};
	_.hashCode$ = function hashCode_4() {
		return round_int(this.value_0);
	};
	_.toString$ = function toString_187() {
		return '' + this.value_0;
	};
	_.value_0 = 0;
	defineSeed(747, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));
	_.compareTo$ = function compareTo_7(other) {
		return this.ordinal - other.ordinal;
	};
	_.equals$ = function equals_196(other) {
		return this === other;
	};
	_.hashCode$ = function hashCode_5() {
		return getHashCode(this);
	};
	_.toString$ = function toString_188() {
		return this.name_0;
	};
	_.ordinal = 0;

	function IllegalArgumentException_0() {
		RuntimeException_0.call(this);
	}

	function IllegalArgumentException_1(message) {
		RuntimeException_1.call(this, message);
	}

	defineSeed(748, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IllegalArgumentException_0, IllegalArgumentException_1);

	function IndexOutOfBoundsException_0() {
		RuntimeException_0.call(this);
	}

	function IndexOutOfBoundsException_1(message) {
		RuntimeException_1.call(this, message);
	}

	defineSeed(749, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);

	function Integer_0(value_0) {
		this.value_0 = value_0;
	}

	function compare_11(x_0, y_0) {
		return x_0 < y_0 ? -1 : x_0 > y_0 ? 1 : 0;
	}

	function numberOfLeadingZeros_0(i_0) {
		var m_0, n, y_0;
		if (i_0 < 0) {
			return 0;
		} else if (i_0 == 0) {
			return 32;
		} else {
			y_0 = -(i_0 >> 16);
			m_0 = y_0 >> 16 & 16;
			n = 16 - m_0;
			i_0 = i_0 >> m_0;
			y_0 = i_0 - 256;
			m_0 = y_0 >> 16 & 8;
			n += m_0;
			i_0 <<= m_0;
			y_0 = i_0 - 4096;
			m_0 = y_0 >> 16 & 4;
			n += m_0;
			i_0 <<= m_0;
			y_0 = i_0 - 16384;
			m_0 = y_0 >> 16 & 2;
			n += m_0;
			i_0 <<= m_0;
			y_0 = i_0 >> 14;
			m_0 = y_0 & ~ (y_0 >> 1);
			return n + 2 - m_0;
		}
	}

	function numberOfTrailingZeros(i_0) {
		var r, rtn;
		if (i_0 == 0) {
			return 32;
		} else {
			rtn = 0;
			for (r = 1;
			(r & i_0) == 0; r <<= 1) {
				++rtn;
			}
			return rtn;
		}
	}

	function toPowerOfTwoString(value_0) {
		var buf, digits, pos;
		buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);
		digits = ($clinit_Number$__Digits(), digits_2);
		pos = 7;
		if (value_0 >= 0) {
			while (value_0 > 15) {
				buf[pos--] = digits[value_0 & 15];
				value_0 >>= 4;
			}
		} else {
			while (pos > 0) {
				buf[pos--] = digits[value_0 & 15];
				value_0 >>= 4;
			}
		}
		buf[pos] = digits[value_0 & 15];
		return __valueOf(buf, pos, 8);
	}

	function valueOf_0(i_0) {
		var rebase, result;
		if (i_0 > -129 && i_0 < 128) {
			rebase = i_0 + 128;
			result = ($clinit_Integer$BoxedValues(), boxedValues_1)[rebase];
			!result && (result = boxedValues_1[rebase] = new Integer_0(i_0));
			return result;
		}
		return new Integer_0(i_0);
	}

	defineSeed(750, 742, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);
	_.compareTo$ = function compareTo_8(b) {
		return compare_11(this.value_0, b.value_0);
	};
	_.equals$ = function equals_197(o) {
		return instanceOf(o, Q$Integer) && o.value_0 == this.value_0;
	};
	_.hashCode$ = function hashCode_6() {
		return this.value_0;
	};
	_.toString$ = function toString_189() {
		return '' + this.value_0;
	};
	_.value_0 = 0;

	function $clinit_Integer$BoxedValues() {
		$clinit_Integer$BoxedValues = nullMethod;
		boxedValues_1 = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable]), Q$Integer, 256, 0);
	}

	var boxedValues_1;

	function Long_0(value_0) {
		this.value_0 = value_0;
	}

	function compare_12(x_0, y_0) {
		return lt(x_0, y_0) ? -1 : gt(x_0, y_0) ? 1 : 0;
	}

	function signum(i_0) {
		return eq(i_0, P0_longLit) ? 0 : lt(i_0, P0_longLit) ? -1 : 1;
	}

	function valueOf_1(i_0) {
		var rebase, result;
		if (gt(i_0, N81_longLit) && lt(i_0, P80_longLit)) {
			rebase = toInt(i_0) + 128;
			result = ($clinit_Long$BoxedValues(), boxedValues_2)[rebase];
			!result && (result = boxedValues_2[rebase] = new Long_0(i_0));
			return result;
		}
		return new Long_0(i_0);
	}

	defineSeed(752, 742, makeCastMap([Q$Serializable, Q$Comparable, Q$Long, Q$Number]), Long_0);
	_.compareTo$ = function compareTo_9(b) {
		return compare_12(this.value_0, b.value_0);
	};
	_.equals$ = function equals_198(o) {
		return instanceOf(o, Q$Long) && eq(o.value_0, this.value_0);
	};
	_.hashCode$ = function hashCode_7() {
		return toInt(this.value_0);
	};
	_.toString$ = function toString_190() {
		return '' + toString_183(this.value_0);
	};
	_.value_0 = P0_longLit;

	function $clinit_Long$BoxedValues() {
		$clinit_Long$BoxedValues = nullMethod;
		boxedValues_2 = initDim(_3Ljava_lang_Long_2_classLit, makeCastMap([Q$Serializable]), Q$Long, 256, 0);
	}

	var boxedValues_2;

	function ceil_0(x_0) {
		return Math.ceil(x_0);
	}

	function pow_0(x_0, exp_0) {
		return Math.pow(x_0, exp_0);
	}

	function NullPointerException_0() {
		RuntimeException_0.call(this);
	}

	defineSeed(755, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), NullPointerException_0);

	function $clinit_Number$__Digits() {
		$clinit_Number$__Digits = nullMethod;
		digits_2 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);
	}

	var digits_2;

	function $clinit_Number$__ParseLong() {
		$clinit_Number$__ParseLong = nullMethod;
		var i_0;
		maxDigitsForRadix = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, 30, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);
		maxDigitsRadixPower = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, 37, 1);
		maxLengthForRadix = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, 63, 40, 32, 28, 25, 23, 21, 20, 19, 19, 18, 18, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13]);
		maxValueForRadix = initDim(_3J_classLit, makeCastMap([Q$Serializable]), -1, 37, 3);
		for (i_0 = 2; i_0 <= 36; i_0++) {
			maxDigitsRadixPower[i_0] = round_int(pow_0(i_0, maxDigitsForRadix[i_0]));
			maxValueForRadix[i_0] = div(P7fffffffffffffff_longLit, fromInt(maxDigitsRadixPower[i_0]));
		}
	}

	var maxDigitsForRadix, maxDigitsRadixPower, maxLengthForRadix, maxValueForRadix;

	function NumberFormatException_0() {
		IllegalArgumentException_0.call(this);
	}

	function NumberFormatException_1(message) {
		IllegalArgumentException_1.call(this, message);
	}

	defineSeed(758, 748, makeCastMap([Q$Serializable, Q$Exception, Q$NumberFormatException, Q$Throwable]), NumberFormatException_0, NumberFormatException_1);

	function StackTraceElement_0(methodName) {
		this.className = 'Unknown';
		this.methodName = methodName;
		this.lineNumber = -1;
	}

	defineSeed(759, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);
	_.toString$ = function toString_191() {
		return this.className + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0 ? ':' + this.lineNumber : '') + ')';
	};
	_.lineNumber = 0;

	function $charAt(this$static, index_0) {
		return this$static.charCodeAt(index_0);
	}

	function $equals_151(this$static, other) {
		if (!instanceOf(other, Q$String)) {
			return false;
		}
		return String(this$static) == other;
	}

	function $equalsIgnoreCase(this$static, other) {
		if (other == null) return false;
		return this$static == other || this$static.toLowerCase() == other.toLowerCase();
	}

	function $indexOf(this$static, str) {
		return this$static.indexOf(str);
	}

	function $split(this$static, regex, maxMatch) {
		var compiled = new RegExp(regex, 'g');
		var out = [];
		var count = 0;
		var trail = this$static;
		var lastTrail = null;
		while (true) {
			var matchObj = compiled.exec(trail);
			if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {
				out[count] = trail;
				break;
			} else {
				out[count] = trail.substring(0, matchObj.index);
				trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);
				compiled.lastIndex = 0;
				if (lastTrail == trail) {
					out[count] = trail.substring(0, 1);
					trail = trail.substring(1);
				}
				lastTrail = trail;
				count++;
			}
		}
		if (maxMatch == 0 && this$static.length > 0) {
			var lastNonEmpty = out.length;
			while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {
				--lastNonEmpty;
			}
			lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);
		}
		var jr = __createArray(out.length);
		for (var i_0 = 0; i_0 < out.length; ++i_0) {
			jr[i_0] = out[i_0];
		}
		return jr;
	}

	function $substring(this$static, beginIndex) {
		return this$static.substr(beginIndex, this$static.length - beginIndex);
	}

	function $substring_0(this$static, beginIndex, endIndex) {
		return this$static.substr(beginIndex, endIndex - beginIndex);
	}

	function $trim(this$static) {
		if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {
			return this$static;
		}
		var r1 = this$static.replace(/^(\s*)/, '');
		var r2 = r1.replace(/\s*$/, '');
		return r2;
	}

	function _String(bytes) {
		return utf8ToString(bytes, 0, bytes.length);
	}

	function __createArray(numElements) {
		return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, numElements, 0);
	}

	function __valueOf(x_0, start_0, end) {
		x_0 = x_0.slice(start_0, end);
		return String.fromCharCode.apply(null, x_0);
	}

	function compareTo_11(thisStr, otherStr) {
		thisStr = String(thisStr);
		if (thisStr == otherStr) {
			return 0;
		}
		return thisStr < otherStr ? -1 : 1;
	}

	function encodeUtf8(bytes, ofs, codePoint) {
		if (codePoint < 128) {
			bytes[ofs] = narrow_byte(codePoint & 127);
			return 1;
		} else if (codePoint < 2048) {
			bytes[ofs++] = narrow_byte(codePoint >> 6 & 31 | 192);
			bytes[ofs] = narrow_byte(codePoint & 63 | 128);
			return 2;
		} else if (codePoint < 65536) {
			bytes[ofs++] = narrow_byte(codePoint >> 12 & 15 | 224);
			bytes[ofs++] = narrow_byte(codePoint >> 6 & 63 | 128);
			bytes[ofs] = narrow_byte(codePoint & 63 | 128);
			return 3;
		} else if (codePoint < 2097152) {
			bytes[ofs++] = narrow_byte(codePoint >> 18 & 7 | 240);
			bytes[ofs++] = narrow_byte(codePoint >> 12 & 63 | 128);
			bytes[ofs++] = narrow_byte(codePoint >> 6 & 63 | 128);
			bytes[ofs] = narrow_byte(codePoint & 63 | 128);
			return 4;
		} else if (codePoint < 67108864) {
			bytes[ofs++] = narrow_byte(codePoint >> 24 & 3 | 248);
			bytes[ofs++] = narrow_byte(codePoint >> 18 & 63 | 128);
			bytes[ofs++] = narrow_byte(codePoint >> 12 & 63 | 128);
			bytes[ofs++] = narrow_byte(codePoint >> 6 & 63 | 128);
			bytes[ofs] = narrow_byte(codePoint & 63 | 128);
			return 5;
		}
		throw new IllegalArgumentException_1('Character out of range: ' + codePoint);
	}

	function fromCharCode(ch_0) {
		return String.fromCharCode(ch_0);
	}

	function fromCodePoint(codePoint) {
		var hiSurrogate, loSurrogate;
		if (codePoint >= 65536) {
			hiSurrogate = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;
			loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;
			return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);
		} else {
			return String.fromCharCode(codePoint & 65535);
		}
	}

	function getBytesLatin1(str) {
		var bytes, i_0, n;
		n = str.length;
		bytes = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, n, 1);
		for (i_0 = 0; i_0 < n; ++i_0) {
			bytes[i_0] = narrow_byte(str.charCodeAt(i_0) & 255);
		}
		return bytes;
	}

	function getBytesUtf8(str) {
		var byteCount, bytes, ch_0, i_0, i0, n, out;
		n = str.length;
		byteCount = 0;
		for (i0 = 0; i0 < n;) {
			ch_0 = codePointAt(str, i0, str.length);
			i0 += ch_0 >= 65536 ? 2 : 1;
			ch_0 < 128 ? ++byteCount : ch_0 < 2048 ? (byteCount += 2) : ch_0 < 65536 ? (byteCount += 3) : ch_0 < 2097152 ? (byteCount += 4) : ch_0 < 67108864 && (byteCount += 5);
		}
		bytes = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, byteCount, 1);
		out = 0;
		for (i_0 = 0; i_0 < n;) {
			ch_0 = codePointAt(str, i_0, str.length);
			i_0 += ch_0 >= 65536 ? 2 : 1;
			out += encodeUtf8(bytes, out, ch_0);
		}
		return bytes;
	}

	function utf8ToString(bytes, ofs, len) {
		var b, ch_0, charCount, chars, count, i_0, i0, outIdx;
		charCount = 0;
		for (i0 = 0; i0 < len;) {
			++charCount;
			ch_0 = bytes[ofs + i0];
			if ((ch_0 & 192) == 128) {
				throw new IllegalArgumentException_1('Invalid UTF8 sequence');
			} else if ((ch_0 & 128) == 0) {
				++i0;
			} else if ((ch_0 & 224) == 192) {
				i0 += 2;
			} else if ((ch_0 & 240) == 224) {
				i0 += 3;
			} else if ((ch_0 & 248) == 240) {
				i0 += 4;
			} else {
				throw new IllegalArgumentException_1('Invalid UTF8 sequence');
			}
			if (i0 > len) {
				throw new IndexOutOfBoundsException_1('Invalid UTF8 sequence');
			}
		}
		chars = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, charCount, 1);
		outIdx = 0;
		count = 0;
		for (i_0 = 0; i_0 < len;) {
			ch_0 = bytes[ofs + i_0++];
			if ((ch_0 & 128) == 0) {
				count = 1;
				ch_0 &= 127;
			} else if ((ch_0 & 224) == 192) {
				count = 2;
				ch_0 &= 31;
			} else if ((ch_0 & 240) == 224) {
				count = 3;
				ch_0 &= 15;
			} else if ((ch_0 & 248) == 240) {
				count = 4;
				ch_0 &= 7;
			} else if ((ch_0 & 252) == 248) {
				count = 5;
				ch_0 &= 3;
			}
			while (--count > 0) {
				b = bytes[ofs + i_0++];
				if ((b & 192) != 128) {
					throw new IllegalArgumentException_1('Invalid UTF8 sequence at ' + (ofs + i_0 - 1) + ', byte=' + toPowerOfTwoString(b));
				}
				ch_0 = ch_0 << 6 | b & 63;
			}
			outIdx += toChars(ch_0, chars, outIdx);
		}
		return valueOf_3(chars);
	}

	function valueOf_2(x_0) {
		return String.fromCharCode(x_0);
	}

	function valueOf_3(x_0) {
		return String.fromCharCode.apply(null, x_0);
	}

	_ = String.prototype;
	_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);
	_.compareTo$ = function compareTo_10(other) {
		return compareTo_11(this, other);
	};
	_.equals$ = function equals_199(other) {
		return $equals_151(this, other);
	};
	_.hashCode$ = function hashCode_8() {
		return getHashCode_0(this);
	};
	_.toString$ = _.toString;

	function $clinit_String$HashCache() {
		$clinit_String$HashCache = nullMethod;
		back_0 = {};
		front = {};
	}

	function compute(str) {
		var hashCode, i_0, n, nBatch;
		hashCode = 0;
		n = str.length;
		nBatch = n - 4;
		i_0 = 0;
		while (i_0 < nBatch) {
			hashCode = str.charCodeAt(i_0 + 3) + 31 * (str.charCodeAt(i_0 + 2) + 31 * (str.charCodeAt(i_0 + 1) + 31 * (str.charCodeAt(i_0) + 31 * hashCode))) | 0;
			i_0 += 4;
		}
		while (i_0 < n) {
			hashCode = hashCode * 31 + $charAt(str, i_0++);
		}
		return hashCode | 0;
	}

	function getHashCode_0(str) {
		$clinit_String$HashCache();
		var key = ':' + str;
		var result = front[key];
		if (result != null) {
			return result;
		}
		result = back_0[key];
		result == null && (result = compute(str));
		increment();
		return front[key] = result;
	}

	function increment() {
		if (count_0 == 256) {
			back_0 = front;
			front = {};
			count_0 = 0;
		}++count_0;
	}

	var back_0, count_0 = 0,
		front;

	function $$init_8(this$static) {
		this$static.impl = new StringBufferImplAppend_0;
	}

	function $append_1(this$static, x_0) {
		$append(this$static.impl, x_0);
		return this$static;
	}

	function $append_2(this$static, x_0) {
		$append_0(this$static.impl, x_0);
		return this$static;
	}

	function $append_3(this$static, x_0) {
		$appendNonNull(this$static.impl, valueOf_3(x_0));
		return this$static;
	}

	function StringBuffer_0() {
		$$init_8(this);
	}

	function StringBuffer_1() {
		$$init_8(this);
	}

	defineSeed(761, 1, makeCastMap([Q$CharSequence]), StringBuffer_0, StringBuffer_1);
	_.toString$ = function toString_192() {
		return this.impl.string;
	};

	function arraycopy(src_0, srcOfs, dest, destOfs, len) {
		var destArray, destComp, destEnd, destType, destlen, srcArray, srcComp, srcType, srclen;
		if (src_0 == null || dest == null) {
			throw new NullPointerException_0;
		}
		srcType = src_0.___clazz$;
		destType = dest.___clazz$;
		if ((srcType.modifiers & 4) == 0 || (destType.modifiers & 4) == 0) {
			throw new ArrayStoreException_0('Must be array types');
		}
		srcComp = srcType.componentType;
		destComp = destType.componentType;
		if (!((srcComp.modifiers & 1) != 0 ? srcComp == destComp : (destComp.modifiers & 1) == 0)) {
			throw new ArrayStoreException_0('Array types must match');
		}
		srclen = src_0.length;
		destlen = dest.length;
		if (srcOfs < 0 || destOfs < 0 || len < 0 || srcOfs + len > srclen || destOfs + len > destlen) {
			throw new IndexOutOfBoundsException_0;
		}
		if (((srcComp.modifiers & 1) == 0 || (srcComp.modifiers & 4) != 0) && srcType != destType) {
			srcArray = src_0;
			destArray = dest;
			if (src_0 === dest && srcOfs < destOfs) {
				srcOfs += len;
				for (destEnd = destOfs + len; destEnd-- > destOfs;) {
					destArray[destEnd] = srcArray[--srcOfs];
				}
			} else {
				for (destEnd = destOfs + len; destOfs < destEnd;) {
					destArray[destOfs++] = srcArray[srcOfs++];
				}
			}
		} else {
			Array.prototype.splice.apply(dest, [destOfs, len].concat(src_0.slice(srcOfs, srcOfs + len)));
		}
	}

	function UnsupportedOperationException_0(message) {
		RuntimeException_1.call(this, message);
	}

	defineSeed(763, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), UnsupportedOperationException_0);

	function $advanceToFind(iter, o) {
		var t;
		while (iter.hasNext()) {
			t = iter.next();
			if (o == null ? t == null : equals__devirtual$(o, t)) {
				return iter;
			}
		}
		return null;
	}

	function $toArray(this$static, a) {
		var i_0, it, size_0;
		size_0 = this$static.size_1();
		a.length < size_0 && (a = createFrom(a, size_0));
		it = this$static.iterator();
		for (i_0 = 0; i_0 < size_0; ++i_0) {
			a[i_0] = it.next();
		}
		a.length > size_0 && (a[size_0] = null);
		return a;
	}

	function $toString_152(this$static) {
		var comma, iter, sb, value_0;
		sb = new StringBuffer_0;
		comma = null;
		$append_0(sb.impl, '[');
		iter = this$static.iterator();
		while (iter.hasNext()) {
			comma != null ? ($append_0(sb.impl, comma), sb) : (comma = ', ');
			value_0 = iter.next();
			$append_0(sb.impl, value_0 === this$static ? '(this Collection)' : '' + value_0);
		}
		$append_0(sb.impl, ']');
		return sb.impl.string;
	}

	defineSeed(764, 1, {});
	_.add_0 = function add_1(o) {
		throw new UnsupportedOperationException_0('Add not supported on this collection');
	};
	_.contains = function contains(o) {
		var iter;
		iter = $advanceToFind(this.iterator(), o);
		return !!iter;
	};
	_.toArray = function toArray(a) {
		return $toArray(this, a);
	};
	_.toString$ = function toString_193() {
		return $toString_152(this);
	};

	function $implFindEntry(this$static, key) {
		var entry, iter, k_0;
		for (iter = this$static.entrySet().iterator(); iter.hasNext();) {
			entry = iter.next();
			k_0 = entry.getKey_2();
			if (key == null ? k_0 == null : equals__devirtual$(key, k_0)) {
				return entry;
			}
		}
		return null;
	}

	function $keySet(this$static) {
		var entrySet;
		entrySet = this$static.entrySet();
		return new AbstractMap$1_0(this$static, entrySet);
	}

	function $putAll(this$static, t) {
		var e, iter;
		for (iter = new TreeMap$EntryIterator_0((new TreeMap$EntrySet_0(t)).this$0); $hasNext(iter.iter);) {
			e = $next(iter.iter);
			$put_2(this$static, e.getKey_2(), e.getValue_2());
		}
	}

	function $values(this$static) {
		var entrySet;
		entrySet = this$static.entrySet();
		return new AbstractMap$2_0(this$static, entrySet);
	}

	defineSeed(766, 1, makeCastMap([Q$Map]));
	_.containsKey = function containsKey(key) {
		return !!$implFindEntry(this, key);
	};
	_.containsValue = function containsValue(value_0) {
		var entry, iter, v;
		for (iter = this.entrySet().iterator(); iter.hasNext();) {
			entry = iter.next();
			v = entry.getValue_2();
			if (value_0 == null ? v == null : equals__devirtual$(value_0, v)) {
				return true;
			}
		}
		return false;
	};
	_.equals$ = function equals_200(obj) {
		var entry, entry$iterator, otherKey, otherMap, otherValue;
		if (obj === this) {
			return true;
		}
		if (!instanceOf(obj, Q$Map)) {
			return false;
		}
		otherMap = obj;
		if (this.size_1() != otherMap.size_1()) {
			return false;
		}
		for (entry$iterator = otherMap.entrySet().iterator(); entry$iterator.hasNext();) {
			entry = entry$iterator.next();
			otherKey = entry.getKey_2();
			otherValue = entry.getValue_2();
			if (!this.containsKey(otherKey)) {
				return false;
			}
			if (!equalsWithNullCheck(otherValue, this.get_0(otherKey))) {
				return false;
			}
		}
		return true;
	};
	_.get_0 = function get_0(key) {
		var entry;
		entry = $implFindEntry(this, key);
		return !entry ? null : entry.getValue_2();
	};
	_.hashCode$ = function hashCode_9() {
		var entry, entry$iterator, hashCode;
		hashCode = 0;
		for (entry$iterator = this.entrySet().iterator(); entry$iterator.hasNext();) {
			entry = entry$iterator.next();
			hashCode += entry.hashCode$();
			hashCode = ~~hashCode;
		}
		return hashCode;
	};
	_.size_1 = function size_6() {
		return this.entrySet().size_1();
	};
	_.toString$ = function toString_194() {
		var comma, entry, iter, s;
		s = '{';
		comma = false;
		for (iter = this.entrySet().iterator(); iter.hasNext();) {
			entry = iter.next();
			comma ? (s += ', ') : (comma = true);
			s += '' + entry.getKey_2();
			s += '=';
			s += '' + entry.getValue_2();
		}
		return s + '}';
	};

	function $addAllHashEntries(this$static, dest) {
		var hashCodeMap = this$static.hashCodeMap;
		for (var hashCode in hashCodeMap) {
			var hashCodeInt = parseInt(hashCode, 10);
			if (hashCode == hashCodeInt) {
				var array = hashCodeMap[hashCodeInt];
				for (var i_0 = 0, c = array.length; i_0 < c; ++i_0) {
					dest.add_0(array[i_0]);
				}
			}
		}
	}

	function $addAllStringEntries(this$static, dest) {
		var stringMap = this$static.stringMap;
		for (var key in stringMap) {
			if (key.charCodeAt(0) == 58) {
				var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));
				dest.add_0(entry);
			}
		}
	}

	function $containsHashValue(this$static, value_0) {
		var hashCodeMap = this$static.hashCodeMap;
		for (var hashCode in hashCodeMap) {
			var hashCodeInt = parseInt(hashCode, 10);
			if (hashCode == hashCodeInt) {
				var array = hashCodeMap[hashCodeInt];
				for (var i_0 = 0, c = array.length; i_0 < c; ++i_0) {
					var entry = array[i_0];
					var entryValue = entry.getValue_2();
					if (this$static.equalsBridge(value_0, entryValue)) {
						return true;
					}
				}
			}
		}
		return false;
	}

	function $containsKey(this$static, key) {
		return key == null ? this$static.nullSlotLive : instanceOf(key, Q$String) ? ':' + key in this$static.stringMap : $hasHashValue(this$static, key, ~~hashCode__devirtual$(key));
	}

	function $containsStringValue(this$static, value_0) {
		var stringMap = this$static.stringMap;
		for (var key in stringMap) {
			if (key.charCodeAt(0) == 58) {
				var entryValue = stringMap[key];
				if (this$static.equalsBridge(value_0, entryValue)) {
					return true;
				}
			}
		}
		return false;
	}

	function $get_1(this$static, key) {
		return key == null ? this$static.nullSlot : instanceOf(key, Q$String) ? $getStringValue(this$static, key) : $getHashValue(this$static, key, ~~hashCode__devirtual$(key));
	}

	function $getHashValue(this$static, key, hashCode) {
		var array = this$static.hashCodeMap[hashCode];
		if (array) {
			for (var i_0 = 0, c = array.length; i_0 < c; ++i_0) {
				var entry = array[i_0];
				var entryKey = entry.getKey_2();
				if (this$static.equalsBridge(key, entryKey)) {
					return entry.getValue_2();
				}
			}
		}
		return null;
	}

	function $getStringValue(this$static, key) {
		return this$static.stringMap[':' + key];
	}

	function $hasHashValue(this$static, key, hashCode) {
		var array = this$static.hashCodeMap[hashCode];
		if (array) {
			for (var i_0 = 0, c = array.length; i_0 < c; ++i_0) {
				var entry = array[i_0];
				var entryKey = entry.getKey_2();
				if (this$static.equalsBridge(key, entryKey)) {
					return true;
				}
			}
		}
		return false;
	}

	function $put_1(this$static, key, value_0) {
		return key == null ? $putNullSlot(this$static, value_0) : instanceOf(key, Q$String) ? $putStringValue(this$static, key, value_0) : $putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));
	}

	function $putHashValue(this$static, key, value_0, hashCode) {
		var array = this$static.hashCodeMap[hashCode];
		if (array) {
			for (var i_0 = 0, c = array.length; i_0 < c; ++i_0) {
				var entry = array[i_0];
				var entryKey = entry.getKey_2();
				if (this$static.equalsBridge(key, entryKey)) {
					var previous = entry.getValue_2();
					entry.setValue_1(value_0);
					return previous;
				}
			}
		} else {
			array = this$static.hashCodeMap[hashCode] = [];
		}
		var entry = new MapEntryImpl_0(key, value_0);
		array.push(entry);
		++this$static.size_0;
		return null;
	}

	function $putNullSlot(this$static, value_0) {
		var result;
		result = this$static.nullSlot;
		this$static.nullSlot = value_0;
		if (!this$static.nullSlotLive) {
			this$static.nullSlotLive = true;
			++this$static.size_0;
		}
		return result;
	}

	function $putStringValue(this$static, key, value_0) {
		var result, stringMap = this$static.stringMap;
		key = ':' + key;
		key in stringMap ? (result = stringMap[key]) : ++this$static.size_0;
		stringMap[key] = value_0;
		return result;
	}

	function $remove(this$static, key) {
		return !key ? $removeNullSlot(this$static) : $removeHashValue(this$static, key, ~~getHashCode(key));
	}

	function $removeHashValue(this$static, key, hashCode) {
		var array = this$static.hashCodeMap[hashCode];
		if (array) {
			for (var i_0 = 0, c = array.length; i_0 < c; ++i_0) {
				var entry = array[i_0];
				var entryKey = entry.getKey_2();
				if (this$static.equalsBridge(key, entryKey)) {
					array.length == 1 ? delete this$static.hashCodeMap[hashCode] : array.splice(i_0, 1);
					--this$static.size_0;
					return entry.getValue_2();
				}
			}
		}
		return null;
	}

	function $removeNullSlot(this$static) {
		var result;
		result = this$static.nullSlot;
		this$static.nullSlot = null;
		if (this$static.nullSlotLive) {
			this$static.nullSlotLive = false;
			--this$static.size_0;
		}
		return result;
	}

	defineSeed(765, 766, makeCastMap([Q$Map]));
	_.containsKey = function containsKey_0(key) {
		return $containsKey(this, key);
	};
	_.containsValue = function containsValue_0(value_0) {
		if (this.nullSlotLive && $equals_152(this.nullSlot, value_0)) {
			return true;
		} else if ($containsStringValue(this, value_0)) {
			return true;
		} else if ($containsHashValue(this, value_0)) {
			return true;
		}
		return false;
	};
	_.entrySet = function entrySet_0() {
		return new AbstractHashMap$EntrySet_0(this);
	};
	_.equalsBridge = function equalsBridge(value1, value2) {
		return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);
	};
	_.get_0 = function get_1(key) {
		return $get_1(this, key);
	};
	_.size_1 = function size_7() {
		return this.size_0;
	};
	_.nullSlotLive = false;
	_.size_0 = 0;
	defineSeed(768, 764, makeCastMap([Q$Set]));
	_.equals$ = function equals_201(o) {
		var iter, other, otherItem;
		if (o === this) {
			return true;
		}
		if (!instanceOf(o, Q$Set)) {
			return false;
		}
		other = o;
		if (other.size_1() != this.size_1()) {
			return false;
		}
		for (iter = other.iterator(); iter.hasNext();) {
			otherItem = iter.next();
			if (!this.contains(otherItem)) {
				return false;
			}
		}
		return true;
	};
	_.hashCode$ = function hashCode_10() {
		var hashCode, iter, next;
		hashCode = 0;
		for (iter = this.iterator(); iter.hasNext();) {
			next = iter.next();
			if (next != null) {
				hashCode += hashCode__devirtual$(next);
				hashCode = ~~hashCode;
			}
		}
		return hashCode;
	};

	function $contains(this$static, o) {
		var entry, key, value_0;
		if (instanceOf(o, Q$Map$Entry)) {
			entry = o;
			key = entry.getKey_2();
			if ($containsKey(this$static.this$0, key)) {
				value_0 = $get_1(this$static.this$0, key);
				return $equals_152(entry.getValue_2(), value_0);
			}
		}
		return false;
	}

	function AbstractHashMap$EntrySet_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(767, 768, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);
	_.contains = function contains_0(o) {
		return $contains(this, o);
	};
	_.iterator = function iterator_0() {
		return new AbstractHashMap$EntrySetIterator_0(this.this$0);
	};
	_.size_1 = function size_8() {
		return this.this$0.size_0;
	};

	function AbstractHashMap$EntrySetIterator_0(this$0) {
		var list;
		list = new ArrayList_0;
		this$0.nullSlotLive && $add(list, new AbstractHashMap$MapEntryNull_0(this$0));
		$addAllStringEntries(this$0, list);
		$addAllHashEntries(this$0, list);
		this.iter = new AbstractList$IteratorImpl_0(list);
	}

	defineSeed(769, 1, {}, AbstractHashMap$EntrySetIterator_0);
	_.hasNext = function hasNext() {
		return $hasNext(this.iter);
	};
	_.next = function next_0() {
		return $next(this.iter);
	};
	defineSeed(771, 1, makeCastMap([Q$Map$Entry]));
	_.equals$ = function equals_202(other) {
		var entry;
		if (instanceOf(other, Q$Map$Entry)) {
			entry = other;
			if (equalsWithNullCheck(this.getKey_2(), entry.getKey_2()) && equalsWithNullCheck(this.getValue_2(), entry.getValue_2())) {
				return true;
			}
		}
		return false;
	};
	_.hashCode$ = function hashCode_11() {
		var keyHash, valueHash;
		keyHash = 0;
		valueHash = 0;
		this.getKey_2() != null && (keyHash = hashCode__devirtual$(this.getKey_2()));
		this.getValue_2() != null && (valueHash = hashCode__devirtual$(this.getValue_2()));
		return keyHash ^ valueHash;
	};
	_.toString$ = function toString_195() {
		return this.getKey_2() + '=' + this.getValue_2();
	};

	function AbstractHashMap$MapEntryNull_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(770, 771, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);
	_.getKey_2 = function getKey_2() {
		return null;
	};
	_.getValue_2 = function getValue_1() {
		return this.this$0.nullSlot;
	};
	_.setValue_1 = function setValue_0(object) {
		return $putNullSlot(this.this$0, object);
	};

	function AbstractHashMap$MapEntryString_0(this$0, key) {
		this.this$0 = this$0;
		this.key = key;
	}

	defineSeed(772, 771, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);
	_.getKey_2 = function getKey_3() {
		return this.key;
	};
	_.getValue_2 = function getValue_2() {
		return $getStringValue(this.this$0, this.key);
	};
	_.setValue_1 = function setValue_1(object) {
		return $putStringValue(this.this$0, this.key, object);
	};

	function $indexOf_0(this$static, toFind) {
		var i_0, n;
		for (i_0 = 0, n = this$static.array.length; i_0 < n; ++i_0) {
			if (toFind == null ? !(checkIndex(i_0, this$static.array.length), this$static.array[i_0]) : equals__devirtual$(toFind, (checkIndex(i_0, this$static.array.length), this$static.array[i_0]))) {
				return i_0;
			}
		}
		return -1;
	}

	function checkIndex(index_0, size_0) {
		(index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);
	}

	function indexOutOfBounds(index_0, size_0) {
		throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);
	}

	defineSeed(773, 764, makeCastMap([Q$List]));
	_.add_1 = function add_2(index_0, element) {
		throw new UnsupportedOperationException_0('Add not supported on this list');
	};
	_.add_0 = function add_3(obj) {
		this.add_1(this.size_1(), obj);
		return true;
	};
	_.clear_0 = function clear_6() {
		this.removeRange(0, this.size_1());
	};
	_.equals$ = function equals_203(o) {
		var elem, elemOther, iter, iterOther, other;
		if (o === this) {
			return true;
		}
		if (!instanceOf(o, Q$List)) {
			return false;
		}
		other = o;
		if (this.size_1() != other.size_1()) {
			return false;
		}
		iter = new AbstractList$IteratorImpl_0(this);
		iterOther = other.iterator();
		while (iter.i < iter.this$0.size_1()) {
			elem = $next(iter);
			elemOther = $next(iterOther);
			if (!(elem == null ? elemOther == null : equals__devirtual$(elem, elemOther))) {
				return false;
			}
		}
		return true;
	};
	_.hashCode$ = function hashCode_12() {
		var iter, k_0, obj;
		k_0 = 1;
		iter = new AbstractList$IteratorImpl_0(this);
		while (iter.i < iter.this$0.size_1()) {
			obj = $next(iter);
			k_0 = 31 * k_0 + (obj == null ? 0 : hashCode__devirtual$(obj));
			k_0 = ~~k_0;
		}
		return k_0;
	};
	_.iterator = function iterator_1() {
		return new AbstractList$IteratorImpl_0(this);
	};
	_.remove = function remove(index_0) {
		throw new UnsupportedOperationException_0('Remove not supported on this list');
	};
	_.removeRange = function removeRange(fromIndex, endIndex) {
		var i_0, iter;
		iter = new AbstractList$ListIteratorImpl_0(this, fromIndex);
		for (i_0 = fromIndex; i_0 < endIndex; ++i_0) {
			$next(iter);
			$remove_0(iter);
		}
	};

	function $hasNext(this$static) {
		return this$static.i < this$static.this$0.size_1();
	}

	function $next(this$static) {
		if (this$static.i >= this$static.this$0.size_1()) {
			throw new NoSuchElementException_0;
		}
		return this$static.this$0.get_1(this$static.last = this$static.i++);
	}

	function $remove_0(this$static) {
		if (this$static.last < 0) {
			throw new IllegalStateException_0;
		}
		this$static.this$0.remove(this$static.last);
		this$static.i = this$static.last;
		this$static.last = -1;
	}

	function AbstractList$IteratorImpl_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(774, 1, {}, AbstractList$IteratorImpl_0);
	_.hasNext = function hasNext_0() {
		return $hasNext(this);
	};
	_.next = function next_1() {
		return $next(this);
	};
	_.i = 0;
	_.last = -1;

	function AbstractList$ListIteratorImpl_0(this$0, start_0) {
		var size_0;
		AbstractList$IteratorImpl_0.call(this, this$0);
		size_0 = this$0.size_1();
		(start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);
		this.i = start_0;
	}

	defineSeed(775, 774, {}, AbstractList$ListIteratorImpl_0);

	function $iterator(this$static) {
		var outerIter;
		outerIter = this$static.val$entrySet.iterator();
		return new AbstractMap$1$1_0(outerIter);
	}

	function AbstractMap$1_0(this$0, val$entrySet) {
		this.this$0 = this$0;
		this.val$entrySet = val$entrySet;
	}

	defineSeed(776, 768, makeCastMap([Q$Set]), AbstractMap$1_0);
	_.contains = function contains_1(key) {
		return this.this$0.containsKey(key);
	};
	_.iterator = function iterator_2() {
		return $iterator(this);
	};
	_.size_1 = function size_9() {
		return this.val$entrySet.size_1();
	};

	function $next_0(this$static) {
		var entry;
		entry = this$static.val$outerIter.next();
		return entry.getKey_2();
	}

	function AbstractMap$1$1_0(val$outerIter) {
		this.val$outerIter = val$outerIter;
	}

	defineSeed(777, 1, {}, AbstractMap$1$1_0);
	_.hasNext = function hasNext_1() {
		return this.val$outerIter.hasNext();
	};
	_.next = function next_2() {
		return $next_0(this);
	};

	function $iterator_0(this$static) {
		var outerIter;
		outerIter = this$static.val$entrySet.iterator();
		return new AbstractMap$2$1_0(outerIter);
	}

	function AbstractMap$2_0(this$0, val$entrySet) {
		this.this$0 = this$0;
		this.val$entrySet = val$entrySet;
	}

	defineSeed(778, 764, {}, AbstractMap$2_0);
	_.contains = function contains_2(value_0) {
		return this.this$0.containsValue(value_0);
	};
	_.iterator = function iterator_3() {
		return $iterator_0(this);
	};
	_.size_1 = function size_10() {
		return this.val$entrySet.size_1();
	};

	function $next_1(this$static) {
		var value_0;
		value_0 = this$static.val$outerIter.next().getValue_2();
		return value_0;
	}

	function AbstractMap$2$1_0(val$outerIter) {
		this.val$outerIter = val$outerIter;
	}

	defineSeed(779, 1, {}, AbstractMap$2$1_0);
	_.hasNext = function hasNext_2() {
		return this.val$outerIter.hasNext();
	};
	_.next = function next_3() {
		return $next_1(this);
	};

	function $add(this$static, o) {
		this$static.array[this$static.size_0++] = o;
		return true;
	}

	function $addAll(this$static, c) {
		var cArray, len;
		cArray = cloneSubrange(c.array, 0, c.size_0);
		len = cArray.length;
		if (len == 0) {
			return false;
		}
		spliceArray(this$static.array, this$static.size_0, 0, cArray);
		this$static.size_0 += len;
		return true;
	}

	function $clear_154(this$static) {
		this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);
		this$static.size_0 = 0;
	}

	function $get_2(this$static, index_0) {
		checkIndex(index_0, this$static.size_0);
		return this$static.array[index_0];
	}

	function $indexOf_1(this$static, o, index_0) {
		for (; index_0 < this$static.size_0; ++index_0) {
			if (equalsWithNullCheck(o, this$static.array[index_0])) {
				return index_0;
			}
		}
		return -1;
	}

	function $remove_1(this$static, index_0) {
		var previous;
		previous = (checkIndex(index_0, this$static.size_0), this$static.array[index_0]);
		splice_0(this$static.array, index_0, 1);
		--this$static.size_0;
		return previous;
	}

	function $remove_2(this$static, o) {
		var i_0;
		i_0 = $indexOf_1(this$static, o, 0);
		if (i_0 == -1) {
			return false;
		}
		$remove_1(this$static, i_0);
		return true;
	}

	function $toArray_0(this$static) {
		return cloneSubrange(this$static.array, 0, this$static.size_0);
	}

	function $toArray_1(this$static, out) {
		var i_0;
		out.length < this$static.size_0 && (out = createFrom(out, this$static.size_0));
		for (i_0 = 0; i_0 < this$static.size_0; ++i_0) {
			out[i_0] = this$static.array[i_0];
		}
		out.length > this$static.size_0 && (out[this$static.size_0] = null);
		return out;
	}

	function ArrayList_0() {
		this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);
	}

	function splice_0(array, index_0, deleteCount) {
		array.splice(index_0, deleteCount);
	}

	function splice_1(array, index_0, deleteCount, value_0) {
		array.splice(index_0, deleteCount, value_0);
	}

	function spliceArray(array, index_0, deleteCount, values) {
		Array.prototype.splice.apply(array, [index_0, deleteCount].concat(values));
	}

	defineSeed(780, 773, makeCastMap([Q$Serializable, Q$List]), ArrayList_0);
	_.add_1 = function add_4(index_0, o) {
		(index_0 < 0 || index_0 > this.size_0) && indexOutOfBounds(index_0, this.size_0);
		splice_1(this.array, index_0, 0, o);
		++this.size_0;
	};
	_.add_0 = function add_5(o) {
		return $add(this, o);
	};
	_.clear_0 = function clear_7() {
		$clear_154(this);
	};
	_.contains = function contains_3(o) {
		return $indexOf_1(this, o, 0) != -1;
	};
	_.get_1 = function get_2(index_0) {
		return $get_2(this, index_0);
	};
	_.remove = function remove_0(index_0) {
		return $remove_1(this, index_0);
	};
	_.removeRange = function removeRange_0(fromIndex, endIndex) {
		var count;
		checkIndex(fromIndex, this.size_0 + 1);
		(endIndex < fromIndex || endIndex > this.size_0) && indexOutOfBounds(endIndex, this.size_0);
		count = endIndex - fromIndex;
		splice_0(this.array, fromIndex, count);
		this.size_0 -= count;
	};
	_.size_1 = function size_11() {
		return this.size_0;
	};
	_.toArray = function toArray_0(out) {
		return $toArray_1(this, out);
	};
	_.size_0 = 0;

	function insertionSort(array, low, high, comp) {
		var i_0, j, t;
		for (i_0 = low + 1; i_0 < high; ++i_0) {
			for (j = i_0; j > low && comp.compare_0(array[j - 1], array[j]) > 0; --j) {
				t = array[j];
				array[j] = array[j - 1];
				array[j - 1] = t;
			}
		}
	}

	function merge(src_0, srcLow, srcMid, srcHigh, dest, destLow, destHigh, comp) {
		var topIdx;
		topIdx = srcMid;
		while (destLow < destHigh) {
			topIdx >= srcHigh || srcLow < srcMid && comp.compare_0(src_0[srcLow], src_0[topIdx]) <= 0 ? (dest[destLow++] = src_0[srcLow++]) : (dest[destLow++] = src_0[topIdx++]);
		}
	}

	function mergeSort(x_0, fromIndex, toIndex, comp) {
		var temp;
		temp = cloneSubrange(x_0, fromIndex, toIndex);
		mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex, comp);
	}

	function mergeSort_0(temp, array, low, high, ofs, comp) {
		var length_0, tempHigh, tempLow, tempMid;
		length_0 = high - low;
		if (length_0 < 7) {
			insertionSort(array, low, high, comp);
			return;
		}
		tempLow = low + ofs;
		tempHigh = high + ofs;
		tempMid = tempLow + (tempHigh - tempLow >> 1);
		mergeSort_0(array, temp, tempLow, tempMid, -ofs, comp);
		mergeSort_0(array, temp, tempMid, tempHigh, -ofs, comp);
		if (comp.compare_0(temp[tempMid - 1], temp[tempMid]) <= 0) {
			while (low < high) {
				array[low++] = temp[tempLow++];
			}
			return;
		}
		merge(temp, tempLow, tempMid, tempHigh, array, low, high, comp);
	}

	function $toArray_2(this$static, out) {
		var i_0, size_0;
		size_0 = this$static.array.length;
		out.length < size_0 && (out = createFrom(out, size_0));
		for (i_0 = 0; i_0 < size_0; ++i_0) {
			out[i_0] = this$static.array[i_0];
		}
		out.length > size_0 && (out[size_0] = null);
		return out;
	}

	function Arrays$ArrayList_0(array) {
		this.array = array;
	}

	defineSeed(782, 773, makeCastMap([Q$Serializable, Q$List]), Arrays$ArrayList_0);
	_.contains = function contains_4(o) {
		return $indexOf_0(this, o) != -1;
	};
	_.get_1 = function get_3(index_0) {
		return checkIndex(index_0, this.array.length), this.array[index_0];
	};
	_.size_1 = function size_12() {
		return this.array.length;
	};
	_.toArray = function toArray_1(out) {
		return $toArray_2(this, out);
	};

	function replaceContents(target, x_0) {
		var i_0, size_0, was;
		size_0 = target.array.length;
		for (i_0 = 0; i_0 < size_0; i_0++) {
			checkIndex(i_0, target.array.length);
			was = target.array[i_0];
			target.array[i_0] = x_0[i_0];
		}
	}

	function sort_2(target, c) {
		var x_0;
		x_0 = clone(target.array);
		mergeSort(x_0, 0, x_0.length, c ? c : ($clinit_Comparators(), $clinit_Comparators(), NATURAL));
		replaceContents(target, x_0);
	}

	function $clinit_Comparators() {
		$clinit_Comparators = nullMethod;
		NATURAL = new Comparators$1_0;
	}

	var NATURAL;

	function Comparators$1_0() {}

	defineSeed(785, 1, {}, Comparators$1_0);
	_.compare_0 = function compare_13(o1, o2) {
		return o1.compareTo$(o2);
	};

	function $fixDaylightSavings(this$static) {
		var badHours, copy, day, newTime, timeDiff, timeDiffHours, timeDiffMinutes;
		if (this$static.jsdate.getHours() % 24 != 0) {
			copy = create(this$static.jsdate.getTime());
			$setDate(copy, copy.getDate() + 1);
			timeDiff = this$static.jsdate.getTimezoneOffset() - copy.getTimezoneOffset();
			if (timeDiff > 0) {
				timeDiffHours = ~~ (timeDiff / 60);
				timeDiffMinutes = timeDiff % 60;
				day = this$static.jsdate.getDate();
				badHours = this$static.jsdate.getHours();
				badHours + timeDiffHours >= 24 && ++day;
				newTime = create_0(this$static.jsdate.getFullYear(), this$static.jsdate.getMonth(), day, timeDiffHours, this$static.jsdate.getMinutes() + timeDiffMinutes, this$static.jsdate.getSeconds(), this$static.jsdate.getMilliseconds());
				$setTime_8(this$static.jsdate, newTime.getTime());
			}
		}
	}

	function Date_1(year, month, date) {
		this.jsdate = new Date;
		$setFullYear(this.jsdate, year + 1900, month, date);
		$setHours(this.jsdate, 0, 0, 0, 0);
		$fixDaylightSavings(this);
	}

	function Date_2(date) {
		this.jsdate = create(toDouble(date));
	}

	function padTwo(number) {
		return number < 10 ? '0' + number : '' + number;
	}

	defineSeed(786, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Date]), Date_1, Date_2);
	_.compareTo$ = function compareTo_12(other) {
		return signum(sub_0(fromDouble(this.jsdate.getTime()), fromDouble(other.jsdate.getTime())));
	};
	_.equals$ = function equals_204(obj) {
		return instanceOf(obj, Q$Date) && eq(fromDouble(this.jsdate.getTime()), fromDouble(obj.jsdate.getTime()));
	};
	_.hashCode$ = function hashCode_13() {
		var time;
		time = fromDouble(this.jsdate.getTime());
		return toInt(xor(time, shru(time, 32)));
	};
	_.toString$ = function toString_196() {
		var hourOffset, minuteOffset, offset;
		offset = -this.jsdate.getTimezoneOffset();
		hourOffset = (offset >= 0 ? '+' : '') + ~~ (offset / 60);
		minuteOffset = (offset < 0 ? -offset : offset) % 60 < 10 ? '0' + (offset < 0 ? -offset : offset) % 60 : '' + (offset < 0 ? -offset : offset) % 60;
		return ($clinit_Date$StringData(), DAYS)[this.jsdate.getDay()] + ' ' + MONTHS[this.jsdate.getMonth()] + ' ' + padTwo(this.jsdate.getDate()) + ' ' + padTwo(this.jsdate.getHours()) + ':' + padTwo(this.jsdate.getMinutes()) + ':' + padTwo(this.jsdate.getSeconds()) + ' GMT' + hourOffset + minuteOffset + ' ' + this.jsdate.getFullYear();
	};

	function $clinit_Date$StringData() {
		$clinit_Date$StringData = nullMethod;
		DAYS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);
		MONTHS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
	}

	var DAYS, MONTHS;

	function $equals_152(value1, value2) {
		return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);
	}

	function HashMap_0() {
		this.hashCodeMap = [];
		this.stringMap = {};
		this.nullSlotLive = false;
		this.nullSlot = null;
		this.size_0 = 0;
	}

	defineSeed(788, 765, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);

	function $add_0(this$static, o) {
		var old;
		old = $put_1(this$static.map_0, o, this$static);
		return old == null;
	}

	function HashSet_0() {
		this.map_0 = new HashMap_0;
	}

	defineSeed(789, 768, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);
	_.add_0 = function add_6(o) {
		return $add_0(this, o);
	};
	_.contains = function contains_5(o) {
		return $containsKey(this.map_0, o);
	};
	_.iterator = function iterator_4() {
		return $iterator($keySet(this.map_0));
	};
	_.size_1 = function size_13() {
		return this.map_0.size_0;
	};
	_.toString$ = function toString_197() {
		return $toString_152($keySet(this.map_0));
	};

	function MapEntryImpl_0(key, value_0) {
		this.key = key;
		this.value_0 = value_0;
	}

	defineSeed(790, 771, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);
	_.getKey_2 = function getKey_4() {
		return this.key;
	};
	_.getValue_2 = function getValue_3() {
		return this.value_0;
	};
	_.setValue_1 = function setValue_2(value_0) {
		var old;
		old = this.value_0;
		this.value_0 = value_0;
		return old;
	};

	function NoSuchElementException_0() {
		RuntimeException_0.call(this);
	}

	defineSeed(791, 693, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), NoSuchElementException_0);

	function $clinit_TreeMap() {
		$clinit_TreeMap = nullMethod;
		DEFAULT_COMPARATOR = new TreeMap$1_0;
	}

	function $clear_155(this$static) {
		this$static.root = null;
		this$static.size_0 = 0;
	}

	function $get_3(this$static, k_0) {
		var entry;
		entry = $getEntry(this$static, k_0);
		return entry ? entry.value_0 : null;
	}

	function $getEntry(this$static, key) {
		var c, tree;
		tree = this$static.root;
		while (tree) {
			c = this$static.cmp.compare_0(key, tree.key);
			if (c == 0) {
				return tree;
			}
			c < 0 ? (tree = tree.child[0]) : (tree = tree.child[1]);
		}
		return null;
	}

	function $insert(this$static, tree, newNode, state) {
		var c, childNum;
		if (!tree) {
			return newNode;
		} else {
			c = this$static.cmp.compare_0(tree.key, newNode.key);
			if (c == 0) {
				state.value_0 = tree.value_0;
				state.found = true;
				tree.value_0 = newNode.value_0;
				return tree;
			}
			childNum = c > 0 ? 0 : 1;
			tree.child[childNum] = $insert(this$static, tree.child[childNum], newNode, state);
			if ($isRed(tree.child[childNum])) {
				if ($isRed(tree.child[1 - childNum])) {
					tree.isRed = true;
					tree.child[0].isRed = false;
					tree.child[1].isRed = false;
				} else {
					$isRed(tree.child[childNum].child[childNum]) ? (tree = $rotateSingle(tree, 1 - childNum)) : $isRed(tree.child[childNum].child[1 - childNum]) && (tree = (tree.child[1 - (1 - childNum)] = $rotateSingle(tree.child[1 - (1 - childNum)], 1 - (1 - childNum)), $rotateSingle(tree, 1 - childNum)));
				}
			}
		}
		return tree;
	}

	function $isRed(node) {
		return !!node && node.isRed;
	}

	function $put_2(this$static, key, value_0) {
		var node, state;
		node = new TreeMap$Node_0(key, value_0);
		state = new TreeMap$State_0;
		this$static.root = $insert(this$static, this$static.root, node, state);
		state.found || ++this$static.size_0;
		this$static.root.isRed = false;
		return state.value_0;
	}

	function $remove_3(this$static, keyObj) {
		var state;
		state = new TreeMap$State_0;
		$removeWithState(this$static, keyObj, state);
		return state.value_0;
	}

	function $removeWithState(this$static, key, state) {
		var c, dir_0, dir2, found, grandparent, head, last, newNode, node, parent_0, sibling;
		if (!this$static.root) {
			return false;
		}
		found = null;
		parent_0 = null;
		head = new TreeMap$Node_0(null, null);
		dir_0 = 1;
		head.child[1] = this$static.root;
		node = head;
		while (node.child[dir_0]) {
			last = dir_0;
			grandparent = parent_0;
			parent_0 = node;
			node = node.child[dir_0];
			c = this$static.cmp.compare_0(node.key, key);
			dir_0 = c < 0 ? 1 : 0;
			c == 0 && (!state.matchValue || equals__devirtual$(node.value_0, state.value_0)) && (found = node);
			if (!( !! node && node.isRed) && !$isRed(node.child[dir_0])) {
				if ($isRed(node.child[1 - dir_0])) {
					parent_0 = parent_0.child[last] = $rotateSingle(node, dir_0);
				} else if (!$isRed(node.child[1 - dir_0])) {
					sibling = parent_0.child[1 - last];
					if (sibling) {
						if (!$isRed(sibling.child[1 - last]) && !$isRed(sibling.child[last])) {
							parent_0.isRed = false;
							sibling.isRed = true;
							node.isRed = true;
						} else {
							dir2 = grandparent.child[1] == parent_0 ? 1 : 0;
							$isRed(sibling.child[last]) ? (grandparent.child[dir2] = (parent_0.child[1 - last] = $rotateSingle(parent_0.child[1 - last], 1 - last), $rotateSingle(parent_0, last))) : $isRed(sibling.child[1 - last]) && (grandparent.child[dir2] = $rotateSingle(parent_0, last));
							node.isRed = grandparent.child[dir2].isRed = true;
							grandparent.child[dir2].child[0].isRed = false;
							grandparent.child[dir2].child[1].isRed = false;
						}
					}
				}
			}
		}
		if (found) {
			state.found = true;
			state.value_0 = found.value_0;
			if (node != found) {
				newNode = new TreeMap$Node_0(node.key, node.value_0);
				$replaceNode(this$static, head, found, newNode);
				parent_0 == found && (parent_0 = newNode);
			}
			parent_0.child[parent_0.child[1] == node ? 1 : 0] = node.child[!node.child[0] ? 1 : 0];
			--this$static.size_0;
		}
		this$static.root = head.child[1]; !! this$static.root && (this$static.root.isRed = false);
		return state.found;
	}

	function $replaceNode(this$static, head, node, newNode) {
		var direction, parent_0;
		parent_0 = head;
		direction = parent_0.key == null || this$static.cmp.compare_0(node.key, parent_0.key) > 0 ? 1 : 0;
		while (parent_0.child[direction] != node) {
			parent_0 = parent_0.child[direction];
			direction = this$static.cmp.compare_0(node.key, parent_0.key) > 0 ? 1 : 0;
		}
		parent_0.child[direction] = newNode;
		newNode.isRed = node.isRed;
		newNode.child[0] = node.child[0];
		newNode.child[1] = node.child[1];
		node.child[0] = null;
		node.child[1] = null;
	}

	function $rotateSingle(tree, rotateDirection) {
		var save;
		save = tree.child[1 - rotateDirection];
		tree.child[1 - rotateDirection] = save.child[rotateDirection];
		save.child[rotateDirection] = tree;
		tree.isRed = true;
		save.isRed = false;
		return save;
	}

	function TreeMap_0() {
		$clinit_TreeMap();
		TreeMap_1.call(this, null);
	}

	function TreeMap_1(c) {
		$clinit_TreeMap();
		this.root = null;
		!c && (c = DEFAULT_COMPARATOR);
		this.cmp = c;
	}

	defineSeed(792, 766, makeCastMap([Q$Serializable, Q$Map]), TreeMap_0, TreeMap_1);
	_.containsKey = function containsKey_1(key) {
		return !!$getEntry(this, key);
	};
	_.entrySet = function entrySet_1() {
		return new TreeMap$EntrySet_0(this);
	};
	_.get_0 = function get_4(k_0) {
		return $get_3(this, k_0);
	};
	_.size_1 = function size_14() {
		return this.size_0;
	};
	_.size_0 = 0;
	var DEFAULT_COMPARATOR;

	function $compare_3(a, b) {
		if (a == null || b == null) {
			throw new NullPointerException_0;
		}
		return a.compareTo$(b);
	}

	function TreeMap$1_0() {}

	defineSeed(793, 1, {}, TreeMap$1_0);
	_.compare_0 = function compare_14(a, b) {
		return $compare_3(a, b);
	};

	function $inOrderAdd(this$static, list, type_0, current, fromKey, toKey) {
		if (!current) {
			return;
		} !! current.child[0] && $inOrderAdd(this$static, list, type_0, current.child[0], fromKey, toKey);
		$inRange(this$static, type_0, current.key, fromKey, toKey) && list.add_0(current); !! current.child[1] && $inOrderAdd(this$static, list, type_0, current.child[1], fromKey, toKey);
	}

	function $inRange(this$static, type_0, key, fromKey, toKey) {
		if (type_0.toKeyValid()) {
			if (this$static.this$0.cmp.compare_0(key, toKey) >= 0) {
				return false;
			}
		}
		if (type_0.fromKeyValid()) {
			if (this$static.this$0.cmp.compare_0(key, fromKey) < 0) {
				return false;
			}
		}
		return true;
	}

	function TreeMap$EntryIterator_0(this$0) {
		TreeMap$EntryIterator_1.call(this, this$0, ($clinit_TreeMap$SubMapType(), All));
	}

	function TreeMap$EntryIterator_1(this$0, type_0) {
		var list;
		this.this$0 = this$0;
		list = new ArrayList_0;
		$inOrderAdd(this, list, type_0, this$0.root, null, null);
		this.iter = new AbstractList$IteratorImpl_0(list);
	}

	defineSeed(794, 1, {}, TreeMap$EntryIterator_0);
	_.hasNext = function hasNext_3() {
		return $hasNext(this.iter);
	};
	_.next = function next_4() {
		return $next(this.iter);
	};

	function TreeMap$EntrySet_0(this$0) {
		this.this$0 = this$0;
	}

	defineSeed(795, 768, makeCastMap([Q$Set]), TreeMap$EntrySet_0);
	_.contains = function contains_6(o) {
		var entry, lookupEntry;
		if (!instanceOf(o, Q$Map$Entry)) {
			return false;
		}
		entry = o;
		lookupEntry = $getEntry(this.this$0, entry.getKey_2());
		return !!lookupEntry && equalsWithNullCheck(lookupEntry.value_0, entry.getValue_2());
	};
	_.iterator = function iterator_5() {
		return new TreeMap$EntryIterator_0(this.this$0);
	};
	_.size_1 = function size_15() {
		return this.this$0.size_0;
	};

	function TreeMap$Node_0(key, value_0) {
		this.key = key;
		this.value_0 = value_0;
		this.child = initDim(_3Ljava_util_TreeMap$Node_2_classLit, makeCastMap([Q$Serializable]), Q$TreeMap$Node, 2, 0);
		this.isRed = true;
	}

	defineSeed(796, 1, makeCastMap([Q$Map$Entry, Q$TreeMap$Node]), TreeMap$Node_0);
	_.equals$ = function equals_205(o) {
		var other;
		if (!instanceOf(o, Q$Map$Entry)) {
			return false;
		}
		other = o;
		return equalsWithNullCheck(this.key, other.getKey_2()) && equalsWithNullCheck(this.value_0, other.getValue_2());
	};
	_.getKey_2 = function getKey_5() {
		return this.key;
	};
	_.getValue_2 = function getValue_4() {
		return this.value_0;
	};
	_.hashCode$ = function hashCode_14() {
		var keyHash, valueHash;
		keyHash = this.key != null ? hashCode__devirtual$(this.key) : 0;
		valueHash = this.value_0 != null ? hashCode__devirtual$(this.value_0) : 0;
		return keyHash ^ valueHash;
	};
	_.setValue_1 = function setValue_3(value_0) {
		var old;
		old = this.value_0;
		this.value_0 = value_0;
		return old;
	};
	_.toString$ = function toString_198() {
		return this.key + '=' + this.value_0;
	};
	_.isRed = false;

	function TreeMap$State_0() {}

	defineSeed(797, 1, {}, TreeMap$State_0);
	_.toString$ = function toString_199() {
		return 'State: mv=' + this.matchValue + ' value=' + this.value_0 + ' done=' + this.done + ' found=' + this.found;
	};
	_.done = false;
	_.found = false;
	_.matchValue = false;

	function $clinit_TreeMap$SubMapType() {
		$clinit_TreeMap$SubMapType = nullMethod;
		All = new TreeMap$SubMapType_0('All', 0);
		Head = new TreeMap$SubMapType$1_0;
		Range_0 = new TreeMap$SubMapType$2_0;
		Tail = new TreeMap$SubMapType$3_0;
		$VALUES = initValues(_3Ljava_util_TreeMap$SubMapType_2_classLit, makeCastMap([Q$Serializable]), Q$TreeMap$SubMapType, [All, Head, Range_0, Tail]);
	}

	function TreeMap$SubMapType_0(enum$name, enum$ordinal) {
		this.name_0 = enum$name;
		this.ordinal = enum$ordinal;
	}

	function values_0() {
		$clinit_TreeMap$SubMapType();
		return $VALUES;
	}

	defineSeed(798, 747, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$TreeMap$SubMapType]), TreeMap$SubMapType_0);
	_.fromKeyValid = function fromKeyValid() {
		return false;
	};
	_.toKeyValid = function toKeyValid() {
		return false;
	};
	var $VALUES, All, Head, Range_0, Tail;

	function TreeMap$SubMapType$1_0() {
		TreeMap$SubMapType_0.call(this, 'Head', 1);
	}

	defineSeed(799, 798, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$TreeMap$SubMapType]), TreeMap$SubMapType$1_0);
	_.toKeyValid = function toKeyValid_0() {
		return true;
	};

	function TreeMap$SubMapType$2_0() {
		TreeMap$SubMapType_0.call(this, 'Range', 2);
	}

	defineSeed(800, 798, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$TreeMap$SubMapType]), TreeMap$SubMapType$2_0);
	_.fromKeyValid = function fromKeyValid_0() {
		return true;
	};
	_.toKeyValid = function toKeyValid_1() {
		return true;
	};

	function TreeMap$SubMapType$3_0() {
		TreeMap$SubMapType_0.call(this, 'Tail', 3);
	}

	defineSeed(801, 798, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$TreeMap$SubMapType]), TreeMap$SubMapType$3_0);
	_.fromKeyValid = function fromKeyValid_1() {
		return true;
	};

	function equalsWithNullCheck(a, b) {
		return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);
	}

	defineSeed(804, 1, {});

	function $addExporter(this$static, c, o) {
		$put_1(this$static.exporterMap, c, o);
	}

	function $computeVarArguments(len, args) {
		var ret = [];
		for (i = 0; i < len - 1; i++)
		ret.push(args[i]);
		var alen = args.length;
		var p_0 = len - 1;
		if (alen >= len && Object.prototype.toString.apply(args[p_0]) === '[object Array]') {
			ret.push(args[p_0]);
		} else {
			var a = [];
			for (i = p_0; i < alen; i++)
			a.push(args[i]);
			ret.push(a);
		}
		return ret;
	}

	function $declarePackage(qualifiedExportName) {
		var i_0, l_0, o, prefix, superPackages;
		superPackages = $split(qualifiedExportName, '\\.', 0);
		prefix = $wnd;
		i_0 = 0;
		for (l_0 = superPackages.length - 1; i_0 < l_0; i_0++) {
			if (!$equals_151(superPackages[i_0], 'client')) {
				prefix[superPackages[i_0]] || (prefix[superPackages[i_0]] = {});
				prefix = getProp(prefix, superPackages[i_0]);
			}
		}
		o = getProp(prefix, superPackages[i_0]);
		return o;
	}

	function $getMaxArity(jsoMap, meth) {
		var o = jsoMap[meth];
		var r = 0;
		for (k in o)
		r = Math.max(r, k);
		return r;
	}

	function $registerDispatchMap(this$static, clazz, dispMap, isStatic) {
		var jso, map_0;
		map_0 = isStatic ? this$static.staticDispatchMap : this$static.dispatchMap;
		jso = !clazz ? map_0.nullSlot : $getHashValue(map_0, clazz, ~~getHashCode(clazz));
		!jso ? (jso = dispMap) : mergeJso(jso, dispMap);
		!clazz ? $putNullSlot(map_0, jso) : $putHashValue(map_0, clazz, jso, ~~getHashCode(clazz));
	}

	function $runDispatch(this$static, instance, clazz, meth, arguments_0, isStatic, isVarArgs) {
		var args, dmap, i_0, l_0, ret;
		dmap = isStatic ? this$static.staticDispatchMap : this$static.dispatchMap;
		if (isVarArgs) {
			for (l_0 = $getMaxArity(!clazz ? dmap.nullSlot : $getHashValue(dmap, clazz, ~~getHashCode(clazz)), meth), i_0 = l_0; i_0 >= 1; i_0--) {
				args = $computeVarArguments(i_0, arguments_0);
				ret = $runDispatch_0(instance, dmap, clazz, meth, args);
				if (!ret) {
					args = $unshift(instance, args);
					ret = $runDispatch_0(instance, dmap, clazz, meth, args);
				}
				if (ret) {
					return ret;
				}
			}
		} else {
			ret = $runDispatch_0(instance, dmap, clazz, meth, arguments_0);
			if (!ret) {
				arguments_0 = $unshift(instance, arguments_0);
				ret = $runDispatch_0(instance, dmap, clazz, meth, arguments_0);
			}
			if (ret) {
				return ret;
			}
		}
		throw new RuntimeException_1("Can't find exported method for given arguments: " + meth + ':' + arguments_0.length + '\n');
	}

	function $runDispatch_0(instance, dmap, clazz, meth, arguments_0) {
		var aFunc, i_0, jFunc, l_0, r, sig, sigs, wFunc, x_0;
		sigs = (!clazz ? dmap.nullSlot : $getHashValue(dmap, clazz, ~~getHashCode(clazz)))[meth][arguments_0.length];
		jFunc = null;
		wFunc = null;
		aFunc = null;
		for (i_0 = 0, l_0 = !sigs ? 0 : sigs.length; i_0 < l_0; i_0++) {
			sig = sigs[i_0];
			if ($matches(sig, arguments_0)) {
				jFunc = sig[0];
				wFunc = sig[1];
				aFunc = sig[2];
				break;
			}
		}
		if (!jFunc) {
			return null;
		} else {
			arguments_0 = aFunc ? aFunc(instance, arguments_0) : arguments_0;
			r = (x_0 = jFunc.apply(instance, arguments_0), [wFunc ? wFunc(x_0) : x_0]);
			return r;
		}
	}

	function $setWrapper(this$static, type_0) {
		var a, cons, i_0, wrapper, wrapperArray;
		if ((getClass__devirtual$(type_0).modifiers & 4) != 0) {
			a = type_0;
			wrapperArray = [];
			for (i_0 = 0; i_0 < a.length; i_0++) {
				wrapperArray[i_0] = $setWrapper(this$static, a[i_0]);
			}
			return wrapperArray;
		}
		cons = $typeConstructor_0(this$static, type_0);
		wrapper = cons && typeof cons == 'function' ? new cons(type_0) : type_0;
		$setWrapperJS(type_0, wrapper, '__gwtex_wrap');
		return wrapper;
	}

	function $setWrapperJS(instance, wrapper, wrapperProperty) {
		instance[wrapperProperty] = wrapper;
	}

	function $toArrByte(s) {
		var i_0, l_0, ret;
		l_0 = s.length;
		ret = initDim(_3B_classLit, makeCastMap([Q$byte_$1, Q$Serializable]), -1, l_0, 1);
		for (i_0 = 0; i_0 < l_0; i_0++) {
			ret[i_0] = narrow_byte(round_int(s[i_0]));
		}
		return ret;
	}

	function $toArrObject(j, ret) {
		var i_0, l_0, o, s;
		s = j;
		l_0 = s.length;
		for (i_0 = 0; i_0 < l_0; i_0++) {
			o = s[i_0];
			instanceOfJso(o) && getGwtInstance(o) != null && (o = getGwtInstance(o));
			ret[i_0] = o;
		}
		return ret;
	}

	function $toArrString(s) {
		var i_0, l_0, ret;
		l_0 = s.length;
		ret = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, l_0, 0);
		for (i_0 = 0; i_0 < l_0; i_0++) {
			ret[i_0] = s[i_0];
		}
		return ret;
	}

	function $typeConstructor(this$static, clz) {
		var e;
		e = $get_1(this$static.exporterMap, clz);
		return e ? e.getJsConstructor() : null;
	}

	function $typeConstructor_0(this$static, type_0) {
		var e, e$iterator, jso;
		jso = $typeConstructor(this$static, getClass__devirtual$(type_0));
		if (!jso) {
			for (e$iterator = $iterator_0($values(this$static.exporterMap)); e$iterator.val$outerIter.hasNext();) {
				e = $next_1(e$iterator);
				if (e.isAssignable(type_0)) {
					jso = e.getJsConstructor();
					break;
				}
			}
		}
		return jso;
	}

	function $unshift(o, arr) {
		var ret = [o];
		for (i = 0; i < arr.length; i++)
		ret.push(arr[i]);
		return ret;
	}

	function $wrap(this$static, type_0) {
		var wrapper;
		if (type_0 == null) {
			return null;
		}
		return wrapper = type_0['__gwtex_wrap'], !wrapper && (wrapper = $setWrapper(this$static, type_0)), wrapper;
	}

	function $wrap_0(this$static, type_0) {
		var i_0, wrapperArray;
		if (type_0 == null) {
			return null;
		}
		wrapperArray = [];
		for (i_0 = 0; i_0 < type_0.length; i_0++) {
			wrapperArray[i_0] = $wrap(this$static, type_0[i_0]);
		}
		return wrapperArray;
	}

	function ExporterBaseActual_0() {
		this.exporterMap = new HashMap_0;
		this.dispatchMap = new HashMap_0;
		this.staticDispatchMap = new HashMap_0;
	}

	function getGwtInstance(o) {
		return o && o.g ? o.g : null;
	}

	function getProp(jso, key) {
		return jso != null ? jso[key] : null;
	}

	function isAssignableToClass(o, clazz) {
		var sup_0;
		if (Ljava_lang_Object_2_classLit == clazz) {
			return true;
		}
		if (Lorg_timepedia_exporter_client_Exportable_2_classLit == clazz && instanceOf(o, Q$Exportable)) {
			return true;
		}
		if (o != null) {
			for (sup_0 = getClass__devirtual$(o); !! sup_0 && sup_0 != Ljava_lang_Object_2_classLit; sup_0 = null) {
				if (sup_0 == clazz) {
					return true;
				}
			}
		}
		return false;
	}

	function mergeJso(o1, o2) {
		for (p in o2) {
			o1[p] = o2[p];
		}
	}

	function putObject_4(o, index_0, val) {
		o[index_0] = val;
	}

	defineSeed(803, 804, {}, ExporterBaseActual_0);

	function $matches(this$static, arguments_0) {
		var argJsType, gwt, i_0, isBoolean, isClass, isNumber, isPrimitive, jsType, l_0, o;
		for (i_0 = 0, l_0 = arguments_0.length; i_0 < l_0; i_0++) {
			jsType = this$static[i_0 + 3];
			argJsType = typeof_$(arguments_0, i_0);
			if ($equals_151(argJsType, jsType)) {
				continue;
			}
			if ($equals_151('string', jsType) && $equals_151('null', argJsType)) {
				continue;
			}
			isNumber = $equals_151('number', argJsType);
			isBoolean = $equals_151('boolean', argJsType);
			if (Ljava_lang_Object_2_classLit === jsType) {
				isNumber && putObject_4(arguments_0, i_0, new Double_0(arguments_0[i_0]));
				isBoolean && (arguments_0[i_0] = ($clinit_Boolean(), arguments_0[i_0] ? TRUE : FALSE), undefined);
				continue;
			}
			isPrimitive = isNumber || isBoolean;
			isClass = !isPrimitive && jsType != null && getClass__devirtual$(jsType) == Ljava_lang_Class_2_classLit;
			if (isClass) {
				o = arguments_0[i_0];
				if (o == null || isAssignableToClass(o, jsType)) {
					continue;
				}
				if (instanceOfJso(o)) {
					gwt = getGwtInstance(o);
					if (gwt != null) {
						if (isAssignableToClass(gwt, jsType)) {
							putObject_4(arguments_0, i_0, gwt);
							continue;
						}
					}
				}
			}
			if ($equals_151('object', jsType) && !isNumber && !isBoolean) {
				continue;
			}
			return false;
		}
		return true;
	}

	function typeof_$(args, i_0) {
		var o = args[i_0];
		var t = o == null ? 'null' : typeof o;
		if (t == 'object') {
			return Object.prototype.toString.call(o) == '[object Array]' || typeof o.length == 'number' ? 'array' : t;
		}
		return t;
	}

	function $clinit_ExporterUtil() {
		$clinit_ExporterUtil = nullMethod;
		impl = new ExporterBaseActual_0;
	}

	function declarePackage(qualifiedExportName) {
		$clinit_ExporterUtil();
		return $declarePackage(qualifiedExportName);
	}

	function gwtInstance(o) {
		var g;
		$clinit_ExporterUtil();
		return o != null && instanceOfJso(o) && (g = getGwtInstance(o)) != null ? g : o;
	}

	function registerDispatchMap(clazz, dispMap, isStatic) {
		$clinit_ExporterUtil();
		$registerDispatchMap(impl, clazz, dispMap, isStatic);
	}

	function runDispatch(instance, clazz, meth, arguments_0, isStatic, isVarArgs) {
		$clinit_ExporterUtil();
		return $runDispatch(impl, instance, clazz, meth, arguments_0, isStatic, isVarArgs);
	}

	function setWrapper(instance, wrapper) {
		$clinit_ExporterUtil();
		$setWrapperJS(instance, wrapper, '__gwtex_wrap');
	}

	function unshift(o, arr) {
		$clinit_ExporterUtil();
		return $unshift(o, arr);
	}

	function wrap_0(type_0) {
		$clinit_ExporterUtil();
		return $wrap(impl, type_0);
	}

	function wrap_1(type_0) {
		$clinit_ExporterUtil();
		return type_0;
	}

	function wrap_2(type_0) {
		$clinit_ExporterUtil();
		return $wrap_0(impl, type_0);
	}

	var impl;

	function $export_150() {
		new EventHandler_ExporterImpl_0;
		new DomainJavascriptDateTimeFormatter_ExporterImpl_0;
		new DomainJavascriptIDGenerator_ExporterImpl_0;
		new DomainJavascriptLogger_ExporterImpl_0;
		new DomainJavascriptNetwork_ExporterImpl_0;
		new DomainJavascriptParser_ExporterImpl_0;
		new DomainJavascriptRepository_ExporterImpl_0;
		new DomainJavascriptStorageProvider_ExporterImpl_0;
		new DomainJavascriptTimeService_ExporterImpl_0;
		new DomainJavascriptTimer_ExporterImpl_0;
		new JSBlobStringBuilder_ExporterImpl_0;
		new CandleQuoteStream_ExporterImpl_0;
		new QuoteTestItem_ExporterImpl_0;
		new BlobStringBuilder_ExporterImpl_0;
		new DomainRunnable_ExporterImpl_0;
		new GWTBlobStringBuilder_ExporterImpl_0;
		new Network_ExporterImpl_0;
		new NetworkHandler_ExporterImpl_0;
		new NetworkManager_ExporterImpl_0;
		new NetworkStatus_ExporterImpl_0;
		new NetworkStatusHandler_ExporterImpl_0;
		new TimeService_ExporterImpl_0;
		new Timer_ExporterImpl_0;
		new BaseManager_ExporterImpl_0;
		new DomainHandler_ExporterImpl_0;
		new DomainModel_ExporterImpl_0;
		new DomainObject_ExporterImpl_0;
		new DomainObjectContainer_ExporterImpl_0;
		new ErrorEvent_ExporterImpl_0;
		new Event_ExporterImpl_0;
		new EventObject_ExporterImpl_0;
		new IDGenerator_ExporterImpl_0;
		new Logger_ExporterImpl_0;
		new Manager_ExporterImpl_0;
		new Parser_ExporterImpl_0;
		new Repository_ExporterImpl_0;
		new DomainDateTimeFormatter_ExporterImpl_0;
		new DomainIDGenerator_ExporterImpl_0;
		new DomainLogger_ExporterImpl_0;
		new DomainNetwork_ExporterImpl_0;
		new DomainParser_ExporterImpl_0;
		new DomainRepository_ExporterImpl_0;
		new DomainStorageProvider_ExporterImpl_0;
		new DomainStorageRequest_ExporterImpl_0;
		new DomainTimeService_ExporterImpl_0;
		new DomainTimer_ExporterImpl_0;
		new BaseQuoteManager_ExporterImpl_0;
		new BidAskQuoteItem_ExporterImpl_0;
		new BoardRankQuoteList_ExporterImpl_0;
		new BoardRankQuoteManager_ExporterImpl_0;
		new BoardTypes_ExporterImpl_0;
		new CandleQuoteManager_ExporterImpl_0;
		new CandleQuoteSortByTime_ExporterImpl_0;
		new CandleQuoteStreamItem_ExporterImpl_0;
		new CapFlowQuoteManager_ExporterImpl_0;
		new CapFlowQuoteSortByTime_ExporterImpl_0;
		new CapFlowQuoteStream_ExporterImpl_0;
		new CapFlowQuoteStreamItem_ExporterImpl_0;
		new PeriodType_ExporterImpl_0;
		new Quote_ExporterImpl_0;
		new QuoteItem_ExporterImpl_0;
		new QuoteItemList_ExporterImpl_0;
		new QuoteList_ExporterImpl_0;
		new QuoteMarketTestItem_ExporterImpl_0;
		new QuoteStream_ExporterImpl_0;
		new QuoteTestManager_ExporterImpl_0;
		new QuoteTestTypes_ExporterImpl_0;
		new RankQuoteItem_ExporterImpl_0;
		new RankSortType_ExporterImpl_0;
		new RealtimeQuoteItem_ExporterImpl_0;
		new RealtimeQuoteManager_ExporterImpl_0;
		new RiseFallStat_ExporterImpl_0;
		new SimpleRealtimeBatchQuoteManager_ExporterImpl_0;
		new SimpleRealtimeQuoteItem_ExporterImpl_0;
		new SimpleRealtimeQuoteItemList_ExporterImpl_0;
		new TickQuoteManager_ExporterImpl_0;
		new TickQuoteSortByTime_ExporterImpl_0;
		new TickQuoteStream_ExporterImpl_0;
		new TickQuoteStreamItem_ExporterImpl_0;
		new TimeSeriesQuoteManager_ExporterImpl_0;
		new TimeSeriesQuoteSortByTime_ExporterImpl_0;
		new TimeSeriesQuoteStream_ExporterImpl_0;
		new TimeSeriesQuoteStreamItem_ExporterImpl_0;
		new BaseRepository_ExporterImpl_0;
		new DomainScheduler_ExporterImpl_0;
		new FixRepository_ExporterImpl_0;
		new HippoQuoteRepository_ExporterImpl_0;
		new QuoteRepository_ExporterImpl_0;
		new RepositoryDispatcher_ExporterImpl_0;
		new ScheduleRepository_ExporterImpl_0;
		new SubscribeRepository_ExporterImpl_0;
		new CodeList_ExporterImpl_0;
		new CodeListRepository_ExporterImpl_0;
		new Securities_ExporterImpl_0;
		new SecurityTypes_ExporterImpl_0;
		new Stock_ExporterImpl_0;
		new StockList_ExporterImpl_0;
		new StockManager_ExporterImpl_0;
		new StorageRepository_ExporterImpl_0;
		new UserStockManager_ExporterImpl_0;
		new UserStockRepository_ExporterImpl_0;
		new StorageProvider_ExporterImpl_0;
		new StorageRequest_ExporterImpl_0;
		new Account_ExporterImpl_0;
		new BankAccount_ExporterImpl_0;
		new BankInfo_ExporterImpl_0;
		new BaseAccount_ExporterImpl_0;
		new BranchInfo_ExporterImpl_0;
		new Client_ExporterImpl_0;
		new ClientManager_ExporterImpl_0;
		new Fund_ExporterImpl_0;
		new FundAccount_ExporterImpl_0;
		new FundAccounts_ExporterImpl_0;
		new Inventory_ExporterImpl_0;
		new InvestPreference_ExporterImpl_0;
		new Money_ExporterImpl_0;
		new SecuritiesFund_ExporterImpl_0;
		new StockAccount_ExporterImpl_0;
		new StockPosition_ExporterImpl_0;
		new BaseTradeManager_ExporterImpl_0;
		new Exchange_ExporterImpl_0;
		new TradeObject_ExporterImpl_0;
		new TradeRequest_ExporterImpl_0;
		new TradeRequestItem_ExporterImpl_0;
		new TradeResData_ExporterImpl_0;
		new TradeResDataItem_ExporterImpl_0;
		new CreditOrder_ExporterImpl_0;
		new CreditOrderItem_ExporterImpl_0;
		new CreditOrderManager_ExporterImpl_0;
		new CreditOrderResult_ExporterImpl_0;
		new FundOrder_ExporterImpl_0;
		new FundOrderItem_ExporterImpl_0;
		new FundOrderManager_ExporterImpl_0;
		new FundOrderResult_ExporterImpl_0;
		new OrderItem_ExporterImpl_0;
		new OrderResultItem_ExporterImpl_0;
		new StockOrder_ExporterImpl_0;
		new StockOrderItem_ExporterImpl_0;
		new StockOrderManager_ExporterImpl_0;
		new StockOrderResult_ExporterImpl_0;
		new ThirdOrder_ExporterImpl_0;
		new ThirdOrderItem_ExporterImpl_0;
		new ThirdOrderManager_ExporterImpl_0;
		new ThirdOrderResult_ExporterImpl_0;
		new TradeManager_ExporterImpl_0;
		new CreditQueryManager_ExporterImpl_0;
		new StockQueryManager_ExporterImpl_0;
		new FixObject_ExporterImpl_0;
		new MsgTypes_ExporterImpl_0;
	}

	var $entry = registerEntry();

	function gwtOnLoad(errFn, modName, modBase, softPermutationId) {
		$moduleName = modName;
		$moduleBase = modBase;
		if (errFn) try {
			$entry(init_5)();
		} catch (e) {
			errFn(modName);
		} else {
			$entry(init_5)();
		}
	}

	var Ljava_lang_Object_2_classLit = createForClass(1),
		Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass(710),
		Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass(705),
		I_classLit = createForPrimitive(' I'),
		_3I_classLit = createForArray(816, I_classLit),
		_3Ljava_lang_Object_2_classLit = createForArray(814, Ljava_lang_Object_2_classLit),
		Ljava_lang_Throwable_2_classLit = createForClass(310),
		Ljava_lang_Exception_2_classLit = createForClass(309),
		Ljava_lang_RuntimeException_2_classLit = createForClass(693),
		Ljava_lang_StackTraceElement_2_classLit = createForClass(759),
		_3Ljava_lang_StackTraceElement_2_classLit = createForArray(817, Ljava_lang_StackTraceElement_2_classLit),
		Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForClass(null),
		_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForArray(818, Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit),
		Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass(731),
		Ljava_lang_Enum_2_classLit = createForClass(747),
		Ljava_lang_Boolean_2_classLit = createForClass(740),
		B_classLit = createForPrimitive(' B'),
		Ljava_lang_Number_2_classLit = createForClass(742),
		Ljava_lang_Byte_2_classLit = createForClass(741),
		_3Ljava_lang_Byte_2_classLit = createForArray(819, Ljava_lang_Byte_2_classLit),
		C_classLit = createForPrimitive(' C'),
		_3C_classLit = createForArray(820, C_classLit),
		J_classLit = createForPrimitive(' J'),
		_3J_classLit = createForArray(821, J_classLit),
		Ljava_lang_Class_2_classLit = createForClass(745),
		Ljava_lang_Double_2_classLit = createForClass(746),
		Ljava_lang_Integer_2_classLit = createForClass(750),
		_3Ljava_lang_Integer_2_classLit = createForArray(822, Ljava_lang_Integer_2_classLit),
		Ljava_lang_Long_2_classLit = createForClass(752),
		_3Ljava_lang_Long_2_classLit = createForArray(823, Ljava_lang_Long_2_classLit),
		Ljava_lang_String_2_classLit = createForClass(2),
		_3Ljava_lang_String_2_classLit = createForArray(815, Ljava_lang_String_2_classLit),
		_3B_classLit = createForArray(810, B_classLit),
		Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass(704),
		Ljava_lang_ArrayStoreException_2_classLit = createForClass(739),
		Lcom_gf_hippo_domain_client_common_Event_2_classLit = createForClass(33),
		Lcom_gf_hippo_domain_client_common_DomainModel_2_classLit = createForClass(26),
		Ljava_lang_NullPointerException_2_classLit = createForClass(755),
		Ljava_lang_IllegalArgumentException_2_classLit = createForClass(748),
		Ljava_lang_ArithmeticException_2_classLit = createForClass(738),
		Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass(717),
		Lorg_timepedia_exporter_client_ExporterBaseImpl_2_classLit = createForClass(804),
		Lorg_timepedia_exporter_client_ExporterBaseActual_2_classLit = createForClass(803),
		Lorg_timepedia_exporter_client_Exportable_2_classLit = createForInterface(),
		Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass(718),
		Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass(712),
		Ljava_util_AbstractMap_2_classLit = createForClass(766),
		Ljava_util_AbstractHashMap_2_classLit = createForClass(765),
		Ljava_util_AbstractCollection_2_classLit = createForClass(764),
		Ljava_util_AbstractSet_2_classLit = createForClass(768),
		Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass(767),
		Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass(769),
		Ljava_util_AbstractMapEntry_2_classLit = createForClass(771),
		Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass(770),
		Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass(772),
		Ljava_util_AbstractMap$1_2_classLit = createForClass(776),
		Ljava_util_AbstractMap$1$1_2_classLit = createForClass(777),
		Ljava_util_AbstractMap$2_2_classLit = createForClass(778),
		Ljava_util_AbstractMap$2$1_2_classLit = createForClass(779),
		Ljava_util_HashMap_2_classLit = createForClass(788),
		Lcom_gf_hippo_domain_client_common_EventHandler_1ExporterImpl_2_classLit = createForClass(35),
		Lcom_gf_hippo_domain_client_common_EventHandler_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptDateTimeFormatter_1ExporterImpl_2_classLit = createForClass(55),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptDateTimeFormatter_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptIDGenerator_1ExporterImpl_2_classLit = createForClass(56),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptIDGenerator_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptLogger_1ExporterImpl_2_classLit = createForClass(57),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptLogger_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptNetwork_1ExporterImpl_2_classLit = createForClass(58),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptNetwork_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptParser_1ExporterImpl_2_classLit = createForClass(59),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptParser_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptRepository_1ExporterImpl_2_classLit = createForClass(60),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptRepository_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_1ExporterImpl_2_classLit = createForClass(61),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptStorageProvider_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimeService_1ExporterImpl_2_classLit = createForClass(62),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimeService_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimer_1ExporterImpl_2_classLit = createForClass(63),
		Lcom_gf_hippo_domain_client_gwt_DomainJavascriptTimer_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_gwt_JSBlobStringBuilder_1ExporterImpl_2_classLit = createForClass(86),
		Lcom_gf_hippo_domain_client_gwt_JSBlobStringBuilder_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteStream_1ExporterImpl_2_classLit = createForClass(107),
		Lcom_gf_hippo_domain_client_common_DomainObject_2_classLit = createForClass(28),
		Lcom_gf_hippo_domain_client_quote_Quote_2_classLit = createForClass(91),
		Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit = createForClass(90),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit = createForClass(105),
		_3Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit = createForArray(824, Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_QuoteStream_2_classLit = createForClass(94),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteStream_2_classLit = createForClass(104),
		Lcom_gf_hippo_domain_client_quote_QuoteTestItem_1ExporterImpl_2_classLit = createForClass(127),
		Lcom_gf_hippo_domain_client_quote_QuoteTestItem_2_classLit = createForClass(124),
		Lcom_gf_hippo_domain_client_common_BlobStringBuilder_1ExporterImpl_2_classLit = createForClass(23),
		Lcom_gf_hippo_domain_client_common_BlobStringBuilder_2_classLit = createForClass(22),
		Lcom_gf_hippo_domain_client_gwt_DomainRunnable_1ExporterImpl_2_classLit = createForClass(73),
		Lcom_gf_hippo_domain_client_gwt_DomainRunnable_2_classLit = createForClass(72),
		Lcom_gf_hippo_domain_client_gwt_GWTBlobStringBuilder_1ExporterImpl_2_classLit = createForClass(85),
		Lcom_gf_hippo_domain_client_gwt_GWTBlobStringBuilder_2_classLit = createForClass(84),
		Lcom_gf_hippo_domain_client_adapter_Network_1ExporterImpl_2_classLit = createForClass(12),
		Lcom_gf_hippo_domain_client_adapter_Network_2_classLit = createForClass(3),
		Lcom_gf_hippo_domain_client_adapter_NetworkHandler_1ExporterImpl_2_classLit = createForClass(5),
		Lcom_gf_hippo_domain_client_adapter_NetworkHandler_2_classLit = createForClass(4),
		Lcom_gf_hippo_domain_client_adapter_NetworkManager_1ExporterImpl_2_classLit = createForClass(7),
		Lcom_gf_hippo_domain_client_adapter_NetworkManager_2_classLit = createForClass(6),
		Lcom_gf_hippo_domain_client_adapter_NetworkStatus_1ExporterImpl_2_classLit = createForClass(11),
		Lcom_gf_hippo_domain_client_adapter_NetworkStatus_2_classLit = createForClass(8),
		Lcom_gf_hippo_domain_client_adapter_NetworkStatusHandler_1ExporterImpl_2_classLit = createForClass(10),
		Lcom_gf_hippo_domain_client_adapter_NetworkStatusHandler_2_classLit = createForClass(9),
		Lcom_gf_hippo_domain_client_adapter_TimeService_1ExporterImpl_2_classLit = createForClass(14),
		Lcom_gf_hippo_domain_client_adapter_TimeService_2_classLit = createForClass(13),
		Lcom_gf_hippo_domain_client_adapter_Timer_1ExporterImpl_2_classLit = createForClass(16),
		Lcom_gf_hippo_domain_client_adapter_Timer_2_classLit = createForClass(15),
		Lcom_gf_hippo_domain_client_common_BaseManager_1ExporterImpl_2_classLit = createForClass(21),
		Lcom_gf_hippo_domain_client_common_Manager_2_classLit = createForClass(18),
		Lcom_gf_hippo_domain_client_common_BaseManager_2_classLit = createForClass(17),
		Lcom_gf_hippo_domain_client_common_DomainHandler_1ExporterImpl_2_classLit = createForClass(25),
		Lcom_gf_hippo_domain_client_common_DomainHandler_2_classLit = createForClass(20),
		Lcom_gf_hippo_domain_client_common_DomainModel_1ExporterImpl_2_classLit = createForClass(27),
		Lcom_gf_hippo_domain_client_common_DomainObject_1ExporterImpl_2_classLit = createForClass(31),
		Lcom_gf_hippo_domain_client_common_DomainObjectContainer_1ExporterImpl_2_classLit = createForClass(30),
		Lcom_gf_hippo_domain_client_common_DomainObjectContainer_2_classLit = createForClass(29),
		Lcom_gf_hippo_domain_client_common_ErrorEvent_1ExporterImpl_2_classLit = createForClass(34),
		Lcom_gf_hippo_domain_client_common_ErrorEvent_2_classLit = createForClass(32),
		Lcom_gf_hippo_domain_client_common_Event_1ExporterImpl_2_classLit = createForClass(38),
		Lcom_gf_hippo_domain_client_common_EventObject_1ExporterImpl_2_classLit = createForClass(37),
		Lcom_gf_hippo_domain_client_common_EventObject_2_classLit = createForClass(36),
		Lcom_gf_hippo_domain_client_common_IDGenerator_1ExporterImpl_2_classLit = createForClass(41),
		Lcom_gf_hippo_domain_client_common_IDGenerator_2_classLit = createForClass(40),
		Lcom_gf_hippo_domain_client_common_Logger_1ExporterImpl_2_classLit = createForClass(43),
		Lcom_gf_hippo_domain_client_common_Logger_2_classLit = createForClass(42),
		Lcom_gf_hippo_domain_client_common_Manager_1ExporterImpl_2_classLit = createForClass(45),
		Lcom_gf_hippo_domain_client_common_Parser_1ExporterImpl_2_classLit = createForClass(47),
		Lcom_gf_hippo_domain_client_common_Parser_2_classLit = createForClass(46),
		Lcom_gf_hippo_domain_client_common_Repository_1ExporterImpl_2_classLit = createForClass(49),
		Lcom_gf_hippo_domain_client_common_Repository_2_classLit = createForClass(48),
		Lcom_gf_hippo_domain_client_gwt_DomainDateTimeFormatter_1ExporterImpl_2_classLit = createForClass(52),
		Lcom_gf_hippo_domain_client_gwt_DomainDateTimeFormatter_2_classLit = createForClass(51),
		Lcom_gf_hippo_domain_client_gwt_DomainIDGenerator_1ExporterImpl_2_classLit = createForClass(54),
		Lcom_gf_hippo_domain_client_gwt_DomainIDGenerator_2_classLit = createForClass(53),
		Lcom_gf_hippo_domain_client_gwt_DomainLogger_1ExporterImpl_2_classLit = createForClass(65),
		Lcom_gf_hippo_domain_client_gwt_DomainLogger_2_classLit = createForClass(64),
		Lcom_gf_hippo_domain_client_gwt_DomainNetwork_1ExporterImpl_2_classLit = createForClass(67),
		Lcom_gf_hippo_domain_client_gwt_DomainNetwork_2_classLit = createForClass(66),
		Lcom_gf_hippo_domain_client_gwt_DomainParser_1ExporterImpl_2_classLit = createForClass(69),
		Lcom_gf_hippo_domain_client_gwt_DomainParser_2_classLit = createForClass(68),
		Lcom_gf_hippo_domain_client_gwt_DomainRepository_1ExporterImpl_2_classLit = createForClass(71),
		Lcom_gf_hippo_domain_client_gwt_DomainRepository_2_classLit = createForClass(70),
		Lcom_gf_hippo_domain_client_gwt_DomainStorageProvider_1ExporterImpl_2_classLit = createForClass(76),
		Lcom_gf_hippo_domain_client_storage_StorageProvider_2_classLit = createForClass(75),
		Lcom_gf_hippo_domain_client_gwt_DomainStorageProvider_2_classLit = createForClass(74),
		Lcom_gf_hippo_domain_client_gwt_DomainStorageRequest_1ExporterImpl_2_classLit = createForClass(79),
		Lcom_gf_hippo_domain_client_storage_StorageRequest_2_classLit = createForClass(78),
		Lcom_gf_hippo_domain_client_gwt_DomainStorageRequest_2_classLit = createForClass(77),
		Lcom_gf_hippo_domain_client_gwt_DomainTimeService_1ExporterImpl_2_classLit = createForClass(81),
		Lcom_gf_hippo_domain_client_gwt_DomainTimeService_2_classLit = createForClass(80),
		Lcom_gf_hippo_domain_client_gwt_DomainTimer_1ExporterImpl_2_classLit = createForClass(83),
		Lcom_gf_hippo_domain_client_gwt_DomainTimer_2_classLit = createForClass(82),
		Lcom_gf_hippo_domain_client_quote_BaseQuoteManager_1ExporterImpl_2_classLit = createForClass(88),
		Lcom_gf_hippo_domain_client_quote_BaseQuoteManager_2_classLit = createForClass(87),
		Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_1ExporterImpl_2_classLit = createForClass(92),
		Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit = createForClass(89),
		Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_1ExporterImpl_2_classLit = createForClass(95),
		Lcom_gf_hippo_domain_client_quote_RealtimeQuoteItem_2_classLit = createForClass(134),
		Lcom_gf_hippo_domain_client_quote_RankQuoteItem_2_classLit = createForClass(133),
		_3Lcom_gf_hippo_domain_client_quote_RankQuoteItem_2_classLit = createForArray(825, Lcom_gf_hippo_domain_client_quote_RankQuoteItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_BoardRankQuoteList_2_classLit = createForClass(93),
		Lcom_gf_hippo_domain_client_quote_BoardRankQuoteManager_1ExporterImpl_2_classLit = createForClass(97),
		Lcom_gf_hippo_domain_client_quote_BoardRankQuoteManager_2_classLit = createForClass(96),
		Lcom_gf_hippo_domain_client_quote_BoardTypes_1ExporterImpl_2_classLit = createForClass(99),
		Lcom_gf_hippo_domain_client_quote_BoardTypes_2_classLit = createForClass(98),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteManager_1ExporterImpl_2_classLit = createForClass(101),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteManager_2_classLit = createForClass(100),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteSortByTime_1ExporterImpl_2_classLit = createForClass(103),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteSortByTime_2_classLit = createForClass(102),
		Lcom_gf_hippo_domain_client_quote_CandleQuoteStreamItem_1ExporterImpl_2_classLit = createForClass(106),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteManager_1ExporterImpl_2_classLit = createForClass(109),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteManager_2_classLit = createForClass(108),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteSortByTime_1ExporterImpl_2_classLit = createForClass(111),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteSortByTime_2_classLit = createForClass(110),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStream_1ExporterImpl_2_classLit = createForClass(115),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit = createForClass(113),
		_3Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit = createForArray(826, Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStream_2_classLit = createForClass(112),
		Lcom_gf_hippo_domain_client_quote_CapFlowQuoteStreamItem_1ExporterImpl_2_classLit = createForClass(114),
		Lcom_gf_hippo_domain_client_quote_PeriodType_1ExporterImpl_2_classLit = createForClass(117),
		Lcom_gf_hippo_domain_client_quote_PeriodType_2_classLit = createForClass(116),
		Lcom_gf_hippo_domain_client_quote_Quote_1ExporterImpl_2_classLit = createForClass(132),
		Lcom_gf_hippo_domain_client_quote_QuoteItem_1ExporterImpl_2_classLit = createForClass(120),
		Lcom_gf_hippo_domain_client_quote_QuoteItemList_1ExporterImpl_2_classLit = createForClass(119),
		_3Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit = createForArray(827, Lcom_gf_hippo_domain_client_quote_QuoteItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_QuoteItemList_2_classLit = createForClass(118),
		Lcom_gf_hippo_domain_client_quote_QuoteList_1ExporterImpl_2_classLit = createForClass(122),
		Lcom_gf_hippo_domain_client_quote_QuoteList_2_classLit = createForClass(121),
		Lcom_gf_hippo_domain_client_quote_QuoteMarketTestItem_1ExporterImpl_2_classLit = createForClass(125),
		Lcom_gf_hippo_domain_client_quote_QuoteMarketTestItem_2_classLit = createForClass(123),
		Lcom_gf_hippo_domain_client_quote_QuoteStream_1ExporterImpl_2_classLit = createForClass(126),
		Lcom_gf_hippo_domain_client_quote_QuoteTestManager_1ExporterImpl_2_classLit = createForClass(129),
		Lcom_gf_hippo_domain_client_quote_QuoteTestManager_2_classLit = createForClass(128),
		Lcom_gf_hippo_domain_client_quote_QuoteTestTypes_1ExporterImpl_2_classLit = createForClass(131),
		Lcom_gf_hippo_domain_client_quote_QuoteTestTypes_2_classLit = createForClass(130),
		Lcom_gf_hippo_domain_client_quote_RankQuoteItem_1ExporterImpl_2_classLit = createForClass(135),
		_3Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit = createForArray(828, Lcom_gf_hippo_domain_client_quote_BidAskQuoteItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_RankSortType_1ExporterImpl_2_classLit = createForClass(137),
		Lcom_gf_hippo_domain_client_quote_RankSortType_2_classLit = createForClass(136),
		Lcom_gf_hippo_domain_client_quote_RealtimeQuoteItem_1ExporterImpl_2_classLit = createForClass(138),
		Lcom_gf_hippo_domain_client_quote_RealtimeQuoteManager_1ExporterImpl_2_classLit = createForClass(140),
		Lcom_gf_hippo_domain_client_quote_RealtimeQuoteManager_2_classLit = createForClass(139),
		Lcom_gf_hippo_domain_client_quote_RiseFallStat_1ExporterImpl_2_classLit = createForClass(142),
		Lcom_gf_hippo_domain_client_quote_RiseFallStat_2_classLit = createForClass(141),
		Lcom_gf_hippo_domain_client_quote_SimpleRealtimeBatchQuoteManager_1ExporterImpl_2_classLit = createForClass(144),
		Lcom_gf_hippo_domain_client_quote_SimpleRealtimeBatchQuoteManager_2_classLit = createForClass(143),
		Lcom_gf_hippo_domain_client_quote_SimpleRealtimeQuoteItem_1ExporterImpl_2_classLit = createForClass(148),
		Lcom_gf_hippo_domain_client_quote_SimpleRealtimeQuoteItem_2_classLit = createForClass(145),
		Lcom_gf_hippo_domain_client_quote_SimpleRealtimeQuoteItemList_1ExporterImpl_2_classLit = createForClass(147),
		Lcom_gf_hippo_domain_client_quote_SimpleRealtimeQuoteItemList_2_classLit = createForClass(146),
		Lcom_gf_hippo_domain_client_quote_TickQuoteManager_1ExporterImpl_2_classLit = createForClass(150),
		Lcom_gf_hippo_domain_client_quote_TickQuoteManager_2_classLit = createForClass(149),
		Lcom_gf_hippo_domain_client_quote_TickQuoteSortByTime_1ExporterImpl_2_classLit = createForClass(152),
		Lcom_gf_hippo_domain_client_quote_TickQuoteSortByTime_2_classLit = createForClass(151),
		Lcom_gf_hippo_domain_client_quote_TickQuoteStream_1ExporterImpl_2_classLit = createForClass(156),
		Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit = createForClass(154),
		_3Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit = createForArray(829, Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_TickQuoteStream_2_classLit = createForClass(153),
		Lcom_gf_hippo_domain_client_quote_TickQuoteStreamItem_1ExporterImpl_2_classLit = createForClass(155),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteManager_1ExporterImpl_2_classLit = createForClass(158),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteManager_2_classLit = createForClass(157),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteSortByTime_1ExporterImpl_2_classLit = createForClass(160),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteSortByTime_2_classLit = createForClass(159),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStream_1ExporterImpl_2_classLit = createForClass(164),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit = createForClass(162),
		_3Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit = createForArray(830, Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_2_classLit),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStream_2_classLit = createForClass(161),
		Lcom_gf_hippo_domain_client_quote_TimeSeriesQuoteStreamItem_1ExporterImpl_2_classLit = createForClass(163),
		Lcom_gf_hippo_domain_client_repository_BaseRepository_1ExporterImpl_2_classLit = createForClass(166),
		Lcom_gf_hippo_domain_client_repository_BaseRepository_2_classLit = createForClass(165),
		Lcom_gf_hippo_domain_client_repository_DomainScheduler_1ExporterImpl_2_classLit = createForClass(170),
		Lcom_gf_hippo_domain_client_repository_DomainScheduler_2_classLit = createForClass(168),
		Lcom_gf_hippo_domain_client_repository_FixRepository_1ExporterImpl_2_classLit = createForClass(172),
		Lcom_gf_hippo_domain_client_repository_FixRepository_2_classLit = createForClass(171),
		Lcom_gf_hippo_domain_client_repository_HippoQuoteRepository_1ExporterImpl_2_classLit = createForClass(177),
		Lcom_gf_hippo_domain_client_repository_HippoQuoteRepository_2_classLit = createForClass(173),
		Lcom_gf_hippo_domain_client_repository_QuoteRepository_1ExporterImpl_2_classLit = createForClass(180),
		Lcom_gf_hippo_domain_client_repository_QuoteRepository_2_classLit = createForClass(178),
		Lcom_gf_hippo_domain_client_repository_RepositoryDispatcher_1ExporterImpl_2_classLit = createForClass(182),
		Lcom_gf_hippo_domain_client_repository_RepositoryDispatcher_2_classLit = createForClass(181),
		Lcom_gf_hippo_domain_client_repository_ScheduleRepository_1ExporterImpl_2_classLit = createForClass(185),
		Lcom_gf_hippo_domain_client_repository_ScheduleRepository_2_classLit = createForClass(183),
		Lcom_gf_hippo_domain_client_repository_SubscribeRepository_1ExporterImpl_2_classLit = createForClass(189),
		Lcom_gf_hippo_domain_client_repository_SubscribeRepository_2_classLit = createForClass(186),
		Lcom_gf_hippo_domain_client_securities_CodeList_1ExporterImpl_2_classLit = createForClass(195),
		Lcom_gf_hippo_domain_client_securities_CodeList_2_classLit = createForClass(190),
		Lcom_gf_hippo_domain_client_securities_CodeListRepository_1ExporterImpl_2_classLit = createForClass(194),
		Lcom_gf_hippo_domain_client_securities_CodeListRepository_2_classLit = createForClass(191),
		Lcom_gf_hippo_domain_client_securities_Securities_1ExporterImpl_2_classLit = createForClass(197),
		Lcom_gf_hippo_domain_client_securities_Securities_2_classLit = createForClass(196),
		Lcom_gf_hippo_domain_client_securities_SecurityTypes_1ExporterImpl_2_classLit = createForClass(199),
		Lcom_gf_hippo_domain_client_securities_SecurityTypes_2_classLit = createForClass(198),
		Lcom_gf_hippo_domain_client_securities_Stock_1ExporterImpl_2_classLit = createForClass(205),
		Lcom_gf_hippo_domain_client_securities_Stock_2_classLit = createForClass(200),
		Lcom_gf_hippo_domain_client_securities_StockList_1ExporterImpl_2_classLit = createForClass(202),
		_3Lcom_gf_hippo_domain_client_securities_Stock_2_classLit = createForArray(831, Lcom_gf_hippo_domain_client_securities_Stock_2_classLit),
		Lcom_gf_hippo_domain_client_securities_StockList_2_classLit = createForClass(201),
		Lcom_gf_hippo_domain_client_securities_StockManager_1ExporterImpl_2_classLit = createForClass(204),
		Lcom_gf_hippo_domain_client_securities_StockManager_2_classLit = createForClass(203),
		Lcom_gf_hippo_domain_client_securities_StorageRepository_1ExporterImpl_2_classLit = createForClass(207),
		Lcom_gf_hippo_domain_client_securities_StorageRepository_2_classLit = createForClass(206),
		Lcom_gf_hippo_domain_client_securities_UserStockManager_1ExporterImpl_2_classLit = createForClass(209),
		Lcom_gf_hippo_domain_client_securities_UserStockManager_2_classLit = createForClass(208),
		Lcom_gf_hippo_domain_client_securities_UserStockRepository_1ExporterImpl_2_classLit = createForClass(212),
		Lcom_gf_hippo_domain_client_securities_UserStockRepository_2_classLit = createForClass(210),
		Lcom_gf_hippo_domain_client_storage_StorageProvider_1ExporterImpl_2_classLit = createForClass(213),
		Lcom_gf_hippo_domain_client_storage_StorageRequest_1ExporterImpl_2_classLit = createForClass(214),
		Lcom_gf_hippo_domain_client_trade_account_Account_1ExporterImpl_2_classLit = createForClass(216),
		Lcom_gf_hippo_domain_client_trade_account_Account_2_classLit = createForClass(215),
		Lcom_gf_hippo_domain_client_trade_account_BankAccount_1ExporterImpl_2_classLit = createForClass(218),
		Lcom_gf_hippo_domain_client_trade_account_BankAccount_2_classLit = createForClass(217),
		Lcom_gf_hippo_domain_client_trade_account_BankInfo_1ExporterImpl_2_classLit = createForClass(220),
		Lcom_gf_hippo_domain_client_trade_account_BankInfo_2_classLit = createForClass(219),
		Lcom_gf_hippo_domain_client_trade_account_BaseAccount_1ExporterImpl_2_classLit = createForClass(223),
		Lcom_gf_hippo_domain_client_trade_account_FundAccount_2_classLit = createForClass(222),
		Lcom_gf_hippo_domain_client_trade_account_BaseAccount_2_classLit = createForClass(221),
		Lcom_gf_hippo_domain_client_trade_account_BranchInfo_1ExporterImpl_2_classLit = createForClass(225),
		Lcom_gf_hippo_domain_client_trade_account_BranchInfo_2_classLit = createForClass(224),
		Lcom_gf_hippo_domain_client_trade_account_Client_1ExporterImpl_2_classLit = createForClass(233),
		Lcom_gf_hippo_domain_client_trade_common_TradeObject_2_classLit = createForClass(227),
		Lcom_gf_hippo_domain_client_trade_account_Client_2_classLit = createForClass(226),
		Lcom_gf_hippo_domain_client_trade_account_ClientManager_1ExporterImpl_2_classLit = createForClass(232),
		Lcom_gf_hippo_domain_client_trade_common_BaseTradeManager_2_classLit = createForClass(229),
		Lcom_gf_hippo_domain_client_trade_account_ClientManager_2_classLit = createForClass(228),
		Lcom_gf_hippo_domain_client_trade_account_Fund_1ExporterImpl_2_classLit = createForClass(238),
		Lcom_gf_hippo_domain_client_trade_account_Fund_2_classLit = createForClass(234),
		Lcom_gf_hippo_domain_client_trade_account_FundAccount_1ExporterImpl_2_classLit = createForClass(235),
		Lcom_gf_hippo_domain_client_trade_account_FundAccounts_1ExporterImpl_2_classLit = createForClass(237),
		Lcom_gf_hippo_domain_client_trade_account_FundAccounts_2_classLit = createForClass(236),
		Lcom_gf_hippo_domain_client_trade_account_Inventory_1ExporterImpl_2_classLit = createForClass(240),
		Lcom_gf_hippo_domain_client_trade_account_Inventory_2_classLit = createForClass(239),
		Lcom_gf_hippo_domain_client_trade_account_InvestPreference_1ExporterImpl_2_classLit = createForClass(242),
		Lcom_gf_hippo_domain_client_trade_account_InvestPreference_2_classLit = createForClass(241),
		Lcom_gf_hippo_domain_client_trade_account_Money_1ExporterImpl_2_classLit = createForClass(244),
		Lcom_gf_hippo_domain_client_trade_account_Money_2_classLit = createForClass(243),
		Lcom_gf_hippo_domain_client_trade_account_SecuritiesFund_1ExporterImpl_2_classLit = createForClass(246),
		Lcom_gf_hippo_domain_client_trade_account_SecuritiesFund_2_classLit = createForClass(245),
		Lcom_gf_hippo_domain_client_trade_account_StockAccount_1ExporterImpl_2_classLit = createForClass(248),
		Lcom_gf_hippo_domain_client_trade_account_StockAccount_2_classLit = createForClass(247),
		Lcom_gf_hippo_domain_client_trade_account_StockPosition_1ExporterImpl_2_classLit = createForClass(250),
		Lcom_gf_hippo_domain_client_trade_account_StockPosition_2_classLit = createForClass(249),
		Lcom_gf_hippo_domain_client_trade_common_BaseTradeManager_1ExporterImpl_2_classLit = createForClass(251),
		Lcom_gf_hippo_domain_client_trade_common_Exchange_1ExporterImpl_2_classLit = createForClass(253),
		Lcom_gf_hippo_domain_client_trade_common_Exchange_2_classLit = createForClass(252),
		Lcom_gf_hippo_domain_client_trade_common_TradeObject_1ExporterImpl_2_classLit = createForClass(254),
		Lcom_gf_hippo_domain_client_trade_common_TradeRequest_1ExporterImpl_2_classLit = createForClass(258),
		Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_2_classLit = createForClass(256),
		_3Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_2_classLit = createForArray(832, Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_2_classLit),
		Lcom_gf_hippo_domain_client_trade_common_TradeRequest_2_classLit = createForClass(255),
		Lcom_gf_hippo_domain_client_trade_common_TradeRequestItem_1ExporterImpl_2_classLit = createForClass(257),
		Lcom_gf_hippo_domain_client_trade_common_TradeResData_1ExporterImpl_2_classLit = createForClass(262),
		Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_2_classLit = createForClass(260),
		_3Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_2_classLit = createForArray(833, Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_2_classLit),
		Lcom_gf_hippo_domain_client_trade_common_TradeResData_2_classLit = createForClass(259),
		Lcom_gf_hippo_domain_client_trade_common_TradeResDataItem_1ExporterImpl_2_classLit = createForClass(261),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrder_1ExporterImpl_2_classLit = createForClass(272),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrder_2_classLit = createForClass(263),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrderItem_1ExporterImpl_2_classLit = createForClass(266),
		Lcom_gf_hippo_domain_client_trade_order_OrderItem_2_classLit = createForClass(265),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrderItem_2_classLit = createForClass(264),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrderManager_1ExporterImpl_2_classLit = createForClass(269),
		Lcom_gf_hippo_domain_client_trade_order_TradeManager_2_classLit = createForClass(268),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrderManager_2_classLit = createForClass(267),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrderResult_1ExporterImpl_2_classLit = createForClass(271),
		Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit = createForClass(282),
		_3Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit = createForArray(834, Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_2_classLit),
		Lcom_gf_hippo_domain_client_trade_order_CreditOrderResult_2_classLit = createForClass(270),
		Lcom_gf_hippo_domain_client_trade_order_FundOrder_1ExporterImpl_2_classLit = createForClass(280),
		Lcom_gf_hippo_domain_client_trade_order_FundOrder_2_classLit = createForClass(273),
		Lcom_gf_hippo_domain_client_trade_order_FundOrderItem_1ExporterImpl_2_classLit = createForClass(275),
		Lcom_gf_hippo_domain_client_trade_order_FundOrderItem_2_classLit = createForClass(274),
		Lcom_gf_hippo_domain_client_trade_order_FundOrderManager_1ExporterImpl_2_classLit = createForClass(277),
		Lcom_gf_hippo_domain_client_trade_order_FundOrderManager_2_classLit = createForClass(276),
		Lcom_gf_hippo_domain_client_trade_order_FundOrderResult_1ExporterImpl_2_classLit = createForClass(279),
		Lcom_gf_hippo_domain_client_trade_order_FundOrderResult_2_classLit = createForClass(278),
		Lcom_gf_hippo_domain_client_trade_order_OrderItem_1ExporterImpl_2_classLit = createForClass(281),
		Lcom_gf_hippo_domain_client_trade_order_OrderResultItem_1ExporterImpl_2_classLit = createForClass(283),
		Lcom_gf_hippo_domain_client_trade_order_StockOrder_1ExporterImpl_2_classLit = createForClass(293),
		Lcom_gf_hippo_domain_client_trade_order_StockOrder_2_classLit = createForClass(286),
		Lcom_gf_hippo_domain_client_trade_order_StockOrderItem_1ExporterImpl_2_classLit = createForClass(288),
		Lcom_gf_hippo_domain_client_trade_order_StockOrderItem_2_classLit = createForClass(287),
		Lcom_gf_hippo_domain_client_trade_order_StockOrderManager_1ExporterImpl_2_classLit = createForClass(290),
		Lcom_gf_hippo_domain_client_trade_order_StockOrderManager_2_classLit = createForClass(289),
		Lcom_gf_hippo_domain_client_trade_order_StockOrderResult_1ExporterImpl_2_classLit = createForClass(292),
		Lcom_gf_hippo_domain_client_trade_order_StockOrderResult_2_classLit = createForClass(291),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrder_1ExporterImpl_2_classLit = createForClass(301),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrder_2_classLit = createForClass(294),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrderItem_1ExporterImpl_2_classLit = createForClass(296),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrderItem_2_classLit = createForClass(295),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrderManager_1ExporterImpl_2_classLit = createForClass(298),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrderManager_2_classLit = createForClass(297),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrderResult_1ExporterImpl_2_classLit = createForClass(300),
		Lcom_gf_hippo_domain_client_trade_order_ThirdOrderResult_2_classLit = createForClass(299),
		Lcom_gf_hippo_domain_client_trade_order_TradeManager_1ExporterImpl_2_classLit = createForClass(302),
		Lcom_gf_hippo_domain_client_trade_query_CreditQueryManager_1ExporterImpl_2_classLit = createForClass(304),
		Lcom_gf_hippo_domain_client_trade_query_CreditQueryManager_2_classLit = createForClass(303),
		Lcom_gf_hippo_domain_client_trade_query_StockQueryManager_1ExporterImpl_2_classLit = createForClass(306),
		Lcom_gf_hippo_domain_client_trade_query_StockQueryManager_2_classLit = createForClass(305),
		Lcom_gf_hippo_protocol_fix_FixObject_1ExporterImpl_2_classLit = createForClass(312),
		Lcom_gf_hippo_protocol_fix_FixObject_2_classLit = createForClass(311),
		Lcom_gf_hippo_protocol_fix_nio_Buffer_2_classLit = createForClass(691),
		Lcom_gf_hippo_protocol_fix_nio_ByteBuffer_2_classLit = createForClass(695),
		Lcom_gf_hippo_protocol_fix_MsgTypes_1ExporterImpl_2_classLit = createForClass(316),
		Lcom_gf_hippo_protocol_fix_MsgTypes_2_classLit = createForClass(315),
		Ljava_util_MapEntryImpl_2_classLit = createForClass(790),
		Lcom_gf_hippo_domain_client_common_BaseManager$1_2_classLit = createForClass(19),
		Lcom_gf_hippo_domain_client_repository_DomainScheduler$1_2_classLit = createForClass(169),
		Lcom_gf_hippo_domain_client_repository_HippoQuoteRepository$1_2_classLit = createForClass(174),
		Lcom_gf_hippo_domain_client_repository_HippoQuoteRepository$2_2_classLit = createForClass(175),
		Lcom_gf_hippo_domain_client_repository_HippoQuoteRepository$3_2_classLit = createForClass(176),
		Lcom_gf_hippo_domain_client_repository_QuoteRepository$1_2_classLit = createForClass(179),
		Lcom_gf_hippo_domain_client_repository_ScheduleRepository$1_2_classLit = createForClass(184),
		Lcom_gf_hippo_domain_client_repository_SubscribeRepository$Info_2_classLit = createForClass(188),
		Lcom_gf_hippo_domain_client_repository_SubscribeRepository$1_2_classLit = createForClass(187),
		Lcom_gf_hippo_domain_client_securities_CodeListRepository$1_2_classLit = createForClass(192),
		Lcom_gf_hippo_domain_client_securities_CodeListRepository$2_2_classLit = createForClass(193),
		Lcom_gf_hippo_domain_client_securities_UserStockRepository$1_2_classLit = createForClass(211),
		Lcom_gf_hippo_protocol_fix_messaging_FixMessageListenerImpl_2_classLit = createForClass(231),
		Lcom_gf_hippo_domain_client_trade_account_ClientManager$1_2_classLit = createForClass(230),
		Lcom_gf_hippo_domain_client_trade_order_OrderResult_1ExporterImpl_2_classLit = createForClass(284),
		Lcom_gf_hippo_domain_client_trade_order_OrderResult_2_classLit = createForInterface(),
		Lcom_gf_hippo_domain_client_trade_order_Order_1ExporterImpl_2_classLit = createForClass(285),
		Lcom_gf_hippo_domain_client_trade_order_Order_2_classLit = createForInterface(),
		Ljava_lang_StringBuffer_2_classLit = createForClass(761),
		Ljava_util_TreeMap_2_classLit = createForClass(792),
		Ljava_util_TreeMap$EntryIterator_2_classLit = createForClass(794),
		Ljava_util_TreeMap$EntrySet_2_classLit = createForClass(795),
		Ljava_util_TreeMap$Node_2_classLit = createForClass(796),
		_3Ljava_util_TreeMap$Node_2_classLit = createForArray(835, Ljava_util_TreeMap$Node_2_classLit),
		Ljava_util_TreeMap$State_2_classLit = createForClass(797),
		Ljava_util_TreeMap$SubMapType_2_classLit = createForEnum(798, values_0),
		_3Ljava_util_TreeMap$SubMapType_2_classLit = createForArray(836, Ljava_util_TreeMap$SubMapType_2_classLit),
		Ljava_util_TreeMap$SubMapType$1_2_classLit = createForEnum(799, null),
		Ljava_util_TreeMap$SubMapType$2_2_classLit = createForEnum(800, null),
		Ljava_util_TreeMap$SubMapType$3_2_classLit = createForEnum(801, null),
		Ljava_util_TreeMap$1_2_classLit = createForClass(793),
		Lcom_gf_hippo_protocol_fix_FixSessionException_2_classLit = createForClass(313),
		Lcom_gf_hippo_protocol_fix_FixGarbledException_2_classLit = createForClass(308),
		Ljava_util_AbstractList_2_classLit = createForClass(773),
		Ljava_util_ArrayList_2_classLit = createForClass(780),
		Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass(774),
		Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass(775),
		Ljava_util_Date_2_classLit = createForClass(786),
		Ljava_util_Arrays$ArrayList_2_classLit = createForClass(782),
		Lcom_gf_hippo_domain_client_common_ManagedObject_2_classLit = createForClass(44),
		Ljava_util_HashSet_2_classLit = createForClass(789),
		Ljava_lang_NumberFormatException_2_classLit = createForClass(758),
		Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass(749),
		Lcom_gf_hippo_domain_client_repository_DomainScheduleInfo_2_classLit = createForClass(167),
		Lcom_gf_hippo_domain_client_common_DomainHandlerProxy_2_classLit = createForClass(24),
		Lcom_gf_hippo_domain_client_common_HashComparator_2_classLit = createForClass(39),
		Lcom_gf_hippo_protocol_fix_messaging_FixMessageParser_2_classLit = createForClass(518),
		Lcom_gf_hippo_protocol_fix_messaging_FixGeneratedBaseMessage_2_classLit = createForClass(323),
		Lcom_gf_hippo_protocol_fix_messaging_FixMessage_2_classLit = createForClass(322),
		Lcom_gf_hippo_protocol_fix_messaging_FixMessageParser$2_2_classLit = createForClass(519),
		Lcom_gf_hippo_protocol_fix_messaging_FixLogon_2_classLit = createForClass(328),
		Lcom_gf_hippo_protocol_fix_messaging_FixOrderCancelRequest_2_classLit = createForClass(522),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrument_2_classLit = createForClass(574),
		Lcom_gf_hippo_protocol_fix_messaging_FixNewOrderSingle_2_classLit = createForClass(520),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixOrderQtyData_2_classLit = createForClass(622),
		_3_3B_classLit = createForArray(837, _3B_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_FixPositionMaintenanceRequest_2_classLit = createForClass(526),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionAmountData_2_classLit = createForClass(626),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionAmountData$PositionAmountData_2_classLit = createForClass(627),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionAmountData$PositionAmountData_2_classLit = createForArray(838, Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionAmountData$PositionAmountData_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionQty_2_classLit = createForClass(628),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionQty$PositionQty_2_classLit = createForClass(629),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionQty$PositionQty_2_classLit = createForArray(839, Lcom_gf_hippo_protocol_fix_messaging_component_FixPositionQty$PositionQty_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixParties_2_classLit = createForClass(623),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixParties$Parties_2_classLit = createForClass(624),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixParties$Parties_2_classLit = createForArray(840, Lcom_gf_hippo_protocol_fix_messaging_component_FixParties$Parties_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_FixRequestForPositions_2_classLit = createForClass(529),
		Lcom_gf_hippo_protocol_fix_messaging_FixOrderStatusRequest_2_classLit = createForClass(524),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixFinancingDetails_2_classLit = createForClass(566),
		Ljava_lang_UnsupportedOperationException_2_classLit = createForClass(763),
		Ljava_lang_IllegalStateException_2_classLit = createForClass(701),
		Lcom_gf_hippo_protocol_fix_messaging_FixHeartbeat_2_classLit = createForClass(327),
		Lcom_gf_hippo_protocol_fix_messaging_FixTestRequest_2_classLit = createForClass(535),
		Lcom_gf_hippo_protocol_fix_messaging_FixResendRequest_2_classLit = createForClass(531),
		Lcom_gf_hippo_protocol_fix_messaging_FixSequenceReset_2_classLit = createForClass(534),
		Lcom_gf_hippo_protocol_fix_messaging_FixLogout_2_classLit = createForClass(329),
		Lcom_gf_hippo_protocol_fix_messaging_FixExecutionReport_2_classLit = createForClass(326),
		Lcom_gf_hippo_protocol_fix_messaging_FixOrderCancelReject_2_classLit = createForClass(521),
		Lcom_gf_hippo_protocol_fix_messaging_FixPositionMaintenanceReport_2_classLit = createForClass(525),
		Lcom_gf_hippo_protocol_fix_messaging_FixCollateralResponse_2_classLit = createForClass(324),
		Lcom_gf_hippo_protocol_fix_messaging_FixQuoteRequest_2_classLit = createForClass(528),
		Lcom_gf_hippo_protocol_fix_messaging_FixQuote_2_classLit = createForClass(527),
		Lcom_gf_hippo_protocol_fix_messaging_FixSecurityListRequest_2_classLit = createForClass(533),
		Lcom_gf_hippo_protocol_fix_messaging_FixSecurityList_2_classLit = createForClass(532),
		Lcom_gf_hippo_protocol_fix_messaging_FixRequestForPositionsAck_2_classLit = createForClass(530),
		Lcom_gf_hippo_protocol_fix_messaging_FixTradeCaptureReportRequestAck_2_classLit = createForClass(537),
		Lcom_gf_hippo_protocol_fix_messaging_FixUserResponse_2_classLit = createForClass(539),
		Lcom_gf_hippo_protocol_fix_messaging_FixExecutionAcknowledgement_2_classLit = createForClass(325),
		Lcom_gf_hippo_protocol_fix_messaging_FixUserRequest_2_classLit = createForClass(538),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMsgTypeGrp_2_classLit = createForClass(600),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMsgTypeGrp$MsgTypeGrp_2_classLit = createForClass(601),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMsgTypeGrp$MsgTypeGrp_2_classLit = createForArray(841, Lcom_gf_hippo_protocol_fix_messaging_component_FixMsgTypeGrp$MsgTypeGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixHopGrp_2_classLit = createForClass(567),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtGrp_2_classLit = createForClass(679),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtGrp$UndInstrmtGrp_2_classLit = createForClass(680),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtGrp$UndInstrmtGrp_2_classLit = createForArray(842, Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtGrp$UndInstrmtGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPreAllocGrp_2_classLit = createForClass(630),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPreAllocGrp$PreAllocGrp_2_classLit = createForClass(631),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPreAllocGrp$PreAllocGrp_2_classLit = createForArray(843, Lcom_gf_hippo_protocol_fix_messaging_component_FixPreAllocGrp$PreAllocGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixDisplayInstruction_2_classLit = createForClass(556),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdgSesGrp_2_classLit = createForClass(674),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdgSesGrp$TrdgSesGrp_2_classLit = createForClass(675),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdgSesGrp$TrdgSesGrp_2_classLit = createForArray(844, Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdgSesGrp$TrdgSesGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixStipulations_2_classLit = createForClass(655),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixStipulations$Stipulations_2_classLit = createForClass(656),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixStipulations$Stipulations_2_classLit = createForArray(845, Lcom_gf_hippo_protocol_fix_messaging_component_FixStipulations$Stipulations_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTriggeringInstruction_2_classLit = createForClass(676),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSpreadOrBenchmarkCurveData_2_classLit = createForClass(654),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixYieldData_2_classLit = createForClass(690),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixCommissionData_2_classLit = createForClass(544),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPegInstructions_2_classLit = createForClass(625),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixDiscretionInstructions_2_classLit = createForClass(555),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixStrategyParametersGrp_2_classLit = createForClass(657),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixStrategyParametersGrp$StrategyParametersGrp_2_classLit = createForClass(658),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixStrategyParametersGrp$StrategyParametersGrp_2_classLit = createForArray(846, Lcom_gf_hippo_protocol_fix_messaging_component_FixStrategyParametersGrp$StrategyParametersGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdRegTimestamps_2_classLit = createForClass(672),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdRegTimestamps$TrdRegTimestamps_2_classLit = createForClass(673),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdRegTimestamps$TrdRegTimestamps_2_classLit = createForArray(847, Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdRegTimestamps$TrdRegTimestamps_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUnderlyingInstrument_2_classLit = createForClass(683),
		Lcom_gf_hippo_protocol_fix_messaging_FixCollateralAssignment_2_classLit = createForClass(321),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegGrp_2_classLit = createForClass(570),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegGrp$InstrmtLegGrp_2_classLit = createForClass(571),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegGrp$InstrmtLegGrp_2_classLit = createForArray(848, Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegGrp$InstrmtLegGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqGrp_2_classLit = createForClass(637),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqGrp$QuotReqGrp_2_classLit = createForClass(638),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqGrp$QuotReqGrp_2_classLit = createForArray(849, Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqGrp$QuotReqGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_FixTradeCaptureReportRequest_2_classLit = createForClass(536),
		Lcom_gf_hippo_protocol_fix_messaging_FixOrderMassStatusRequest_2_classLit = createForClass(523),
		Lcom_gf_hippo_protocol_fix_nio_ByteArray_2_classLit = createForClass(694),
		Ljava_util_Comparators$1_2_classLit = createForClass(785),
		Lcom_gf_hippo_protocol_fix_nio_BufferOverflowException_2_classLit = createForClass(692),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixApplicationSequenceControl_2_classLit = createForClass(540),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixContraGrp_2_classLit = createForClass(553),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixContraGrp$ContraGrp_2_classLit = createForClass(554),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixContraGrp$ContraGrp_2_classLit = createForArray(850, Lcom_gf_hippo_protocol_fix_messaging_component_FixContraGrp$ContraGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixFillsGrp_2_classLit = createForClass(564),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixFillsGrp$FillsGrp_2_classLit = createForClass(565),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixFillsGrp$FillsGrp_2_classLit = createForArray(851, Lcom_gf_hippo_protocol_fix_messaging_component_FixFillsGrp$FillsGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixRateSource_2_classLit = createForClass(641),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixRateSource$RateSource_2_classLit = createForClass(642),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixRateSource$RateSource_2_classLit = createForArray(852, Lcom_gf_hippo_protocol_fix_messaging_component_FixRateSource$RateSource_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixContAmtGrp_2_classLit = createForClass(551),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixContAmtGrp$ContAmtGrp_2_classLit = createForClass(552),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixContAmtGrp$ContAmtGrp_2_classLit = createForArray(853, Lcom_gf_hippo_protocol_fix_messaging_component_FixContAmtGrp$ContAmtGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegExecGrp_2_classLit = createForClass(568),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegExecGrp$InstrmtLegExecGrp_2_classLit = createForClass(569),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegExecGrp$InstrmtLegExecGrp_2_classLit = createForArray(854, Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegExecGrp$InstrmtLegExecGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMiscFeesGrp_2_classLit = createForClass(598),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMiscFeesGrp$MiscFeesGrp_2_classLit = createForClass(599),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMiscFeesGrp$MiscFeesGrp_2_classLit = createForArray(855, Lcom_gf_hippo_protocol_fix_messaging_component_FixMiscFeesGrp$MiscFeesGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixExecCollGrp_2_classLit = createForClass(560),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixExecCollGrp$ExecCollGrp_2_classLit = createForClass(561),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixExecCollGrp$ExecCollGrp_2_classLit = createForArray(856, Lcom_gf_hippo_protocol_fix_messaging_component_FixExecCollGrp$ExecCollGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdCollGrp_2_classLit = createForClass(670),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdCollGrp$TrdCollGrp_2_classLit = createForClass(671),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdCollGrp$TrdCollGrp_2_classLit = createForArray(857, Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdCollGrp$TrdCollGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtCollGrp_2_classLit = createForClass(677),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtCollGrp$UndInstrmtCollGrp_2_classLit = createForClass(678),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtCollGrp$UndInstrmtCollGrp_2_classLit = createForArray(858, Lcom_gf_hippo_protocol_fix_messaging_component_FixUndInstrmtCollGrp$UndInstrmtCollGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixRootParties_2_classLit = createForClass(643),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixRootParties$RootParties_2_classLit = createForClass(644),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixRootParties$RootParties_2_classLit = createForArray(859, Lcom_gf_hippo_protocol_fix_messaging_component_FixRootParties$RootParties_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotQualGrp_2_classLit = createForClass(635),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotQualGrp$QuotQualGrp_2_classLit = createForClass(636),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotQualGrp$QuotQualGrp_2_classLit = createForArray(860, Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotQualGrp$QuotQualGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegQuotGrp_2_classLit = createForClass(584),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegQuotGrp$LegQuotGrp_2_classLit = createForClass(585),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegQuotGrp$LegQuotGrp_2_classLit = createForArray(861, Lcom_gf_hippo_protocol_fix_messaging_component_FixLegQuotGrp$LegQuotGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentExtension_2_classLit = createForClass(575),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSecListGrp_2_classLit = createForClass(649),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSecListGrp$SecListGrp_2_classLit = createForClass(650),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixSecListGrp$SecListGrp_2_classLit = createForArray(862, Lcom_gf_hippo_protocol_fix_messaging_component_FixSecListGrp$SecListGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSecAltIDGrp_2_classLit = createForClass(647),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSecAltIDGrp$SecAltIDGrp_2_classLit = createForClass(648),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixSecAltIDGrp$SecAltIDGrp_2_classLit = createForArray(863, Lcom_gf_hippo_protocol_fix_messaging_component_FixSecAltIDGrp$SecAltIDGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSecurityXML_2_classLit = createForClass(652),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixEvntGrp_2_classLit = createForClass(558),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixEvntGrp$EvntGrp_2_classLit = createForClass(559),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixEvntGrp$EvntGrp_2_classLit = createForArray(864, Lcom_gf_hippo_protocol_fix_messaging_component_FixEvntGrp$EvntGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentParties_2_classLit = createForClass(577),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentParties$InstrumentParties_2_classLit = createForClass(578),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentParties$InstrumentParties_2_classLit = createForArray(865, Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentParties$InstrumentParties_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEvents_2_classLit = createForClass(549),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEvents$ComplexEvents_2_classLit = createForClass(550),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEvents$ComplexEvents_2_classLit = createForArray(866, Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEvents$ComplexEvents_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSettlInstructionsData_2_classLit = createForClass(653),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties_2_classLit = createForClass(604),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties$NestedParties_2_classLit = createForClass(605),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties$NestedParties_2_classLit = createForArray(867, Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties$NestedParties_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPtysSubGrp_2_classLit = createForClass(633),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPtysSubGrp$PtysSubGrp_2_classLit = createForClass(634),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixPtysSubGrp$PtysSubGrp_2_classLit = createForArray(868, Lcom_gf_hippo_protocol_fix_messaging_component_FixPtysSubGrp$PtysSubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTrdCapDtGrp_2_classLit = createForClass(669),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTargetParties_2_classLit = createForClass(661),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixAttrbGrp_2_classLit = createForClass(541),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixAttrbGrp$AttrbGrp_2_classLit = createForClass(542),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixAttrbGrp$AttrbGrp_2_classLit = createForArray(869, Lcom_gf_hippo_protocol_fix_messaging_component_FixAttrbGrp$AttrbGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixDlvyInstGrp_2_classLit = createForClass(557),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentLeg_2_classLit = createForClass(576),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqLegsGrp_2_classLit = createForClass(639),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqLegsGrp$QuotReqLegsGrp_2_classLit = createForClass(640),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqLegsGrp$QuotReqLegsGrp_2_classLit = createForArray(870, Lcom_gf_hippo_protocol_fix_messaging_component_FixQuotReqLegsGrp$QuotReqLegsGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndSecAltIDGrp_2_classLit = createForClass(681),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndSecAltIDGrp$UndSecAltIDGrp_2_classLit = createForClass(682),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndSecAltIDGrp$UndSecAltIDGrp_2_classLit = createForArray(871, Lcom_gf_hippo_protocol_fix_messaging_component_FixUndSecAltIDGrp$UndSecAltIDGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUnderlyingStipulations_2_classLit = createForClass(684),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUnderlyingStipulations$UnderlyingStipulations_2_classLit = createForClass(685),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUnderlyingStipulations$UnderlyingStipulations_2_classLit = createForArray(872, Lcom_gf_hippo_protocol_fix_messaging_component_FixUnderlyingStipulations$UnderlyingStipulations_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentParties_2_classLit = createForClass(686),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentParties$UndlyInstrumentParties_2_classLit = createForClass(687),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentParties$UndlyInstrumentParties_2_classLit = createForArray(873, Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentParties$UndlyInstrumentParties_2_classLit),
		Lcom_gf_hippo_protocol_fix_nio_DateTimeFormat_2_classLit = createForClass(697),
		Lcom_gf_hippo_protocol_fix_nio_DateTimeFormat$PatternPart_2_classLit = createForClass(698),
		Ljava_util_NoSuchElementException_2_classLit = createForClass(791),
		Lcom_gf_hippo_protocol_fix_nio_ByteOrder_2_classLit = createForClass(696),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties4_2_classLit = createForClass(610),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties4$NestedParties4_2_classLit = createForClass(611),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties4$NestedParties4_2_classLit = createForArray(874, Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties4$NestedParties4_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegStipulations_2_classLit = createForClass(588),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegStipulations$LegStipulations_2_classLit = createForClass(589),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegStipulations$LegStipulations_2_classLit = createForArray(875, Lcom_gf_hippo_protocol_fix_messaging_component_FixLegStipulations$LegStipulations_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegPreAllocGrp_2_classLit = createForClass(582),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegPreAllocGrp$LegPreAllocGrp_2_classLit = createForClass(583),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegPreAllocGrp$LegPreAllocGrp_2_classLit = createForArray(876, Lcom_gf_hippo_protocol_fix_messaging_component_FixLegPreAllocGrp$LegPreAllocGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties3_2_classLit = createForClass(608),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties3$NestedParties3_2_classLit = createForClass(609),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties3$NestedParties3_2_classLit = createForArray(877, Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties3$NestedParties3_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixRootSubParties_2_classLit = createForClass(645),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixRootSubParties$RootSubParties_2_classLit = createForClass(646),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixRootSubParties$RootSubParties_2_classLit = createForArray(878, Lcom_gf_hippo_protocol_fix_messaging_component_FixRootSubParties$RootSubParties_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegBenchmarkCurveData_2_classLit = createForClass(581),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixSecurityTradingRules_2_classLit = createForClass(651),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixStrikeRules_2_classLit = createForClass(659),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixStrikeRules$StrikeRules_2_classLit = createForClass(660),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixStrikeRules$StrikeRules_2_classLit = createForArray(879, Lcom_gf_hippo_protocol_fix_messaging_component_FixStrikeRules$StrikeRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegSecListGrp_2_classLit = createForClass(572),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_2_classLit = createForClass(573),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_2_classLit = createForArray(880, Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrmtLegSecListGrp$InstrmtLegSecListGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_nio_InvalidMarkException_2_classLit = createForClass(700),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentPtysSubGrp_2_classLit = createForClass(579),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_2_classLit = createForClass(580),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_2_classLit = createForArray(881, Lcom_gf_hippo_protocol_fix_messaging_component_FixInstrumentPtysSubGrp$InstrumentPtysSubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventDates_2_classLit = createForClass(545),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventDates$ComplexEventDates_2_classLit = createForClass(546),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventDates$ComplexEventDates_2_classLit = createForArray(882, Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventDates$ComplexEventDates_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegSecAltIDGrp_2_classLit = createForClass(586),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLegSecAltIDGrp$LegSecAltIDGrp_2_classLit = createForClass(587),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLegSecAltIDGrp$LegSecAltIDGrp_2_classLit = createForArray(883, Lcom_gf_hippo_protocol_fix_messaging_component_FixLegSecAltIDGrp$LegSecAltIDGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixBaseTradingRules_2_classLit = createForClass(543),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTradingSessionRulesGrp_2_classLit = createForClass(667),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTradingSessionRulesGrp$TradingSessionRulesGrp_2_classLit = createForClass(668),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTradingSessionRulesGrp$TradingSessionRulesGrp_2_classLit = createForArray(884, Lcom_gf_hippo_protocol_fix_messaging_component_FixTradingSessionRulesGrp$TradingSessionRulesGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedInstrumentAttribute_2_classLit = createForClass(602),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedInstrumentAttribute$NestedInstrumentAttribute_2_classLit = createForClass(603),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedInstrumentAttribute$NestedInstrumentAttribute_2_classLit = createForArray(885, Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedInstrumentAttribute$NestedInstrumentAttribute_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtysSubGrp_2_classLit = createForClass(618),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtysSubGrp$NstdPtysSubGrp_2_classLit = createForClass(619),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtysSubGrp$NstdPtysSubGrp_2_classLit = createForArray(886, Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtysSubGrp$NstdPtysSubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentPtysSubGrp_2_classLit = createForClass(688),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_2_classLit = createForClass(689),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_2_classLit = createForArray(887, Lcom_gf_hippo_protocol_fix_messaging_component_FixUndlyInstrumentPtysSubGrp$UndlyInstrumentPtysSubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_nio_DefaultDateTimeFormatInfo_2_classLit = createForClass(699),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys4SubGrp_2_classLit = createForClass(616),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys4SubGrp$NstdPtys4SubGrp_2_classLit = createForClass(617),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys4SubGrp$NstdPtys4SubGrp_2_classLit = createForArray(888, Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys4SubGrp$NstdPtys4SubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties2_2_classLit = createForClass(606),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties2$NestedParties2_2_classLit = createForClass(607),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties2$NestedParties2_2_classLit = createForArray(889, Lcom_gf_hippo_protocol_fix_messaging_component_FixNestedParties2$NestedParties2_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys3SubGrp_2_classLit = createForClass(614),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys3SubGrp$NstdPtys3SubGrp_2_classLit = createForClass(615),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys3SubGrp$NstdPtys3SubGrp_2_classLit = createForArray(890, Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys3SubGrp$NstdPtys3SubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTickRules_2_classLit = createForClass(662),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTickRules$TickRules_2_classLit = createForClass(663),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTickRules$TickRules_2_classLit = createForArray(891, Lcom_gf_hippo_protocol_fix_messaging_component_FixTickRules$TickRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLotTypeRules_2_classLit = createForClass(590),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixLotTypeRules$LotTypeRules_2_classLit = createForClass(591),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixLotTypeRules$LotTypeRules_2_classLit = createForArray(892, Lcom_gf_hippo_protocol_fix_messaging_component_FixLotTypeRules$LotTypeRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixPriceLimits_2_classLit = createForClass(632),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMaturityRules_2_classLit = createForClass(596),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMaturityRules$MaturityRules_2_classLit = createForClass(597),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMaturityRules$MaturityRules_2_classLit = createForArray(893, Lcom_gf_hippo_protocol_fix_messaging_component_FixMaturityRules$MaturityRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventTimes_2_classLit = createForClass(547),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventTimes$ComplexEventTimes_2_classLit = createForClass(548),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventTimes$ComplexEventTimes_2_classLit = createForArray(894, Lcom_gf_hippo_protocol_fix_messaging_component_FixComplexEventTimes$ComplexEventTimes_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTradingSessionRules_2_classLit = createForClass(666),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys2SubGrp_2_classLit = createForClass(612),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys2SubGrp$NstdPtys2SubGrp_2_classLit = createForClass(613),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys2SubGrp$NstdPtys2SubGrp_2_classLit = createForArray(895, Lcom_gf_hippo_protocol_fix_messaging_component_FixNstdPtys2SubGrp$NstdPtys2SubGrp_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixOrdTypeRules_2_classLit = createForClass(620),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixOrdTypeRules$OrdTypeRules_2_classLit = createForClass(621),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixOrdTypeRules$OrdTypeRules_2_classLit = createForArray(896, Lcom_gf_hippo_protocol_fix_messaging_component_FixOrdTypeRules$OrdTypeRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTimeInForceRules_2_classLit = createForClass(664),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixTimeInForceRules$TimeInForceRules_2_classLit = createForClass(665),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixTimeInForceRules$TimeInForceRules_2_classLit = createForArray(897, Lcom_gf_hippo_protocol_fix_messaging_component_FixTimeInForceRules$TimeInForceRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixExecInstRules_2_classLit = createForClass(562),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixExecInstRules$ExecInstRules_2_classLit = createForClass(563),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixExecInstRules$ExecInstRules_2_classLit = createForArray(898, Lcom_gf_hippo_protocol_fix_messaging_component_FixExecInstRules$ExecInstRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMatchRules_2_classLit = createForClass(594),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMatchRules$MatchRules_2_classLit = createForClass(595),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMatchRules$MatchRules_2_classLit = createForArray(899, Lcom_gf_hippo_protocol_fix_messaging_component_FixMatchRules$MatchRules_2_classLit),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMarketDataFeedTypes_2_classLit = createForClass(592),
		Lcom_gf_hippo_protocol_fix_messaging_component_FixMarketDataFeedTypes$MarketDataFeedTypes_2_classLit = createForClass(593),
		_3Lcom_gf_hippo_protocol_fix_messaging_component_FixMarketDataFeedTypes$MarketDataFeedTypes_2_classLit = createForArray(900, Lcom_gf_hippo_protocol_fix_messaging_component_FixMarketDataFeedTypes$MarketDataFeedTypes_2_classLit);
	gwtOnLoad(null, 'DomainFirefox', '', 0);
})();
var hippo = window.hippo;
if (typeof exports !== 'undefined') {
	if (typeof module !== 'undefined' && module.exports) {
		exports = module.exports = window.hippo;
	}
	exports.hippo = window.hippo;
} else if (typeof define !== 'undefined' && define.amd) {
	define(function() {
		return window.hippo;
	});
} else {}